{"/about/":{"data":{"":" The website is used as an online repository for MSC Nastran documentation. It was created by the Simulation Software Technology Center of Hexagon Manufacturing Intelligence (Qingdao) Co., Ltd. "},"title":"About"},"/docs/":{"data":{"":"NASTRAN has been released under the NASA Open Source Agreement version 1.3.\nNASTRAN is the NASA Structural Analysis System, a finite element analysis program (FEA) completed in the early 1970’s. It was the first of its kind and opened the door to computer-aided engineering. Subsections of a design can be modeled and then larger groupings of these elements can again be modeled. NASTRAN can handle elastic stability analysis, complex eigenvalues for vibration and dynamic stability analysis, dynamic response for transient and steady state loads, and random excitation, and static response to concentrated and distributed loads, thermal expansion, and enforced deformations.\nNOTE: There is no technical support available for this software."},"title":"Documentation"},"/docs/access/":{"data":{"":"something for nothing"},"title":"MSC Nastran manuals"},"/docs/access/msc_nastran_2024.1_access_user_manual_001/":{"data":{"":"MSC Nastran Access User’s Manual MSC Nastran 2024.1 Access User’s Manual\nCorporate Office Hexagon Manufacturing Intelligence, Inc. UK 78 Portsmouth Road Cedar HouseCobham, Surrey KT11 1HYTelephone: (+44) 02070686555 Worldwide Web www.hexagon.com Support https://simcompanion.hexagon.com Disclaimer Hexagon reserves the right to make changes in specifications and other information contained in this document without prior notice. The concepts, methods, and examples presented in this text are for illustrative and educational purposes only, and are not intended to be exhaustive or to apply to any particular engineering problem or design. Hexagon assumes no liability or responsibility to any person or company for direct or indirect damages resulting from the use of any information contained herein. User Documentation: Copyright 2024 Hexagon AB and/or its subsidiaries. All Rights Reserved. This notice shall be marked on any reproduction of this documentation, in whole or in part. Any reproduction or distribution of this document, in whole or in part, without the prior written consent of Hexagon is prohibited. This software may contain certain third-party software that is protected by copyright and licensed from Hexagon suppliers. Additional terms and conditions and/or notices may apply for certain third party software. Such additional third party software terms and conditions and/or notices may be set forth in documentation and/or at third-party software information (or successor website designated by Hexagon from time to time). PCGLSS 8.0, Copyright © 1992-2016, Computational Applications and System Integration Inc. All rights reserved. PCGLSS 8.0 is licensed from Computational Applications and System Integration Inc. The Hexagon logo, Hexagon, MSC Software logo, MSC, Dytran, Marc, MSC Nastran, Patran, e -Xstream, Digimat, and Simulating Reality are trademarks or registered trademarks of Hexagon AB and/or its subsidiaries in the United States and/or other countries.NASTRAN is a registered trademark of NASA. FLEXlm and FlexNet Publisher are trademarks or registered trademarks of Flexera Software. All other trademarks are the property of their respective owners. Use, duplicate, or disclosure by the U.S. Government is subjected to restrictions as set forth in FAR 12.212 (Commercial Computer Software) and DFARS 227.7202 (Commercial Computer Software and Commercial Computer Software Documentation), as applicable. U.S. Patent 9,361,413May 16, 2024NA:V2024.1:Z:Z:Z:DC-UTIL-PDF\nContents MSC Nastran Access User’s Manual\nMain Index Contents Preface About this Book . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2 List of MSC Nastran Guides . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2 Technical Support . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 3 Training and Internet Resources . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 3 1 MSC Access Overview. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 6 Definitions and Acronyms . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 6Compatibility with Previous Versions of MSC Access . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 7DBC Module Differences . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 8Data base Input/Output (DBIO) Differences . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 8Timeline for MSC Access and MSC Nastran Releases . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 9Interrelationships of MSC Access with Other MSC Products . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 11 2 Database Converter Module (DBC) Overview. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 16DBC Functions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 16 DBC Default Values. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 16 Overriding DBC Default Values . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 17 3 Creation of MSC Access Databases Overview. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 22 Conversion Using MSC Nastran Version 66 and Subsequent Versions . . . . . . . . . . . . . . . . . . . . . . . . . . . 22Conversion Using Pre-MSC Nastran Version 66 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 22\nMSC Nastran Access User’s Manualii Main Index 4 Contents of MSC Access Database Overview. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 24 Model Geometry Data. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 24 Model Loads and Restraint Data. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 24Solution Results . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 24Problem Summary . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 25 Database Dictionary Entry Description . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 25 Object Name Field . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 26Project Attribute Field. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 28Superelement/Part Attribute Field. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 28Path Attribute Field. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 28SUBCASE Attribute Field. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 29Set Attribute Field . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 30Approach Attribute Field. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 30Design Cycle Attribute Field . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 31 P-element Iteration Attribute Field . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 31Cyclic Symmetry Segment Field . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 31Undefined Field . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 32Determination of Object Attribute Usage. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 32 Data Block Description . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 32 Keyed Entries. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 33Sequential Object. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 33 5 Accessing The Database Overview. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 36 General Access Database Processing. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 36 Database Validation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 37 Access Block (Page) Allocation. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 37OPEN/CLOSE of an Access Database . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 39Access Database Dictionary Inquiry . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 40Allocating/Freeing Access Objects . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 42Working Access Object Entries . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 43Access Purge Object . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 43 Access Database Usage Hints . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 44 Memory Allocation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 44MSC Nastran Type Definition . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 45Element Data Recovery Naming Conventions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 46External versus Internal Object Access Keys. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 46Access Object Capacity Limit Derivations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 47Special Key Usage . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 49Special Number Usage . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 49\niii Contents Main Index The CBAR, CBEAM, and CGAP Objects. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 50 6 Interfacing to The Data Definition Language (DDL) Overview . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 52 The Data Definition Language . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 52 The MSC Access Data Definition Language. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 52 Starting the Data Definition Language Interface . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 53 Labeled Commons Populated by Function MSCLDD . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 54 Usage of Word Index Functions. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 55 Version Matching DDL to Analysis Database . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 55Using Attribute Definition Functions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 57DDL Control Entry Description . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 58 Working with the DDL control entry. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 58 Working with an Object Entry DDL . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 59Working with the DDL and an Object/Entry . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 61 7 MSC Access Utilities and Demonstration Programs Overview . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 64 The MSC Access Sampler Demonstration Program (SMPLR). . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 64The Demonstration Program DEMO1. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 65The Demonstration Program DEMO2. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 65The Data Definition Language Program DDLADD . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 65 The Data Definition Language Demonstration Program DDLPRT. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 66The Data Definition Language Demonstration Program DDLQRY. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 67Utility Program QAPRT . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 68Utility Program RECEIVE. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 69 Utility Program TRANS . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 70 8 MSC Access Prototype Program Overview . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 74Flow Diagram of the MSC Access Prototype Program SMPLR . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 74Subroutine Components of the SMPLR Program . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 80 Common Blocks used by the SMPLR Program . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 80\nMSC Nastran Access User’s Manualiv Main Index 9 Additional MSC Access Example Programs (DEMO1 and DEMO2) Overview. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 82 General Description of the Two Demo Programs . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 82DEMO1 Example Program . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 84 Driver Program for Example 1 (DEMO1) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 84 9.2.2 Data base Inquiry for Example 1 (DATINT) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 86Grid Point Data in Example 1 (PRTGRD) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 91Element Connectivity in Example 1 (PRTCON). . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 92Displacement Data in Example 1 (PRTDIS) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 94Grid Point Stress Data in Example 1 (PRTGPS) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 95 DEMO2 Example Program . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 99 Driver Program for Example 2 (DEMO2) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 99Data base Inquiry and Grid Point Data for Example 2 (PRTGRD) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 103 Data base Inquiry and Connectivity Data for Example 2 (PRTCON) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 104Data base Inquiry and Displacement Data for Example 2 (PRTDIS) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 106Data base Inquiry and Grid Point Stress Data for Example 2 (PRTGPS) . . . . . . . . . . . . . . . . . . . . . . . . . . . 108 10 Usage of Data Definition Language Interface Overview. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 112 High Level Interactive Driver . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 112Support Subroutine to Process DDL Schema . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 119 11 Installation Overview. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 128Building DDLPRT . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 128Building DDLQRY . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 128Building DEMO1 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 129Building DEMO2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 129Building SMPLR . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 129 A MSC Access DBIO Subroutine Descriptions DBIO Subroutine Descriptions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 132 Subroutine Name: CLOSGR . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 132 Subroutine Name: DBCLOS . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 132 Subroutine Name: DBOPEN . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 133 Subroutine Name: DBFLOC. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 134 Subroutine Name: DBVALD. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 135\nv Contents Main Index Subroutine Name: DELREC . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 136 Subroutine Name: DICENT . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 136 Subroutine Name: DICPRT . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 137 Subroutine Name: DICRDR . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 138 Subroutine Name: GRPURG. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 139Subroutine Name: OPENC. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 140 Subroutine Name: OPENR. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 141 Subroutine Name: OPENS . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 142 Subroutine Name: OPENSQ. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 143Subroutine Name: PAGCFGX PAGCFG. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 143Subroutine Name: PAGCLR . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 145Subroutine Name: READBS. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 145Subroutine Name: READR . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 146 Subroutine Name: READS . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 147 Subroutine Name: READSQ. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 148Subroutine Name: WRITEI. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 149 Subroutine Name: WRITES . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 149 Block Data Descriptions. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 150 Block Data: DBCTBD. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 150 Differences from MSC Nastran . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 151 Block Data: GRSPBD. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 155 Additional DBIO Information . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 156 Additional DBIO Subroutines . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 156Labeled Common Blocks . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 156 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 157 B MSC Access Data Definition Language Interface Routines Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 160 Subroutines. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 160 Subroutine Name: MSCASM . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 160 Function Name: MSCDLC . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 160 Function Name: MSCKTY . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 161 Function Name: MSCLDD . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 161 Function Name: MSCLRA . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 162 Function Name: MSCLRT . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 163 Subroutine Name: MSCPIV . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 164 Subroutine Name: MSCPPT. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 164Subroutine Name: MSCPTX. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 165Function Name: MSCRTI . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 165 Function Name: MSCTFA . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 166 Function Name: MSCVDR . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 167\nMSC Nastran Access User’s Manualvi Main Index Function Name: MSCXII . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 167 Function Name: MSCXTI. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 168 Static COMMON Specifications . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 168 Additional Support Routines . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 169 C Input/Output Examples MSC Nastran Input Data . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 172MSC Nastran Output . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 175MSC Access SMPLR Program Output . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 190\nMain Index Preface Preface About this Book 2 List of MSC Nastran Guides 2 Technical Support 3 Training and Internet Resources 3\nMSC Nastran Access User’s Manual About this Book2 Main Index About this Book This guide elaborates different functionalities of MSC Access in detail. List of MSC Nastran Guides A list of some of the MSC Nastran guides is as follows: Installation and Release Guides Installation and Operations Guide Release Guide Reference Guides Quick Reference Guide DMAP Programmer’s Guide Reference Guide Utilities Guide Getting Started Guide SOL 400 Getting Started Guide MSC Nastran Error Messages Guide Demonstration Guides Linear Analysis Implicit Nonlinear (SOL 400) Explicit Nonlinear (SOL 700) MSC Nastran Verification Guide User’s Guides Automated Component Modal Synthesis (ACMS) Access Manual Aeroelastic Analysis Design Sensitivity and Optimization DEMATD Dynamic Analysis Embedded Fatigue Embedded Vibration Fatigue Explicit Nonlinear (SOL 700) High Performance Computing Linear Static Analysis Nonlinear (SOL 400)\n3 MSC Nastran Access User’s Manual Preface Main Index You may find any of these documents from Hexagon at: https://simcompanion.hexagon.com/customers/s/article/MSC-Nastran-Support-Home-Page Technical Support For technical support phone numbers and contact information, please visit: https://simcompanion.hexagon.com/customers/s/article/support-contact-information-kb8019304 Support Center (http://simcompanion.hexagon.com) The SimCompanion link above gives you access to the wealth of resources for Hexagon products. Here you will find product and support contact information, product documentations, knowledge base articles, product error list, knowledge base articles and SimAcademy Webinars. It is a searchable database which allows you to find articles relevant to your inquiry. Valid MSC customer entitlement and login is required to access the database and documents. It is a single sign-on that gives you access to product documentation for complete list of products from Hexagon, allows you to manage your support cases, and participate in our discussion forums. Training and Internet Resources The Hexagon corporate site has the information on the latest events, products, and services for the CAD/CAE/CAM marketplace. Design and Engineering e-Learning The above link will point you to schedule and description of seminars. Following courses are recommended for beginning MSC Nastran users.NAS120 - Linear Static Analysis using MSC Nastran and Patran This seminar introduces basic finite element analysis techniques for linear static, normal modes, and buckling analysis of structures using MSC Nastran and Patran. MSC Nastran data structure, the element library, modeling practices, model validation, and guidelines for efficient solutions are discussed and illustrated with examples and workshops. Patran will be an integral part of the examples and workshops and will be used to generate and verify illustrative MSC Nastran models, manage analysis submission requests, and visualize results. This seminar provides the foundation required for intermediate and advanced MSC Nastran applications.Numerical Methods Rotordynamics Superelements and Modules Thermal Analysis User Defined Services\nMSC Nastran Access User’s Manual Training and Internet Resources4 Main Index\nMain Index Chapter 1: MSC Access MSC Nastran Implicit Nonlinear (SOL 600) User’s GuideMSC Nastran Access User’s Man - ual 1 MSC Access Overview 6 Definitions and Acronyms 6 Compatibility with Previous Versions of MSC Access 7 DBC Module Differences 8 Data base Input/Output (DBIO) Differences 8 Timeline for MSC Access and MSC Nastran Releases 9 Interrelationships of MSC Access with Other MSC Products 11\nMSC Nastran Access User’s Manual Overview6 Main Index Overview MSC Access is a complete set of FORTRAN callable utility subroutines delivered as an object library. These routines enable pre- and post- processor software developers to write communications subroutines that enhance the interaction between their applications and the results generated by MSC Nastran. The finite element database generated by MSC Nastran cannot, until recently, be read directly by an application program. Without MSC Access, application programs must either read through one or more of the sequential files generated or create their own database. Either process can be very slow. Starting with 2001 of MSC Nastran an offering known as the MSC Nastran T oolkit is available as an alternative method. MSC Access provides a way for interfacing pre- and post- processing applications with MSC Nastran. End users of either a packaged Computer Aided Design (CAD) systems or a system developed in-house application can quickly and efficiently search and query the finite element analysis information from MSC Nastran. The inter-relationship of MSC Access with other MSC products is given in Section 1.6.This release of MSC Access includes major enhancements to the original product. These enhancements are:\nImproved performance of the data base input/output access capability Improved data base dictionary content descriptions3. Increased types of analysis results data available4. Increased number of MSC Nastran elements supported5. Larger data base size, number of databases and logical files allowed6. Heterogeneous data access between big and little endian machines Not all of these changes are invisible to the user. Consequently, some modification to existing application codes may be necessary to take full advantage of these improvements. Definitions and Acronyms This section shall specify definitions and acronyms applicable to this document. Other definition of terms will occur when first utilized. Attribute A dictionary entry qualifier for a data base object BBBT Binary Blocked Balanced T ree Method of entry key storage Database The MSC Access database unless otherwise stated DBC Database Conversion module used by MSC Nastran to create MSC Access database DBIO MSC Access Database Input/Output subroutine library DDL Data Definition Language used by MSC Access DDLADD Utility Program used to add/replace DDL to an existing Access database 7 CHAPTER 1 MSC Access Main Index Compatibility with Previous Versions of MSC Access This document is intended for use with MSC Nastran Version 2001.5 and later. Applications written with previous versions of MSC Access should continue to function provided that they are not re-linked with the new object library. The database created by the DBC module using the PROGRAM=‘GRASP’ option is the same as those created by stand -alone DBCs of pre- MSC Nastran 66 versions. To re-link old applications with the new object library, it is necessary to incorporate the new paging pool control subroutines PAGCFGX and the database and data definition validation function DBVALD into the application. Old databases can be read and processed by the re-linked system. T o utilize the machine heterogeneous features, refer to the DDLADD program in the utility chapter.DDLPRT Utility Program used to format the DDL into a printable file DDLQRY Utility Program used to interactive recover information from DDL DEMO1,2 Demonstration programs illustrating programming conventions DMAP Direct Matrix Abstraction Program or process language for MSC Nastran DRA Direct Results Access that represents the MSC.Patran interface FMS File Management Section of MSC Nastran Data Deck HK Hiearchial Key Method of entry key storage MSC/GRASP MSC interactive product during the 1981-1986 timeframe MSC.Patran MSC current interactive product MSC/XL MSC interactive product during the 1985-1992 timeframe NDDL MSC Nastran Data Definition Language Object A data component of the MSC Access database OUTPUT2 An alternate means for exporting information from MSC Nastran in binary format QAPRT Utility Program used to format objects contained in database RECEIVE Utility Program used for translate neutral format to binary database SMPLR Demonstration program illustrating programming conventions TRANS Utility Program used to translate database to machine neutral format\nMSC Nastran Access User’s Manual DBC Module Differences8 Main Index The MSC/DBC executable program for converting MSC Nastran databases is no longer being delivered. Starting with Version 66, the database converter (DBC) has become a module of MSC Nastran and has been included within all MSC Nastran solution sequences. DMAP writers should review the DBC module and its capabilities in Section 5.4 of the MSC Nastran Users Manual and the DMAP Module Dictionary. The Data Base Input/Output (DBIO) subroutines have added buffer pooling techniques to relieve memory management. The write facilities of DBIO from Version 2 have been restored since Version 6. DBC Module Differences As a module, DBC does not require any output blocks to be permanently stored in the MSC Nastran database. The conversion occurs as MSC Nastran executes. As a result, the MSC Nastran database contains fewer data blocks and may be smaller. Post-processing activity can begin as soon as MSC Nastran execution is completed and the conversion is verified (i.e., there are no FATAL messages from the DBC module or other MSC Nastran modules). DBC was added to MSC Nastran using the same philosophy of output data recovery as other output modules. It does not stop MSC Nastran execution when an error is detected. Instead an error message is printed and control returned to the Executive System. When a fatal DBC error occurs, further Executive System calls to the DBC module are not executed. The module allows modification of old data and appendage of new information to the database. In previous releases of the stand -alone data base converter, the database, once created, could not be modified. The only error occurs when inconsistent model structure is detected. Care should be exercised when updating old databases that modifications do not compromise the existing data model. It is normally safe to update databases for additional solution results. The DBC module is capable of translating the MSC Nastran information using three different sets of criteria. The default conversion is the modern and expanded MSC/XL structure, but an alternate form for p-elements is designated XLPLUS. Optionally, the MSC/GRASP structure corresponding to prior field systems is available but is not compatible with the BBBT Method of storage of keyed objects. These structures should not be mixed in the same database. MSC.Patran, via the DRA tool, uses the MSC/XL conversion format. To take advantage of the expanded object structure, current applications of the product need to be modified.Additional information about the DBC module will be found in Chapter 2 of this manual. Data base Input/Output (DBIO) Differences The Data Base Input/Output (DBIO) Facility has been enhanced. For most existing applications, only minor changes are necessary to use the new DBIO library routines. Database buffer pooling or caching has been introduced into the DBIO routines. This relieves the application of some memory management issues and decisions that arise when using the DBIO open routines. When the pages are faulted to the device, heterogeneous device characteristics are noted and the page information is translated to the targets native mode. It is up to the MSC Access user to determine if the database is locally present or accessed across the network.\n9 CHAPTER 1 MSC Access Main Index The argument lists of the open subroutines were retained from the previous versions for compatibility. The positional requirements are the same in all MSC Access releases. However, in this release, the application’s input for the buffer areas is ignored. The former buffer areas can be reduced to arrays containing one element to save space or replaced with a constant zero since the input location is unused. In the 2005.1 release, either one or two positions have been re-activated to allow for the BBBT Method of storage of keyed entries. The application concern is related to the open APIs since values will be returned to the argument locations. A new database validation function has been provided. The DBVALD subroutine attempt to verify that the physical file is truly and MSC Access database. It returns to the application the block size that was used to create the database, the Data Definition Language (DDL) version and control information, and whether the database is native to the current machine. Only databases that contain DDL can be processed between heterogeneous machine environments. It should be noted that information can be exchanged between big and little endian machine of 32-bit word lengths. A new subroutine PAGCFGX has been introduced which replaces the older PAGCFG. This subroutine must be called before any other DBIO processing routine is called other than DBVALD as previously mentioned. This call, used to establish the buffer pooling area, should be done only once during an application program’s execution. When all databases have been closed, the application can re-execute the routine to change the memory configurations, however, ALL databases MUST BE CLOSED. See application interface section for further discussion. Timeline for MSC Access and MSC Nastran Releases Both MSC Nastran and MSC Access have been released over multiple decades and have serviced numerous application products. Unlike MSC Nastran, the database produced by MSC Access have little sensitivity to timeline or release synchronization if both the MSC Nastran defaults were utilized and application programs were developed using the conventions specified within this manual. Briefly, the timeline, version synchronization and product correlation follows: Year MSC Access ReleaseMSC Nastran ReleaseProduct / Object or Approach Availability 1982 1 62 MSC/GRASP introduced Basic geometry, loads, results such as displacements, stresses \u0026 forces Supported Linear Statics, Real Eigenvalues, T ransient \u0026 Frequency solutions 1983 2 63 Support of Nonlinear Solutions 1985 3 65 Support of scalar and mass elements\nMSC Nastran Access User’s Manual Timeline for MSC Access and MSC Nastran Releases10 Main Index 1989 4 66 MSC/XL and MSC/EMAS introduced Added multi-project/path database modelInstalled access factor into database objectsAdded Design Optimization object attributeSupport of Complex Eigenvalues SolutionsSupport of QUADR and TRIAR objects 1991 6 67 Introduced Acoustic elements and resultsAdded Grid and Element Discontinuity objectsSupported Buckling Analysis Approach 1994 68 68 Aries formats incorporated using MSC/XL object definitionChanged Element Discontinuity Object DefinitionsAdded QUAD4 corner technologyAdded support for Heat T ransfer and p-element technologyMore Design Optimization Response data supported 1996 69 69 Support for Part SuperelementsAdded BUSH and Absorber elementsp-element supported expanded to include Beam \u0026 Shell elements 1997 70 70 MSC.Patran integrated via DRA interface Added support for Enthalpy and MPC forces objects 1998 70.5 70.5 Added BUSH1D element support 1998 70.6 70.6 MSC/EMAS support discontinuedAdded support for Aeroelastic ModelAdded Hyperelastic elements and Plain Strain Surface Recovery 1999 70.7 70.7 Minor corrections to object attributes 2001 2001.0 2001.0 Added Element Kinetic Energy and Energy Loss per Cycle objects WELD element supported\n11 CHAPTER 1 MSC Access Main Index Interrelationships of MSC Access with Other MSC Products The relationship between the various MSC products is illustrated in section 1.6.1. Please note that the CAD/CAM systems have legal permission to redistribute the sections of MSC Access used. There is no additional cost to mutual clients.2001 2001.0.5 2001.0.5 Allow database to have variable block sizes Allow databases to operate hetrogeneously between platforms 2004 2004 2004 DMIG/GENEL limited element supportComposite output for QUADR/TRIAR elementsMAXMIN (grid) responses (MAXMIN (element) missing)Superelement Map object support identical/mirrorsScaled Response Spectra Analysis 2005 2005 2005 BBBT Storage Method Added to Keyed ObjectsFASTNER element supportedSEAM weld element supportedCyclic Symmetry Attribute added to object definitions\nMSC Nastran Access User’s Manual Interrelationships of MSC Access with Other MSC Products12 Main Index MSC Nastran Version 66 and Subsequent Versions"},"title":"User's Manual P1"},"/docs/access/test1/":{"data":{"":"MSC Nastran Access User’s Manual MSC Nastran 2024.1 Access User’s Manual"},"title":"User's Manual P1"},"/docs/access/test2/":{"data":{"":"13 CHAPTER 1 MSC Access Main Index"},"title":"User's Manual P2"},"/docs/access_user_manual/":{"data":{"":"MSC Nastran Access User’s Manual MSC Nastran 2024.1 Access User’s Manual"},"title":"Access User's Manual"},"/docs/access_user_manual/msc_nastran_2024.1_access_user_manual_001/":{"data":{"":"MSC Nastran Access User’s Manual MSC Nastran 2024.1 Access User’s Manual\nCorporate Office Hexagon Manufacturing Intelligence, Inc. UK 78 Portsmouth Road Cedar HouseCobham, Surrey KT11 1HYTelephone: (+44) 02070686555 Worldwide Web www.hexagon.com Support https://simcompanion.hexagon.com Disclaimer Hexagon reserves the right to make changes in specifications and other information contained in this document without prior notice. The concepts, methods, and examples presented in this text are for illustrative and educational purposes only, and are not intended to be exhaustive or to apply to any particular engineering problem or design. Hexagon assumes no liability or responsibility to any person or company for direct or indirect damages resulting from the use of any information contained herein. User Documentation: Copyright 2024 Hexagon AB and/or its subsidiaries. All Rights Reserved. This notice shall be marked on any reproduction of this documentation, in whole or in part. Any reproduction or distribution of this document, in whole or in part, without the prior written consent of Hexagon is prohibited. This software may contain certain third-party software that is protected by copyright and licensed from Hexagon suppliers. Additional terms and conditions and/or notices may apply for certain third party software. Such additional third party software terms and conditions and/or notices may be set forth in documentation and/or at third-party software information (or successor website designated by Hexagon from time to time). PCGLSS 8.0, Copyright © 1992-2016, Computational Applications and System Integration Inc. All rights reserved. PCGLSS 8.0 is licensed from Computational Applications and System Integration Inc. The Hexagon logo, Hexagon, MSC Software logo, MSC, Dytran, Marc, MSC Nastran, Patran, e -Xstream, Digimat, and Simulating Reality are trademarks or registered trademarks of Hexagon AB and/or its subsidiaries in the United States and/or other countries.NASTRAN is a registered trademark of NASA. FLEXlm and FlexNet Publisher are trademarks or registered trademarks of Flexera Software. All other trademarks are the property of their respective owners. Use, duplicate, or disclosure by the U.S. Government is subjected to restrictions as set forth in FAR 12.212 (Commercial Computer Software) and DFARS 227.7202 (Commercial Computer Software and Commercial Computer Software Documentation), as applicable. U.S. Patent 9,361,413May 16, 2024NA:V2024.1:Z:Z:Z:DC-UTIL-PDF\nContents MSC Nastran Access User’s Manual\nMain Index Contents Preface About this Book . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2 List of MSC Nastran Guides . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2 Technical Support . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 3 Training and Internet Resources . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 3 1 MSC Access Overview. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 6 Definitions and Acronyms . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 6Compatibility with Previous Versions of MSC Access . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 7DBC Module Differences . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 8Data base Input/Output (DBIO) Differences . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 8Timeline for MSC Access and MSC Nastran Releases . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 9Interrelationships of MSC Access with Other MSC Products . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 11 2 Database Converter Module (DBC) Overview. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 16DBC Functions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 16 DBC Default Values. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 16 Overriding DBC Default Values . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 17 3 Creation of MSC Access Databases Overview. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 22 Conversion Using MSC Nastran Version 66 and Subsequent Versions . . . . . . . . . . . . . . . . . . . . . . . . . . . 22Conversion Using Pre-MSC Nastran Version 66 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 22\nMSC Nastran Access User’s Manualii Main Index 4 Contents of MSC Access Database Overview. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 24 Model Geometry Data. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 24 Model Loads and Restraint Data. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 24Solution Results . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 24Problem Summary . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 25 Database Dictionary Entry Description . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 25 Object Name Field . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 26Project Attribute Field. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 28Superelement/Part Attribute Field. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 28Path Attribute Field. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 28SUBCASE Attribute Field. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 29Set Attribute Field . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 30Approach Attribute Field. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 30Design Cycle Attribute Field . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 31 P-element Iteration Attribute Field . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 31Cyclic Symmetry Segment Field . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 31Undefined Field . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 32Determination of Object Attribute Usage. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 32 Data Block Description . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 32 Keyed Entries. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 33Sequential Object. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 33 5 Accessing The Database Overview. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 36 General Access Database Processing. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 36 Database Validation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 37 Access Block (Page) Allocation. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 37OPEN/CLOSE of an Access Database . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 39Access Database Dictionary Inquiry . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 40Allocating/Freeing Access Objects . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 42Working Access Object Entries . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 43Access Purge Object . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 43 Access Database Usage Hints . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 44 Memory Allocation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 44MSC Nastran Type Definition . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 45Element Data Recovery Naming Conventions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 46External versus Internal Object Access Keys. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 46Access Object Capacity Limit Derivations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 47Special Key Usage . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 49Special Number Usage . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 49\niii Contents Main Index The CBAR, CBEAM, and CGAP Objects. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 50 6 Interfacing to The Data Definition Language (DDL) Overview . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 52 The Data Definition Language . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 52 The MSC Access Data Definition Language. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 52 Starting the Data Definition Language Interface . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 53 Labeled Commons Populated by Function MSCLDD . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 54 Usage of Word Index Functions. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 55 Version Matching DDL to Analysis Database . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 55Using Attribute Definition Functions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 57DDL Control Entry Description . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 58 Working with the DDL control entry. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 58 Working with an Object Entry DDL . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 59Working with the DDL and an Object/Entry . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 61 7 MSC Access Utilities and Demonstration Programs Overview . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 64 The MSC Access Sampler Demonstration Program (SMPLR). . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 64The Demonstration Program DEMO1. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 65The Demonstration Program DEMO2. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 65The Data Definition Language Program DDLADD . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 65 The Data Definition Language Demonstration Program DDLPRT. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 66The Data Definition Language Demonstration Program DDLQRY. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 67Utility Program QAPRT . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 68Utility Program RECEIVE. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 69 Utility Program TRANS . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 70 8 MSC Access Prototype Program Overview . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 74Flow Diagram of the MSC Access Prototype Program SMPLR . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 74Subroutine Components of the SMPLR Program . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 80 Common Blocks used by the SMPLR Program . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 80\nMSC Nastran Access User’s Manualiv Main Index 9 Additional MSC Access Example Programs (DEMO1 and DEMO2) Overview. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 82 General Description of the Two Demo Programs . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 82DEMO1 Example Program . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 84 Driver Program for Example 1 (DEMO1) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 84 9.2.2 Data base Inquiry for Example 1 (DATINT) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 86Grid Point Data in Example 1 (PRTGRD) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 91Element Connectivity in Example 1 (PRTCON). . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 92Displacement Data in Example 1 (PRTDIS) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 94Grid Point Stress Data in Example 1 (PRTGPS) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 95 DEMO2 Example Program . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 99 Driver Program for Example 2 (DEMO2) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 99Data base Inquiry and Grid Point Data for Example 2 (PRTGRD) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 103 Data base Inquiry and Connectivity Data for Example 2 (PRTCON) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 104Data base Inquiry and Displacement Data for Example 2 (PRTDIS) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 106Data base Inquiry and Grid Point Stress Data for Example 2 (PRTGPS) . . . . . . . . . . . . . . . . . . . . . . . . . . . 108 10 Usage of Data Definition Language Interface Overview. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 112 High Level Interactive Driver . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 112Support Subroutine to Process DDL Schema . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 119 11 Installation Overview. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 128Building DDLPRT . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 128Building DDLQRY . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 128Building DEMO1 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 129Building DEMO2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 129Building SMPLR . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 129 A MSC Access DBIO Subroutine Descriptions DBIO Subroutine Descriptions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 132 Subroutine Name: CLOSGR . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 132 Subroutine Name: DBCLOS . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 132 Subroutine Name: DBOPEN . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 133 Subroutine Name: DBFLOC. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 134 Subroutine Name: DBVALD. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 135\nv Contents Main Index Subroutine Name: DELREC . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 136 Subroutine Name: DICENT . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 136 Subroutine Name: DICPRT . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 137 Subroutine Name: DICRDR . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 138 Subroutine Name: GRPURG. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 139Subroutine Name: OPENC. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 140 Subroutine Name: OPENR. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 141 Subroutine Name: OPENS . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 142 Subroutine Name: OPENSQ. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 143Subroutine Name: PAGCFGX PAGCFG. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 143Subroutine Name: PAGCLR . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 145Subroutine Name: READBS. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 145Subroutine Name: READR . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 146 Subroutine Name: READS . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 147 Subroutine Name: READSQ. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 148Subroutine Name: WRITEI. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 149 Subroutine Name: WRITES . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 149 Block Data Descriptions. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 150 Block Data: DBCTBD. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 150 Differences from MSC Nastran . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 151 Block Data: GRSPBD. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 155 Additional DBIO Information . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 156 Additional DBIO Subroutines . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 156Labeled Common Blocks . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 156 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 157 B MSC Access Data Definition Language Interface Routines Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 160 Subroutines. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 160 Subroutine Name: MSCASM . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 160 Function Name: MSCDLC . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 160 Function Name: MSCKTY . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 161 Function Name: MSCLDD . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 161 Function Name: MSCLRA . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 162 Function Name: MSCLRT . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 163 Subroutine Name: MSCPIV . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 164 Subroutine Name: MSCPPT. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 164Subroutine Name: MSCPTX. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 165Function Name: MSCRTI . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 165 Function Name: MSCTFA . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 166 Function Name: MSCVDR . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 167\nMSC Nastran Access User’s Manualvi Main Index Function Name: MSCXII . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 167 Function Name: MSCXTI. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 168 Static COMMON Specifications . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 168 Additional Support Routines . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 169 C Input/Output Examples MSC Nastran Input Data . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 172MSC Nastran Output . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 175MSC Access SMPLR Program Output . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 190\nMain Index Preface Preface About this Book 2 List of MSC Nastran Guides 2 Technical Support 3 Training and Internet Resources 3\nMSC Nastran Access User’s Manual About this Book2 Main Index About this Book This guide elaborates different functionalities of MSC Access in detail. List of MSC Nastran Guides A list of some of the MSC Nastran guides is as follows: Installation and Release Guides Installation and Operations Guide Release Guide Reference Guides Quick Reference Guide DMAP Programmer’s Guide Reference Guide Utilities Guide Getting Started Guide SOL 400 Getting Started Guide MSC Nastran Error Messages Guide Demonstration Guides Linear Analysis Implicit Nonlinear (SOL 400) Explicit Nonlinear (SOL 700) MSC Nastran Verification Guide User’s Guides Automated Component Modal Synthesis (ACMS) Access Manual Aeroelastic Analysis Design Sensitivity and Optimization DEMATD Dynamic Analysis Embedded Fatigue Embedded Vibration Fatigue Explicit Nonlinear (SOL 700) High Performance Computing Linear Static Analysis Nonlinear (SOL 400)\n3 MSC Nastran Access User’s Manual Preface Main Index You may find any of these documents from Hexagon at: https://simcompanion.hexagon.com/customers/s/article/MSC-Nastran-Support-Home-Page Technical Support For technical support phone numbers and contact information, please visit: https://simcompanion.hexagon.com/customers/s/article/support-contact-information-kb8019304 Support Center (http://simcompanion.hexagon.com) The SimCompanion link above gives you access to the wealth of resources for Hexagon products. Here you will find product and support contact information, product documentations, knowledge base articles, product error list, knowledge base articles and SimAcademy Webinars. It is a searchable database which allows you to find articles relevant to your inquiry. Valid MSC customer entitlement and login is required to access the database and documents. It is a single sign-on that gives you access to product documentation for complete list of products from Hexagon, allows you to manage your support cases, and participate in our discussion forums. Training and Internet Resources The Hexagon corporate site has the information on the latest events, products, and services for the CAD/CAE/CAM marketplace. Design and Engineering e-Learning The above link will point you to schedule and description of seminars. Following courses are recommended for beginning MSC Nastran users.NAS120 - Linear Static Analysis using MSC Nastran and Patran This seminar introduces basic finite element analysis techniques for linear static, normal modes, and buckling analysis of structures using MSC Nastran and Patran. MSC Nastran data structure, the element library, modeling practices, model validation, and guidelines for efficient solutions are discussed and illustrated with examples and workshops. Patran will be an integral part of the examples and workshops and will be used to generate and verify illustrative MSC Nastran models, manage analysis submission requests, and visualize results. This seminar provides the foundation required for intermediate and advanced MSC Nastran applications.Numerical Methods Rotordynamics Superelements and Modules Thermal Analysis User Defined Services\nMSC Nastran Access User’s Manual Training and Internet Resources4 Main Index\nMain Index Chapter 1: MSC Access MSC Nastran Implicit Nonlinear (SOL 600) User’s GuideMSC Nastran Access User’s Man - ual 1 MSC Access Overview 6 Definitions and Acronyms 6 Compatibility with Previous Versions of MSC Access 7 DBC Module Differences 8 Data base Input/Output (DBIO) Differences 8 Timeline for MSC Access and MSC Nastran Releases 9 Interrelationships of MSC Access with Other MSC Products 11\nMSC Nastran Access User’s Manual Overview6 Main Index Overview MSC Access is a complete set of FORTRAN callable utility subroutines delivered as an object library. These routines enable pre- and post- processor software developers to write communications subroutines that enhance the interaction between their applications and the results generated by MSC Nastran. The finite element database generated by MSC Nastran cannot, until recently, be read directly by an application program. Without MSC Access, application programs must either read through one or more of the sequential files generated or create their own database. Either process can be very slow. Starting with 2001 of MSC Nastran an offering known as the MSC Nastran T oolkit is available as an alternative method. MSC Access provides a way for interfacing pre- and post- processing applications with MSC Nastran. End users of either a packaged Computer Aided Design (CAD) systems or a system developed in-house application can quickly and efficiently search and query the finite element analysis information from MSC Nastran. The inter-relationship of MSC Access with other MSC products is given in Section 1.6.This release of MSC Access includes major enhancements to the original product. These enhancements are:\nImproved performance of the data base input/output access capability Improved data base dictionary content descriptions3. Increased types of analysis results data available4. Increased number of MSC Nastran elements supported5. Larger data base size, number of databases and logical files allowed6. Heterogeneous data access between big and little endian machines Not all of these changes are invisible to the user. Consequently, some modification to existing application codes may be necessary to take full advantage of these improvements. Definitions and Acronyms This section shall specify definitions and acronyms applicable to this document. Other definition of terms will occur when first utilized. Attribute A dictionary entry qualifier for a data base object BBBT Binary Blocked Balanced T ree Method of entry key storage Database The MSC Access database unless otherwise stated DBC Database Conversion module used by MSC Nastran to create MSC Access database DBIO MSC Access Database Input/Output subroutine library DDL Data Definition Language used by MSC Access DDLADD Utility Program used to add/replace DDL to an existing Access database 7 CHAPTER 1 MSC Access Main Index Compatibility with Previous Versions of MSC Access This document is intended for use with MSC Nastran Version 2001.5 and later. Applications written with previous versions of MSC Access should continue to function provided that they are not re-linked with the new object library. The database created by the DBC module using the PROGRAM=‘GRASP’ option is the same as those created by stand -alone DBCs of pre- MSC Nastran 66 versions. To re-link old applications with the new object library, it is necessary to incorporate the new paging pool control subroutines PAGCFGX and the database and data definition validation function DBVALD into the application. Old databases can be read and processed by the re-linked system. T o utilize the machine heterogeneous features, refer to the DDLADD program in the utility chapter.DDLPRT Utility Program used to format the DDL into a printable file DDLQRY Utility Program used to interactive recover information from DDL DEMO1,2 Demonstration programs illustrating programming conventions DMAP Direct Matrix Abstraction Program or process language for MSC Nastran DRA Direct Results Access that represents the MSC.Patran interface FMS File Management Section of MSC Nastran Data Deck HK Hiearchial Key Method of entry key storage MSC/GRASP MSC interactive product during the 1981-1986 timeframe MSC.Patran MSC current interactive product MSC/XL MSC interactive product during the 1985-1992 timeframe NDDL MSC Nastran Data Definition Language Object A data component of the MSC Access database OUTPUT2 An alternate means for exporting information from MSC Nastran in binary format QAPRT Utility Program used to format objects contained in database RECEIVE Utility Program used for translate neutral format to binary database SMPLR Demonstration program illustrating programming conventions TRANS Utility Program used to translate database to machine neutral format\nMSC Nastran Access User’s Manual DBC Module Differences8 Main Index The MSC/DBC executable program for converting MSC Nastran databases is no longer being delivered. Starting with Version 66, the database converter (DBC) has become a module of MSC Nastran and has been included within all MSC Nastran solution sequences. DMAP writers should review the DBC module and its capabilities in Section 5.4 of the MSC Nastran Users Manual and the DMAP Module Dictionary. The Data Base Input/Output (DBIO) subroutines have added buffer pooling techniques to relieve memory management. The write facilities of DBIO from Version 2 have been restored since Version 6. DBC Module Differences As a module, DBC does not require any output blocks to be permanently stored in the MSC Nastran database. The conversion occurs as MSC Nastran executes. As a result, the MSC Nastran database contains fewer data blocks and may be smaller. Post-processing activity can begin as soon as MSC Nastran execution is completed and the conversion is verified (i.e., there are no FATAL messages from the DBC module or other MSC Nastran modules). DBC was added to MSC Nastran using the same philosophy of output data recovery as other output modules. It does not stop MSC Nastran execution when an error is detected. Instead an error message is printed and control returned to the Executive System. When a fatal DBC error occurs, further Executive System calls to the DBC module are not executed. The module allows modification of old data and appendage of new information to the database. In previous releases of the stand -alone data base converter, the database, once created, could not be modified. The only error occurs when inconsistent model structure is detected. Care should be exercised when updating old databases that modifications do not compromise the existing data model. It is normally safe to update databases for additional solution results. The DBC module is capable of translating the MSC Nastran information using three different sets of criteria. The default conversion is the modern and expanded MSC/XL structure, but an alternate form for p-elements is designated XLPLUS. Optionally, the MSC/GRASP structure corresponding to prior field systems is available but is not compatible with the BBBT Method of storage of keyed objects. These structures should not be mixed in the same database. MSC.Patran, via the DRA tool, uses the MSC/XL conversion format. To take advantage of the expanded object structure, current applications of the product need to be modified.Additional information about the DBC module will be found in Chapter 2 of this manual. Data base Input/Output (DBIO) Differences The Data Base Input/Output (DBIO) Facility has been enhanced. For most existing applications, only minor changes are necessary to use the new DBIO library routines. Database buffer pooling or caching has been introduced into the DBIO routines. This relieves the application of some memory management issues and decisions that arise when using the DBIO open routines. When the pages are faulted to the device, heterogeneous device characteristics are noted and the page information is translated to the targets native mode. It is up to the MSC Access user to determine if the database is locally present or accessed across the network.\n9 CHAPTER 1 MSC Access Main Index The argument lists of the open subroutines were retained from the previous versions for compatibility. The positional requirements are the same in all MSC Access releases. However, in this release, the application’s input for the buffer areas is ignored. The former buffer areas can be reduced to arrays containing one element to save space or replaced with a constant zero since the input location is unused. In the 2005.1 release, either one or two positions have been re-activated to allow for the BBBT Method of storage of keyed entries. The application concern is related to the open APIs since values will be returned to the argument locations. A new database validation function has been provided. The DBVALD subroutine attempt to verify that the physical file is truly and MSC Access database. It returns to the application the block size that was used to create the database, the Data Definition Language (DDL) version and control information, and whether the database is native to the current machine. Only databases that contain DDL can be processed between heterogeneous machine environments. It should be noted that information can be exchanged between big and little endian machine of 32-bit word lengths. A new subroutine PAGCFGX has been introduced which replaces the older PAGCFG. This subroutine must be called before any other DBIO processing routine is called other than DBVALD as previously mentioned. This call, used to establish the buffer pooling area, should be done only once during an application program’s execution. When all databases have been closed, the application can re-execute the routine to change the memory configurations, however, ALL databases MUST BE CLOSED. See application interface section for further discussion. Timeline for MSC Access and MSC Nastran Releases Both MSC Nastran and MSC Access have been released over multiple decades and have serviced numerous application products. Unlike MSC Nastran, the database produced by MSC Access have little sensitivity to timeline or release synchronization if both the MSC Nastran defaults were utilized and application programs were developed using the conventions specified within this manual. Briefly, the timeline, version synchronization and product correlation follows: Year MSC Access ReleaseMSC Nastran ReleaseProduct / Object or Approach Availability 1982 1 62 MSC/GRASP introduced Basic geometry, loads, results such as displacements, stresses \u0026 forces Supported Linear Statics, Real Eigenvalues, T ransient \u0026 Frequency solutions 1983 2 63 Support of Nonlinear Solutions 1985 3 65 Support of scalar and mass elements\nMSC Nastran Access User’s Manual Timeline for MSC Access and MSC Nastran Releases10 Main Index 1989 4 66 MSC/XL and MSC/EMAS introduced Added multi-project/path database modelInstalled access factor into database objectsAdded Design Optimization object attributeSupport of Complex Eigenvalues SolutionsSupport of QUADR and TRIAR objects 1991 6 67 Introduced Acoustic elements and resultsAdded Grid and Element Discontinuity objectsSupported Buckling Analysis Approach 1994 68 68 Aries formats incorporated using MSC/XL object definitionChanged Element Discontinuity Object DefinitionsAdded QUAD4 corner technologyAdded support for Heat T ransfer and p-element technologyMore Design Optimization Response data supported 1996 69 69 Support for Part SuperelementsAdded BUSH and Absorber elementsp-element supported expanded to include Beam \u0026 Shell elements 1997 70 70 MSC.Patran integrated via DRA interface Added support for Enthalpy and MPC forces objects 1998 70.5 70.5 Added BUSH1D element support 1998 70.6 70.6 MSC/EMAS support discontinuedAdded support for Aeroelastic ModelAdded Hyperelastic elements and Plain Strain Surface Recovery 1999 70.7 70.7 Minor corrections to object attributes 2001 2001.0 2001.0 Added Element Kinetic Energy and Energy Loss per Cycle objects WELD element supported\n11 CHAPTER 1 MSC Access Main Index Interrelationships of MSC Access with Other MSC Products The relationship between the various MSC products is illustrated in section 1.6.1. Please note that the CAD/CAM systems have legal permission to redistribute the sections of MSC Access used. There is no additional cost to mutual clients.2001 2001.0.5 2001.0.5 Allow database to have variable block sizes Allow databases to operate hetrogeneously between platforms 2004 2004 2004 DMIG/GENEL limited element supportComposite output for QUADR/TRIAR elementsMAXMIN (grid) responses (MAXMIN (element) missing)Superelement Map object support identical/mirrorsScaled Response Spectra Analysis 2005 2005 2005 BBBT Storage Method Added to Keyed ObjectsFASTNER element supportedSEAM weld element supportedCyclic Symmetry Attribute added to object definitions\nMSC Nastran Access User’s Manual Interrelationships of MSC Access with Other MSC Products12 Main Index MSC Nastran Version 66 and Subsequent Versions"},"title":"User's Manual P1"},"/docs/access_user_manual/msc_nastran_2024.1_access_user_manual_002/":{"data":{"":"13 CHAPTER 1 MSC Access Main Index\nMSC Nastran Access User’s Manual Interrelationships of MSC Access with Other MSC Products14 Main Index\nMain Index Chapter 2: Database Converter Module (DBC) MSC Nastran Implicit Nonlinear (SOL 600) User’s GuideMSC Nastran Access User’s Man - ual 2Database Converter Module (DBC) Overview 16 DBC Functions 16\nMSC Nastran Access User’s Manual Overview16 Main Index Overview The purpose of the database converter is to transform data stored in MSC Nastran internal formats into a relationally keyed database for use with MSC.Patran, MSC/XL, MSC Access or user written applications. Prior to MSC Nastran Version 66, DBC was a stand -alone program delivered with several MSC products. Since Version 66, DBC has been incorporated as a DMAP module within MSC Nastran.The DBC module is partially described in the MSC Nastran Quick Reference Guide Version 2005, Section 6 and the MSC.Nastan DMAP Module Dictionary. It is also described in the MSC Nastran Programmers Manual. DBC Functions Beginning with MSC Nastran Version 62, conditional DMAP statements were executed whenever an MSC Nastran Bulk Data Section contained a PARAM,POST,0 entry. Prior to Version 66, this entry made the DBSTORE module place key input and output data blocks on the MSC Nastran database. Beginning in Version 66, this entry controls the execution of the DBC DMAP module. The DBC module is conceptually similar to the OUTPUT2 module. The major difference is the data structure created. The description of the data structure associated with this manual are more complete than that found in the MSC Nastran Users Manual. Like OUTPUT2, DBC has many defaults to simplify its usage. DMAP Alters are not required to position the DBC module. Its locations have been pre-determined within all supported solution sequences. However, the usage of DMAP alters to place or eliminate module calls are not prohibited, and, when used, can save additional information not normally processed to the database. DBC Default Values The DBC module has four user class parameters for users to control conversion and output. Default values are supplied and may be overwritten by the user. The defaults for the DBC module are described in the following sections. MSC.Patran and MSC/XL Data Base Type MSC.Patran as well as Aries share a MSC/XL translation for the MSC Nastran data blocks. The DBC module will automatically switch to an XLPLUS format when p-elements are detected in the problem. The MSC/XL format is compatible with many third party vendors. The default value can also be explicitly set by the parameter entry:PARAM,DBCCONV,XLAn additional way to change the parameter value for an installation rather than for a local user is to reset the parameter in the Nastran Data Definition Language (NDDL) and re-compile the delivery databases for the solution sequences. This method can be also used to place site dependant DMAP changes for the DBC module execution as well as to add user parameters to the DBC translation parameter qualifiers.\n17 CHAPTER 2 Database Converter Module (DBC) Main Index No DBCDIAG Output No diagnostic information about the conversion is output unless error conditions are encountered. DBCDIAGs are discussed in greater detail in Section 2.1.2.2. The default value is explicitly set by the parameter entry:PARAM,DBCDIAG,0 Updating of Pre-Existing Data Blocks Pre-existing data objects are updated with each DBC module call.The default value is explicitly set by the parameter entry:PARAM,DBCOVWRT ,YES Single Data Base All translated MSC Nastran geometric, load, and post information is stored on one physical database, which defaults to the logical reference 40. Starting with Version 2001.0.5, the physical I/O has been replaced by C language implementations and these enumerated values serve as reference values only. The default value is explicitly set by the parameter entry:PARAM,GEOMU,40The other parameters used to control data base output POSTU and LOADU default to the value used by GEOMU. Keyed Object Translation When Keyed Objects are created the default storage concept is the older HK Method to best meet legacy issues in the field. When the object capacity is estimated to exceed the HK Method of storage, the method is automatically swithed to the BBBT Method of storage. The setting to this default is established by: NASTRAN DBCFACT=2 Overriding DBC Default Values The DBC default values may be overridden by the proper PARAM entries. They can be used as Case Control or Bulk Data parameters, as required. MSC/GRASP Data base Type The older MSC/GRASP format is requested by the parameter entry: PARAM,DBCCONV,GRASPOther valid translation names are XLPLUS and ARIES and are automatically switched when p-element presence is detected.\nMSC Nastran Access User’s Manual DBC Functions18 Main Index DBCDIAG Output DBCDIAG output is requested by assigning a value or sum of values from the following table to the parameter entry: PARAM,DBCDIAG,value Combinations of DBCDIAGs are created by summing the corresponding values. A DBCDIAG of value of 5 will echo both grid object entries and the internal module begin message on the standard output device. No Overwrites on Pre-Existing Data Blocks Existing data base objects are not overwritten when the following parameter entry is used. PARAM,DBCOVWRT,NOThis usage increments the PROJECT object of the database. New data is then accumulated using the new version (project) as a dictionary attributes as described in Section 4.1. Multiple Data Bases The database information can be partitioned into several physical data bases by adding PARAM and FMS entries. The DBC module supports three separate output parameters per module execution. They are controlled by the following parameter entries.Value DBCDIAG Description 0 No diagnostics 1 Grid object entries 2 Element connection object entries 4 Internal module begin messages 8 Internal module statistics 16 Internal module CPU time, and begin message in performance summary table 32 DBC database dictionary entries 64 Messages for null MSC Nastran logical file connections 128 Store diagnostics when geometry updates occur 256 Store grid point factor objects for data recovery 512 Suppress grid point stress objects for data recovery 534288 Block manager information 1048576 Dictionary splitting information 2097152 Dump cache for fatal conditions\n19 CHAPTER 2 Database Converter Module (DBC) Main Index PARAM,GEOMU,gunitGeometric informationDefault gunit = 40 PARAM,LOADU,lunitStatic load informationDefault lunit = GEOMUPARAM,POSTU,punitData Recovery informationDefault punit = GEOMUThe use of multiple output databases from the DBC module requires the definition of additional files assignments by the ASSIGN command in the MSC Nastran File Management Section (FMS). The most basic file concept provided partitions MSC Nastran information into three physical databases. These logical partitions are for pre-processing data, external loads environment data and post-processing information. As an example, post-processing data can be separated from the primary database by adding the following:\nIn the FMS Section: ASSIGN DBC = ‘MODEL.PDB’, STATUS=NEW, UNIT=41 The name assigned to the DBC output file is machine dependent. In the Bulk Data Section: PARAM,POSTU,41 If the PARAM,POSTU,xx command is placed in the Case Control Section, then it can be used to put individual superelement information in different physical databases. The STATUS keyword on the ASSIGN statement can be OLD for any DBC-generated database. This allows modification to and overwriting of existing data base objects. The old versus new databases will be detected and verified by the DBVALD and DBOPEN routines of the MSC Access DBIO library. Databases with Increased Block Size Starting with MSC Nastran 2001.0.5, the MSC Access database can now employ block sizes larger than 1024 words. The theoretical capacity established in MSC Nastran V62 was to allow for databases of 68GB and object sizes of 1GB. These limits have lasted over twenty years without modification. However, during the V70 release series, it has been observed that models and computer capacity have gotten significantly larger. Therefore, the variable block size feature has been activated, along with the DBVALD function to assist the application in determining the current database blocking. Functional usage will be explained later along with block size implications concerning the database and object sizing. The MSC Nastran 2001.0.5 release allows for a default block size minimum of 1024 words (database block size of previous releases), to minimize impact on field systems, and can be expanded to 65,536 words. The upper limit allows for database sizes of 568TB and object sizes of 281GB. As an example of setting a 4096 word block size is the following: In the FMS Section: ASSIGN DBC = ‘MODEL.XDB’ STATUS=NEW UNIT=40 RECL=4096 It should be noted that each database assignment can utilize a different block size and that block size assignments are ignored when the database is old. An example of multiple assignments appears as: MSC Nastran Access User’s Manual DBC Functions20 Main Index In the FMS Section: ASSIGN DBC = ‘MODEL.GDB’ STATUS=NEW UNIT=40 RECL=1024 ASSIGN DBC = ‘MODEL.LDB’ STATUS=NEW UNIT=41 RECL=2048 ASSIGN DBC = ‘MODEL.PDB’ STATUS=NEW UNIT=42 RECL=4096 With the additional PARAM entries in the Case Control or Bulk Data Sections. Selecting HK or BBBT Storage Methods The storage method selection has been defined in a more global manner than the parameter utilization illustrated in the previous sections. The selection is specified on the NASTRAN entry and applies to all DBC module executions during the problem solution. The placement on the NASTRAN entry allows for either site or user RC file settings that may be most appropriate for the installation. The BBBT Method conceptually has no limit to the number of entries within an object other than the size of the key which is currently assumed to be a 32 bit integer value. The default, as mentioned before is to use the older HK Method both for legacy and the space associated with the key relocation tables. The values for DBCFACT are presented in the following table. DBCFACT Description 0 HK Method, XL Dynamic Factors 1 HK Method, GRASP Static Factors 2 HK Default, BBBT Auto, XL Dynamic Factors 3 HK Default, BBBT Auto, GRASP Static Factors 4 BBBT Method Only\nMain Index Chapter 3: Creation of MSC Access Databases 3Creation of MSC Access Databases Overview 22 Conversion Using MSC Nastran Version 66 and Subsequent Versions 22 Conversion Using Pre-MSC Nastran Version 66 22\nMSC Nastran Access Manual Overview22 Main Index Overview The key to the efficient access provided by MSC Nastran analysis data is the creation of a direct access database. Beginning with MSC Nastran Version 66, this database is created and/or updated with calls to the DBC DMAP module. Earlier versions of MSC Nastran used a stand -alone database converter (DBC) program delivered as part of the MSC/ACCESS delivery tape. Conversion Using MSC Nastran Version 66 and Subsequent Versions The database conversion is performed by the DBC module. The DBC module has been incorporated into all solution sequences of MSC Nastran. Consequently, more information is available for pre - and post- processing. The activation of the DBC module requires the PARAM POST be added to your MSC Nastran run. The next PARAM to consider is the entry controlling translation that can be entered once and is unchangeable during the MSC Nastran execution. The DBCCONV parameter is unnecessary for MSC.Patran conversions. On request, the DBC module can also output geometric information, static load information, and post- processing information to separate database files. In addition, superelement information can be stored with one or more superelement identifications per database. For MSC Nastran release prior to Version 66, the Rigid Format Solution Sequences 3, 24, and 25, the Alters RF3D66, RF24D66, and RF25D66, respectively, are required. Conversion Using Pre-MSC Nastran Version 66 The database conversion is performed by a stand -alone DBC program. Only the data necessary to support MSC/GRASP Version 3 is accessible. The MSC Nastran run requires the addition of one PARAM Bulk Data entry, or in the case of Rigid Format Solution Sequences 3, 24, and 25, the Alters RF3D66, RF24D66, and RF25D66, respectively, are required.PARAM,POST,0 $ Activates DBC calls and stores data on the direct-access database PARAM,DBCCONV,{x} $ Program Conversion Request $ Default value, if not specified is XL (MSC/XL) $ Allowable values are XL , GRASP , and XLPLUS PARAM,POST,0 $ Stores data on MSC Nastran data base\nMain Index Chapter 4: Contents of MSC Access Database 4Contents of MSC Access Database Overview 24 Database Dictionary Entry Description 25 Data Block Description 32\nMSC Nastran Access Manual Overview24 Main Index Overview Generally, the databases created for MSC Access are smaller than those corresponding MSC Nastran. This occurs because matrices and other special MSC Nastran data blocks are not included. The types of objects that are contained in the database are: Model Geometry Data\nGrid Locations and Coordinate Systems Element Descriptions (Connection, Material, and Property)3. Rigid Elements4. DMIG Matrix Descriptions less the coefficients Model Loads and Restraint Data Loads Information (Forces, Moments, Pressures)2. Restraint Data (Single Point Restraints and Enforced Displacements) Solution Results Nodal Data a. Deformationsb. Velocitiesc. Accelerationsd. Applied Loadse. Constraint Forces (Single and Multi)f. Grid Point (Stresses, Force, Strain)g. Temperatures Element Data a. Linear, Nonlinear, Hyperelastic and Composite Stressesb. Linear, Nonlinear and Composite Strainsc. Linear Forcesd. Acoustic Pressurese. Strain and Kinetic Energyf. Energy Loss per Cycleg. Gradients and Fluxesh. Discontinuities 25 CHAPTER 4 Contents of MSC Access Database Main Index Problem Summary\nModel Control Information Superelement enumeration3. SUBCASE Identifications4. Modal Information5. Time List6. Frequency List7. Eigenvalue Tables8. Buckling Table9. P-element Error Values Design History and Response Information11. Transformational Matrices for either grids or superelements The databases are intended to contain only relevant processing data. If the MSC Nastran model is a large model with hundreds of SUBCASEs or thousands of transient time steps, the MSC Access database will also be large. Since these databases are intended for interactive use, the results may be extremely costly in the area of performance. Therefore, output should be judiciously selected for data recovery of the MSC Nastran execution. For a given SUBCASE or time step, the best operational procedure is the selection of the ALL output option in MSC Nastran. If this is not done, there may be difficulty in understanding the results. Based on needs and budget, it must be determined how much data should be saved for interactive usage. One strategy is to request a minimal set on the first execution to determine if a plausible solution has been produced. If it is plausible, the restart capability of MSC Nastran can then be used to obtain a larger output set at a reduced cost compared to re-analyzing the total model. Database Dictionary Entry Description All objects are accessed using the same concepts. The objects are named and referenced using the following 12-field dictionary entry format. The first two words of the dictionary entry are referred to as the object name and the remaining fields are the attributes that make the object a distinct quantity on the database when merged across all possible variations. Field Word Descriptor Format 1-2 Object Name 2A4 3 Project Number I 4 Superelement Identification I 5 Path Number I 6 SUBCASE Identification I MSC Nastran Access Manual Database Dictionary Entry Description26 Main Index The data description of all objects can be obtained via the utility programs DDLQRY and DDLPRT as described in the MSC Nastran Release Guide or Chapter 7, MSC Access Utility and Demonstration Programs. Object Name Field The first two fields of the dictionary entry comprising the object name are stored in MSC Nastran BCD format. BCD format is defined as four Hollerith characters that must be left justified, blank -filled, and then stored in a machine word. BCD format is not equivalent to character format as defined by FORTRAN 77 and later standards. Examples of these constructions can be found in the NAMEBD block data routine delivered as part of the MSC Access SMPLR prototype program. The object name fields for each database dictionary entry are either derived from MSC Nastran Case Control or Bulk Data mnemonics or constructed from logical combinations of block data control routines delivered with the MSC Access system. For example, the object names PSHELL, PSOLID, GRID, and FORCE were derived from Bulk Data entries. These objects contain information from the Bulk Data user input. These objects generally, but not always, appear in a different order than the Bulk Data input or the MSC Nastran data block. In some cases, the information is supplemented. For example, the GRIDX object contains both input and basic geometric locations. In contrast, for the SPCl object, each constrained grid point has its own entry. Examples of Case Control derived names are displacements (DISP), loads (LOAD), and velocities (VELO). The first four characters of the output request are used to derive the first word of the database dictionary entry. The second word of the dictionary entry is derived from the type of data recovered; that is, real (R), complex in real/imaginary form (RI), or complex in magnitude/phase form (MP). Examples of possible objects derived from displacements are: The block data method is used to control element objects. The labeled common /DBCTAl/ (block data DBCTBD) serves the same purpose as and has a similar construction to the /GPTAl/ common found in MSC Nastran. Information about each element is found in this block. The information stored includes, but is not limited to:\nElement generic names, like QUAD4. Number of vertices supported by the element.7 Set Identification I 8 Solution Approach Code I 9 Design Cycle I 10 p-Iteration Cycle I 11 Cyclic Symmetry Segment I 12 Unused I DISPR DISPRI DISPMP 27 CHAPTER 4 Contents of MSC Access Database Main Index 3. Length of various objects entries. 4. Three characters used to support element output recovery. The initial character of an object output recovery is determined by the specific information being recovered. The initial character is drawn from the following list: Then the three characters for the specific element are appended to the starting character. The object name is also appended with the type of data recovery in the same way as objects created from Case Control mnemonics. For example, the following objects contain connectivity and data recovery information for the QUAD4 element. The identifier for the QUAD4 element is QD4, as per the DBCTA1 block data. The order items in the element output data recovery entry is the same as the recovery order from OUTPUT2 or listed in the MSC Nastran standard output.C Connectivity Information E Element Strain Data Recovery F Element Force Data Recovery G Composite Element Laminate Strain Data Recovery H Hyperelastic Element Stress Recovery N Element Nonlinear Data Recovery S Element Stress Data Recovery T Composite Element Laminate Stress Data Recovery U Element Strain Energy Data Recovery B Element Energy Loss per Cycle K Element Kinetic Energy Generic Output Category Object Name(s) Connectivity Data CQD4 Strain Recovery Data EQD4MP EQD4R EQD4RI Composite Strain Recovery Data GQD4R Force Recovery Data FQD4MP FQD4R FQD4RI Nonlinear Recovery Data NQD4R Stress Recovery Data SQD4MP SQD4R SQD4RI Composite Stress Recovery Data TQD4R Strain Energy Recovery Data UQD4R\nMSC Nastran Access Manual Database Dictionary Entry Description28 Main Index Project Attribute Field This is the third field and is an integer variable. For use with the MSC/GRASP program, the project enumeration must be set to zero. This field addresses project or multiple model instances on the database. In prior releases this capability, although available to several MSC products, was not fully implemented by the DBC software. This resulted in single model databases with the project enumeration equal to zero. Since MSC Nastran Version 66, the multiple project capability is fully functional. The current definition of the project attribute has been tied to the MSC Nastran concepts of project and version since the Version 66 release. All valid project enumerated values are contained in the PROJECT object, which is accessed like any other keyed object. The last ten fields of the PROJECT dictionary entry are all zeros since global database characteristics are derived from it’s content. The second word of the PROJECT object entry when accessed by the key “ -1”, indicates the number of valid projects on the database. The remaining entries can be read using the read -sequential (READSQ) or keyed (READR) methods to recover the valid project keys, MSC Nastran version number, and MSC Nastran project description are derived from the PROJ entry of the FMS section. An application interface could be used to prompt the user for selection to establish the domain of model/project version selection. The MSC Access prototype program SMPLR currently extracts all valid project attributes and uses the list to control the outer processing loop. Superelement/Part Attribute Field This is the fourth field and is an integer variable. This field corresponds to the MSC Nastran superelement or part enumeration.For residual structures, or models not using superelement or part technology, the identification is set to zero.The valid list of superelement/part enumeration for a project can be recovered from the SUPERS object. T o access the SUPERS sequential object, a valid PROJECT identification must be placed in field 3 and zeros for the remaining nine fields of its dictionary entry is required. When the SUPERS object does not exist, a value of zero, representing the residual structure can be safely assumed for the dictionary superelement/part attribute. Path Attribute Field This is the fifth field and is an integer variable. For use with the MSC/GRASP format, the path attribute must be set to zero.The MSC Access format uses a different definition of data blocks than MSC Nastran Version 66. Each MSC Nastran data block has an open -ended list of qualifiers defined in the MSC Nastran Data Definition Language (NDDL). Instead of using this qualifier list that leads to a rapid increase in the number of data blocks, a qualifier related to a DBC module parameter DBCPATH has been defined. The DBCPATH parameter is user modifiable within the NDDL definition since Version 66 of MSC Nastran. The default\n29 CHAPTER 4 Contents of MSC Access Database Main Index path qualifiers for the DBCPATH parameter are MODEL, SOLID, and HIGHQUAL. The SEID qualifier, also defined in MSC Nastran, is eliminated from the path qualifiers and merged into the superelement list (SUPERS) object during database conversion. The data base PATHQUAL keyed object is used to obtain the valid list of qualifiers for the database. The special key “ -1” returns the maximum key value used. The remaining records can be recovered using the read-sequential method to extract the list of valid qualifiers. The PATHQUAL object is an example of an open -ended list of information. The entries in the PATHQUAL object contain, as a key, the valid path enumerated values used to further qualify database objects. The remaining items are keys into the PATHLINK, the object that contains a singly linked list of MSC Nastran qualifier names. T o determine the qualifier names associated with each path attribute key, the PATHLINK object must be processed. The initial PATHLINK entry key is followed by a possible key for the next entry in the chained PATHLINK object. This field (key), like the initial PATHQUAL value (key), links to the next qualifier in the PATHLlNK object until the value of zero is encountered. The zero value (key) terminates the chain. The remaining values of a PATHLINK entry are the MSC Nastran BCD qualifier name (formatted by the BCD technique), the qualifier data type, the number of values associated with the qualifier, and a pointer to the appropriate path value object. At present, a qualifier can have a maximum of twenty associated values. The correct path value object is determined by the qualifier data type and selected from the PATHBCD (BCD), PATHINT (integer), PATHLOG (logical), PATHRD (real double), and PATHRS (real single) objects. The appropriate object(s) is opened and its value(s) are extracted as required. This technique is illustrated in the MSC Access prototype software SMPLR.This elaborate structure is required to maintain an open -ended list and to produce consistent data structures for the MSC.TRANS product. SUBCASE Attribute Field This is the sixth field and is an integer variable.This field corresponds to the MSC Nastran Case Control Section definition of SUBCASE structure. Since SUBCASE is normally associated with output data recovery, some objects such as element connectivity and grid location objects, do not use this attribute to qualify their dictionary entries. To access such objects, this dictionary entry field must be set to zero. The output data recovery objects have been grouped into two general classes, for grids and elements. A grid object presence has indicators stored in the SUBGRID object. The element recovery object indicators are stored in the SUBELEM object. These two object entries are keyed by the SUBCASE identification and contain items indicating possible data presence. The item value, when non-zero, indicates data presence for the output class and indicates the format for data recovery. The sign of the item indicates the SORT requested by MSC Nastran Case Control, where positive is SORT 1 and negative indicates SORT 2. For example, SUBGRID entry field two indicates a displacement data recovery request. A zero value indicates no output data was requested. Negative values indicate user -requested SORT2 output. The format of the output request for nonzero entries is its absolute value modulo 3. That is, the values are as follows:\nMSC Nastran Access Manual Database Dictionary Entry Description30 Main Index\nOne corresponds to real data recovery Two corresponds to complex, real/imaginary data recovery3. Three corresponds to complex, magnitude/phase data recovery formats These values help define the BCD value of word two of the object dictionary entry. Magnitudes greater than three, specifically four through six, indicate modal data recovery historically used by MSC/GRASP . Any of the output formats requested from the DBC module produces a parallel object SUBCTITL having the same SUBCASE key. The entries contain the information from the TITLE, SUBTITLE and LABEL statements found in the Case Control Section. This objects merges SUBCASE request from both the grid and element request sections. Set Attribute Field This is the seventh field and is an integer variable. This field in the database dictionary entry corresponds to the set definitions for the model structure. The Set identification attribute is required whenever grid point stress or strain surface or volume data recovery is requested. For example, the GPSOLID and GPSTRESS objects of MSC/GRASP require a Volume Set Identification and Surface Set Identification, respectively. Other valid Set identifications are found for the SlD object, which controls the formation of the loading environment. Some objects requiring field seven are FORCE, MOMENT , SPC, and SPC1. Objects, such as SURFSET or VOLSET , are used during post-processing of grid point stress / strain data recovery to determine applicable Set enumerated values. Approach Attribute Field This is the eighth field and is an integer variable. For use with the MSC/GRASP translation, the approach attribute must be set to zero.This field defines the MSC Nastran analysis solution for data recovery and is created only during other MSC Access conversions. There is no global database object indicating valid approach enumerated values for a given project/path. A sample technique using the DICENT routine was incorporated into the MSC Access prototype program SMPLR to extract this information. The prototype program extracts all approach values. User applications can be written to filter approach values at project or path levels. The valid approach enumerated values are: Approach Corresponding MSC Nastran Solution Class 0 Old data recovery (refer to prototype for “best guess” logic) 1 Static Data Recovery 2 T ransient Response Data Recovery 3 Frequency Response Data Recovery 31 CHAPTER 4 Contents of MSC Access Database Main Index In pre -version 66 MSC Nastran releases, the approach codes 7 thru 24 were not defined. Nonlinear transient data recovery (i.e., Solution 99/129) is typed transient and the nonlinear element data recovery formats are used for element data recovery. Design Cycle Attribute Field This is the ninth field and is an integer variable. This field in the database dictionary entry corresponds to the design optimization index within MSC Nastran. For use with the MSC/GRASP format, the design cycle attribute must be set to zero.The enumerated values for the Design Cycle Attribute can be obtained from the DHIST object once the path/project attributes have been determined. When the DHIST object does not exist on the database, the attribute value must be zero for the dictionary entry field. P-element Iteration Attribute Field This is the tenth field and is an integer variable. This field in the database dictionary entry corresponds to the p-element iteration cycle within MSC Nastran where data recovery is possible. For use with the MSC/GRASP format, the p-element attribute must be set to zero.The enumerated values for the p-element Iteration Attribute can be obtained from the PINFO object once the project, path and design cycle attribute values have been set. When the PINFO object does not exist on the database, the attribute value must be zero for the dictionary entry field. Cyclic Symmetry Segment Field This is the eleventh field and is an integer variable.4 Real Eigenvalue Data Recovery 5 Nonlinear Statics Data Recovery 6 Buckling Data Recovery 7 Complex Eigenvalue Data Recovery 8 Aerodynamic Analysis 21 Scaled Response Spectra Analysis - ABS 22 Scaled Response Spectra Analysis - SRSS 23 Scaled Response Spectra Analysis – NRL 24 Scaled Response Spectra Analysis –NRL0\nMSC Nastran Access Manual Data Block Description32 Main Index This field in the database dictionary entry corresponds to the segment number in Cyclic Symmetry Analysis. For use with the MSC/GRASP format, the segment attribute must be set to zero.The number of segments can be recovered from the CYCLIC object when combined with the type of Cyclic Symmetry Analysis employed in the solution. The CYSEGM object entry key also can be used to delineate the range and values for this attribute. Undefined Field The twelfth field is an integer value. It is currently unused by MSC Access and are reserved by MSC for future development. This field must be set to zero. Determination of Object Attribute Usage Before MSC Access 2001.0.5, the assignment of correct attribute to an object dictionary entry was the responsibility of the application developer. Utility programs such as DDLQRY and DDLPRT provide listings of the object’s control information as well as the MSC Nastran data block(s) the content was derived from. Since the data model is constantly evolving based upon development into new analysis regions, the setting of these attributes is subject to change. Starting with version 2001.0.5, new DBIO library routines have been provided to interface and return to the application developer the information concerning the object characteristic, similar to the techniques employed by DDLQRY and DDLPRT . These interfaces rely on the presence of the Data Definition Language database, which in itself, is also a MSC/Access database. This DDL database has been part of the MSC Nastran delivery since Version 68 release. Refer to Chapter 6, Interfacing to the Data Definition Language, for details concerning it usage in an application. Data Block Description The direct -access database contains two types of objects. The first is a keyed object and the second is a sequential object. Both types of objects contain information stored in “tabular” format. Each row in a table is called an ENTRY and each column is called an ITEM. The first item is called a KEY. For example, consider the object GRIDX derived from the sample input description and described in the following table. EXTID INTID Basic CoordinatesCoordinate SystemsConstraint FlagsInput Systems X Y Z Input Output T1 T2 T3 120 1 5.0 2.5 0.0 0 0 23456 5.0 2.5 0.0"},"title":"User's Manual P2"},"/docs/access_user_manual/msc_nastran_2024.1_access_user_manual_003/":{"data":{"":"33 CHAPTER 4 Contents of MSC Access Database Main Index The previous object has four entries and eleven items. The EXTID is the key for each entry. Keyed Entries The keyed entries may also be referred to as random, random -access, relational, or keyed records. A key allows access to entries by referencing the key item within the object entry. The format for a keyed object is: where, m = the record length of the given entryn = the number of entries in the objectThe GRIDX object discussed in Section 4.2 is an example of a keyed object.Combinations of the following routines, which are documented in Appendix A, must be used to process all keyed objects. Sequential Object Sequential objects may also be referred to as sequential or sequential -access objects within this document. All terms are equivalent. A sequential object contains a simple list of data. Access to this data is by sequential techniques. The general format of a sequential object is:121 2 2.5 5.0 0.0 0 0 13456 2.5 5.0 0.0 10000 3 1.0 0.0 0.0 1 1 3456 1.0 0.0 0.0 10001 4 1.1 0.0 0.0 1 1 3456 1.1 0.0 0.0 KEY1 ITEM1 … … ITEMm … KEYn ITEM1 … … ITEMm\nOpen data block -DBFLOC, OPENC, OPENR, or OPENSQ Read from data block - READBS, READR, or READSQ Write to data block - WRITEI Close data block - CLOSGR ITEM1 … ITEMn MSC Nastran Access Manual Data Block Description34 Main Index where, n = the number of items in the object.The SUPERS object is an example of a sequential object. The following routines documented in Appendix A must be used to process all sequential objects.\nOpen data block - DBFLOC, OPENS Read from data block - READS Write to data block - WRITES Close data block - CLOSGR Main Index Chapter 5: Accessing The Database 5 Accessing The Database Overview 36 General Access Database Processing 36 Access Database Usage Hints 44 The CBAR, CBEAM, and CGAP Objects 50\nMSC Nastran Access Manual Overview36 Main Index Overview Communication with the database is through the set of access utility subroutines found in the delivered DBIO object library and described in Appendix A. These utilities support the following functions:\nDatabase Validation Block Management3. Open/Close of a Database4. Database Inquiry5. Allocate/Free Database Objects6. Read/Write Operations7. Purge Objects These functions are structured as illustrated by the following diagram. General Access Database Processing Processing of the Access database generally follows the steps described below. These functions are described in greater detail later in this section. The routines are described in greater detail in Appendix A. Database is validated by DBVALD and the maximum block size determined. The block (paging) pool is established by a call to PAGCFGX (PAGCFG).3. Open the database(s) using DBOPEN. WHILE (information is available) Allocate the object(s) to be processed using OPENC, OPENR, OPENS, or OPENSQ.Data Base Validation Block ( Page ) Management OPEN Data Base CLOSE Data BaseData Base Inquiry Purge ObjectAllocate Object Free ObjectREAD Object WRITE ObjectData Base ValidationBlock ( Page ) Management OPEN Data Base CLOSE Data BaseData Base Inquiry Purge ObjectAllocate Object Free ObjectREAD Object WRITE Object 37 CHAPTER 5 Accessing The Database Main Index 5. Process information. 6. Free the object(s) using CLOSGR. END WHILE 7. Close the database(s) with a call to DBCLOS. The processing of information in Step five denotes application data processing. This includes (but is not limited to) the following:\nReading object entry information with READBS, READR, READS, and READSQ Deleting entries from keyed objects using DELREC3. Dictionary processing with DICENT, DICPRT, and DICRDR4. Purging of objects with GRPURG5. Writing object entry information with WRITEI and WRITES Database Validation New with the 2001 version of MSC Access is a database validation routine. Given the database name and length, the routine determines if the database exists from an operating system perspective from the path provided. When the name exists, the file is opened and information is checked to validate that the file reference is indeed a MSC Access database. When confirmed, the routine returns to the invoking function the database block size in words, the Data Definition version and size stamp, and an indication whether the database is native to the application computer platform. It is now the application responsibility to accumulate and determine the maximum block size and data definition size stamp prior to calling the Block Allocation function. Databases created before the 2001.0.5 MSC Nastran release were created with a block size of 1024 words and no Data Definition Language is contained within the MSC Access database. Old MSC Access databases are completely functional with this release of the DBIO library, provided they are resident upon the native platform. Also, existing applications should be able to function with the default setting of MSC Nastran, provided that extremely large data base are not encountered. Access Block (Page) Allocation Two routines PAGCFGX (PAGCFG V4 –2001.0.3) and PAGCLR are provided for memory management. Both of these routines were added to the DBIO library for the Version 4 release of MSC Access and have been available since Version 66 of MSC Nastran. Prior to Version 4 of MSC Access, block management was the responsibility of the application programmer. Several problems were encountered by application programmer block management. Among these were: Difficulty in tracking memory assignments between subroutines Poor utilization of memory3. Poor performance in database dictionary processing because every object processed required dictionary access Random entry usage caused unnecessary physical I/O. MSC Nastran Access Manual General Access Database Processing38 Main Index 5. Higher physical I/O leading to increased cpu time spent in function. To alleviate these problems, a memory management scheme was added to the DBIO library using block pooling and dictionary caching. Both are initiated with an application’s call to the routine PAGCFGX (PAGCFG). As a result, all DBIO routines have been changed to communicate through the labeled common DBCXXX.Other controls have been added in the SYSFIL labeled common. These, however, should not be used or changed by an application program. The only exception allowed is the first variable of the block when the PAGCFG routine is used. This variable is the FORTRAN unit number used for output error messages. A different value, if a unit other than six is required, must be assigned before calling PAGCFG. The value of six is assigned by the inclusion of the block data routine GRSPBD (V4 –2001.0.3). The PAGCFGX replaces the PAGCFG subroutine starting with Version 2001.0.5. The argument list is similar to the old routine PAGCFG, and indicates the usage algorithm for the memory resource area. The new function also removes the requirement for the application to modify the SYSFIL labeled common and requires additional parameters for the data definition language interface. The example in the call below illustrates the old PAGCFG environment: CALL PAGCFGX (6,1,100000,1024,0,0,0,IRET)the first argument (with a value of 6) indicates the FORTRAN unit for error messages. The second, (with a value of 1) gives the starting position in the memory area allocated by the DBCXXX labeled common area. The value must be a positive, nonzero value. For values greater than one, block management is established at the offset value, and the memory space between one and the offset minus one is reserved for application program use. Conversely, if the size of DBCXXX is larger than 100,000 words, the page pool will not exceed that specification, and space above that index is available for the application. The third argument gives the number of words available beyond the starting value. In this example there are 100,000 words available. This is also the dimension of the array in the DBCXXX labeled common. The minimum value recommended for this argument is 15,000 words when the block size is 1024 words. Refer to 5.2.1, Memory Allocation, for sizing issues of the area for block size greater than 1024 words or when DDL is present. The 15,000 word memory allocation can lead to excessive physical I/O when true random processing of objects is performed and should only be used to process a single database in a linear unloading operation. This area should be as large as possible especially when multiple databases are processed or when many objects are open simultaneously. The fourth argument is the maximum block size in words for all of the databases. In previous releases it could not exceed the 1024 value. Starting with Version 2001.0.5, the maximum size recommended and enforced by MSC Nastran is 65,536 words. Past MSC Access databases created by the DBC module of MSC Nastran used the 1024 word value for their block space requirements. The use of this value is still strongly advised for legacy issues, but when larger models are processed, the larger block size is necessary. The fifth argument (value 0), indicates that no Data Definition Language (DDL) process area is needed. Databases created before MSC Nastran 2001.0.5 did not embed DDL into the MSC Access database, however, the utility program, DDLADD, can embed the version specific DDL and allow for heterogeneous platform processing. The sixth argument (value 0) specifies the use of default values to reserve part of the available block management area for dictionary caching. The current method selected indicates 10% of the pool, or three\n39 CHAPTER 5 Accessing The Database Main Index blocks, is reserved for dictionary caching. This is satisfactory for single database processing. Normally, three or four blocks are required for an effective dictionary cache. For multiple database processing, the application can increase this value beyond ten percent. T wo methods are available. The first specifies the number of databases to be processed as a positive argument value. The other specifies the number of blocks to reserve as a negative value. It is the responsibility of the application to determine that the requested space exists within the DBCXXX array bounds. The seventh parameter is an indicator whether any of the database encountered were not native to the current computer platform. Additional memory is allocated for translation operations when the database is not machine native. The last argument IRET is an error return from PAGCFGX. A zero value indicates successful establishment of the block management area. The return of nonzero values, documented in the subroutine descriptions in Appendix A, should cause the application to abort because the block management area could not be established. MSC Access block management establishes a linked list of information in the control areas defined in DBCXXX. Priorities assigned to blocks before physical I/O has occurred are based on both a last reference criteria and the need to reuse the area. It is important to note that the write and close routines do not cause physical I/O to the database immediately. However, immediate physical I/O can be forced by an application in one of two ways. The first is a call to the DBCLOS routine to close the database from an operating system perspective. The closure of the database requires the completion of all outstanding output requests before the database can be closed. The second option is to use the PAGCLR routine. The PAGCLR call requests the completion of all outstanding output requests to all open databases. This option allows continuation of the application from the point of the PAGCLR call. OPEN/CLOSE of an Access Database This action must occur before object activity commences. The DBOPEN function also performs individual DBVALD operations to ensure that the block manager configuration has been properly specified and the database open designation is correct. The DBCLOS operation ensures that the database control information is valid on the physical file before a system release operation is performed. Opening the Access Database The open function is performed by the DBOPEN procedure. An additional argument was added to the DBOPEN routine at the Version 4 release. It is used to pass a character variable representing the database name using the operating system file naming conventions. This information is passed as the FILE= parameter to the OPEN statement of FORTRAN 77. This simplifies the connection between physical database and logical database references for operating systems that do not support indirect file assignment in their job control languages. The number of simultaneously open logical databases allowed has been increased to thirty at the Version 2001.0.5 release from the twenty allowed in prior releases. The basic I/O operations are now performed by C Language interfaces to allow for large addressing on all platforms.\nMSC Nastran Access Manual General Access Database Processing40 Main Index Closing the Access Database It is the responsibility of the application program to close the database when it is no longer required.\nAlthough FORTRAN closes all open files before terminating, the contents of a database that is closed as a result of the execution of a FORTRAN STOP or END statement is incomplete and unpredictable. The database dictionary is not updated and all outstanding output requests are lost. The close function is performed by the DBCLOS procedure. The functions of DBCLOS are as follows:\nProcess all outstanding output requests to the database(s) with a PAGCLR call. Update the database dictionary.3. Return scratch blocks assigned to the database for reuse.4. Close the database.5. De-link the database from the block manager and re-establish any block linkages. Access Database Dictionary Inquiry Three procedures are provided to query the contents of the database: DICENT, DICPRT , and DICRDR. DICENT DICENT recovers the information stored in the database dictionary sorted in ascending order for each entry.\nDICENT returns optional database global information in the following format for versions before 2001.0.5. DATA BASE BLOCK SIZE ==================1024NUMBER OF ALLOCATED DISK BLOCKS======100000NUMBER OF UNUSED BLOCKS ==============99853NUMBER OF USED BLOCKS ================147START OF DEAD BLOCK CHAIN =============0BLOCK NUMBER OF DICTIONARY PI =========2NUMBER OF FILES ON THE DATA BASE ======48LAST ASSIGNED INTERNAL FILE NUMBER ====48BLOCK NUMBER OF FIRST DICTIONARY DB ===3NUMBER OF DICTIONARY DATA BLOCKS =====2NUMBER OF DICTIONARY PI BLOCKS ========1BLOCK NUMBER OF FIRST DICTIONARY SI ===4FORTRAN UNIT ASSOCIATED TO DATA BASE ==40DATA BASE OPEN MODE FLAG ==============2LENGTH OF DATA BLOCK NAMES ===========12LENGTH OF DICTIONARY ENTRY (IN WORDS) =12 41 CHAPTER 5 Accessing The Database Main Index TOTAL DICTIONARY ENTRY LENGTH ========24 OFFSET POINTER FOR DICTIONARY BUFFERS =1 After version 2001.0.5, additional information concerning the Data Definition Language used and the location of the data base has been included. DATA BASE BLOCK SIZE ==================1024 NUMBER OF ALLOCATED DISK BLOCKS =======16777215NUMBER OF UNUSED BLOCKS ===============16777119NUMBER OF USED BLOCKS =================96START OF DEAD BLOCK CHAIN ============= 0BLOCK NUMBER OF DICTIONARY PI ========= 2NUMBER OF FILES ON THE DATA BASE ====== 32LAST ASSIGNED INTERNAL FILE NUMBER ==== 32BLOCK NUMBER OF FIRST DICTIONARY DB === 3NUMBER OF DICTIONARY DATA BLOCKS ====== 1NUMBER OF DICTIONARY SI BLOCKS ======== 1BLOCK NUMBER OF FIRST DICTIONARY SI === 4FORTRAN UNIT ASSOCIATED TO DATA BASE == 40DATA DEFINITION LANGUAGE VERSION ====== 0DATA DEFINITION LANGUAGE CODES ======== 0DATA BASE OPEN MODE FLAG ============== 1BLOCK CONVERSION FLAG ================= 0LENGTH OF DATA BLOCK NAMES ============12LENGTH OF DICTIONARY ENTRY (IN WORDS) =12TOTAL DICTIONARY ENTRY LENGTH ========= 24 DICPRT DICPRT prints the database control values as DICENT does above as well as the individual dictionary entries on the default output file. DICPRT prints the dictionary entries in the format shown below. CQD4 1 0 1 0 0 0 0 0 0 0 13 1 39 40 12 85 1 42 1 1 42 40 EDGE 0 0 0 0 0 0 0 0 0 0 16 2 0 48 0 0 0 1981990 0 48 The first line in each entry represents the twelve -word name as discussed in the data block naming conventions in Section 4.1. For the HK Method: The second line contains the following information:\nMSC Nastran Access Manual General Access Database Processing42 Main Index\nInternal block number Data block format3. Block number of the primary map for the object4. Block number of the first data area of the object5. Number of words per entry, keyed objects only6. Maximum number of records per block, keyed objects only The third line contains the following information: Minimum key value, keyed objects only2. Either number of entries for keyed objects or number of words for sequential objects3. Number of data blocks4. Number of secondary index blocks5. Maximum key value, keyed objects only6. Block number of the last data block For the BBBT Method: The second and third lines can be optionally suppressed by the application. DICRDR DICRDR returns the control information for a dictionary entry when the entry exists on the logical database. Allocating/Freeing Access Objects Opening Access Objects All objects must be allocated or opened before they can be accessed. Allocations are performed with one of the open procedures. Objects must be allocated with one of the following routines: OPENC Creates a keyed object OPENR Opens an existing keyed object for update OPENS Opens a sequential object for reading or writingOPENSQ Opens a keyed object for sequential processing Sequential objects are only opened by the OPENS routine. All data block capabilities are available to sequential objects allocated by OPENS. New keyed objects are created using the OPENC routine. Objects allocated by OPENC may also perform reads from and writes to the object. Existing keyed objects are opened only by the OPENR or OPENSQ routines. All data block capabilities except creation are available. 43 CHAPTER 5 Accessing The Database Main Index The number of objects that may be open simultaneously has been expanded to thirty at Version 2001.0.5 from the twenty logical files in previous releases. Closing Access Objects When the object is no longer needed, it must be freed in order to reuse its assigned block space. Objects are closed and logical files are freed with the CLOSGR procedure. Working Access Object Entries The objects found on the Access database occur in two distinct types, keyed objects or sequential objects. Both types may be read from or written to the database. All input/output operations are performed with the read/write procedures. Object Entry Read Procedures The following read procedures are available: READBS Reads the previous entry based on the current object cursor position. READR Reads an entry based on the key value from a keyed object READS Reads information from current cursor in a sequential object READSQ Reads the next entry based on the current object cursor position Sequential objects can only be read by the READS routine. Keyed objects must be read with the READBS, READR, and READSQ routines. Object Entry Write Procedures The following write procedures are available: WRITEI Inserts or updates entries in a keyed object WRITES Writes to a sequential object from last cursor position. Sequential objects can only be written with the WRITES routine. Keyed objects can only be written with the WRITEI Object Entry Deletion An entry from a keyed object can be removed by the DELREC procedure. Access Purge Object An object can be deleted from the database with the GRPURG procedure. Objects being purged cannot be allocated when the purge is attempted.\nMSC Nastran Access Manual Access Database Usage Hints44 Main Index Access Database Usage Hints This section contains useful information about the database. Some of it may appear in other sections of this manual. Memory Allocation With the release of Version 2001.0.5 of MSC Access the allocation of memory for the DBCXXX labeled common has become more sensitive to application activities and the issues of variable block size and Data Definition Language presence. The heterogeneous machine issues, along with re-conceptualizations of data control handling also cause additional memory considerations. It is now the application responsibility to pass to the configuration procedure PAGCFGX information concerning the database block size and DDL being utilized. Since the application may call this procedure once during the execution, the database(s) being used must be checked prior to the call by using the DBVALD routine when they are perceived to exist. The application accumulates the maximum characteristics and passes theses as input to the PAGCFGX routine. Since FORTRAN is assumed to be the application development environment, the memory allocated to the DBCXXX array area is presumed to be static, or application compile time specified. The area indicated by parameters of PAGCFGX must be large enough to hold control tables, block management segments and DDL information. The following FORTRAN statements illustrate a conceptual assignment: Integer wrkara,maxbuf,numbuf Parameter ( maxbuf=65535, numbuf=15 ) Parameter ( wrkara=(maxbuf+5)(numbuf+1)+(53)+450)Integer ddlara,noddl,lenddlParameter ( noddl=2000, lenddl=10000 )Parameter ( ddlara=noddl*5 + lenddl )Integer lopencParameter ( lopenc=wrkara+ddlara)Integer opencCommon /DBCXXX/ openc(lopenc) Since the block size for an MSC Access database enforced by MSC Nastran is a minimum of 1024 words to a maximum of 65,636 words, the allocation is based upon the maximum. The remaining unknown for the block work area is the number of blocks to manage. The 15 blocks of the illustration is the minimum for one database operation. One can adjust the number of blocks during the application development using the following considerations. A minimum of three blocks must be available for the database dictionary. When multiple databases are concurrently opened, it is recommended that three blocks be assigned to each dat base to minimized block pooling, however, three is the absolute minimum. The next consideration is the number of objects to be opened concurrently. A safe requirement is again three blocks per object, but a larger number is again recommended when random entry access is being performed. In the above calculation, the numbuf variable is increased by one, to allow for non-native platform operations.\n45 CHAPTER 5 Accessing The Database Main Index The Data Definition Language area is composed of two components. The number of entries and length of the control area. This allocation keeps the entire DDL controls for a database in memory. These controls may switch based upon objects access between databases produced by different MSC Nastran releases. It is still necessary to allocate space for this area even if the database is native to the platform since write operations embed data controls at the block level. The numbers in the above example, 2,000 entries and 10,000 words for control, exceed all released DDL descriptions and should be adequate for the near future. The DBOPEN routine also validates the specific database needs against the configuration assignment and will issues an error return when insufficient resources are available. It should be also noted in the above example, that the total DBCXXX allocation is to be used by the DBIO service routines. Since the above statements indicate the maximum allocation considerations, the actual memory usage can be adjusted after the call to DBVALD is performed. The same considerations concerning the number of blocks apply, however, the block size and DDL size and platform implications are now known. Assuming one database and existing conditions, the proto code would look like: Call DBVALD (iret,dbname,dbnlen,blksiz,ddlsiz,native) If ( iret.ne.0 ) goto errorLenw = (blksiz+5)*(numbuf+native) + (MAX(numbuf+native)/10,5)*3 + 450If ( ddlsiz.ne.0 ) lenw = lenw + ddlara + 200If ( lenw.gt.lopenc ) goto errorCall PAGCFGX (6,1,lenw,blksiz,ddlsiz,0,native,iret)If (iret.ne.0 ) goto error Where dbname is the database name in a character array and dbnlen is the length of the string. Additional assumptions are that numbuf represents the number of blocks desired, as shown above, and that the error message FORTRAN unit is 6. MSC Nastran Type Definition The Path/Qualifier object structure requires the type code to be present. The data type is used in the prototype program SMPLR. The type definitions are: The Path Extension is the second field in the dictionary name. Complex single precision maps real single precision numbers into PATHRS and complex double Integer Code Path Extension Data Type 1 INT Integer 2 RS Real Single Precision 3 BCD MSC Nastran BCD 4 RD Real Double Precision 5 LOG Logical\nMSC Nastran Access Manual Access Database Usage Hints46 Main Index precision maps real double precision numbers into PATHRD. Element Data Recovery Naming Conventions As discussed earlier, the first word in a database dictionary entry for element output data recovery is a combination of a single character and the information specifying the element type. The following table summarizes the current set of first characters used. They occur in the order used to determine recovery data existence by the SUBELEM object. Over fifty percent of the object names in the database are formed with this convention. External versus Internal Object Access Keys The object data structure can be viewed either as a one key table for theHK Method ( pre 2005.1 ) or one to three keys for the BBBT Method. An arbitrary number of rows (entries) is limited by the method selected during the OPENC operation and columns are limited in size by the block length on the PAGCFGX request. Unique keys have been formed to allow easy access of external identifications for either grid or element data qualified by time, frequency, load factor or mode number, as represented by DISPR and SHEXR. This is accomplished by searching either the EQEXING object for external grid identifications or the EQEXINE object for external element identifications. The second word of these objects is an internal key used to access output object content. The remaining information is a list of values such as time for transient analysis corresponding to the requested output specifications. For a list object the first word is a tolerance value. This value can be used to test against a specific value since real values are seldom exact. The tolerance value is the minimum value between any two adjacent steps Character Output Recovery Class S Element Stress Data Recovery F Element Force Data Recovery N Element Nonlinear Data Recovery H Element Hyperelastic Stress Data Recovery E Element Strain Data Recovery T Composite Element Laminate Stress Data Recovery G Composite Element Laminate Strain Data Recovery D Element Discontinuity Data Recovery Q Element Gradient and Flux Data Recovery U Element Strain Energy Data Recovery K Element Kinetic Energy Data Recovery B Element Energy Loss per Cycle Data Recovery\n47 CHAPTER 5 Accessing The Database Main Index divided by ten. Once the relative position is determined, the values are combined to form the output object access key for the HK Method. The derived access key is valid for all output tables of the same type. For example, a grid access key formed for displacement can be used to recover gird point forces and grid point stresses. The combination rules are a function of output recovery. When the object was formed using the BBBT Method, the object key can be from one to three words. The above values are passed as an array in the key parameter location. The first word of the key will always be the internal index derived from either EQEXING or EQEXINE in the normal manner. The last term, when necessary, will always be the list position value. The intermediate key when present is termed an associated value. An example would be the ply identification for a composite element. When using the DISPR, displacement recovery object, as an example, the key designated by GKEY is a single value for statics analysis and two terms for transient analysis. When two terms, all remaining entry items are displaced by one word with the existence of the list position value now part of the entry. The following table identifies analysis solutions with their corresponding tables and factors. The name changes between MSC/GRASP and MSC Access formats allow multiple data recovery formats to coexist in the same data base. The statics factor permits increased storage capacity for the object. All objects above except MODE and SHAPE are real values. MODE and SHAPE are integer values. For the associated modal information, examine the LAMA object for real eigenvalue recovery, LAMC for complex eigenvalue recovery, and LAMB for buckling solutions. The access key factor is stored within each object as the 0 key entry. Starting with MSC Nastran Version 67.0, the Sort 2 storage for linear statics is available with a default factor of 1000. Starting with MSC NastranMSC Nastran Version 70.5, the access factor became a dynamic value and is related to the number of entries of the output control list. The reason for this activation was to increase the number of entries per output object. One should always attempt to recovery the object access factor, and when not present, then utilize the values in the above table. The BBBT Method of object storage does not use the object factor. Access Object Capacity Limit Derivations The amount of information that can be stored in an object is a function of the block size specified on the PAGCFGX call and the length of an object entry. All HK Method keyed objects use a three -block hierarchical mapping technique. The first block is called the Primary, then next the Secondary and the place the entries are maintained in ascending collated sequence is called the Data Area. Analysis MSC/GRASP MSC Access Object Factor Object Factor Statics 10000 SUBCASE 1 T ransient OLB1 10000 TOL 10000 Frequency OLB1 10000 FOL 10000 Modal OLB1 10000 MODE 10000 Nonlinear OLB1 10000 NLLF 10000 Buckling OLB1 10000 SHAPE 10000\nMSC Nastran Access Manual Access Database Usage Hints48 Main Index The control overhead is listed in the table below. To calculate an object capacity, one first subtracts the Block overhead from the block size. The remaining words in the Primary or Secondary block types are then divided by two. The remainder for the Data Area is divided by the size of the object entry. Note object entry length can be determined from the output of either the DDLQRY or DDLPRT utility programs. Assuming the old default block size of 1024 words, the Primary block can map into 495 Secondary locks. Each Secondary Block can map into 510 Data Areas. This results in a maximum of 252,450 Data Areas capable of being mapped. The overhead for each Data Area is four words. For the example, this leaves 1020 words available for entry information. Since entries cannot span Data Areas, only an integer number of entries are possible. For example, the DISPR object, representing displacements in real data recovery, consists of seven words per entry. Therefore, 145 entries can fit into one data block. The maximum number of DISPR entries for one superelement is (145)(252,450) = 36,605,250. Since each object contains a different length data entry, the maximum limits differ for each object. One can also observe that objects using list associated poaitions reduce the limit to the number of access keys available. Another condition influencing capacity is the entry insertion order. For information stored in ascending sequence, the capacity limit is achievable. However, a random insertion sequence reduces the limit by up to twenty -five percent. The above discussion is dependent on the use of the default block size of 1024 words. For all MSC applications, the block size has remained constant until Version 2001.0.5. For non -MSC applications, the default block size was the maximum size allowed. Smaller block sizes were allowed. However, interaction with older MSC products may not be possible with different block lengths. The Version 2001.0.5 products automatically adjust themselves to the database block size and will function properly if the size is less than or equal to the PAGCFGX specification. The current release, Version 2001.0.5, has raised the limits to the number of blocks and the maximum block size allowed. The maximum of 65,535 words per block is current enforced by the MSC Nastran system, however, for the DBIO system there is no longer an upper limit other than that specified as the maximum in the PAGCFGX function. The previous database size was a limit of 68gb per database and a maximum object limit of 1gb per object. By changing the block size a 8.5tb data base is achievable at the 1024 words per block. The 65,536 words per block allows for a conceptual object of 68gb and a database of 560tb to be formed. Note, that the 32-bit limit of the access key for the object using the HK Method is now the limiting feature Performing the object entry calculations again for the 65,536 block size, and again using the DISPR object as the example, yields the following capacity. ((65,535-25)/2)((65,535-3)/2)*((65,535-4)/7) = 10,046,696,339,130 entries This is limited by the maximum 31 bit integer of 2,147,483,647. Note since some objects utilize negative access keys, the total number of possible entries can be doubled.Block Type Overhead Primary 25 Secondary 3 Data Area 4\n49 CHAPTER 5 Accessing The Database Main Index When the BBBT Method is used for object formulation, the list is normally a 31 bit limit to each of the key values. The capacity of the DISPR object now has been increased by this method to 2,147,483,647 grids per superelement and 2,147,483,647 list position values. The same range is available for the associated key. Special Key Usage The DBIO subroutines do not require entry keys to be positive values. Under normal conditions, the access keys are changed to positive values by an application program. However, some HK Method objects, like SBRXR use zero and negative access keys to control internal linked lists. SBRXR uses negative access keys to maintain the open -ended structure for Bar Station Stress Data Recovery. Use of negative access keys is described in the DBC module description in the MSC Nastran Programmers Manual. Negative access keys aid the translation from the MSC Nastran internal file structure to the table structure used by MSC Access. When an object requires additional information for processing, an entry with a special access key is provided to hold this information. These entries use the same data definition as any other entry in the object. All real and integer fields are maintained. However, the entry item is defined differently. For example, the -1 key used in the EQEXINE object returns an entry containing the maximum number of elements of a specific enumerated class. This value is used to develop and maintain the element internal access key. The zero key entry for the EQEXINE object using the HK Method of storage contains the factor for encoded element types. Another example is the GPFP (Grid Point Force Pointer) object only formed during the HK Method of storage. Positive entry keys define internal grid access keys that associate reference keys in the GPFV (Grid Point Force Value) object containing the linked list of component values associated with the grid. The -1 key within the GPFP object returns the maximum reference key used in the GPFV object. This usage allows for updates between the coupled tables. A critical use of the special -1 key is found in the Stress Data Recovery objects for two- and three -dimensional elements. Here, word five of the special key entry contains a flag value indicating the type of shear assigned to the element. A zero value indicates octahedral shear, while a value of one indicates either von Mises shear or maximum shear depending on the element. Add info concerning strain, matid, etc. Special Number Usage The value of -1 has another special usage. Objects output from the pre-processor phase of the analysis use the integer -1 value in both real and integer entry items to indicate null data. These objects include element connections, loads and constraints. For example, when only the eight corner grids are present in the CHEX object, all mid -side item locations are flagged with -1. For the CQDR object, if the corner thickness is not present, they are also flagged by -1. This usage attempts to differentiate between calculated values of zero and values not present or available. This requires an application to test all relevant fields for -1 and take appropriate action based on content instead of performing computations immediately on the content.\nMSC Nastran Access Manual The CBAR, CBEAM, and CGAP Objects50 Main Index The CBAR, CBEAM, and CGAP Objects In processing these objects, the orientation sequential or grid areas are of interest to the application. The Data Definition Language uses EITHER/OR clauses based on real or integer values stores to describe these areas. A machine -dependent logical function ISINT was written to determine if the specified field is integer or real.\nDuring product testing, it was determined that this function was impossible to implement as designed with some machine architectures. An alternate method is being designed. In the meantime, the correct structure can be determined by examining the second and third words in the orientation area of the entry. If both words have a value of -1 (minus one integer), then the orientation grid definition is used to determine the plane of the neutral axis. if the condition is not met, then an orientation sequential of real values is defined. For example, the CBAR object described in Appendix B describes words five through seven as follows:Note: Items 5 to 7 are defined as either: 5 GO ORIENTATION GRID6 UNDEF 7 UNDEF or 5 Xl ORIENTATION Sequential DIRECTION 16 X2 ORIENTATION Sequential DIRECTION 27 X3 ORIENTATION Sequential DIRECTION 3 based upon an integer value test of these fields.Words 6 and 7 are tested for the integer value -1. If both items contain -1, then word 5 contains the integer orientation grid (GO). For all other cases, words 5 through 7 contain the real orientation sequential directions.\nMain Index Chapter 6: Interfacing to The Data Definition Language (DDL) 6Interfacing to The Data Definition Language (DDL) Overview 52 The Data Definition Language 52 Starting the Data Definition Language Interface 53 Version Matching DDL to Analysis Database 55 Using Attribute Definition Functions 57 DDL Control Entry Description 58\nMSC Nastran Access Manual Overview52 Main Index Overview Starting with MSC Access Version 2001.0.5, additional application routines have been provided for client written applications to interface to the Data Definition Language imposed upon the objects during the DBC module translation of the MSC Nastran analysis model. These subroutines allow applications to be written to dynamically conform to the object construction for a specific MSC Nastran release. The DDL database has been provided as part of the MSC Nastran delivery since Version 68.0. The primary reason to utilize these functions is to reduce application maintenance between MSC Nastran releases. The interfaces provide:\nConstruction of object dictionary entries from name and environment Determination of object entry token via keyword rather than enumerated position3. The binary typing of a token within an object entry for formatting4. The mapping between object names and surrogate keys5. The abstract typing of an object key Note that these interfaces utilize the DBIO layer previously described as a basis and that the Data Definition Language database has a MSC Access format, which implies that all utility programs can conformably handle the database content. The Data Definition Language The Data Definition Language used by MSC Access is used to abstract the MSC Nastran data model and to facilitate the usage of utility programs to format and transfer the database information. Further extensions allow for schema mapping to arrange the object entry tokens into mathematical groups that allow transformation of coordinate systems of the vectors and symmetrical tensors. When using keywords, then applications are not tied to specific enumerated positions within the object entries and can better react to changes between version releases of the software and changes to the data model. The MSC Access Data Definition Language The basic format of the Data Definition Language File is that the file starts with the version designation structured as primary.secondary version. The sections of control information are defined. Considering MSC Access, the DEFINE(section) would be the attribute mapping for the dictionary entry. Then the specific objects are described. There are two classes. The “RECORD” which indicated that the entries are keyed and “ARRAY” which indicates a repeating primitive group of token. Each class is terminated by the keyword “EOR”. The “RECORD” class allows for additional syntax to define how the token descriptions are processed. A token description takes the form: Name ,Type ,Description , Where Name is termed the keyword associated with the token at the entry location. Note that a token keyword can be located at multiple positions in an entry due to layering or recovery point repetition. The Type is the binary class, such as Integer or Real. The Description is the words in the dictionary used to describe the token or keyword. "},"title":"User's Manual P3"},"/docs/access_user_manual/msc_nastran_2024.1_access_user_manual_004/":{"data":{"":"53 CHAPTER 6 Interfacing to The Data Definition Language (DDL) Main Index Other syntax controlling repetition is the ENTRY/ENDENTRY clause. This clause either repeats COUNT times or terminates with an ENDKEY=position,value. Another clause is EITHER/OR groups which use best match or specific value tests. The Data Definition Language file and the compilers are currently not delivered as part of the MSC Access delivery since proper formatting and consistent product builds are necessary for cohesive MSC Nastran data model distributions between the various software components. Formatted copies of the delivery DDL can be obtained using the DDLQRY and DDLPRT utility programs. For illustration purposes, the DDL for the Title, Subtitle and Label object called SUBCTITL is presented. VERSION 2001.0 DEFINE (ATTR) PROJECT(M)=1, PATH(SS)=3,…EORRECORD=SUBCTITL,ATTR(M,SS,APP), TITLE( CASE CONTROL TITLE SUBTITLE AND LABEL INFORMATION ), NDB(OES1,OES2,…) SUBCASE,I,SUBCASE NUMBER , ENTRY,STITLE,A,SUBCASE TITLE INFORMATION , ENDENTRY,COUNT,32, ENTRY,SUBTIT,A,SUBCASE SUBTITLE INFORMATION , ENDENTRY,COUNT,32, ENTRY,LABEL,A,SUBCASE LABEL INFORMATION , ENDENTRY,COUNT,32,EOR Starting the Data Definition Language Interface Before starting the interface, the standard MSC Access operations for an application layer must be performed. These consist of possible DBVALD calls followed by the required PAGCFGX call to establish the memory management area for MSC Access. The next determination by the application program is which logical database to assign and open before the DDL interface is initiated. It is recommended that a “high” logical data base number be used, for example30, thereby leaving 1:29 available for application usage and to eliminate the DDL reference for the priority searching ( See DBFLOC). Once the logical database is opened, the function MSCLDD will establish the memory model for the database and return a logical file handle to the DDL control entry object. Note that the database and logical\nMSC Nastran Access Manual Starting the Data Definition Language Interface54 Main Index file should remain open during the duration of the application and that both should be closed upon termination of the application. When an application needs to change definitions, first the logical file is closed, then database is closed and released, then a new DDL data base can be opened and activated. There is a current restriction that the DDL interface is singular, that is, only one definition is active at a time and data definition mixing is not currently possible. The following algorithm shows the basic logic diagram for each of the examples in this section. Labeled Commons Populated by Function MSCLDD When the MSCLDD returns a successful completion code, seven labeled common areas will have been populated to be utilized by the remaining DDL application interface functions. These common specifications are presented in Appendix B. These common names and contents are: Name Variables Type Content Description MSCDLP DDLDB DDLMAPRELNUMKEYNUMWRDNUMInteger“”“”“”“”Logical Data Base for DDL informationLogical file associated with DDL control informationNumber of objects in the DDLNumber of token keywords usedNumber of words in the dictionaryData Base Validation Block ( Paging ) Management ConfigurationData Base OPEN \u003c- for DDL Close DDL mapping object Data Base CLOSE \u003c- for DDLDetermine Version and DateDetermine attributes used by objectsInquire DDL for objects\n55 CHAPTER 6 Interfacing to The Data Definition Language (DDL) Main Index There are three logical groups of information. These are “REL” relating to the object names, “KEY” relating to the keyword names; and the rest, “DIC” which is the dictionary of the remaining words. The “NUM” part indicates the number of items in the group. The “PTR” represents the index to the start of the word. The difference between the indicated position and the next entry in the list is the length in characters of the word. The “DIC” areas are where the characters for the words are located. These represent minimum tables to accumulate and differentiate the categories of word classes. The database form is further abstracted to allow for MSC.TRANS/RECEIVE operations on the DDL database, which represents the normal delivery form. There are additional functions that can be used to recover indices related to a topic, such as the object description and then translate the indices into a text line for printing. Usage of Word Index Functions There are application interface functions which are available to manipulate the word index structures of the MSC Access Data Definition Language. These are defined in detail in Appendix B. Briefly these are: MSCDLC Concerts a character string of a class into an enumerated value MSCASM Assemble a text string with words delimited by a character and filled to end of string by an additional character MSCPPT Recover the word enumerated list associated with a topic MSCPTX Converts a class enumerated value into a character string Some of the topic areas are defined in the DDL control entry. Examples are the title and MSC Nastran data blocks used during the DBC translation. Examples of their usage are presented in Chapter 10. Version Matching DDL to Analysis Database Since the Data Definition Language and analysis databases are two different physical files as a minimum, it is the responsibility of the application to verify compatibility with respect to versioning. Normally, the object description remains stable from release to release, with just the number of available objects, increasing content, being the primary changes. The past philosophy has been to append new tokens to the end of existing entries whenever changes of that nature occur.MSCDPR MSCDCRRELPTRRELDIC IntegerCharacter Indices to the object wordsObject names in character packed format MSCDPKMSCDCK KEYPTRKEYDIC IntegerCharacter Indices to the keyword wordsKeyword names in character packed format MSCDPWMSCDCW WRDPTRWRDDIC IntegerCharacter Indices to the dictionary wordsDictionary words in character packed format\nMSC Nastran Access Manual Version Matching DDL to Analysis Database56 Main Index The most volatile aspect in maintaining the Nastran data model has been the attributes necessary to differentiate objects. From the first release, three basis extensions have been instituted. These additions consist of the Approach attribute, V66 or MSC/GRASP to MSC/XL circa 1989; the design cycle attribute for optimization, V67 circa 1991; and finally the p-element iteration level, V68 circa 1994. Starting with 2005.0 a segment attribute was assigned to model information related to cyclic symmetry analysis. When these analysis techniques are not used, the default value for the attributes is zero, see Sections 4.1.8 and 4.1.9. There is no default for the approach attribute since MSC/GRASP translation is conceptually unsupported. When internal object description is desired, then versioning “might” be ignored, and the latest release used since it encompasses the most robust object descriptive content. When attributes are desired, then attempting to match the release level become more important. To determine the Data Definition Language release level and date of the release, the function MSCVDR ( see Appendix B ) has been provided. It will return the DDL version in two integer variables, the primary version and the sub-version of the release. Since MSC/NASTRAN release V68.0, the DDL versioning has followed the Nastran release enumeration. For V68.0, the primary version would be 68 and the sub-version would be 0. When MSC Nastran created an analysis database via the DBC module, the PRODUCT object is created. In the past, multiple MSC products used the MSC Access database to maintain and pass information. These were MSC/EMAS and MSC/DYTRAN. The support for these products has been discontinued for a number or years due to sales of the capability or alternate path developments. Therefore the PRODUCT NAME area of the PRODUCT object should contain the BCD values of NASTRAN. Example of the PRODUCT Object recovered via DDLQRY for Version 2001.0.5 Description: PRODUCT DEFINITION Qualifiers: None DB Used: None Record Structure 1 PNAM1 A PRODUCT NAME 2 PNAM2 A PRODUCT NAME 3 PVER A PRODUCT 4 MONTH I MONTH 5 DAY I DAY 6 YEAR I YEAR 7 MCOD I MACHINE CODE 8 VENDOR A MACHINE VENDOR 9 VENDOR A MACHINE VENDOR 10 VENDOR A MACHINE VENDOR 11 VENDOR A MACHINE VENDOR 12 VENDOR A MACHINE VENDOR 13 MODEL A MACHINE MODEL 14 MODEL A MACHINE MODEL 15 MODEL A MACHINE MODEL 16 MODEL A MACHINE MODEL 17 MODEL A MACHINE MODEL\n57 CHAPTER 6 Interfacing to The Data Definition Language (DDL) Main Index 18 OPSYS A MACHINE OPERATING SYSTEM 19 OPSYS A MACHINE OPERATING SYSTEM 20 OPSYS A MACHINE OPERATING SYSTEM 21 OPSYS A MACHINE OPERATING SYSTEM 22 OPSYS A MACHINE OPERATING SYSTEM 23 SVER A PRODUCT SECONDARY VERSION It should be noted in the above definition that the PRODUCT VERSION and PRODUCT SECONDARY VERSION are defined as A or BCD values. The SVER was added in version 2001.0 for MSC Nastran due to the construction of BCD as four characters, left justified, blank filled as the type definition. In earlier releases, the PVER was sufficient to maintain the literal of “70.5”, for example. The technique an application should employ were interpreting this object between release levels is to first use the DICRDR function to determine length, that is 23 words or less. When 23 words, then SVER exists, otherwise on PVER is available. T o make comparisons, the PVER needs to be interpreted, so that a primary and secondary values of comparable format are constructed. Using Attribute Definition Functions Two functions are available for working with object attributes. They both employ the concept of an attribute environment vector. The definition appears in the following table: Vector PositionAttribute LocationAttribute Definition 1 3 Project 2 4 Superelement 3 5 Path 4 6 Subcase 5 7 Set Identification 6 7 Surface Identification 7 7 Volume Identification 8 8 Approach 9 9 Design Cycle 10 10 P Iteration 11 6 Aero Mach, Q and Symmetry enumeration 12 7 Aero configuration 13 7 List Identification 14 4 Component Identification 15 11 Segment\nMSC Nastran Access Manual DDL Control Entry Description58 Main Index Since positional order is important, this should be either an array or variables ordered in a common block to maintain relative displacements. Once the environment vector has been initialized, the function MSCLRA can be used to complete the database dictionary entry for an object. An additional function MSCTFA has been provided to test if an object uses a specific attribute to qualify the database dictionary entry. DDL Control Entry Description The DDL control entry is twelve words in length and is defined below. Working with the DDL control entry An Object Surrogate Key is the translation of the object name, for example DISPR to an enumerated value via the MSCDLC function. The “REL” tables would be used during the conversion: SKEY = MSCDLC (‘DISPR’,5,RELPTR,RELNUM,RELDIC) A standard READR execution against the logical file DDLMAP would then recover the DDL control entry for the object: CALL READR (DDLMAP ,CREC,SKEY,IRET) where CREC represents the twelve word entry described above. Once this entry is obtained various topics can be examined. If the object title is of interest, then the function MSCPPT would be used to recover the list. Entry position four represent the starting data pool position while position nine indicate the number of words used for the title and the receiving array size in the application space should at least that many entries. The example call would be: CALL MSCPPT (DDLMAP ,CREC(4),IA,NL)Word Description 1 Surrogate Object Key 2 Pool location for the DDL process codes 3 Encrypted attribute code and object class information 4 Pool location for the Title 5 Pool location for the Nastran Data Blocks used 6 Number of words in DDL control area 7 Number of token for keyword descriptors 8 Number of test values used 9 Number of tokens used for the title 10 Number of tokens used for the Nastran Data Blocks 11 Not used 12 Not used\n59 CHAPTER 6 Interfacing to The Data Definition Language (DDL) Main Index Where IA is the receiving target array for the title words enumerated values and NL is the number returned which should equal CREC(9). If a standard print line of 132 characters in length was the next operation to perform, the MSCASM function can provide this service. The example: STR = 0 10 CONTINUE CALL MSCASM (LINE,132,’ ‘,’ ‘,STR,IA,NL) IF (STR.LT.NL ) GOTO10 would construct a line of characters with the words separated with a blank character and the line filled to the end-of-line with blank characters when the next word in the list will not fit. The loop structure indicated above represents the possibility that the number of words in the topic may not all fit on one line and more that one line would be necessary to complete the total definition. Working with an Object Entry DDL The MSCPIV subroutine can be used to recovery a memory structure defining all tokens of an object entry. One should monitor the sizes indicated in the DDL object control entry that sufficient space is available for the three possible structures. Note that the token descriptions can be optionally skipped. The three return areas are the binary schema for the entry, a match values area for embedded tests used by EITHER/OR or END,WITH clauses, and the enumerated values of the dictionary indices for the token description. The schema area must be sequential processed to correctly correlate the tokens to their support information. When a positive value is encountered at the current instruction index it represents a token group of four words. They are: When the value “-1” is located at the current instruction index, then a group of tokens are within a repeating structure. This group control is five words in length. The format is:Word Content 1 Index into the Keyword (KEYPTR) array 2 Binary format code 1-\u003einteger 2-\u003ereal 3-\u003eBCD 4-\u003elogical 5-\u003edouble 3 Starting index into dictionary index array 4 Number of dictionary words used to describe the current token Word Content 1 -1 2 Relative Starting Index of group\nMSC Nastran Access Manual DDL Control Entry Description60 Main Index The SUBCTITL object was selected to illustrate how the various information is interrelated. The sample output was obtained from the DDLQRY utility program. In the above example, there are four unique tokens necessary to describe the entry, this is the left most enumeration. The next numeric value to the right is a position index into the entry where the token first occurs. This value is a calculated value due to the possibility of a repeated group control structure. The next word in the line is denoted a keyword, mapped through the KEYPTR-KEYDIC arrays, where one observes that KEYPTR(1519) indicates the word “SUBCASE”. The next is the binary format indicator, where for relative location “1”, the I maps to the enumerated value 1. Since there are two dictionary words used, the token control indicates start in the dictionary index array at position one and use two values. These were 926-\u003eSUBCASE and 654-\u003eNUMBER via the WRDPTR-\u003eWRDDIC arrays. One should observe that since to pointer-word arrays are used, that the enumeration for SUBCASE is not the same in both arrays. When the value “-2” is located at the current instruction index, then a group of tokens are grouped as an EITHER/OR clause. This group control is five words in length and proceeds each group of tokens. The number of tokens in a EITHER/OR clause is identical. The format is:3 Relative Ending index of group 4 The number of repeats of the group 5 Index into values area or zero if not used Word Content 1 -2 2 Relative Starting Index of group 3 Relative Ending index of group 4 The number of token in the clause 5 Index into values area or zero if not used\n61 CHAPTER 6 Interfacing to The Data Definition Language (DDL) Main Index When the index into the values table is zero, then a best match of the binary types is used to distinguish which token group should be used for defining the entry. When a value index exists, then the token before the first group is used to select the match. Note that the value of the token defines the information referenced by the index. This implies that the values area is a masked data array with the various binary forms “equivalenced” over the memory area. An example is: INTEGER IVAL(10) REAL RVAL(10) LOGICAL LVAL(10)EQUIVALENCE (IVAL(1),RVAL(1),LVAL(1)) Note that “A” or “BCD” can be tested with the “IVAL” or integer mask. Working with the DDL and an Object/Entry When working with entry tokens of an object, the associated DDL has two distinct forms. It can be either fixed or variable. Over 95% of the objects have fixed distinct definitions. The variable form is when EITHER/OR clauses are used to describe variable sections within the entry. Therefore two different interfaces exists for the object entries; one requiring the entry and the other not. These are: MSCLRT Load interface for fixed DDL object and locate token by keyword MSCXTI Extract token information by relative position MSCRTI Load interface for variable DDL object, with entry, and locate token bykeyword MSCXII Extract token information by relative position MSCKTY Determine the key type of an object The MSCLRT function should be executed first and it’s return examined to check if the alternate function needs to be utilized due to variable embedded clauses. The MSCLRT function, when successful, populates an internal storage area with the schema that is replaced only when a different object is referenced. Thus additional keyword locates for the object only traverse the saved schema to locate the token format information. While the object definition is active, the corollary function MSCXTI can be used to extract information by relative position. One could simply loop the position from first to last and print the values of the token with their respective keywords. These functions could be considered symmetrical, that is, one locates keywords by name and returns position, while the other, by position, returns the keyword. The MSCLR function returns two additional pieces of information besides the first starting position. These are the count and stride where additional tokens that share the keyword definition exists. Since these multiple values normally occur in an ENTRY clause, the stride tends to be of constant length between terms. An example of such an object is the Stress for the QUAD8 element, which recovers the center and four vertex positions of stress tensor information. The MSCRTI and MSCXII are similar functions except that the object entry is required to correctly activate the correct definition for the current entry. Their usage concept is identical. The MSCKTY function can be used after either MSCLRT or MSCRTI loads the object entry definition.\nThe function returns the type of key the object entry utilizes so that support tables can be references. An\nMSC Nastran Access Manual DDL Control Entry Description62 Main Index example would be a return of “1” would indicate a GKEY usage. This implies that a Access Key formulated by the EQEXING and a qualifying object, such a TOL for transient solution approach, would be used to form the entry key for the current processing environment.\nMain Index Chapter 7: MSC Access Utilities and Demonstration Programs 7MSC Access Utilities and Demonstration Programs Overview 64 The MSC Access Sampler Demonstration Program (SMPLR) 64 The Demonstration Program DEMO1 65 The Demonstration Program DEMO2 65 The Data Definition Language Program DDLADD 65 The Data Definition Language Demonstration Program DDLPRT 66 The Data Definition Language Demonstration Program DDLQRY 67 Utility Program QAPRT 68 Utility Program RECEIVE 69 Utility Program TRANS 70\nMSC Nastran Access Manual Overview64 Main Index Overview The MSC Access delivery contains multiple files which vary from a sample MSC Nastran data deck which can be used to create the Access Database, sample programs, including source code, which illustrates how applications can be developed, executable programs which can format the database content, and program pairs which allows the database to move between dissimilar computer architectures. The following table attempts to delineate the various components, which are further discussed in this chapter, following chapters, and the MSC Nastran Installation and Release Guides. MSC Access Sample Program Source Files Before executing any of the sample programs after the programs have been installed and built, MSC Nastran must be run using the a101x.dat input file. The a101x.dat can be located in Appendix C. The MSC Access Sampler Demonstration Program (SMPLR) The Sample Demonstration Program (SMPLR) attempts to format the popular post-processing data objects such as displacements and element stresses and forces using formats similar to what might be found in a MSC Nastran output file produced by DISPLACEMENT or STRESS output entries in the Case Control Section. Further discussion of the program process flow can be located in Chapter 8. SMPLR can be executed using the “smplr” command. The installed version of the program is run with the command: msc2005 smplrYou will be prompted for the MSC Access database filename.File Type Description a101x.dat data MSC Nastran Data File access script Script to Build MSC Access Sample Programs libdbio.a library Object Library for Application Development ddladd executable Program used to add DDL to old Data Bases ddlprt.F source Demonstration Database Dictionary Print Program. ddlqry.F source Demonstration Database Dictionary Query Program. demo1.F source Source for Sample MSC Access Data Base Reader. demo2.F source Source for Sample MSC Access Data base Reader. makefile make Makefile to Build MSC Access Sample Programs. qaprt executable Program which Formats Content of MSC Access Data Base receive executable Program which Converts Neutral File to Data Base smplr.F source Source for Sample MSC Nastran Database Reader. trans executable Program which Converts Data Base to Neutral File\n65 CHAPTER 7 MSC Access Utilities and Demonstration Programs Main Index Enter the database name to process: a101x.xdb The Demonstration Program DEMO1 The demonstration program DEMO1 formats information contained in a MSC Access database (XDB) produced by MSC Nastran. Since input model information is available in addition to the results by default, the grid locations and element connections are formatted for selected elements. The sample program source code is only provided as a simple example illustrating basic concepts. It is not intended to be a complete or usable program. Further discussion of the program flow and logic can be located in Chapter 9. DEMO1 can be executed using the “demo1” command. The installed version of the program is run with the command: msc2005 demo1You will be prompted for the MSC Access database filename.Enter the database path name:a101x.xdb The Demonstration Program DEMO2 The demonstration program DEMO2 formats information contained in a MSC Access database (XDB) produced by MSC Nastran. Since input model information is available in addition to the results by default, the grid locations and element connections are formatted for selected elements. The sample program source code is only provided as a simple example illustrating basic concepts. It is not intended to be a complete or usable program. Further discussion of the program flow and logic can be located in Chapter 9. DEMO2 can be executed using the “demo2” command. The installed version of the program is run with the command: msc2005 demo2You will be prompted for the MSC Access database filename.Enter the database path name:a101x.xdb The Data Definition Language Program DDLADD The program DDLADD has been provided to update existing MSC Access databases for the Data Definition Language of the creating MSC Nastran release. The process will allow for applications using the 2001.0.5 release of the DBIO library to work with database not created by the native platform. The update must be performed using the DDLADD that matches the current database binary format. That is, when the database\nMSC Nastran Access Manual The Data Definition Language Demonstration Program DDLPRT66 Main Index is on windows, then use the windows version of the application. Once the update has been completed, the application on Unix may reference the database without the TRANS/RECEIVE utilities converting the database to native of the Unix system. See TRANS for discussion of machine compatibilities. The DDLADD program will open the data base in update mode to insert the DDL object as part of the content. Although a preliminary pass through the data base is performed before any re-writes commences, earlier data base versions were not available to verify complete functionality. It is recommended that a copy of the original be maintained until the processing application has verified that the content appears correct. For applications which create their own objects intermixed with the defined MSC Access objects, the DDLADD program will not update the data base. The DDLADD program can be executed with the “ddladd” command. The format of the “ddladd” command is: msc2001 ddladd [target_xdb_file] [keyword]The optional keyword is: ddl=version mode= insert/replace Where version is the specific MSC Nastran version to be embedded. The normal mode is auto-detection from the internal version stamps and data base characteristics. The valid values for the version number are: 670 675 680 681 690 700 705 706 707 20010 20040The version 660 can be used for data bases created earlier than MSC/NASTRAN 66.0, that is MSC/NASTRAN Version 62 through Version 65.\nThe mode keyword is used to override the insert default. When the xdb contains the Data Definition Object, no further operations are performed. The mode=replace will continue operations as long as the objects do not violate the Data Definition descriptions. The Data Definition Language Demonstration Program DDLPRT The demonstration program DDLPRT serves two purposes. First, it provides the MSC Access client release descriptions of the objects produced by the MSC Nastran Data Base Conversion process. It also illustrates how retrieval of the object definitions from the MSC Access Data Definition Language (DDL) data base can be performed by an application program. By using the DDL, an application can “insulate” itself from change to object definition and qualifications as well as understanding the binary type of and item from an object entry. The DDLPRT program can be executed with the “ddlprt” command. The format of the “ddlprt” command is msc2001 ddlprt [ddl_xdb_file] [keywords]If the DDL XDB file is not specified, the program uses the default MSC Access DDL file, install_dir/msc2001/arch/dbc.xdb on UNIX and install_dir\\msc2001\\arch\\dbc.xdb on Windows. The optional keywords are: print=print_fileDefault: ddl_xdb_file.prtThis keyword specifies the name of the print file documenting the format of every MSC Access object. By default, the print file uses the base name of the input DDL XDB file with the new file type “.prt”. Note, the size of this file is approximately one megabyte.\n67 CHAPTER 7 MSC Access Utilities and Demonstration Programs Main Index toc=table_of_contents_fileDefault: ddl_xdb_file.toc This keyword specifies the name of the print file’s table of contents. By default, the toc file uses the base name of the input XDB file with the new file type “.toc”. To execute the program, enter the commandmsc2001 ddlprtThe program displays the filename, version, and compilation date of the DDL file as well as the names of the print and table of contents files. Once these files are generated, the program exits. The print and table of contents files may then be printed once DDLPRT program has completed. The Data Definition Language Demonstration Program DDLQRY The demonstration program DDLQRY serves two purposes. First, it provides the MSC Access client release descriptions of the objects produced by the MSC Nastran Data Base Conversion process. It also illustrates how retrieval of the object definitions from the MSC Access Data Definition Language (DDL) data base can be performed by an application program The DDLQRY program can be executed with the “ddlqry” command. The format of the “ddlqry” command is msc2001 ddlqry [ddl_xdb_file]If the DDL XDB is not specified, the program uses the default MSC Access DDL file, install_dir/msc2001/arch/dbc.xdb on UNIX and install_dir\\msc2001\\arch\\dbc.xdb on Windows. The program displays the filename, version, and compilation date of the DDL data base file and prompts the user for a supported task. The prompt line appears as: Enter T ask (OBJECT ,TOKEN,HELP ,QUIT) :The OBJECT task allows for recovery and formatting of the object attributes and entry descriptions, comprising on item name, binary format and a brief definition. The TOKEN task allows for the identification of which objects match generic description tokens such as STRESSES \u0026 QUAD4. The HELP task provides a brief illustration of the capabilities and QUIT will terminate the program. Since the task names are unique, only the first character is necessary at the prompt. When the OBJECT task is selected, the prompt becomes:Enter Object Name (null to quit)After you enter the name of each object, the format of the object is displayed. The program repeats the prompt until a blank (or null) entry is entered. Valid object names can be recovered from the Table of Contents of the DDLPRT program. When the TOKEN task is selected, the prompt becomed:Enter T oken clause ( null to quit ) :Note that the Tokens are derived from the description area of an object definition. These tokens are separated by the boolean symbols “\u0026” for AND and “|” for OR. The left to right processing of the token and operator\nMSC Nastran Access Manual Utility Program QAPRT68 Main Index allows for joins or intersections of the description tokens. The token can be shorted by a wild character “”, either starting or ending the token. For example, STRESS would match both STRESS or STRESSES. When the search is completed, the list of object matching the join is presented. A single match allows for the complete object definition to be recovered. When more than one match is detected, the descriptions along with the object name can be formatted to the output device. Utility Program QAPRT The utility program QAPRT converts the content of an MSC Access data base (XDB) into a formatted file by object/entry collections. The basic format of the “qaprt” command is: msc2001 qaprt binary_xdb_file [keywords]where binary_xdb_file is the name of the XDB file.Keywordsoutput output=pathnameDefault:binary_xdb_file.qout This option specifies the name of the output formatted filestride stride=skipDefault:0All entries are formatted windowwindow=entries 15Number of entries in window This option specifies how the object entries are to be processed. The default is “stride” with all entries of the object formatted. When “skip” values is one, then every other entry is processes. The keyword of “window” operates upon the beginning, middle and end entries, when the “entries” indicates the number to be formatted in each of the regions. The keywords are mutually exclusive and can both can not be entered on a command line. Contentcontent=min,full DefaultminDDL objects skipped This command, by default suppresses the formatting of the Data Definition Language objects.ddl ddl=bd,xdbDefaultxdbXDB DDL used. The default Data Definition Language which will be used to format the objects will be the one contained in the data base. When none is present, the internal block data area will be used to obtained the format for the version release. ExamplesTo execute the program, enter the following command:msc2001 qaprt example.xdbThe name of the output file isexample.qout\n69 CHAPTER 7 MSC Access Utilities and Demonstration Programs Main Index Utility Program RECEIVE The utility program RECEIVE converts a neutral MSC Access data base file (NDB) into a binary results data base file (XDB) of the target machine. The basic format of the “receive” command is msc2001 receive neutral_xdb_file [keywords]where neutral_xdb_file is the name of the NDB file. If “-” is specified as the neutral format data base file, the file is read from stdin. If the file type of the NDB file is “.ndb”, it may be omitted from the command line. Prior to MSC Nastran V70, the file type was “.ntrl”; V70 changed this to the more portable “.ndb”.Keywordsoutput output=pathname Default: neutrl_xdb_file.xdb This option specifies the name of the binary MSC Access data base file. By default, the output file is the name of the input file with the new type “.xdb”. If the neutral format data base file was read from stdin, the default output filename is “receive.xdb”. A binary XDB file cannot be written to stdout. verboseverbose=yes,no Default:YesOutput is a disk file No Output is stdout. This option specifies whether processing messages are to be written. ExamplesTo execute the program, enter the following command:msc2001 receive exampleThe name of the output file isexample.xdbOn UNIX systems, an XDB file can be transferred directly from a remote system with the following command: HP-UX UNICOS$ remsh node msc2001 trans binary_xdb_file out=- | msc2001 receive - out=binary_xdb_file SUPER-UX$ /usr/ucb/rsh node msc2001 trans binary_xdb_file out=- | msc2001 receive - out=binary_xdb_file All Others$ rsh node msc2001 trans binary_xdb_file out=- | msc2001 receive - out=binary_xdb_file See the rsh(1) man page for further information.\nMSC Nastran Access Manual Utility Program TRANS70 Main Index Utility Program TRANS A MSC Access data base file (XDB) may be exchanged between computer systems that have binary file compatibility as displayed in following Table. Otherwise, the TRANS utility is required. TRANS converts an XDB file that is generated by MSC Nastran to an equivalent character file that can be sent across a network to another computer. RECEIVE converts the character file back into an XDB file for application processing. Binary File Compatibility The following table lists the compatibility of binary files between various computer systems supported by current or previous versions of MSC products. Note that not all of these combinations have been tested by MSC. Please report any compatibility problems encountered to your MSC representative. MSC Nastran Architecture Postprocessor Platform IEEE Byte OrderWord Size Compaq Alpha Compaq VAX HP IBM RS/ 6000 SGI Sun SPARC Intel Cray UNICOSNo Big 64 TR TR TR TR TR TR TR Cray IEEE T90UNICOS Yes Big 64 TR TR TR TR TR TR TR Compaq AlphaUNIX Yes Little 32 Copy TR TR Copy1TR Copy1TRCopy 1 TR Copy1Copy Compaq AlphaOpenVMS Yes Little 32 Copy TR TR Copy1TR Copy1TR Copy1TR Copy1TR Copy1 Compaq VAXOpenVMS No Little 32 TR Copy TR TR TR TR TR Fujitsu VPP , VXUXP/V Yes Big 32 TRCopy 1TR Copy Copy Copy Copy TR Copy1 HPHP-UX, SPP-UX Yes Big 32 TRCopy 1TR Copy Copy Copy Copy TR Copy1 HP C-SeriesConvexOS Yes Big 32 TRCopy 1TR Copy Copy Copy Copy TR Copy1 Hitachi S-SeriesHI-OSF/1-MJ No Big 32 TR TR TR TR TR TR TR IBM S-390MVS/XA, VM No No 32 TR TR TR TR TR TR TR IBM RS/6000AIX Yes Big 32 TRCopy 1TR Copy Copy Copy Copy TR Copy1\n71 CHAPTER 7 MSC Access Utilities and Demonstration Programs Main Index\nCopy indicates that XDB files can be transferred between the systems without using TRANS and RECEIVE programs. 2.Copy1 indicates that using the 2001.1 released version of the DBIO library, the XDB files produced by MSC Nastran can be transferred between the systems without using the TRANS and RECEIVE programs. TR indicates that XDB files must be transferred between the systems using TRANS and RECEIVE programs. With MSC Nastran 2001, SUPER-UX switched from an ILP-64 build to a LP-64 build. This changed the data type from 64-bits to 32-bits, making it binary compatible with other 32-bit, big-endian, IEEE systems, and incompatible with earlier SUPER-UX versions. The first column on the left of the table lists various platforms that run MSC Nastran. The second and third columns list basic architectural features of the computer, specifically whether the computer conforms to ANSI/IEEE Standard 754-1985 (the IEEE Standard for Binary Floating-Point Arithmetic) and byte ordering (big endian or little endian) used by the computer. The remaining columns list postprocessor platforms. Running TRANS TRANS converts a binary MSC Access data base file (XDB) into a neutral data base file (NDB) that may be copied to any other computer. The basic format of the “trans” command is msc2001 trans binary_xdb_file [keywords ] where binary_xdb_file is the name of the XDB file. An XDB file cannot be read from stdin. If the file type of the XDB file is “.xdb”, it may be omitted from the command line. Keywordsalphabetalphabet=number Default:64 Choose the 48- or 64-character conversion table.outputoutput=pathname Default:binary_xdb_file.ndbNEC SUPER-UXYes YesBig Big6432 TR TR Copy 1TRTR TR CopyTR Copy TR Copy TR Copy TR TR Copy 1 SGI IRIX, IRIX64Yes Big 32 TRCopy 1TR Copy Copy Copy Copy TR Copy1 Sun SPARCSolaris Yes Big 32 TRCopy 1TR Copy Copy Copy Copy TR Copy1 IntelLinux, Windows Yes Little 32 Copy TR TR Copy1TR Copy1TR Copy1TR Copy1Copy MSC Nastran Access Manual Utility Program TRANS72 Main Index This option specifies the name of the neutral format data base file. If “out=-” is specified, the neutral-format data base file will be written to stdout. By default, the output file name is the input file name with the new type “.ndb”. (Prior to MSC Nastran V70 the type “.ntrl” was used; V70 changed this to the more transportable “.ndb”.) verboseverbose=yes,no Default:Yes Output is a disk file No Output is stdout. This option specifies whether processing messages are to be written.ExamplesTo execute the program, enter the following command:msc2001 trans exampleThe name of the output file isexample.ndbOn UNIX systems, an XDB file can be transferred directly to a remote system with the following commands: HP-UX UNICOSmsc2001 trans binary_xdb_file out=- | remsh node [-l user] msc2001 receive - out=binary_xdb_file SUPER-UXmsc2001 trans binary_xdb_file out=- | /usr/ucb/rsh node [-l user] msc2001 receive - out=binary_xdb_file All othersmsc2001 trans binary_xdb_file out=- rsh node [-l user] msc2001 receive - out=binary_xdb_file See the remsh(1) or rsh(1) man pages for further information."},"title":"User's Manual P4"},"/docs/access_user_manual/msc_nastran_2024.1_access_user_manual_005/":{"data":{"":"Main Index Chapter 8: MSC Access Prototype Program 8MSC Access Prototype Program Overview 74 Flow Diagram of the MSC Access Prototype Program SMPLR 74 Subroutine Components of the SMPLR Program 80 Common Blocks used by the SMPLR Program 80\nMSC Nastran Access Manual Overview74 Main Index Overview The MSC Access prototype program SMPLR was developed for two main reasons.\nAn example of how to extract data from MSC/XL and MSC Access data bases A starting point in the construction of post-processing programs Major modifications, up to and including complete rewrite, to this code should be expected when writing your own post-processing applications. The MSC Access prototype program does not process all objects of the data base. Objects were selected to illustrate all potential access methods available to retrieve data from the data base. The prototype program, although very long, is relatively straightforward and thoroughly commented. A flow diagram for the prototype program appears in the following Section. This program was developed on IBM/RS6000 using ANSI standard FORTRAN 77. It is included on the MSC Access delivery tape and are intended solely as references for writing MSC Access programs. No guarantees exist for compilation and/or execution on any other machine. Flow Diagram of the MSC Access Prototype Program SMPLR The following flow diagram of the prototype program SMPLR illustrates the major functions and logic used by the program. This program is used to illustrate how application developers using the FORTRAN language could implement their concepts via the MSC Access DBIO routines and the modeling concept used for MSC Nastran. This again is and example, and not all possible output class objects are processed. Also to limit output, only the last Design Cycle and p-element iteration are used as attributes for values of the output object dictionary entries. Later examples are provided illustrating how the interfaces to the Data Definition language routines can assist application developers in automatically determining which objects use what attributes for qualification of their dictionary entries. In addition, when ever an object which contains a possible list of enumerations for attributes is missing, it is normally safe to assume a value of zero for the dictionary entry position. 75 CHAPTER 8 MSC Access Prototype Program Main Index\nMSC Nastran Access Manual Flow Diagram of the MSC Access Prototype Program SMPLR76 Main Index\n77 CHAPTER 8 MSC Access Prototype Program Main Index\nMSC Nastran Access Manual Flow Diagram of the MSC Access Prototype Program SMPLR78 Main Index\n79 CHAPTER 8 MSC Access Prototype Program Main Index\nMSC Nastran Access Manual Subroutine Components of the SMPLR Program80 Main Index Subroutine Components of the SMPLR Program The following subroutines were written for the MSC Access prototype program SMPLR and packaged with the delivered object library. These names may be reused if necessary. NAMEBD OUTELC OUTVOL OUTGPF CLEAR OUTSRF INSERT SMPLROUTGRD FIXUP OUTELRFILTER OUTELM SETFLT Common Blocks used by the SMPLR Program In addition, the following labeled common blocks are found only in theSMPLR prototype MSC Access executable where they are described. Common block lengths are given in words except for PASSAP which is given in characters. Note that all common blocks defined in the prototype program SMPLR reserve memory space for use in other sections of the code. The PASSAP common block contains an array of five elements defined with a FORTRAN CHARACTER*10 type statement.Common Block Defined In Length EXTCOM NAMEBD 3 GRDCOM NAMEBD 6 NAMCON NAMEBD 57 PASSAP NAMEBD 50 (char.) PASSIT SMPLR 6 PASSNM SMPLR 12 PASSQL NAMEBD 5 SEINFO SMPLR 300 TEMP SMPLR 16 WRKSPC SMPLR 10000\nMain Index Chapter 9: Additional MSC Access Example Programs (DEMO1 and DEMO2) 9Additional MSC Access Example Programs (DEMO1 and DEMO2) Overview 82 General Description of the Two Demo Programs 82 DEMO1 Example Program 84 DEMO2 Example Program 99\nMSC Nastran Access Manual Overview82 Main Index Overview These programs were developed on IBM/RS6000 using ANSI standard FORTRAN 77. They are included on the MSC Access delivery tape and are intended solely as references for writing MSC Access programs. No guarantees exist for compilation and/or execution on any other machine. General Description of the Two Demo Programs This section demonstrates the use of MSC Access utilities. The purpose of these utilities, as described in Section 5 of this manual, is the support of the logical functions of block management, open/closing of a data base, data base inquiry, allocating/freeing of data objects, read/write operations, and purging of objects. The first example is a set of procedures for printing the contents of selected objects within the data base. The second example, which prints the same type of data as the first example, contains a more generalized set of procedures. The following algorithm shows the basic logic diagram for each of the examples in this section. In particular, the basic difference between examples 1 and 2 is the technique used to retrieve information from the data base. In example 1, a set of procedures is used to interpret and demonstrate the relationships in the data base. In example 2, the procedures retrieve the qualifiers of the selected objects. The objects retrieved are GRID, ELEMENT, DISPLACEMENT, and GRID POINT STRESS. A graphic illustration of the relationship between objects follows and can be interpreted according to the following convention. The most global objects are on the left margin, and as reads left to right, the more attributes are necessary to delineate the object. Objects collected vertically are of the same president, that is, require the same or same number of attributes to qualify their dictionary entry. The most global data base objects are PROJECT and PATHQUAL which utilize no attributes. The object references will be for the MSC/XL, or modern, translation of the MSC Nastran data model. Accessing the Grid location object GRIDX. It currently uses the Project, Path, Superelement and Design Cycle attributes.Data Base Validation Block (Paging) Management ConfigurationData Base OPEN Data Base CLOSEData Base Inquire Object Allocation Object De-allocation Object PurgeREAD/WRITE OperationsData Entry Operations (Printing)\n83 CHAPTER 9 Additional MSC Access Example Programs (DEMO1 and DEMO2) Main Index Accessing other model constituent information such as element connections objects and be performed with the same hierarchy. These objects currently uses the Project, Path, Superelement and Design Cycle\nattributes. Accessing the MSC Nastran results can be more difficult since these objects are highly qualified to allow for multiple instances on the data base. A popular data recovery object is the displacements in real data recovery. It should be noted again, that via the access key the entries can be recovered in either sort. The DISPR object currently uses the Project, Path, Superelement , SUBCASE , Approach , Design Cycle and p-Iteration\nattributes.\nMSC Nastran Access Manual DEMO1 Example Program84 Main Index DEMO1 Example Program The following procedures read the connectivity, displacement, and grid point stress data from an MSC/GRASP or MSC/XL data base. From the basic algorithm described earlier, the logic flow for the retrieval of data is described as follows: Section A Perform Data Base Validation and memory configurationSection B Establishes the buffer (paging) pool for memory management.Section C Opens the data base.Section D Inquires about the contents of selected entities in the data base.Section E Reads and prints. Subsection E1 Grid point data.Subsection E2 Element connectivity. Subsection E3 Displacement data. Subsection E4 Grid point stress data. Section F Closes the data base Driver Program for Example 1 (DEMO1) PROGRAM DEMO1 C IMPLICIT INTEGER (A-Z) CHARACTER120 DBNAMECOMMON /UNITIF/ INPUT,OUTPUT,DBNUM CC SET MAX BUFFER SIZE AS 65535 AND REQUEST 15 BUFFERS INTEGER LOPENC, MAXBUF,NUMBUF, WRKARA,DDLARA PARAMETER ( MAXBUF=65535, NUMBUF=15 ) PARAMETER ( WRKARA=(MAXBUF+5)(NUMBUF+1)+(53)+450 ) C DDL WORK SPACE REQUIREMENTS REQUIRED AFTER 2001 INTEGER PNODDL, PDLFLN PARAMETER ( PNODDL=2000, PDLFLN=5000 ) PARAMETER ( DDLARA=PNODDL5 + PDLFLN + 3) PARAMETER ( LOPENC=WRKARA+DDLARA ) COMMON /DBCXXX/ SPACE(LOPENC) CC* INITIALIZE THE OPERATING SYSTEM AND LOGICAL DATABASE UNITS INPUT = 5 OUTPUT = 6DBNUM = 1C C OBTAIN DATABASE NAME FORM THE USER WRITE (OUTPUT,1005) 1005 FORMAT (’ ENTER THE DATABASE PATH NAME’) READ (INPUT,1010,END=97,ERR=97) DBNAME 1010 FORMAT(A)CC AT VERSION 2001, THE DBIO ACTIVITY ALLOWS FOR DATA BASE BLOCKINGOF 1024 TO 65535C WORDS IN LENGTH. IT IS UP TO THE APPLICATION WRITER TO DETERMINE THE MAXIMUM BLOCK\n85 CHAPTER 9 Additional MSC Access Example Programs (DEMO1 and DEMO2) Main Index C SIZE BEFORE ESTABLISHINGTHE PAGING POOL. NOTE WHEN ALL DATA BASES ARE CLOSED, THE C PAGING POOL CAN BE RECONFIGURED, BUT THIS IS NOT ILLUSTRATED IN THIS SAMPLEC PROGRAM. THE ROUTINE DBVALD CAN BE USED TO VALIDATE DATA BASE EXISTANCE AND OFC XDB FORMAT, BESIDES RETURNINGTHE GENERATION BLOCK SIZE. NOTE ALL MSC Access DATAC BASES SINCE VERSION 1 CAN RETURN THEIR GENERATION SIZE, WHICH WAS ALWAYS 1024C WORDS IN PREVIOUS RELEASES.C DO 5105 LENF=120,1,-1 A IF (DBNAME(LENF:LENF).NE.’ ‘) GOTO 5107 5105 CONTINUE WRITE (OUTPUT,5106) 5106 FORMAT (’ *** NULL INPUT DATA BASE NAME IS NOT ALLOWED’) GOTO 97 5107 CONTINUEC CALL DBVALD (IRET,DBNAME,LENF,BLKSIZ,DDLSIZ,MACHTP) IF ( IRET.NE.0 ) THEN WRITE (OUTPUT,5015) IRET 5015 FORMAT (’ *** DATABASE VALIDATION ERROR = ‘,I3/\n5x,'SEE DBVALD DESCRIPTION')\rGOTO 97\rENDIF CC NOW VERIFY THE BUFFER SIZE AND THAT THE DATA DEFINITION WILL FITC INTO THE ALLOCATED AREAS IF ( BLKSIZ.LE.0 ) BLKSIZ = 1024C CALCULATE THE AMOUNT OF MEMORY FOR 15 + 1 BUFFERS LENO = (BLKSIZ+5)*(15+MACHTP) + MAX((15+MACHTP)/10,5)3 + 450 IF ( DDLSIZ.NE.0 ) THEN DDL1 = DDLSIZ/100000 DDL2 = DDLSIZ - DDL1100000 IF ( DDL1.GT.PNODDL .OR. DDL2.GT.PDLFLN ) THEN WRITE (OUTPUT,5016) DDL1,PNODDL, DDL2,PDLFLN 5016 FORMAT(’ *** DATA DEFINITION SPACE ERROR, RESET PROGRAM ‘, B * ‘PARAMETERS TO MAXIMUM OF INDICATED VALUES’/\n5X,‘PNODDL THE MAXUMUM OF ‘,2i10/ 5X,‘PDLFLN THE MAXIMUM OF ‘,2i10) STOP ENDIF LENO = LENO + DDLARA + 3 ENDIF IF ( LENO.GT.LOPENC ) LENO = LOPENC CC* INITIALIZE MEMORY AND DATA BASEC CALL PAGCFGX (OUTPUT,1,LENO,BLKSIZ,DDLSIZ,0,MACHTP,IERR) IF (IERR.EQ.0) THEN C C* ALLOCATION OF DATABASE IN READONLY STATUS CALL DBOPEN (DBNUM,0,0,IERR,DBNAME) CC* LOAD AND PRINT SELECTED DATA FROM THE DATABASE D IF (IERR.EQ.0) THEN C* LOAD THE DATABASE INFO CALL DATINT (IERR) IF (IERR.NE.0) GOTO 1050C* PRINT GRID POINT DATA CALL PRTGRD C* PRINT ELEMENT CONNECTIVITY DATA E CALL PRTCON C* PRINT DISPLACEMENT DATA CALL PRTDIS MSC Nastran Access Manual DEMO1 Example Program86 Main Index C* PRINT GRID POINT STRESS DATA CALL PRTGPS ELSE WRITE (OUTPUT,1020) IERR 1020 FORMAT (’ *** UNABLE TO ATTACH TO THE DATABASE, ‘, * ’ ERROR = ‘,I3/5x,‘SEE DBOPEN DESCRIPTION’)F ENDIF CC* CLOSE MAIN DATABASE1050 CALL DBCLOS (DBNUM,0,IRET) ELSE WRITE (OUTPUT,1060) IERR 1060 FORMAT (’ *** UNABLE TO PERFORM PAGE CONFIGURATION, ‘,\n‘ERROR = ‘,i3/5x,‘SEE PAGCFGX DESCRIPTION’) ENDIF C97 STOP END 9.2.2 Data base Inquiry for Example 1 (DATINT) The following procedure inquires about the contents of selected entries in the data base (Section C in the driver routine). This procedure reads in the following selected objects. Section D1 Path Section D2 Project Section D3 Superelement Identifications Section D4 Approach Code Section D5 Subcase Section D6 Surface Identifications SUBROUTINE DATINT (IERR) C C TEST SUBROUTINE DATINTCC ENTRY POINT: DATINTCC PURPOSE:C A TEST PROCEDURE TO INQUIRE THE CONTENTS OF SELECTEDC SELECTED ENTITIES WITH THE DATABASE AND TO STOREC THE DATABASE INFORMATIONC IMPLICIT INTEGER (A-Z) C PARAMETER (DBELEN=12, DATALN=200)PARAMETER (SUPMAX=200, SUBMAX=200, SUFMAX=20) C INTEGER PROHDR(DBELEN),PATHDR(DBELEN),SUPHDR(DBELEN)INTEGER SUBHDR(DBELEN),SOLHDR(DBELEN),SUFHDR(DBELEN)INTEGER DATARA(DATALN) C COMMON /UNITIF/ INPUT,OUTPUT,DBNUM 87 CHAPTER 9 Additional MSC Access Example Programs (DEMO1 and DEMO2) Main Index COMMON /DBTBLS/ NUMSUP,SEID(200),NGRD,NELM,PROJEC,PATH,APPROH, 1 NUMSUB,SUBID(200),NUMSUF,SUFID(20) C DATA PROHDR/4HPROJ,4HECT ,100/ DATA PATHDR/4HPATH,4HQUAL,100/DATA SUPHDR/4HSUPE,4HRS ,100/DATA SUBHDR/4HSUBG,4HRID ,100/DATA SUFHDR/4HSURF,4HSET ,100/DATA SOLHDR/4HSOLV,4HE ,100/ ______ CC ATTACH TO THE PATH RELATION CALL OPENR (DBNUM,PATHDR,PATLEN,PATFIL,0,0,0,0,0,0,ERRCOD)IF (ERRCOD.EQ.0) THEN IF (PATLEN.GT.DATALN) GOTO 900 C RECOVER THE MAXIMUM PATH INDEX USED CALL READR (PATFIL,DATARA,-7,ERRCOD)IF (ERRCOD.NE.0) THEN C UNABLE TO FIND PATHPATH = 0 D1 ELSE C PATH FOUNDPATH = DATARA(2) ENDIF C RELEASE THE PATH RELATIONCALL CLOSGR (PATFIL) ELSE C UNABLE TO FIND PATHPATH = 0 __________ENDIF ________ C C ATTACH TO THE PROJECT RELATION CALL OPENR (DBNUM,PROHDR,PROLEN,PROFIL,0,0,0,0,0,0,ERRCOD)IF (ERRCOD.EQ.0) THEN IF (PROLEN.GT.DATALN) GOTO 900 C RECOVER THE MAXIMUM PROJECT INDEXCALL READR (PROFIL,DATARA,-1,ERRCOD)IF (ERRCOD.NE.0) THEN C UNABLE TO FIND PROJECTAttribute Name Attribute Object Containing KeyQualificationAttributes PATH PATHQUAL None Attribute Name Attribute ObjectContaining Key QualificationAttributes PROJEC PROJECT None\nMSC Nastran Access Manual DEMO1 Example Program88 Main Index PROJEC = 0 D2 ELSE C PROJECT FOUND PROJEC = DATARA(2) ENDIF C RELEASE THE PROJECT RELATIONCALL CLOSGR (PROFIL) ELSE C UNABLE TO FIND PROJECTPROJEC = 0 __________ENDIF Note: n = NUMSUP (Number of superelements) __________ CC ATTACH TO THE SUPERELEMENT RELATION SUPHDR(3) = PROJECCALL OPENS (DBNUM,SUPHDR,0,SUPFIL,0,ERRCOD)IF (ERRCOD.NE.0)THEN C UNABLE TO READ IN SUPERELEMENT LIST, ASSUME TO RESIDUALNUMSUP = 1SEID(1) = 0 D3 ELSE C RECOVER SUPMAX NUMBER OF SUPERELEMENTCALL READS (SUPFIL,SEID,SUPMAX,NUMSUP,IEOR,ERRCOD)CALL CLOSGR (SUPFIL)IF (ERRCOD.NE.0) THEN C ATTEMPT FURTHER PROCESSING WITH BAD READ INFORMATIONNUMSUP = 1SEID(1) = 0 ENDIF ____________ENDIF ________ C C CHECK FOR RESULTS DATA SOLHDR(3) = PROJECCALL OPENR (DBNUM,SOLHDR,SOLLEN,SOLFIL,0,0,0,0,0,0,ERRCOD)Program Table Containing AttributesAttribute ObjectContaining Keys QualificationAttributes QualificationPosition SEID(1) id1 (2) id2…(3) idnSUPERS PROJEC (3) Attribute Name Attribute ObjectContaining Keys QualificationAttributes QualificationPosition APPROH SOLVE PROJEC (3)\n89 CHAPTER 9 Additional MSC Access Example Programs (DEMO1 and DEMO2) Main Index IF (ERRCOD.EQ.0) THEN IF (SOLLEN.GT.DATALN) GOTO 900 C ATTEMPT TO FIND APPROCH ASSOCIATED WITH PATH CALL READR (SOLFIL,DATARA,PATH,ERRCOD)IF (ERRCOD.NE.0)THEN C UNABLE TO FIND PATH’S APPROACHAPPROH= 0 D4 ELSE C APPROACH FOUNDAPPROH = DATARA(2) ENDIFCALL CLOSGR(SOLFIL) ELSE C UNABLE TO FIND SOLVE RELATIONAPPROH = 0 ___________ENDIF Note: n = NUMSUB (Number of SUBCASEs) __________ CC CHECK FOR SUBCASES SUBHDR(3) = PROJECSUBHDR(5) = PATHSUBHDR(8) = APPROHCALL OPENR (DBNUM,SUBHDR,SUBLEN,SUBFIL,0,0,0,0,0,0,ERRCOD)NUMSUB = 0IF (ERRCOD.EQ.0) THEN IF (SUBLEN.GT.DATALN) GOTO 900 D5 100 NUMREC = 1 CALL READSQ (SUBFIL,DATARA,NUMREC,NUMREC,IEOR,ERRCOD)IF (ERRCOD.NE.0) GOTO 150 IF (DATARA(1).GT.0) THEN IF (NUMSUB+1.GT.SUBMAX) GOTO 150NUMSUB = NUMSUB + 1SUBID(NUMSUB) = DATARA(1) ENDIF GOTO 100 150 CALL CLOSGR(SUBFIL) ___________ENDIFProgram Table Containing AttributesAttribute ObjectContaining Keys QualificationAttributes QualificationPosition SUBID(1) id1 (2) id2…(n) idnSUBGRID PROJECPATHAPPROH (3)(5)(8)\nMSC Nastran Access Manual DEMO1 Example Program90 Main Index Note: n = NUMSUF (Number of surfaces) Note: Surface Set for Residual (SEID=0) and no Design Cycles (DESIGN=0) __________ C CSURFACE CHECK SUFHDR(3) = PROJECSUFHDR(5) = PATHSUFHDR(8) = APPROHNUMSUF = 0 D6 C LOOP THROUGH SUPERELEMENTS COLLECTING SET IDENTIFICATIONS DO 300 ISUP= 1,NUMSUP SUFHDR(4) = SEID(ISUP)CALL OPENR (DBNUM,SUFHDR,SUFLEN,SUFFIL,0,0,0,0,0,0,ERRCOD)IF (ERRCOD.EQ.0) THEN IF (SUFLEN.GT.DATALN) GOTO 900 200 NUMREC = 1 CALL READSQ (SUFFIL,DATARA,NUMREC,NUMREC,IEOR,ERRCOD)IF (ERRCOD.NE.0) GOTO 250IF (NUMSUF+1.GT.SUFMAX) GOTO 250 D6 IF (NUMSUF.GT.0) THEN DO 210 I=1,NUMSUF IF (DATARA(1).EQ.SUFID(I)) GOTO 200 210 CONTINUE ENDIFNUMSUF = NUMSUF + 1SUFID(NUMSUF) = DATARA(1) GOTO 200250 CALL CLOSGR (SUFFIL) IF (NUMSUF.EQ.SUFMAX) GOTO 350 ____ENDIF 300 CONTINUE350 CONTINUECProgram Table Containing AttributesAttribute ObjectContaining Keys QualificationAttributes QualificationPosition SUFID(1) id1 (2) id2…(n) idnSURFSET PROJECSEIDPATHAPPROHDESIGN(3)(4)(5)(8)(9)\n91 CHAPTER 9 Additional MSC Access Example Programs (DEMO1 and DEMO2) Main Index IERR = 0 RETURNC900 WRITE (OUTPUT,910)910 FORMAT (’ *** INSUFFICIENT ARRAY LENGTH TO HOLD DATA’/ * 5x,‘INCREASE THE PARAMETER DATALN’) IERR = 1 RETURN END Grid Point Data in Example 1 (PRTGRD) The following procedure reads and prints grid point coordinate data (Section Dl in the driver routine). The functions of this routine are: Section E11 Cycles over all the superelements in the model Section E12 Allocates the grid point coordinate object Section E13 Cycles over the grid point coordinate data for reading and printing Section E14 Frees the grid point coordinate objectSUBROUTINE PRTGRD C C TEST SUBROUTINE PRTGRDCC ENTRY POINT: PRTGRDCC PURPOSE: A TEST OUTPUT PROCEDURE TO PRINT THE GRID POINT DATA FROM A C GRAPHICAL DATABASE.C IMPLICIT INTEGER (A-Z)C PARAMETER (DBELEN=12) C INTEGER GRDHDR(DBELEN),GRDINT(12) C REAL GRDREL(12) C COMMON /UNITIF/ INPUT,OUTPUT,DBNUMCOMMON /DBTBLS/ NUMSUP,SEID(200),NGRD,NELM,PROJEC,PATH,APPROH, 1NUMSUB,SUBID(200),NUMSUF,SUFID(20)C EQUIVALENCE (GRDINT(1),GRDREL(1)) C DATA GRDHDR/4HGRID,4HX ,10*0/ CC CYCLE OVER THE GRID DATA FOR ALL SUPERELEMENTS\nMSC Nastran Access Manual DEMO1 Example Program92 Main Index C GRDHDR(3) = PROJEC GRDHDR(5) = PATH ______________C DO 200 ISUP= 1,NUMSUP E12CALLOCATE THE GRID INTERNAL RECORD GRDHDR(4) = SEID(ISUP) _ _ _ _ ___________CALL OPENR (DBNUM,GRDHDR,GRDLEN,GRDFIL,0,0,0,0,0,0,ERRCOD) IF (ERRCOD.EQ.0) THEN WRITE (OUTPUT,1000) (GRDHDR(I),I=1,5) 1000 FORMAT (1X,2A4,’ PROJECT= ‘,I4,’ SUPERELEMENT= ‘,I4, * ’ PATH=’,I4/’ EXTID’,10X,‘X’,10X,‘Y’,10X,‘Z’) C E11 E13CCYCLE OVER ALL GRIDS USING SEQUENTIAL READ TECHNIQUE 100 NREC= 1 CALL READSQ (GRDFIL,GRDINT,NREC,NREC,IEOR,ERRCOD) IF (ERRCOD.NE.0) GOTO 1050WRITE (OUTPUT,1010) GRDINT(1),GRDREL(3),GRDREL(4), * GRDREL(5) 1010FORMAT (1X,I8,2X,3F11.3) _ _ _ _ _____________GOTO 100 C RELEASE THE GRID RECORD 1050 CALL CLOSGR(GRDFIL) E14ENDIF ___________200 CONTINUE C RETURN END Element Connectivity in Example 1 (PRTCON) The following procedure reads and prints element connectivity data (Section D2 in the driver procedure). The functions of this procedure are: Section E21 Cycles over all the superelements in the model Section E22 Allocates selected element connectivity objects (QUAD4, QUAD8,\nTRIA3, TRlA6, and SHEAR) Section E23 Cycles over the element connectivity data for reading and printing Section E24 Frees the element connectivity object SUBROUTINE PRTCON C C TEST SUBROUTINE PRTCONCC ENTRY POINT: PRTCON"},"title":"User's Manual P5"},"/docs/access_user_manual/msc_nastran_2024.1_access_user_manual_006/":{"data":{"":"93 CHAPTER 9 Additional MSC Access Example Programs (DEMO1 and DEMO2) Main Index C C PURPOSE: A TEST OUTPUT PROCEDURE TO PRINT THE CONNECTIVITY FROM A C GRAPHICAL DATABASE.C IMPLICIT INTEGER (A-Z) C PARAMETER (DBELEN=12) C INTEGER ELMNAM(3,5),ELMHDR(DBELEN),ELMINT(50) C COMMON/UNITIF/ INPUT,OUTPUT,DBNUM COMMON/DBTBLS/ NUMSUP,SEID(200),NGRD,NELM,PROJEC,PATH,APPROH, 1 NUMSUB,SUBID(200),NUMSUF,SUFID(20)C DATA ELMHDR/120/ C ELEMENT NAME # OF GRIDS DATA ELMNAM/4HCQD4,4H , 4, 1 4HCQD8,4H , 8, 2 4HCTR3,4H , 3, 3 4HCTR6,4H , 6, 4 4HCSHR,4H , 4/C DATA NUMELM /5/C C CYCLE OVER THE CONNECTIVITY FOR ALL SUPERELEMENTSC ELMHDR(3) = PROJEC ELMHDR(5) = PATH __________C DO 300 ISUP= 1,NUMSUP C* ELEMENT CYCLE DO 200 IELM= 1,NUMELM ELMHDR(1) = ELMNAM(1,IELM) E22 ELMHDR(2) = ELMNAM(2,IELM) ELMHDR(4) = SEID(ISUP) ELMNOD = ELMNAM(3,IELM) C* ALLOCATE THE CONNECTIVITY FOR EACH OF THE ELEMENT TYPE CALL OPENR (DBNUM,ELMHDR,ELMLEN,ELMFIL,0,0,0,0,0,0,ERRCOD) E21 IF (ERRCOD.EQ.0) THEN _ _ _ ____________WRITE (OUTPUT,1000) (ELMHDR(I),I=1,5) 1000 FORMAT (1X,2A4,’ PROJECT= ‘,I4,’ SUPERELEMENT= ‘,I4, * ’ PATH=’,I4/ ’ EXTID CONNECTION GRIDS’) C* CYCLE OVER ALL ELEMENTS WITHIN THE ALLOCATED TYPE100 NREC = 1 E23 CALL READSQ (ELMFIL,ELMINT,NREC,NREC,IEOR,ERRCOD) IF (ERRCOD.NE.0) GOTO 1030 WRITE (OUTPUT,1020) ELMINT(1),(ELMINT(I+2),I=1,ELMNOD) 1020 FORMAT(1X,I8,1X,8I9) _ _ _ ____________GOTO 100\nMSC Nastran Access Manual DEMO1 Example Program94 Main Index C* RELEASE THE ELEMENT CONNECTIVITY RELATION E241030 CALL CLOSGR(ELMFIL) ENDIF 200 CONTINUE _________300CONTINUE C RETURN END Displacement Data in Example 1 (PRTDIS) The following procedure reads and prints displacement data (Section D3 in the driver procedure). The functions of this procedure are: Section E31 Cycles over all the superelements subcases within the model Section E32 Allocates displacement objects Section E33 Cycles over the displacement data for reading and printing Section E34 Frees the displacement object SUBROUTINE PRTDIS C C TEST SUBROUTINE PRTDISC ENTRY POINT: PRTDISC PURPOSE: A TEST OUTPUT PROCEDURE TO PRINT DISPLACEMENT DATA.C EXAMPLE IS FOR REAL DATA RECOVERY ONLY IE, STATICS, NORMAL MODES C TRANSIENT, NON-LINEAR BUT WILL NOT WORK FOR COMPLEX FORM IMPLICIT INTEGER (A-Z) PARAMETER (DBELEN=12) INTEGER DISHDR(DBELEN) INTEGER IDDIS(20) REAL DISDAT(20) C COMMON/UNITIF/ INPUT,OUTPUT,DBNUM COMMON/DBTBLS/ NUMSUP,SEID(200),NGRD,NELM,PROJEC,PATH,APPROH, 1 NUMSUB,SUBID(200),NUMSUF,SUFID(20)C EQUIVALENCE (DISDAT(1),IDDIS(1)) C DATA DISHDR/4HDISP,4HR ,100/ CC WHERE THERE ANY ANALYSIS RESULTS DETECTED IF (NUMSUB.EQ.0) RETURN C*\n95 CHAPTER 9 Additional MSC Access Example Programs (DEMO1 and DEMO2) Main Index DISHDR(3) = PROJEC DISHDR(5) = PATH DISHDR(8) = APPROH ________________C DO 300 ISUP= 1,NUMSUP DO 200 ISUB= 1,NUMSUB C* ALLOCATE THE DISPLACEMENT FILE DISHDR(4) = SEID(ISUP) DISHDR(6) = SUBID(ISUB) CALL OPENR (DBNUM,DISHDR,DSPLEN,DISFIL,0,0,0,0,0,0,ERRCOD) E32 IF (ERRCOD.EQ.0) THEN WRITE (OUTPUT,1000) (DISHDR(I),I=1,6),DISHDR(8) 1000 FORMAT(1X,2A4,’ PROJECT= ‘,I4,’ SUPERELEMENT= ‘,I4, * ’ PATH= ‘,I4,’ SUBCASE= ‘,I8,’\nAPPROACH=’,I4/ * ’ INTID’,7X,‘DT1’,7X,‘DT2’,7X,‘DT3’, * 7X,‘RT1’,7X,‘RT2’,7X,‘RT3’) _ _ _ _ _ _ _______100 NREC= 1 CALL READSQ (DISFIL,DISDAT,NREC,NREC,IEOR,ERRCOD)E31 E32 IF (ERRCOD.NE.0) GOTO 1050 IF (IDDIS(1)) 100,1030,1010 1010 WRITE (OUTPUT,1020) IDDIS(1),(DISDAT(LDAT),LDAT=2,7) 1020 FORMAT(1X,I8,2X,6F10.5) GOTO 100 1030 WRITE (OUTPUT,1040) IDDIS(2)1040 FORMAT (’ OBJECT FACTOR =’,I6) _ _ _ _ _ _ __________GOTO 100 C* RELEASE THE DISPLACEMENT FILE E34 1050 CALL CLOSGR(DISFIL) ENDIF C* SUBCASE CYCLE200 CONTINUEC* SUPERELEMENT CYCLE ________________300 CONTINUE C RETURN END Grid Point Stress Data in Example 1 (PRTGPS) The following procedure reads and prints grid point stress data (Section D in the driver procedure). The functions of this procedure are: Section E41 Cycles over all the superelements within the model\nMSC Nastran Access Manual DEMO1 Example Program96 Main Index Section E42 Extract the Grid Key factor from EQEXING object Section E43 Cycle over all the SUBCASEs within the model Section E44 Cycles over the grid point stress surfaces within the model Section E45 Allocates grid point stress objects Section E46 Cycles over the grid point stress data for reading and printing Section E47 Frees the grid point stress objects For simplicity, the example used here retrieves grid point stress data for MSC/XL formatted data bases only. SUBROUTINE PRTGPS C C TEST SUBROUTINE PRTGPSC ENTRY POINT: PRTGPSC PURPOSE: A TEST OUTPUT PROCEDURE TO PRINT GRID POINT STRESS DATA. C IMPLICIT INTEGER (A-Z) C PARAMETER (DBELEN=12) INTEGER EQGHDR(DBELEN),GPSPTR(DBELEN),GPTHDR(DBELEN) INTEGER GRDMAP(3),SRFMAP(4),LAB(3) REAL GPRECR(9) C COMMON/UNITIF/ INPUT,OUTPUT,DBNUM COMMON/DBTBLS/ NUMSUP,SEID(200),NGRD,NELM,PROJEC,PATH,APPROH, 1 NUMSUB,SUBID(200),NUMSUF,SUFID(20)C DATA LAB/2HZ1,2HZ2,3HMID/ DATA EQGHDR/4HEQEX,4HING ,100/ DATA GPSPTR/4HSGSP,4HR ,100/ DATA GPTHDR/4HSGSV,4HR ,100/ C IF (NUMSUB.EQ.0 .OR. NUMSUF.EQ.0) RETURN CC DUMMY UP A LIST OFFSET VALUE BASE UPON ANALYSIS APPROACH IF (APPROH.LE.1) THEN OFFSET = 0 ELSE OFFSET = 1 ENDIF CC* FILL OUT THE REMAINING PARTS OF THE DICTIONARY HEADERS EQGHDR(3) = PROJEC EQGHDR(5) = PATH\n97 CHAPTER 9 Additional MSC Access Example Programs (DEMO1 and DEMO2) Main Index GPSPTR(3) = PROJEC GPSPTR(5) = PATH GPSPTR(8) = APPROH GPTHDR(3) = PROJEC GPTHDR(5) = PATH GPTHDR(8) = APPROH C __________________C* CYCLE OVER THE GRID POINT STRESS DATA FOR ALL SUPERELEMENTS DO 500 ISUP= 1,NUMSUP C* ALLOCATE THE EQEXING TABLE TO EXTRACT GRID POINT STRESS POINTERS EQGHDR(4) = SEID(ISUP) CALL OPENR (DBNUM,EQGHDR,EQGLEN,EQGFIL,0,0,0,0,0,0,ERRCOD) IF (ERRCOD.EQ.0) THEN E42 C* EXTRACT THE MSC Access FACTOR FOR THE TABLE CALL READR (EQGFIL,GRDMAP,0,ERRCOD) IF (ERRCOD.EQ.0) THEN C MSC Nastran V67 AND LATER CONVENTIONS GFACT = GRDMAP(2) ELSE C CONVENTIONS PRIOR TO MSC Nastran V67 GFACT = 10 ENDIF GPSPTR(4)= SEID(ISUP) GPTHDR(4)= SEID(ISUP) C _ _ _ _ _ _ _ _ _ _ _ C* LOOP OVER POSSIBLE SUBCASES DO 400 ISUB= 1,NUMSUB GPSPTR(6)= SUBID(ISUB) GPTHDR(6)= SUBID(ISUB) C ____________C* LOOP OVER THE SURFACES WITHIN A SUBCASE DO 300 ISUF= 1,NUMSUF C* ALLOCATE THE GRID POINT STRESS POINTER FILE GPSPTR(7)= SUFID(ISUF) CALL OPENR (DBNUM,GPSPTR,LEN,PFIL,0,0,0,0,0,0,ERRCOD) IF (ERRCOD.NE.0) GOTO 300 C* RECOVER THE POINTER MSC Access FACTOR CALL READR (PFIL,SRFMAP,0,ERRCOD) IF (ERRCOD.EQ.0) THEN PFACT = SRFMAP(2) ELSE PFACT = 10000 ENDIF E41 E43 E44 E45 C* ALLOCATE THE GRID POINT STRESS VALUE FILE GPTHDR(7)= SUFID(ISUF)\nMSC Nastran Access Manual DEMO1 Example Program98 Main Index CALL OPENR (DBNUM,GPTHDR,LEN,VFIL,0,0,0,0,0,0,ERRCOD) IF (ERRCOD.NE.0) GOTO 290 WRITE (OUTPUT,1000) (GPTHDR(I),I=1,8) 1000 FORMAT (1X,2A4,’ PROJECT= ‘,I4, * ’ SUPERELEMENT= ‘,I4,’ PATH= ‘,I4, * ’ SUBCASE= ‘,I8,’ SURFACE= ‘,I4,’\nAPPROACH=’,I2/ * ’ EXTID FIBRE GRID POINT STRESS DATA’) _ _ _ _ _C C* REWIND THE EXTERNAL TO INTERNAL MAPPING TABLE CALL READR (EQGFIL,GRDMAP,-99,ERRCOD) CALL READR (EQGFIL,GRDMAP,-99,ERRCOD) C* SEQUENTIALLY PASS ALL POSSIBLE GRIDS100 NREC= 1 CALL READSQ (EQGFIL,GRDMAP,NREC,NREC,IEOR,ERRCOD) IF (ERRCOD.NE.0) GOTO 280 IF (GRDMAP(1).LE.0) GOTO 100 C* DETERMINE IF GRID ON THIS SURFACE INTKEY = GRDMAP(2)/GFACTPFACT + OFFSET CALL READR (PFIL,SRFMAP,INTKEY,ERRCOD) IF (ERRCOD.EQ.0) THEN E41 E43 E44 E46 C OUTPUT THE STRESS RECORD FOR EACH FIBER DO 150 IFIB= 1,3 KEY = SRFMAP(IFIB+1) IF (KEY.EQ.0) GOTO 150 CALL READR (VFIL,GPRECR,KEY,IERR) IF (IERR.EQ.0) THEN WRITE (OUTPUT,1010) GRDMAP(1),LAB(IFIB), * (GPRECR(LDAT),LDAT=2,9) 1010 FORMAT(1X,I8,1X,A3,1X,8F8.1) ENDIF 150 CONTINUE ENDIF _ _ _ _ _ _GOTO 100 C* RELEASE THE STRESS FILES E47280 CALL CLOSGR (VFIL) ________290 CALL CLOSGR (PFIL) C* SURFACE CYCLE300 CONTINUEC* SUBCASE CYCLE ____________400 CONTINUE CALL CLOSGR (EQGFIL) ENDIF\n99 CHAPTER 9 Additional MSC Access Example Programs (DEMO1 and DEMO2) Main Index C* SUPERELEMENT CYCLE __________________500 CONTINUE C RETURN END DEMO2 Example Program The following procedures read the connectivity, displacement, and grid point stress data from an MSC/GRASP or an MSC/XL data base. These procedures are written in a more generic format than Example 1. The basic algorithm for the retrieval of data is described at the beginning of this section: Section A Perform Data Base Validation and memory configuration Section B Establishes the block (paging) pool Section C Opens the data base Section D Reads and prints Subsection D1 - Grid point data Subsection D2 - Element connectivity Subsection D3 - Displacement data Subsection D4 - Grid point stress data Section E Closes the data base Driver Program for Example 2 (DEMO2) PROGRAM DEMO2 C IMPLICIT INTEGER (A-Z) C CHARACTER80 DBNAME C COMMON /UNITIF/ INPUT,OUTPUT,DBNUM C C SET MAX BUFFER SIZE AS 65535 AND REQUEST 15 BUFFERS INTEGER LOPENC, MAXBUF,NUMBUF, WRKARA,DDLARA PARAMETER ( MAXBUF=65535, NUMBUF=15 ) PARAMETER ( WRKARA=(MAXBUF+5)(NUMBUF+1)+(53)+450 ) C DDL WORK SPACE REQUIREMENTS REQUIRED AFTER 2001 INTEGER PNODDL, PDLFLN PARAMETER ( PNODDL=2000, PDLFLN=5000 ) PARAMETER ( DDLARA=PNODDL5 + PDLFLN + 3) PARAMETER ( LOPENC=WRKARA+DDLARA )\nMSC Nastran Access Manual DEMO2 Example Program100 Main Index COMMON /DBCXXX/ Z(LOPENC) C C* INITIALIZE THE OPERATING SYSTEM AND LOGICAL DATABASE UNITS INPUT = 5 OUTPUT = 6 DBNUM = 1\n101 CHAPTER 9 Additional MSC Access Example Programs (DEMO1 and DEMO2) Main Index ____________________C WRITE (OUTPUT,1005) 1005 FORMAT (’ ENTER THE DATABASE PATH NAME’) READ (INPUT,1010,END=97,ERR=97) DBNAME 1010 FORMAT (A) CC AT VERSION V71, THE DBIO ACTIVITY ALLOWS FOR DATA BASE BLOCKING C OF 1024 TO 65535 WORDS IN LENGTH. IT IS UP TO THE APPLICATION C WRITER TO DETERMINE THE MAXIMUM BLOCK SIZE BEFORE ESTABLISHING C THE PAGING POOL. NOTE WHEN ALL DATA BASES ARE CLOSED, THEC PAGING POOL CAN BE RECONFIGURED, BUT THIS IS NOT ILLUSTRATED C IN THIS SAMPLE PROGRAM. THE ROUTINE DBVALD CAN BE USED TOC VALIDATE DATA BASE EXISTANCE AND OF XDB FORMAT, BESIDES RETURNING C THE GENERATION BLOCK SIZE. NOTE ALL ACCESS DATA BASES SINCEA C VERSION 1 CAN RETURN THEIR GENERATION SIZE, WHICH WAS ALWAYS C 1024 WORDS IN PREVIOUS RELEASES.C DO 5105 LENF=80,1,-1 IF (DBNAME(LENF:LENF).NE.’ ‘) GOTO 5107 5105 CONTINUE WRITE (OUTPUT,5106) 5106 FORMAT (’ *** NULL INPUT DATA BASE NAME IS NOT ALLOWED’) GOTO 97 5107 CONTINUEC CALL DBVALD (IRET,DBNAME,LENF,BLKSIZ,DDLSIZ,MACHTP) IF ( IRET.NE.0 ) THEN WRITE (OUTPUT,5015) IRET 5015 FORMAT (’ *** DATABASE VALIDATION ERROR = ‘,I3/ * 5x,‘SEE DBVALD DESCRIPTION’) GOTO 97 ___________________ ENDIF CC NOW VERIFY THE BUFFER SIZE AND THAT THE DATA DEFINITION WILL FIT C INTO THE ALLOCATED AREAS IF ( BLKSIZ.LE.0 ) BLKSIZ = 1024 C CALCULATE THE AMOUNT OF MEMORY FOR 15 + 1 BUFFERS LENO = (BLKSIZ+5)*(15+MACHTP) + MAX((15+MACHTP)/10,5)*3 + 450 IF ( DDLSIZ.NE.0 ) THEN DDL1 = DDLSIZ/100000\nMSC Nastran Access Manual DEMO2 Example Program102 Main Index DDL2 = DDLSIZ - DDL1100000 IF ( DDL1.GT.PNODDL .OR. DDL2.GT.PDLFLN ) THEN B WRITE (OUTPUT,5016) DDL1,PNODDL, DDL2,PDLFLN 5016 FORMAT(’ *** DATA DEFINITION SPACE ERROR, RESET PROGRAM ‘, * ‘PARAMETERS TO MAXIMUM OF INDICATED VALUES’/ * 5X,‘PNODDL THE MAXUMUM OF ‘,2i10/ * 5X,‘PDLFLN THE MAXIMUM OF ‘,2i10) STOP ENDIF LENO = LENO + DDLARA + 3 ENDIF IF ( LENO.GT.LOPENC ) LENO = LOPENC CC INITIALIZE MEMORY AND DATA BASE ___________________ CALL PAGCFGX (OUTPUT,1,LENO,BLKSIZ,DDLSIZ,0,MACHTP,IERR) IF (IERR.EQ.0) THEN ___________________C* ALLOCATION OF DATABASE CALL DBOPEN (DBNUM,0,0,IERR,DBNAME) C C C* LOAD AND PRINT SELECTED DATA FROM THE DATABASE IF (IERR.EQ.0) THEN ___________________C* PRINT GRID POINT DATA CALL PRTGRD C* PRINT ELEMENT CONNECTIVITY DATA CALL PRTCON D C* PRINT DISPLACEMENT DATA CALL PRTDIS C* PRINT GRID POINT STRESS DATA CALL PRTGPS ELSE WRITE (OUTPUT,1020) IERR 1020 FORMAT (’ *** UNABLE TO ATTACH TO THE DATABASE, ‘, * ’ ERROR = ‘,I3/5x,‘SEE DBOPEN DESCRIPTION’) ENDIF ___________________C C* CLOSE MAIN DATABASE E CALL DBCLOS (DBNUM,0,IRET) ___________________ ELSE WRITE (OUTPUT,1060) IERR 1060 FORMAT (’ *** UNABLE TO PERFORM PAGE CONFIGURATION, ‘, * ‘ERROR = ‘,i3/5x,‘SEE PAGCFGX DESCRIPTION’) ENDIF C97STOPEND\n103 CHAPTER 9 Additional MSC Access Example Programs (DEMO1 and DEMO2) Main Index Data base Inquiry and Grid Point Data for Example 2 (PRTGRD) The procedure to inquire about the contents of selected entries in the data base and to read and write grid point coordinate data follows. The functions of this procedure are: Section D11 Searches the data base for grid point objects Section D12 Allocates the grid point coordinate object Section D13 Cycles over the grid point coordinate entries for reading and printing Section D14 Frees the grid point coordinate object SUBROUTINE PRTGRD C C TEST SUBROUTINE PRTGRDC ENTRY POINT: PRTGRDC PURPOSE: A TEST OUTPUT PROCEDURE TO PRINT THE GRID POINT DATA FROM A C GRAPHICAL DATABASE.C IMPLICIT INTEGER (A-Z) C INTEGER DBENT(12),GRDINT(12) REAL GRDREL(12) C COMMON /UNITIF/ INPUT,OUTPUT,DBNUM C EQUIVALENCE (GRDINT(1),GRDREL(1)) C DATA GRDNAM/4HGRID/, NOPRT/1/ _________________C C* REWIND THE POINTER INTO THE DATABASE DICTIONARY DBPTR = 0 C* EXTRACT THE NEXT DATABASE DICTIONARY ENTRY100 CALL DICENT (DBNUM,DBPTR,NOPRT,DBENT,IKEEP) D11 C* CHECK IF THERE WAS A DICTIONARY ENTRY IF (DBPTR.LT.0) RETURN CC* WAS IT ONE THAT WE WANTED IF (DBENT(1).EQ.GRDNAM) THEN _________________C* ATTACH TO THE GRID RELATION CALL OPENR (DBNUM,DBENT,GRDLEN,GRDFIL,0,0,0,0,0,0,ERRCOD) IF (ERRCOD.EQ.0) THEN WRITE (OUTPUT,1000) (DBENT(I),I=1,5) D12 1000 FORMAT (1X,2A4,’ PROJECT= ‘,I4,’ SUPERELEMENT= ‘,I4, * ’ PATH=’,I4/ ’ EXTID’,10X,‘X’,10X,‘Y’,10X,‘Z’)\nMSC Nastran Access Manual DEMO2 Example Program104 Main Index ________________C* CYCLE OVER ALL GRIDS, SEQUENTIAL READ 200 NREC= 1 CALL READSQ (GRDFIL,GRDINT,NREC,NREC,IEOR,ERRCOD) IF (ERRCOD.NE.0) GOTO 300 D13 WRITE (OUTPUT,1010) GRDINT(1),GRDREL(3),GRDREL(4), * GRDREL(5)1010 FORMAT (1X,I8,2X,3F11.3) GOTO 200 ________________C* RELEASE THE GRID RELATION 300 CALL CLOSGR (GRDFIL) D14 ENDIF ________________ ENDIF CC* DATABASE DICTIONARY CYCLE GOTO 100END Data base Inquiry and Connectivity Data for Example 2 (PRTCON) The following procedure inquires about the contents of selected entries in the data base and reads and writes element connectivity data. The functions of this procedure are: Section D21 Cycle over the data base dictionary entries Section D22 Cycles over all selected element types Section D23 Searches the entry for selected element connectivity objects Section D24 Allocates selected element connectivity objects (QUAD4, QUAD8, TRIA3, TRlA6, and SHEAR) Section D25 Cycles over the element connectivity entries for reading and printing Section D26 Free the element connectivity object SUBROUTINE PRTCON C C TEST SUBROUTINE PRTCONC ENTRY POINT: PRTCONC PURPOSE: A TEST OUTPUT PROCEDURE TO PRINT THE CONNECTIVITY FROM A C GRAPHICAL DATABASE.C IMPLICIT INTEGER (A-Z) C PARAMETER (NUMELM=5) C\n105 CHAPTER 9 Additional MSC Access Example Programs (DEMO1 and DEMO2) Main Index INTEGER ELMNAM(2,NUMELM) INTEGER DBENT(12),ELMINT(50) C COMMON /UNITIF/ INPUT,OUTPUT,DBNUM C DATA NOPRT/1/ DATA ELMNAM/4HCQD4, 4, 4HCQD8, 8, 4HCSHR, 4, 4HCTR3, 3,\n4HCTR6, 6/ ________________ C C* REWIND THE POINTER INTO THE DATABASE DICTIONARY DBPTR = 0 C* EXTRACT THE NEXT DATABASE DICTIONARY ENTRY 100 CALL DICENT (DBNUM,DBPTR,NOPRT,DBENT,IKEEP)C* CHECK IF THERE WAS A DICTIONARY ENTRY IF (DBPTR.LT.0) RETURN C ____________C* CHECK IF DATABASE ENTRY IS ONE THAT WE WANT DO 400 IELM= 1,NUMELM D23 IF (DBENT(1).EQ.ELMNAM(1,IELM)) THEN ____________C* EXTRACT THE NUMBER OF GRIDS FROM THE TABLE ELMNOD = ELMNAM(2,IELM) C* ALLOCATE THE CONNECTIVITY RELATION FOR THE ELEMENT TYPE CALL OPENR (DBNUM,DBENT,ELMLEN,ELMFIL,0,0,0,0,0,0,ERRCOD) D24 IF (ERRCOD.EQ.0) THEN WRITE (OUTPUT,1000) (DBENT(I),I=1,5) D21 D22 1000 FORMAT (1X,2A4,’ PROJECT= ‘,I4,’ SUPERELEMENT= ‘,I4, * ’ PATH=’,I4/ ’ EXTID CONNECTION GRIDS’) ____________200 NREC = 1 CALL READSQ (ELMFIL,ELMINT,NREC,NREC,IEOR,ERRCOD) IF (ERRCOD.NE.0) GOTO 300 D25 WRITE (OUTPUT,1020) ELMINT(1),(ELMINT(I+2),I=1,ELMNOD) 1020 FORMAT(1X,I8,1X,8I9) ____________ GOTO 200 C* RELEASE THE ELEMENT CONNECTIVITY RELATION D26300 CALL CLOSGR (ELMFIL) GOTO 100 ENDIF ENDIF ____________400 CONTINUE\nMSC Nastran Access Manual DEMO2 Example Program106 Main Index C C* DATABASE DICTIONARY CYCLE _____________ GOTO 100END Data base Inquiry and Displacement Data for Example 2 (PRTDIS) The following procedure inquires about the contents of selected entries in the data base and reads and writes displacement data (Sections C and D in the driver procedure). The functions of this procedure are: Section D31 Loop over data base dictionary entries Section D32 Searches entry for displacement objects Section D33 Allocates the displacement object Section D34 Cycles over the displacement entry for reading and printing Differentiate data entry from factor entry by key=0 Section D35 Free the displacement object SUBROUTINE PRTDIS C C TEST SUBROUTINE PRTDISC ENTRY POINT: PRTDISC PURPOSE: A TEST OUTPUT PROCEDURE TO PRINT DISPLACEMENT DATA. C IMPLICIT INTEGER (A-Z) C INTEGER DBENT(12),IDDIS(14) REAL DISDAT(14) C COMMON /UNITIF/ INPUT,OUTPUT,DBNUM C EQUIVALENCE (DISDAT(1),IDDIS(1)) C DATA DISNAM/4HDISP/, NOPRT/1/\n107 CHAPTER 9 Additional MSC Access Example Programs (DEMO1 and DEMO2) Main Index _________________C C* REWIND THE POINTER INTO THE DATABASE DICTIONARY DBPTR = 0 C* EXTRACT THE NEXT DATABASE DICTIONARY ENTRY 100 CALL DICENT (DBNUM,DBPTR,NOPRT,DBENT,IKEEP)C* CHECK IF THERE WAS A DICTIONARY ENTRY IF (DBPTR.LT.0) RETURN C D32 C* CHECK IF THE CURRENT ENTRY IS A DISPLACEMENT RELATION IF (DBENT(1).EQ.DISNAM) THEN _________________C* ALLOCATE THE DISPLACEMENT FILE CALL OPENR (DBNUM,DBENT,DSPLEN,DISFIL,0,0,0,0,0,0,ERRCOD) IF (ERRCOD.EQ.0) THEN WRITE (OUTPUT,1000) (DBENT(I),I=1,6),DBENT(8) D33 1000 FORMAT(1X,2A4,’ PROJECT= ‘,I4,’ SUPERELEMENT= ‘,I4, * ’ PATH= ‘,I4,’ SUBCASE= ‘,I8,’\nAPPROACH=’,I4/ * ’ INTID’,7X,‘DT1’,7X,‘DT2’,7X,‘DT3’, * 7X,‘RT1’,7X,‘RT2’,7X,‘RT3’) D31 _________________200 NREC= 1 CALL READSQ (DISFIL,DISDAT,NREC,NREC,IEOR,ERRCOD) IF (ERRCOD.NE.0) GOTO 300 IF (IDDIS(1)) 200,1050,1010 1010 WRITE (OUTPUT,1020) IDDIS(1),(DISDAT(J),J=2,7) D34 1020 FORMAT(1X,I8,2X,6F10.5) IF (DSPLEN.GT.7) THEN WRITE (OUTPUT,1030) (DISDAT(J),J=8,13) 1030 FORMAT (11X,6F10.5) ENDIF GOTO 200 1050 WRITE (OUTPUT,1060) IDDIS(2)1060 FORMAT (’ OBJECT FACTOR =’,I6) _________________ GOTO 200 C* RELEASE THE DISPLACEMENT FILE D35 300 CALL CLOSGR (DISFIL) ENDIF ENDIF CC* DATABASE DICTIONARY CYCLE ______________ GOTO 100 END\nMSC Nastran Access Manual DEMO2 Example Program108 Main Index Data base Inquiry and Grid Point Stress Data for Example 2 (PRTGPS) The following procedure inquires about the contents of selected entries in the data base and reads and prints grid point stress data. The functions of this procedure are: Section D41 Loop over data base dictionary entries Section D42 Searches the entry for grid point stress pointer object Section D43 Allocates the grid point stress point and value objects Section D44 Cycles over the grid point stress point entries for keys into value object Section D45 Cycle over surface pointer entry for layers for reading and printing Section D46 Frees the grid point stress objects For simplicity, the example used here retrieves grid point stress data for MSC/XL formatted data bases only. SUBROUTINE PRTGPS C C TEST SUBROUTINE PRTGPSC ENTRY POINT: PRTGPSC PURPOSE: A TEST OUTPUT PROCEDURE TO PRINT GRID POINT STRESS DATA. C IMPLICIT INTEGER (A-Z) C PARAMETER (DBELEN=12) INTEGER DBENT(DBELEN),EQGHDR(DBELEN),GPTHDR(DBELEN) INTEGER GRDMAP(3),SRFMAP(4),LAB(3),GPSPTR(2) REAL GPRECR(9) C COMMON /UNITIF/ INPUT,OUTPUT,DBNUM C EQUIVALENCE (GPRECR(1),IDGPS) C DATA LAB/2HZ1,2HZ2,3HMID/, NOPRT/1/ DATA GPSPTR/4HSGSP,4HR / DATA EQGHDR/4HEQEX,4HING ,100/ DATA GPTHDR/4HSGSV,4HR ,100/ _________________C C* REWIND THE POINTER INTO THE DATABASE DICTIONARY DBPTR = 0 C* EXTRACT THE NEXT DATABASE DICTIONARY ENTRY D41 100 CALL DICENT (DBNUM,DBPTR,NOPRT,DBENT,IKEEP)C* CHECK IF THERE WAS A DICTIONARY ENTRY IF (DBPTR.LT.0) RETURN CC* CHECK IF THE CURRENT ENTRY IS A DISPLACEMENT RELATION D42 IF (DBENT(1).EQ.GPSPTR(1) .AND. DBENT(2).EQ.GPSPTR(2)) THEN\n109 CHAPTER 9 Additional MSC Access Example Programs (DEMO1 and DEMO2) Main Index __________________C C* DUMMY UP A LIST OFFSET VALUE BASE UPON ANALYSIS APPROACH IF (DBENT(8).LE.1) THEN OFFSET = 0 ELSE OFFSET = 1 ENDIF C* ALLOCATE THE EQEXING TABLE TO EXTRACT GRID POINT STRESS POINTERS DO 110 I=3,5 EQGHDR(I) = DBENT(I) 110 CONTINUE CALL OPENR (DBNUM,EQGHDR,EQGLEN,EQGFIL,0,0,0,0,0,0,ERRCOD) IF (ERRCOD.EQ.0) THEN C* EXTRACT THE ACCESS FACTOR FOR THE TABLE CALL READR (EQGFIL,GRDMAP,0,ERRCOD) IF (ERRCOD.EQ.0) THEN C MSC/NASTRAN V67 AND LATER CONVENTIONS GFACT = GRDMAP(2) ELSE C CONVENTIONS PRIOR TO MSC/NASTRAN V67 GFACT = 10 ENDIF D41 D43 C* ALLOCATE THE GRID POINT STRESS POINTER FILE CALL OPENR (DBNUM,DBENT,LEN,PFIL,0,0,0,0,0,0,ERRCOD) IF (ERRCOD.NE.0) GOTO 300 C* RECOVER THE POINTER ACCESS FACTOR CALL READR (PFIL,SRFMAP,0,ERRCOD) IF (ERRCOD.EQ.0) THEN PFACT = SRFMAP(2) ELSE PFACT = 10000 ENDIF C* ALLOCATE THE GRID POINT STRESS VALUE FILE DO 120 I=3,DBELEN GPTHDR(I) = DBENT(I) 120 CONTINUE CALL OPENR (DBNUM,GPTHDR,LEN,VFIL,0,0,0,0,0,0,ERRCOD) _ _ _ _ _______ IF (ERRCOD.NE.0) GOTO 400 WRITE (OUTPUT,1000) (GPTHDR(I),I=1,8) 1000 FORMAT (1X,2A4,’ PROJECT= ‘,I4, * ’ SUPERELEMENT= ‘,I4,’ PATH= ‘,I4, * ’ SUBCASE=’,I8,’ SURFACE=’,I4,’\nAPPROACH=’,I2/ * ’ EXTID FIBRE GRID POINT STRESS DATA’) C\nMSC Nastran Access Manual DEMO2 Example Program110 Main Index C* REWIND THE EXTERNAL TO INTERNAL MAPPING TABLE CALL READR (EQGFIL,GRDMAP,-99,ERRCOD) C* SEQUENTIALLY PASS ALL POSSIBLE GRIDS D44 200 NREC= 1 CALL READSQ (EQGFIL,GRDMAP,NREC,NREC,IEOR,ERRCOD) IF (ERRCOD.NE.0) GOTO 300 IF (GRDMAP(1).LE.0) GOTO 200 C* DETERMINE IF GRID ON THIS SURFACE INTKEY = GRDMAP(2)/GFACTPFACT + OFFSET CALL READR (PFIL,SRFMAP,INTKEY,ERRCOD) IF (ERRCOD.EQ.0) THEN __________C OUTPUT THE STRESS RECORD FOR EACH FIBER DO 250 IFIB= 1,3 KEY = SRFMAP(IFIB+1) D45 IF (KEY.EQ.0) GOTO 250 CALL READR (VFIL,GPRECR,KEY,IERR) IF (IERR.EQ.0) THEN WRITE (OUTPUT,1010) GRDMAP(1),LAB(IFIB), * (GPRECR(LDAT),LDAT=2,9)1010 FORMAT(1X,I8,1X,A3,1X,8F8.1) ENDIF D41 D44 250 CONTINUE ENDIF _ _ ____________ GOTO 200 C* RELEASE THE STRESS FILES D46 300 CALL CLOSGR (VFIL) 400 CALL CLOSGR (PFIL) CALL CLOSGR (EQGFIL) ENDIF ENDIF CC* DATABASE DICTIONARY CYCLE ____________ GOTO 100END\nMain Index Chapter 10: Usage of Data Definition Language Interface 10Usage of Data Definition Language Interface Overview 112 High Level Interactive Driver 112 Support Subroutine to Process DDL Schema 119\nMSC Nastran Access Manual Overview112 Main Index Overview The example software presented in this chapter was extracted from the DDLQRY utility delivered both as a demonstration example and utility program which extract DDL object information interactively. Since the starting of the MSC Access system, using functions of DBVALD and PAGCFGX, were illustrated and discussed in previous chapters, they will not be present here. The example presented here is composed of two subroutines. The first is split between an application to user interface to control the interactive process options and to process the task of determining which objects share dictionary words in their title sections, thus providing a primitive grouping capability. The second routines presented traverses the DDL section of the object providing detailed descriptions of the tokens used in the entry. The illustration technique used will be to disburse additional comments in the program sections where block functional activities occur. High Level Interactive Driver This subroutine is invoked from the main function which as performed the MSC Access system configuration tasks of DBVALD and PAGCFGX. It has also performed the linkage of the software to the client locations for the DDL data base and performed the DBOPEN task on that target. Subroutine DDLQMN (dbnum) CC THIS PROGRAM IS CONFIDENTIAL AND A TRADE SECRET OF THE Hexagon AB AND/OR ITSC SUBSIDIARIES THE RECEIPT OR POSSESSION OF THIS PROGRAM DOES NOT CONVEY ANYC RIGHTS TO REPRODUCE OR DISCLOSE ITS CONTENTS, SELL, LEASE, OR OTHERWISEC TRANSFER IT TO ANY THIRD PARTY, IN WHOLE OR IN PART, WITHOUT THE SPECIFICC WRITTEN CONSENT OF THE Hexagon AB AND/OR ITS SUBSIDIARIES.CC Program used to illustrate interactive Object recovery from theC Data Definition Language Data BaseC Implicit Integer (a-z)C Character string20, card120 Integer stack(50), ios, sloc(80)C Integer iarsiz Parameter ( iarsiz=10000 ) Integer iar(iarsiz),list(2000) The commons included below are related to the object names and dictionary word tables. The keyword pointer and dictionary arrays are not used in this routine. The only variable used from the SYSFIL include is the OUTPUT variable which designated which unit is to be used for printing. C Character reldic1,wrddic1 Common /MSCDLP/ ddldb,ddlmap,relnum,keynum,wrdnum Common /MSCDPR/ relptr(2001)"},"title":"User's Manual P6"},"/docs/access_user_manual/msc_nastran_2024.1_access_user_manual_007/":{"data":{"":"113 CHAPTER 10 Usage of Data Definition Language Interface Main Index Common /MSCDPW/ wrdptr(2001) Common /MSCDCR/ reldic(8000) Common /MSCDCW/ wrddic(8000)C#include “sysfil.cmn\"C Integer ddlqby(2) Data ddlqby/4hDDLQ,4hBYTL/C conin = 5CC Make sure enough space is available if ( relnum3.gt.iarsiz ) then WRITE (output,10) 10 Format (’ *** SYSTEM FATAL MESSAGE (DDLQRY)’/ * 5x,‘The number of objects3 exceeds iar dimension’) return endif The next section actives and loads the DDL commons via the function MSCLDD. When successful, iret=0, then the version and DDL compilation dates are displayed. C C Now boot the data definition language arrays into memoryC Set the data recovery for Objects and keywords kflag = 7 iret = MSCLDD (ddlmap,dbnum,kflag) if (iret.eq.0) then iret = MSCVDR (pver,sver,mon,day,year) if (iret.eq.0) then WRITE (output,20) pver,sver,mon,day,year 20 format (’ DDL Version ‘,i4,’.’,i1, * ‘, Compiled on ‘,i2,’/’,i2.2,’/’,i4) endif else WRITE (output,30) iret 30 Format (’ *** SYSTEM FATAL MESSAGE (DDLQRY)’/ * 5x,‘Error Occurred Booting DDL, error =’,i3/ * 5x,‘Verify DDL XDB specifed on command line’) return endif This next section deals with application user interface issues in obtaining action tasks and then responding to the request. The application task is terminated and possible help interaction is provided. C C Request user for the TASK ddltok = -1\nMSC Nastran Access Manual High Level Interactive Driver114 Main Index 100 continue WRITE (output,110) 110 format (/’ Enter Task (OBJECT,TOKEN,HELP,QUIT) ‘,$) READ (conin,120,iostat=ios) string 120 format (a) rellen = LNOBLN(string) if( ios.lt.0 .or. rellen.le.0 ) goto 100 Call LC2UC (string(:rellen) )CC Check if QUIT task if ( string(1:1).eq.‘Q’) then Call CLOSGR (ddlmap) if ( ddltok.gt.0 ) Call CLOSGR (ddltok) return endifCC Check for the HELP task if ( string(1:1).eq.‘H’) then WRITE (output,130) 130 format (/’ HELP function of DDLQRY’/ * 3x,‘The OBJECT task shows the Data Definition’/ * 3x,‘The TOKEN task shows which objects share Description ‘, * ‘keyword tokens’// * 3x,‘Sample object names are : GRIDX, CQD4 and SQD4R’// * 3x,‘Token process allows for boolean operations of AND(\u0026) ‘, * ‘and OR(|) between tokens’/ * 3x,‘Boolean operations are performed left to right as ‘, * ’entered’/ * 3x,‘Token strings allow primative matches at the start and ‘, * ’end of the string’/ * 3x,‘The character * is used for this purpose’// * 3x,‘An example of the TOKEN task is: ‘, * ‘QUAD4 | TRIA3 \u0026 STRESS*’) goto 100 endif When the OBJECT task is selected, this section is used to setup for the action. The first DDL action once the object name has been obtained and converted to upper case character set, is to translate the name to a surrogate key via the function MSCLDC. Given that the object name exist, the DDL control entry for the surrogate key is obtained. Finally the subroutine DBESPT , explained later, is used to format the binary DDL schema. C C Check for the OBJECT task if ( string(1:1).eq.‘O’) then 200 continueC Request user for the object name WRITE (output,210) 210 format (/’ Enter Object Name (null to quit) ‘,$)\n115 CHAPTER 10 Usage of Data Definition Language Interface Main Index READ (conin,120,iostat=ios) string rellen = LNOBLN(string) if ( ios.lt.0 .or. rellen.le.0 ) goto 100 Call LC2UC (string(:rellen) )CC Attempt to locate name in the DDL idx = MSCDLC (string,rellen,relptr,relnum,reldic) if (idx.le.0) then WRITE (output,220) string(1:rellen) 220 Format (’ *** Object ‘,a,’ is not in the Data Definition’) goto 200 elseC Read the Control Instance for the Object Call READR (ddlmap,stack,idx,iret) if (iret.ne.0) then WRITE (output,230) iret 230 Format (’ *** Object Control Instance could not be ‘, * ‘recovered, iret=’,i3) goto 200 elseC Format the Object to the screen Call DBESPT (1,stack) endif endif goto 200 endif This next section provides a functional interface which uses the DDL interfaces to perform primitive grouping of objects by title area dictionary words. The “*” symbol is used to perform pre/post word matches due to variations in word syntax. The DDL object DDLQBYTL contains an entries which use dictionary indices for keys into the object, with link lists entries to maintain the open-ended list of possible object surrogate keys. Boolean symbols of \u0026 for AND operations and | for OR operations are used to form more complex joins of the dictionary words. C C Check for the TOKEN task if ( string(1:1).eq.‘T’ ) then if ( ddltok.lt.0 ) thenC Open the DDL object containing the query tokens list(1) = ddlqby(1) list(2) = ddlqby(2) Call DBECLR (list(3),10,0) Call OPENR (dbnum,list,tlen,ddltok,0,0,0,0,0,0,iret) if ( iret.ne.0 ) then WRITE (output,310) 310 format (’ *** The token object could not be opened’) goto 100 endif\nMSC Nastran Access Manual High Level Interactive Driver116 Main Index endif C 320 continueC Request user for the object name WRITE (output,330) 330 format (/’ Enter Token clause (null to quit) ‘,$) READ (conin,120,iostat=ios) card rellen = LNOBLN(card) if ( ios.lt.0 .or. rellen.le.0 ) goto 100 Call LC2UC (card(:rellen) )C Compress the card and note where the strings are nsloc = 0 jp = 0 do 340 i=1,rellen if ( card(i:i).eq.’ ’ ) goto 340 jp = jp + 1 card(jp:jp) = card(i:i) if ( card(jp:jp).eq.’\u0026’ .or. * card(jp:jp).eq.’|’ ) then nsloc = nsloc + 1 sloc(nsloc) = jp endif 340 continue nsloc = nsloc + 1 sloc(nsloc) = jp + 1 C C Clear flags area to zero for accummulation Call DBECLR (iar,relnum,0) jp = relnum kp = jp + relnum do 500 pass=1,nsloc Call DBECLR (iar(jp+1),relnum,0) if ( pass.eq.1 ) then sstr = 1 else sstr = sloc(pass-1) + 1 endif send = sloc(pass) - 1 slen = send - sstr + 1 string = card(sstr:send) itest = INDEX(string,’*’) if ( itest.eq.0 ) thenC Presume a single term for token idx = MSCDLC (string,slen,wrdptr,wrdnum,wrddic) if (idx.le.0) then WRITE (output,410) string(1:slen) 410 Format (’ *** Token ‘,a,’ is not in the Data Definition’)\n117 CHAPTER 10 Usage of Data Definition Language Interface Main Index goto 495 endifC Read the Control Instance for the Object Call MSCPPT (ddltok,idx,iar(kp+1),ip) if ( ip.le.0 ) goto 495 do 420 i=1,ip idx = iar(kp+i) iar(jp+idx) = 1 420 continue elseC Asterisk encounter as wild match loop = MSCDLA (string,slen,wrdptr,wrdnum,wrddic,list,2000) if (loop.eq.0) then WRITE (output,430) string(1:slen) 430 Format (’ *** Token ‘,a, * ’ could not be matched in the Data Definition’) goto 495 endif loop = ABS(loop) do 450 k=1,loopC Read the Control Instance for the Object Call MSCPPT (ddltok,list(k),iar(kp+1),ip) if ( ip.gt.0 ) then do 440 i=1,ip idx = iar(kp+i) iar(jp+idx) = 1 440 continue endif 450 continue endif C Cannot operate on first list ONLY if ( pass.gt.1 ) then C Delimiters of “\u0026” AND or “|” OR are acceptable if ( card(lstdel:lstdel).eq.’\u0026’ ) thenC Perform an AND operation do 460 j=1,relnum if ( iar(j).eq.0 ) goto 460 if ( iar(jp+j).eq.0 ) iar(j) = 0 460 continue else if ( card(lstdel:lstdel).eq.’|’ ) thenC Perform an OR operation do 470 i=1,relnum if ( iar(jp+i).ne.0 ) iar(i) = 1 470 continue else\nMSC Nastran Access Manual High Level Interactive Driver118 Main Index WRITE (output,480) card(lstdel:lstdel) 480 Format (’ *** Invalid token delimiter ‘,a) goto 495 endif endif elseC Initialize for first string encountered do 490 i=1,relnum iar(i) = iar(jp+i) 490 continue endif 495 continue lstdel = sloc(pass) 500 continueC Compress the list in iar(1:relnum) lstip = 0 do 510 i=1,relnum if ( iar(i).eq.0 ) goto 510 lstip = lstip + 1 iar(lstip) = i 510 continue if ( lstip.eq.0 ) goto 320 istr = 0 do 540 i=1,lstip kp = iar(i) nl = relptr(kp+1) - relptr(kp) if ( istr+nl.gt.100 ) then WRITE (output,520) card(1:istr) 520 format (1x,a) istr = 0 endif kp = relptr(kp) do 530 j=1,nl istr = istr + 1 card(istr:istr) = reldic(kp) kp = kp + 1 530 continue istr = istr + 1 card(istr:istr) = ’ ’ 540 continue\n119 CHAPTER 10 Usage of Data Definition Language Interface Main Index if (istr.gt.0) WRITE (conout,520) card(1:istr) if ( lstip.eq.1 ) then WRITE (output,550) 550 format (’ Print Schema (y/n) ? ‘,$) READ (conin,120) string if ( string(1:1).eq.‘Y’ .or. string(1:1).eq.‘y’ ) then Call READR (ddlmap,stack,iar(1),iret) if (iret.eq.0) Call DBESPT (1,stack) endif else WRITE (output,560) 560 format (’ Print Descriptions (y/n) ? ‘,$) READ (conin,120) string if ( string(1:1).eq.‘Y’ .or. string(1:1).eq.‘y’ ) then do 580 i=1,lstipC Read the Control Instance for the Object Call READR (ddlmap,stack,iar(i),iret) if (iret.eq.0) then kp = iar(i) nl = relptr(kp+1) - relptr(kp) kp = relptr(kp) - 1 WRITE (output,570) (reldic(kp+j),j=1,nl) 570 format(’ Object : ‘,20a1) Call DBESPT (2,stack) endif 580 continue endif endif goto 320 endifC goto 100C end Support Subroutine to Process DDL Schema The purpose of the subroutine is to format the content of an object DDL. The higher application function is presumed to have converted the object name into a surrogate key and read the DDLMAP logical file to obtain the DDL control entry. Subroutine DBESPT (iopt,rec) CC Routine used to format the information concerning an object from a\nMSC Nastran Access Manual Support Subroutine to Process DDL Schema120 Main Index C supplied control instance. CC THIS PROGRAM IS CONFIDENTIAL AND A TRADE SECRET OF THE Hexagon AB AND/OR ITSC SUBSIDIARIES THE RECEIPT OR POSSESSION OF THIS PROGRAM DOES NOT CONVEY ANYC RIGHTS TO REPRODUCE OR DISCLOSE ITS CONTENTS, SELL, LEASE, OR OTHERWISEC TRANSFER IT TO ANY THIRD PARTY, IN WHOLE OR IN PART, WITHOUT THE SPECIFICC WRITTEN CONSENT OF THE Hexagon AB AND/OR ITS SUBSIDIARIES.C Implicit Integer (a-z)C Integer nattr Parameter ( nattr=14 ) Character form6,line80,keywrd8,dtype(5)1,quals(nattr)5 Character keysav8,stpwrd8 Character reldic1,keydic1,wrddic1 Integer rec(12) Logical eitherC#include “sysfil.cmn\"C Common /MSCDLP/ ddldb,ddlmap,relnum,keynum,wrdnum Common /MSCDPR/ relptr(2001) Common /MSCDPK/ keyptr(3001) Common /MSCDPW/ wrdptr(2001) Common /MSCDCR/ reldic(8000) Common /MSCDCK/ keydic(9000) Common /MSCDCW/ wrddic(8000)C Common /DBCXXX/ iz(1)C Integer bspace Parameter (bspace=1024) Integer local(bspace),inst(bspace),values(bspace)C Data quals/‘Proj ‘,‘Seid ‘,‘Path ‘,‘Subc ‘,‘Surf ‘,‘Vol ‘, · ‘Set ‘,‘Appr ‘,‘Dsgn ‘,‘Pitr ‘,‘AQMS ‘,‘Acfg ‘, · ‘List ‘,‘Comp ‘/ Data dtype/‘I’,‘R’,‘A’,‘L’,‘D’/ The first section determines the object type. This is done by examining the control entry and performed a boolean operation on the third location net to high order bit. When the bit is zero, then the object is keyed, when the bit is one then the object is vector. C if ( iopt.eq.1 ) thenC Pump out the information concerning the Object if ( IAND(rec(3),iz(bastwo+31)).eq.0 ) then form = ‘Keyed’ else form = ‘Vector’\n121 CHAPTER 10 Usage of Data Definition Language Interface Main Index endif WRITE (output,305) form 305 format (’ Format: ‘,a) endif The next section builds up the object title or description. This area was used in the previous routine to perform look ups by word boolean operations. The four entry location contains the entry number for the list of title words. This list is first extracted by the MSCPPT functions. Then the MSCASM function converts the enumerated list into a character line separated by blanks and filled with blanks. The assumption here is that two lines are sufficient for the title information. C C Build up the Description Call MSCPPT (ddlmap,rec(4),local,nw) if (nw.gt.0) then np = 0 Call MSCASM (line,66,’ ‘,’ ‘,np,local,nw) WRITE (output,310) line(1:66) 310 format (’ Description: ‘,a) if (np.ne.nw) then Call MSCASM (line,66,’ ‘,’ ‘,np,local,nw) WRITE (output,320) line(1:66) 320 format (14x,a) endif endif if ( iopt.eq.2 ) return The control entry position three is again referenced. Bits a the lower part of the word are used to indicate which attributes are used by the object. Boolean operations are performed on the low to high bits and characters strings are merged to format the line of used reference. Note that there are some object, like the DDL objects, which utilize no attributes for qualification. C C Build up the Qualifier Line np = 0 do 350 i=1,nattr if ( IAND(rec(3),iz(bastwo+i)).eq.0 ) goto 350 if (np.eq.0) then line = ’ Qualifiers: ’ // quals(i) np = 18 else line(np+1:np+5) = quals(i) np = np + 5 endif 350 continue if (np.eq.0) then\nMSC Nastran Access Manual Support Subroutine to Process DDL Schema122 Main Index WRITE (output,360) 360 format (’ Qualifiers: None’/) else WRITE (output,365) line(1:np) 365 format (a) endif The last section of higher order information is the record index to the Nastran data blocks referenced by the object during the translation process. The build technique is similar to that of the object title. A record number of zero, or zero returned words, indicates that no Nastran data block were needed for the object construction. C C Process the Data Blocks Used Call MSCPPT (ddlmap,rec(5),local,nw) if (nw.gt.0) then np = 0 Call MSCASM (line,70,’,’,’ ‘,np,local,nw) WRITE (output,410) line(1:70) 410 format (’ DB Used: ‘,a) if (np.ne.nw) then Call MSCASM (line,70,’,’,’ ‘,np,local,nw) WRITE (output,420) line(1:70) 420 format (10x,a) endif else WRITE (output,430) 430 format (’ DB Used: None’) endif This section starts the interpretation section of the entry’s DDL schema. The function MSCPIV is used to decode and populate memory with the three array of control information. The “INST” is where the schema will be placed and it is “NI” words in length. All words are integer in value. The “VALUES” area are were the test values, if any, are placed. The length is “NV” words and that data is perceived to be of mixed word context. The “LOCAL” array is the optional location where the token dictionary word enumeration will be placed. Once local variables are initialized to reference array positions and entry word counts, the processing of the schema commences.\nC C Begin the Output Area for the Object Description WRITE (output,510) 510 format (’ Record Structure’)CC Pull the information output the data base concerning Object Call MSCPIV (ddlmap,rec,inst,ni,values,nv,local,0)C\n123 CHAPTER 10 Usage of Data Definition Language Interface Main Index C Now cycle through the instructions word = 0 trap = 0 total = 0 count = 0 either = .false. intptr = -3 varflg = 0 This is the top of the process loop where end-of-schema conditions checked. The return here also assumes alignment to a control structure. When positive, a token control is a hand and a branch to a low line process section made. T est are then performed to determine if the next clause is an ENTRY/ENDENTRY or EITHER/OR section. Note that EITHER/OR clause can be embedded within the ENTRY/ENDENTRY clauses. 600 intptr = intptr + 4 if (intptr.ge.ni) goto 900CC Check if word description of opcode if (inst(intptr).gt.0) goto 650C Check for ENTRY/ENDENTRY Clauses if (inst(intptr).eq.-1) then if (total.eq.0) total = word count = inst(intptr+3) lenint = inst(intptr+2)-inst(intptr+1) + 1 trap = total + lenint entstr = word + 1 if (count.gt.0) thenC Standard ENTRY/ENDENTRY Clause total = total + lenint*count stppos = 0 elseC ENTRY/ENDKEY,pos,value Clause stppos = total + iabs(count) total = total + lenint np = inst(intptr+4) stpval = values(np) varflg = 1 endif intptr = intptr + 1 goto 600 endif\nMSC Nastran Access Manual Support Subroutine to Process DDL Schema124 Main Index C Check for EITHER/OR Clause if (inst(intptr).eq.-2) then if (.not.either) thenC First Clause either = .true. if (inst(intptr+4).eq.0) then WRITE (output,630) inst(intptr+1),inst(intptr+2) 630 format (’ Note: Items’,i4,’ to ‘,i4, * ’ are defined either as:’) else keysav = keywrd np = inst(intptr+4) WRITE (output,635) keysav,values(np),inst(intptr+1), * inst(intptr+2) 635 format (’ Note: If ‘,a,’ =’,i3,’ then items’,i4,’ to’, * i4,’ are defined as:’) endif elseC All Subsequent Clauses word = inst(intptr+1) - 1 if (inst(intptr+4).eq.0) then WRITE (output,640) 640 format (7x,‘or as:’) else np = inst(intptr+4) WRITE (output,635) keysav,values(np),inst(intptr+1), * inst(intptr+2) endif endif intptr = intptr + 1 goto 600 endif goto 900 This is the section which interprets the token control section. This is composed of a keyword index, the binary format code, the starting index within “LOCAL” where the dictionary indices are located, and the number of words used for the token description. The various functions are used to convert enumerated values into strings and to assemble the dictionary words into the output line(s). C Standard instruction, first pull the keyword string C keyword pointer : format code : start ptr : # word desc 650 keywrd = ’ ’ Call MSCPTX (keywrd,klen,inst(intptr),keyptr,keydic) word = word + 1 if (word.eq.stppos) then stpwrd = keywrd slen = klen\n125 CHAPTER 10 Usage of Data Definition Language Interface Main Index endif if (trap.eq.0 .and. total.gt.0) total = total + 1 fcode = inst(intptr+1) nw = inst(intptr+3) if (nw.gt.0) then np = 0 base = inst(intptr+2) Call MSCASM (line,59,’ ‘,’ ‘,np,local(base),nw) WRITE (output,660) word,keywrd,dtype(fcode),line(1:59) 660 format (i6,2x,a,2x,a,2x,a) 670 if (np.eq.nw) goto 690 Call MSCASM (line,59,’ ‘,’ ‘,np,local(base),nw) WRITE (output,680) line(1:59) 680 format (21x,a) goto 670 690 continue else WRITE (output,660) word,keywrd,dtype(fcode) endif if (word.eq.trap) then if (entstr.eq.trap) then WRITE (output,700) entstr,count 700 format (’ Item’,i4,’ is repeated’,i3,’ times.’) else if (count.gt.0) then WRITE (output,715) entstr,trap,count 715 format (’ Items’,i4,’ to’,i4,’ are repeated’,i3,’ times.’) else WRITE (output,720) entstr,trap,stpwrd(1:slen),stpval 720 format (’ Items’,i4,’ to’,i4,’ are repeated until ‘,a, * ’ is equal to ‘,i6) endif endif trap = 0 word = total endif goto 600 When the schema has been processed, the accumulated total is printed. Note that this is a calculated values and not part of the DDL control entry. C 900 if (total.ne.0) then if (varflg.eq.0) then WRITE (output,910) total 910 format (’ Note: Total Instance length is ‘,i5,’ words.’) else WRITE (output,915) total\nMSC Nastran Access Manual Support Subroutine to Process DDL Schema126 Main Index 915 format (’ Note: Total length is variable and a minimum of a ‘, * i5,’ word Instance is created.’) endif endifC return end\nMain Index Chapter 11: Installation 11 Installation Overview 128 Building DDLPRT 128 Building DDLQRY 128 Building DEMO1 129 Building DEMO2 129 Building SMPLR 129\nMSC Nastran Access Manual Overview128 Main Index Overview The installation of MSC Access assumes that MSC Nastran has already been installed on your computer system. Most of this chapter has been derived from the standard MSC Nastran Installation Manual dealing with the utility program installations. Installation procedures are machine dependent. The files which define the MSC Access delivery are delineated in Chapter 7. The utilities which are built from the source code delivered in the Access sub-directory are discussed in this chapter. The MSC Access sample source files are located in the MSC Access source directory install_dir/msc2001/access on UNIX and install_dir\\msc2001\\access on Windows. This directory is an optional component of the MSC Nastran installation. Building DDLPRT The DDLPRT program source code is in the file “ddlprt.F”. T o build the program, change the working directory to the access directory and type the command: msc2001 access ddlprtIf you do not have write access to the source directory, install_dir/msc2001/access on UNIX and install_dir\\msc2001\\access on Windows, copy the entire directory to another location, change the working directory to the new location, and issue the command: msc2001 ./access ddlprton UNIX, ormsc2001 .\\access ddlprton Windows. Note, the directory specification is required in this circumstance. Building DDLQRY The DDLQRY program source code is in the file “ddlqry.F”. To build the program, change the working directory to the access directory and type the command: msc2001 access ddlqryIf you do not have write access to the source directory, install_dir/msc2001/access on UNIX or install_dir\\msc2001\\access on Windows, copy the entire directory to another location, change the working directory to the new location, and issue the command: msc2001 ./access ddlqryon UNIX, ormsc2001 .\\access ddlqryon Windows. Note, the directory specification is required in this circumstance.\n129 CHAPTER 11 Installation Main Index Building DEMO1 The DEMO1 program source code is in the file “demo1.f”. To build the program, change the working directory to the access directory and type the command: msc2001 access demo1If you do not have write access to the source directory, install_dir/msc2001/access on UNIX or install_dir\\msc2001\\access on Windows, copy the entire directory to another location, change the working directory to the new location, and issue the command: msc2001 ./access demo1on UNIX, ormsc2001 .\\access demo1on Windows. Note, the directory specification is required in this circumstance. Building DEMO2 The DEMO2 program source code is in the file “demo2.f”. To build the program, change the working directory to the access directory and type the command: msc2001 access demo2If you do not have write access to the source directory, install_dir/msc2001/access on UNIX or install_dir\\msc2001\\access on Windows, copy the entire directory to another location, change the working directory to the new location, and issue the command: msc2001 ./access demo2on UNIX, ormsc2001 .\\access demo2on Windows. Note, the directory specification is required in this circumstance. Building SMPLR SMPLR reads a MSC Access data base (XDB) file produced by MSC Nastran. The sample program source code is only provided as a simple example illustrating basic concepts. It is not intended to be a complete or usable program. The SMPLR program source code is in the file “smplr.f”. To build the program, change the working directory to the access directory and type the command: msc2001 access smplrIf you do not have write access to the source directory, install_dir/msc2001/access on UNIX or install_dir\\msc2001\\access on Windows, copy the entire directory to another location, change the working directory to the new location, and issue the command: msc2001 ./access smplr\nMSC Nastran Access Manual Building SMPLR130 Main Index on UNIX, or msc2001 .\\access smplron Windows. Note, the directory specification is MSC Access in this circumstance.\nMain Index Appendix A: MSC Access DBIO Subroutine Descriptions AMSC Access DBIO Subroutine Descriptions\nDBIO Subroutine Descriptions 132 Block Data Descriptions 150 Additional DBIO Information 156\nMSC Nastran Access User’s Manual DBIO Subroutine Descriptions132 Main Index DBIO Subroutine Descriptions This appendix delineates the application interfaces to the basic DBIO (Data Base Input / Output) services. The specific interfaces for the Data Definition Language interfaces are presented in Appendix B. The underline functions and additional memory areas are discussed in the last sections of this appendix. Subroutine Name: CLOSGR\nEntry Point: CLOSGR Purpose: Closes a logical file, updates the data base dictionary control information, and releases locked pages to the pool. Calling Sequence: CALL CLOSGR (FILNUM) FILNUM Integer-in/outLogical file number to close Method: The FILNUM value is checked to verify it is in the proper range and update operations to the data base are allowed.For read-only operations, an immediate branch to the buffer unlocking logic is made. Otherwise, a decision is made between keyed or sequential object processing. For sequential objects, rewrites conditions are checked in order to trim excess blocks from the object.Information from the control area is moved to the object’s primary map or starting block location. This information is also moved to a local array used for data base dictionary entry replacement. The replacement logic is discussed in routine DICRPL. The paging pool blocks with write requirements are marked. They are ready to be written to the data base when the data base is closed or the application program calls PAGCLR. The logical file is released for re-use and FILNUM is set to 1. Subroutine Name: DBCLOS Entry Point: DBCLOS2. Purpose: Closes the logical data base and physical file. Calling Sequence: CALL DBCLOS (DBNUM,DUMMY,IRET) Method: The logical data base range and open status are checked. The FORTRAN unit number is extracted from the control area.DBNUM Integer-input Logical database number to close DUMMY Integer-input Currently unused. For prior releases, this argument represented the memory address for an I/O buffer work area IRET Integer-input Return code from the routine 0 Normal database close 1 Logical data base already closed2 DBNUM value outside valid range "},"title":"User's Manual P7"},"/docs/access_user_manual/msc_nastran_2024.1_access_user_manual_008/":{"data":{"":"133 Appendix A: MSC Access DBIO Subroutine Descriptions DBIO Subroutine Descriptions Main Index Routine PAGCLR is called to clear all outstanding write requirements. The appropriate operating system close operation is performed, and the control area is updated to show the logical data base is closed and the logical reference available for further utilization. The routine PAGDBF is used to then un-thread the logical data base from the paging pool.This routine is computer/operating system dependent. Subroutine Name: DBOPEN\nEntry Point: DBOPEN2. Purpose: Opens the logical data base against a operating system physical file. Calling Sequence: CALL DBOPEN (DBNUM,MODE,BLKSIZ,IRET,FILNAM) DBNUM Integer-input Logical database number to open MODE Integer-input Open option control +MODE New database, MODE is the maximum number of blocks 0 Old database, open read-only logically-MODE Old database, open update BLKSIZ Integer-input Block Size for the data base when new. When data bases are old, the size will be automatically extracted. Version 4 and earlier was an address to an I/O buffer, but unused until Version 71. IRET Integer-input Return code from the routine 0 Normal, data base is ready for operations. 1 Data base does not exist.2 DBNUM value is outside valid range.3 Logical data base is already assigned.4 Physical data base, defined as NEW, already exists.5 Bad length determined for the FILNAM6 A operating system READ error during vaildation7 The file associated with FILNAM is not an XDB8 The BLKSIZ exceeds the PAGCFGX specification9 Data base is heterogeneous but not DDL in the XDB10 PAGCFGX configuration for DDL support is insufficent11 PAGCFGX extra buffer specification was missing MSC Nastran Access User’s Manual DBIO Subroutine Descriptions134 Main Index 4. Method: Before any call to DBOPEN, the Paging Pool Area must be configured using PAGCFG.\nFailure to configure the Paging Pool Area results in a call to the routine FAILUR which stops the execution of the application program. After Version 71, the input versus the actual data base block size is verified against the paging pool specification. Error condition will returned when the data base block size exceeds that of the paging pool. The range of logical data bases and available status are checked. If these are outside the range or are unavailable, the appropriate IRET value is returned. All MODE values are initially processed with STATUS=‘OLD’ in a FORTRAN OPEN statement. The update and read-only modes read the first record containing data base characteristics from the data base. The content is moved from a pool-defined block to the appropriate location in the control area. When the new mode is specified, the FORTRAN OPEN statement with STATUS=‘OLD’ fails. The OPEN is re-issued using the `NEW’ status parameter. The control areas are initialized, and four blocks are reserved from the data base for the data base directory (record one), the data base dictionary primary and secondary maps (records two and three), and the first dictionary data area (record four). This routine is computer/operating system dependent. Subroutine Name: DBFLOC\nEntry Point: DBFLOC2. Purpose: Locate and open an object among the open data base(s). Calling Sequence: CALL DBFLOC (NAME, FILNUM, FLEN, FNUM, IRET) Method: The object is first located, is possible, among the open data bases by search from low to high logical data enumeration. Once the first is located, either OPENR or OPENS is used to depending upon its form. The OPENR allows for application updates, while OPENS for sequential objects opens for read-only. Statistic concerning the object size are also returned to the application. The FORTRAN unit number is extracted from the control area.Routine PAGCLR is called to clear all outstanding write requirements.The appropriate operating system close operation is performed, and the control area is updated to show the logical data base is closed and the logical reference available for further utilization.NAME Array-input Dictionary entry of an object name FILNUM Integer-input Logical file number assigned to the opened object FLEN Integer-input The length of an instance for a keyed object or the total length in words for a sequential object FNUM Integer-input The number of entries for keyed object or “1” for sequential objects IRET Integer-input Return code, conforming to OPENR/OPENS error codes, or the additional 101 - object format code is neither RECORD or VECTOR102 - dictionary entry could not be located among open database(s) 135 Appendix A: MSC Access DBIO Subroutine Descriptions DBIO Subroutine Descriptions Main Index The routine PAGDBF is used to then un-thread the logical data base from the paging pool. This routine is computer/operating system dependent. Subroutine Name: DBVALD\nEntry Point: DBVALD2. Purpose: To validate that file is an MSC Access data base and return block size and data definition language version stamps. Calling Sequence: CALL DBVAVD (IRET,FILNAM,NAML,BLKSIZ,DDLSIZ,NATIVE) Method: First the existence of the data base is determined. When the FILNAM exists, then it is opened and the data base directory is recovered. Validation then proceeds when the NATIVE mode of the data base is determined. The block counts are verified, see Section 5.1.4.1 concerning the contents of the data base directory. This validates the allocated, used and free blocks values are consistent. Using the allocated block and BLKSIZ, the physical file length is verified to eliminate file transfer issues.IRET Integer-input Return code from the routine 0 Normal, output data areas populated 1 The NAML parameter is invalid2 The data base indicated by FILNAM does not exist3 The data base could not be opened4 A operating system READ error occurred fetching information 5 Data base record counts are inconsistent6 Data base size inconsistent with number of records and BLKSIZ 10 IRET - 10 directory word is invalid and not true XDB FILNAM Character-input Physical file name stored as character variable and supplied according to operating system standards. NAML Integer-input The size of FILNAM in characters BLKSIZ Integer-output When data base exists, the block size in words of the platform DDLSIZ Integer-output When data base exists, the encrypted size of the data definition language NATIVE Integer-output Native platform flag 0 Native to current platform1 Big/little endian, 32 bit platform word construction\nMSC Nastran Access User’s Manual DBIO Subroutine Descriptions136 Main Index Additional directory words are checked for consistency of values, and if found to be invalid, the position is returned to the application via the IRET variable. Note that BLKSIZ, DDLSIZ and NATIVE are returned only when the FILNAM exists. Subroutine Name: DELREC\nEntry Point: DELREC Purpose: Delete entries from keyed objects of opened logical files. Calling Sequence: CALL DELREC (FILNUM,KEY,IRET) Method: The FILNUM range and data base status are checked, and the appropriate error return codes are set. If the KEY is not found, then the logical pointers into the object are updated to the position where the KEY would have been found. The proper return code is set, and control is returned to the calling routine. When the KEY exists, the maps to the primary, secondary and data areas are loaded and locked into the paging pool area. If the KEY points to the only entry in the object, then the control area values are reset and the secondary map block is returned to free block list. When the KEY points to the first or last entry of the object, modifications are made to both the primary and secondary map tables. For all other entries, checks to determine secondary map modifications are made. If modifications are detected, the primary map is updated. Subroutine Name: DICENT Entry Point: DICENT2. Purpose: Recover dictionary entries from the data base in ascending sequence. Calling Sequence: CALL DICENT (DBNUM,ENTRY,PRTFLG,NAME,BLK)FILNUM Integer-input Open logical file containing entries to be deleted KEY Integer-input Key of the entry to delete from the object IRET Integer-input Return code from the routine 0 Normal, entry deleted 1 KEY not found; no action taken2 Invalid logical file number3 Logical data base opened for read only; no action taken DBNUM Integer-input Logical data base number 137 Appendix A: MSC Access DBIO Subroutine Descriptions DBIO Subroutine Descriptions Main Index 4. Method: The standard bounds checking and the data base open conditions are verified. If either condition is unsatisfied, a FATAL message is issued and the job is aborted. The value of ENTRY is examined to determine the processing requirements. If ENTRY is zero, the PRTFLG value is checked to determine optional print requests. BLK is set to the first data area of dictionary entries from information stored in the control area. This block is moved to a paging pool area, and local pointers are set up. Dictionary information is returned to the calling routine. When the data area is exceeded, the next block, if any, is retrieved using the block’s linked list. If an ENTRY value of 1 is detected, no more dictionary entries exist. DICENT processing is application dependent. One dictionary entry per call is returned for processing by the application program. Subroutine Name: DICPRT\nEntry Point: DICPRT Purpose: Prints data base control values and dictionary entries on the output file. Calling Sequence: CALL DICPRT (DBNUM,OPTION)ENTRY Integer-in/out Flag to control dictionary entry processing 0 Initial condition; start at beginning of dictionary +N Returned the next dictionary entry-N No more dictionary entries exist PRTFLG Integer-input Optional print control flag for file output 0 Print dictionary content before returning first entry1 No optional print recovery NAME Array-output Contains the retrieved dictionary entry values. The array must be at least twelve words in length. BLK Integer-in/out Current data base block being processed DBNUM Integer-input Logical data base number OPTION Integer-input This argument represented the memory address of an I/O buffer work area for Version 1:30 Initial condition; start at beginning of dictionary+N Returned the next dictionary entry-N No more dictionary entries exist MSC Nastran Access User’s Manual DBIO Subroutine Descriptions138 Main Index 4. Method: The procedure is similar to the DICENT routine. DICPRT processing is application independent. All dictionary entries and optionally the control information is printed in the output file. Subroutine Name: DICRDR\nEntry Point: DICRDR Purpose: Returns control information for existing data base dictionary entries. Calling Sequence: CALL DICRDR (DBNUM,NAME,DAT,IRET) Method: The logical data base number is checked for range and open status. The failure of either check causes an error return.PRTFLG Integer-input Optional print control flag for file output For Version 4:2001.1, it was unused For Version 2001.1 and later an Print OPTION was defined0 Long print, Object entry and control values1 Short print, Object entry values only DBNUM Integer-input Logical data base number NAME Array-input Dictionary entry to locate DAT Array-output T welve word array used to return dictionary entry control information, defined as followsDAT(1) Internal data relation numberDAT(2) Format of the current relationDAT(3) Block number for primary mapDAT(4) Block number for first data areaDAT(5) Number of words per entryDAT(6) Maximum number of entries per blockDAT(7) Minimum key value for relational data structuresDAT(8) Number of entriesDAT(9) Number of data blocksDAT(10) Number of secondary mapsDAT(11) Maximum key value for relational data structuresDAT(12) Last data block in the data block linked-list IRET Integer-output Return code from the routine 0 Dictionary entry found, DAT returned1 Dictionary entry not found 139 Appendix A: MSC Access DBIO Subroutine Descriptions DBIO Subroutine Descriptions Main Index When the data base is empty, IRET is set to 1 and control is returned to the calling routine. The name is checked against the dictionary primary map. Control is returned to the calling routine, if NAME is less than any relation on the data base. Otherwise, the secondary map is searched. The appropriate dictionary data area is searched. When a match is found, the control information is returned for the dictionary entry. Subroutine Name: GRPURG\nEntry Point: GRPURG Purpose: Delete dictionary entries and release file space to the free block chain. Calling Sequence: CALL GRPURG (DBNUM,NAME,D1,D2,D3,PRINT,IRET) Method: The GRPURG routine is the only routine in the DBIO library that accepts wildcard fields in the twelve-word dictionary NAME. The wildcard fields are specified by: ****MSC Nastran BCD values for words 1 and 2 1Integervalues for words 3 through 12 The complete data base dictionary could be deleted if the NAME array was composed entirely of wildcard fields.Checks are made to verify that the logical data base number is valid and the logical data base can be updated. Failure of either check results in a return code (IRET=1) value returned to the calling routine. Dictionaries containing no entries set the return code to 1.The NAME argument is examined for wild card fields. Flags are set as appropriate for the deletion work areas.DBNUM Integer-input Logical data base number NAME Array-input Dictionary entry to delete (purge) D1 D2 Integer-input Currently unused. In earlier releases, these arguments represented locations of three I/O buffer work areas. D3PRINT Integer-input Print echo option flag 0 Do not print entry deletion messages on output file.1 Print entry deletion messages on output file. IRET Integer-output Return code from the routine 0 Dictionary entry(s) deleted1 Dictionary entry not deleted MSC Nastran Access User’s Manual DBIO Subroutine Descriptions140 Main Index The primary dictionary map is scanned. The pointers are established to the entries to be deleted. Each secondary dictionary map is scanned and the entries matching the NAME argument are deleted. When altered, the secondary map is either compressed or deleted. The corresponding primary map is then modified to reflect the changes. The processing continues until all secondary maps for each primary map pointer have been searched. When wild card fields are used to delete dictionary entries, a match between NAME/wild cards and the dictionary causes the primary map for the entry to be pushed on the free block stack. The data area is examined and flags are set to indicate data modification. If the modify flags are set and all data is to be deleted, the primary map area is released to the free block stack and all corresponding secondary maps are marked for deletion. If some data remains in the dictionary data area, it is compressed and the secondary maps are flagged to be changed. For all secondary map changes, the corresponding primary map is updated. The procedure repeats through each secondary map until all secondary maps have been examined. The primary map is finally compressed and updated. Subroutine Name: OPENC\nEntry Point: OPENC Purpose: Create new keyed object and return a logical file reference. Calling Sequence: CALL OPENC (DBNUM,NAME,WRDREC,FILNUM,D1,D2,D3,D4,D5,D6,IRET) DBNUM Integer-input Logical data base number NAME Array-input Dictionary entry and keyed object name to create WRDREC Integer-input Number of words per logical record in object FILNUM Integer-output Logical file number assigned to the object D1 Integer-input Currently unused. In prior releases, this argument represented the number of I/O buffers available D2 D3 Integer-input Currently unused. In prior releases, these arguments represented memory addresses for I/O buffer work areas. D4D5D6IRET Integer-output Return code from the routine 0 Normal data block creation1 Requested NAME already existed2 Too many logical files open 141 Appendix A: MSC Access DBIO Subroutine Descriptions DBIO Subroutine Descriptions Main Index 4. Method: NAME is checked to determine if it already exists. The control area is checked to make sure that a new object can be opened and made available for processing. If both conditions above are satisfied, the buffer management area is cleared and the DAT control area, as described in the DICENT routine description is created. The primary map blocks and the first data area are reserved in the dictionary and stored in the DAT array. The DAT array is copied to both the control area and the primary map block for file management.The logical file number assigned by the OPENC is returned to the calling application program. Subroutine Name: OPENR\nEntry Point: OPENR2. Purpose: Open existing keyed objects for random access updating and return logical file reference. Calling Sequence: CALL OPENR (DBNUM,NAME,WRDREC,FILNUM,D1,D2,D3,D4,D5,D6,IRET) Method: DICRDR is used to check the existence of the object NAME and to retrieve its DAT control area. When the object exists, it is checked for a conflict to another logical file.DBNUM Integer-input Logical data base number NAME Array-input Dictionary entry and object name to update WRDREC Integer-output Number of words per record in object FILNUM Integer-output Logical file number assigned to the object D1 Integer-input Currently unused. In prior releases, this argument represented the number of I/O buffers available D2D3 Integer-input Currently unused. In prior releases, these arguments represented memory addresses for I/O buffer work areas. D4D5D6IRET Integer-output Return code from the routine 0 Normal data block open1 Requested NAME does not exist2 T oo many logical files open3 Currently unused. In prior releases, it indicated too few buffers allocated 4 Object already open MSC Nastran Access User’s Manual DBIO Subroutine Descriptions142 Main Index If no conflicts exists, then a check for available processing space (i.e., less than twenty logical files currently open) is made. When space is available, the DAT control area is copied to the available control area. The remaining control fields are initialized for object management. The logical file number and words per record are returned to the calling application program. Subroutine Name: OPENS\nEntry Point: OPENS2. Purpose: Open sequential objects for read or write operations and return logical file reference. Calling Sequence: CALL OPENS (DBNUM,NAME,FLAG,FILNUM,Dl,IRET) Method: Check for available FILNUM to assign object then test FLAG for valid range. When the READ operation is requested, the existence of the object is verified by a dictionary search. For WRITE operations, DICRDR is called to determine if the object is new or old. For new objects, the DAT area is established and the primary and secondary dictionary blocks are mapped. For old objects, the DAT area is re-initialized for data over-writes. The control area is updated to mark the logical file in use.The assigned block is marked modified.The logical file number is returned in FILNUM to the calling routine.DBNUM Integer-input Logical data base number NAME Array-input Dictionary entry to create/update/re-use FLAG Integer-input Logical file open status flag 0 Open object to read1 Open object to write FILNUM Integer-output Logical file number assigned to object D1 Integer-input Currently unused. In prior releases, this argument represented the memory address of an I/O buffer work area. IRET Integer-output Return code from the routine 0 Normal, object open for operation1 Non-existent object is in the open for READ request2 Error connecting object in the open for WRITE request3 Too many logical files open4 Requested object is not sequential type5 FLAG value is outside valid range 143 Appendix A: MSC Access DBIO Subroutine Descriptions DBIO Subroutine Descriptions Main Index Subroutine Name: OPENSQ\nEntry Point: OPENSQ Purpose: Open a keyed object for sequential processing and return logical file reference. Calling Sequence: CALL OPENSQ (DBNUM,NAME,FILNUM,D1,IRET) Method: This routine can only be used to open keyed objects for read access. The existence of the object is determined by DICRDR, and its form (keyed) is verified. Control areas are created for logical file operations and initialized with file control data.FILNUM is returned to the calling routine. Subroutine Name: PAGCFGX PAGCFG Entry Point: PAGCFGX2. Purpose: Establish the paging pool and initialize the control area.3. Calling Sequence: CALL PAGCFGX (OUTP,STRLOC,LENGTH,MAXBUF,MAXDDL,DICFLG,ATIVE,IRET) CALL PAGCFG (STRLOC,LENGTH,MAXBUF,DICFLG,IRET)DBNUM Integer-input Logical data base number NAME Array-input Object dictionary entry and object to open FILNUM Integer-output Logical file number assigned to object D1 Integer-input Currently unused. In prior releases, this argument represented the memory address of an I/O buffer work area. IRET Integer-output Return code from the routine 0 Normal data block open 1 Requested object does not exist2 T oo many logical files open3 Unused4 Object already open for update OUTP Integer-input The FORTRAN unit for error messages and other formatted output STRLOC Integer-input Index into /DBCXXX/ for start of paging pool LENGTH Integer-input Number of words available in /DBCXXX/ past STRLOC MAXBUF Integer-input Number of words in the largest block MAXDDL Integer-input The maximum DDL size returned by DBVALD DICFLG Integer-input Dictionary cache allocation parameter NATIVE Integer-input Flag denoting if all data base processing to be platform native DAT(1) Internal data relation number MSC Nastran Access User’s Manual DBIO Subroutine Descriptions144 Main Index 4. Method: The PAGCFG entry point is still provided as part of the DBIO library, although applications should attempt to use the new interface. The PAGCFG routine invokes the PAGCFGX subroutine with OUTP=6, FORTRAN unit for standard output; MAXDDL=0, no Data Definition Language present; and NATIVE=0, implying homogeneous platform operations. The remaining old parameters are passed along to the new interface unchanged. Please review section 5.1.2, Access Block (Page) Allocation, for the implications difference between the interfaces. When the data base is empty, IRET is set to 1 and control is returned to the calling routine.The name is checked against the dictionary primary map. Control is returned to the calling routine, if NAME is less than any relation on the data base. Otherwise, the secondary map is searched. The appropriate dictionary data area is searched. When a match is found, the control information is returned for the dictionary entry. The values of LENGTH, MAXBUF and MAXDDL are saved in the paging control area. The MAXBUF is saved as an even number of words in consideration of DOUBLE PRECISION word alignment requirements. The number of pages (NOFP) is calculated. NOFP is reduced until the linked lists are contained in LENGTH memory space. The minimum memory requirement for the lists is 10NOFP. The DICFLG parameter is tested to determine which dictionary caching algorithm to use. When DICFLG is zero, ten percent of NOFP is used for caching. When positive, DICFLG indicates the number of concurrently open data bases and the maximum of 3DICFLG and 10% of NOFP is used for caching. When negative, the absolute value of DICFLG represents the number of pages to reserve for caching. This value must be less than NOFP. The dictionary cache must be at least three pages, and the maximum free pool must be at least seven pages. Therefore, the minimum NOFP is ten pages relative to the memory supplied. Starting with the Version 2001.1 release, additional memory tables for internal functions are created starting at STRLOC. These are approximately 300 words in length. The dictionary cache control lists are then allocated consisting of two lists; the linked list area and the data keys. Following the dictionary lists are five lists for data pool management. The first two are the same as those created for the dictionary cache. The third list represents the memory index of the pool pages and the data base and block identifications. Finally, when not NATIVE, and area is allocated for pooling the data definition language controls and local translation areas. The local translation areas are approximately 100 words in length. See Section 5.2.1 , Memory Allocation, for size issues concerning the data definition language section.0 NATIVE processing only 1 Heterogeneous platform information exchange possible IRET Integer-output Return code from the routine 0 Paging pool established1 Insufficient memory allocated for paging pool\n145 Appendix A: MSC Access DBIO Subroutine Descriptions DBIO Subroutine Descriptions Main Index Starting with Version 2001.1, the PAGCFGX subroutine replaces the Block Data area GRSPBD for the initialization of the DBIO control tables. The implication is that every execution of the routine returns the tables to initialization state. The implies that ALL data bases must be CLOSED or information will be lost. State information in the /DEBUG/ commons are also cleared. Subroutine Name: PAGCLR\nEntry Point: PAGCLR Purpose: Flush outstanding write requests in the paging pool to their specific physical devices. Calling Sequence: CALL PAGCLR Method: All pages in the pool are tested for outstanding write requests. This is determined by the sign of the logical data base assigned to the page. Negative values indicate outstanding write requests. Both the logical data base and the absolute block number are decoded from the data base key area. BLKWRT forces the block content to be transferred to the physical storage device. The sign is cleared, and the existing memory copy is retained. After all pages have been written, the directory and control blocks for all open data bases are updated and written back to the appropriate data base. Subroutine Name: READBS Entry Point: READBS Purpose: Return previous keyed entry of an object based on current logical file position. Calling Sequence: CALL READBS (FILNUM,ARRAY,IRET) Method: Checks are performed to confirm that the logical file is valid and the data base is open. If no entries exist, control is returned to the calling routine. The data base and current logical file position are determined from the control area, and an index to the first entry of the block is resolved. If the index can be decremented, the data block is moved to the paging area and a map to the block is created. Otherwise, the data block back pointer is used to locate the previous data block and set the pointer to its last entry. The control area is updated, and the entry information is returned to the calling routine.FlLNUM Integer-input Logical file number assigned by open routine NAME Array-input Used to store the objects entry IRET Integer-output Return code from the routine 0 Normal read from object1 Beginning of object detected on read, or beginning of object previously detected, or no entries in object 2 Logical file number is outside range3 Logical file is not keyed object MSC Nastran Access User’s Manual DBIO Subroutine Descriptions146 Main Index If the pointer is positioned at the beginning of a object, the first entry of the object is returned and the return code (IRET) is set to one. The minimum dimension of ARRAY must be the same as the size of the largest entry to be processed. If the object has more values than the declared dimension of ARRAY, then memory is overwritten unpredictably. No error message is printed and no failed return code value is set. Subroutine Name: READR\nEntry Point: READR Purpose: Read a specific entry from a keyed object Calling Sequence: CALL READR (FILNUM,ARRAY,KEY,IRET) Method: Checks are performed to verify the logical unit range and the data base open status. Control is returned to the calling routine when no entries are found in the object. The data base is determined from the control area. The block chain to the entry is established.If the KEY does not exist, then one of the following takes place:If the requested KEY is lower than the smallest KEY in the object, then the first entry of the object is returned with a return code (IRET) set to one. If the requested KEY exceeds the largest KEY in the object, then the last entry of the object is returned with a return code (IRET) set to four.If the requested KEY is between the smallest and the largest KEY, then the next larger KEY in the object is used to return the entry and the return code (IRET) is set to one. If the KEY is found in the object; the paging and control areas are updated, the entry is returned, and the return code (IRET) is set to zero. The minimum dimension of ARRAY must be the same as the size of the largest entry to be processed. If the entry has more values than the declared dimension of ARRAY, then memory is overwritten unpredictably. No error message is printed, and no failed return code value is set.FlLNUM Integer-input Logical file number assigned in open routine ARRAY Integer-input Array used to store the object entry KEY Integer-input First word of the entry to locate IRET Integer-output Return code from the routine 0 Normal read from object 1 KEY not found2 FILNUM out of range or not open3 FILNUM was not a keyed object4 KEY greater than maximum key5 No entries exist for object 147 Appendix A: MSC Access DBIO Subroutine Descriptions DBIO Subroutine Descriptions Main Index Subroutine Name: READS\nEntry Point: READS Purpose: Read information from a sequential object Calling Sequence: CALL READS (FILNUM,ARRAY,ROOM,NREAD,EOR,IRET) Method: Checks are performed to verify the range of the logical unit and the open status of the object. The sequential format of the object is verified. No data in the object causes control to be returned to the calling routine.Local variables are initialized from the argument list, and the current block is positioned according to the control information. A connection to the block in the paging pool is established. The contents of the current block are checked against the transfer requirements to determine the information to be returned. The data is copied from the paging buffer to the application array, and the local variables are updated. The amount of data transferred is checked to determine if all requested data has been moved. If not, the next block is recovered and the data transfer continues. Processing continues until either the transfer requirements are satisfied or the end of data is encountered. The control area is updated. The number of words read NREAD is returned to the calling routine. The minimum dimension of ARRAY must be the third argument ROOM in the calling sequence. This argument limits the number of words to return to the calling routine for processing. If the object has more values than the ROOM argument value, then ROOM number of words are returned, the number of words actually read (NREAD) is set to ROOM, and the read transfer indicator (EOR) is set to 1.FlLNUM Integer-input Logical file number assigned in open routine ARRAY Array-Output Area to contain the sequential information ROOM Integer-input Number of words requested from the object current cursor location NREAD Integer-Output Number of words returned (up to maximum of ROOM) EOR Integer-Output Read transfer status indicator 0 All requested data returned 1 Not all requested data returned IRET Integer-output Return code from the routine 0 Normal read from object1 End of record/file encountered2 FILNUM outside range or file not open3 Data block not sequential object4 Data block not open for read MSC Nastran Access User’s Manual DBIO Subroutine Descriptions148 Main Index Subroutine Name: READSQ\nEntry Point: READSQ Purpose: Read either the next entry or a series of entries starting at the next entry from keyed object Calling Sequence: CALL READSQ (FILNUM,ARRAY,ROOM,NREAD,EOR,IRET) Method: The difference between this routine and READBS is that the entries returned are the next entry instead of the previous entry. Checks are made to verify each subroutine argument.The skip data versus the return values is determined by the sign of ROOM. The entry count is converted to words by extracting the words per record from the control area.The database and current position pointers are extracted from the control area, and a data buffer is established in the paging pool. The data is transferred to the array until either all requirements are met or an end of file is encountered. The control area pointer is updated to show the new current position.The NREAD argument is set if a short transfer is detected.The minimum dimension of ARRAY must be the same as the size of the largest object to be processed. Processing of multiple entries may require a larger minimum dimension. If more values than the declared dimension of ARRAY are requested, then memory is overwritten unpredictably. No error message is printed, and no failed return code value is set.FlLNUM Integer-input Logical file number assigned in open routine ARRAY Array-Output Area containing the read entries ROOM Integer-input Number of entries to read +ROOM Number of entries to return -ROOM Advance file cursor by ROOM entries, but return no data NREAD Integer-output Number of words returned in ARRAY EOR Integer-output Read transfer status indicator 0 All requested data was returned1 Not all requested data was returned IRET Integer-output Return code from the routine 0 Normal read from object1 End of file encountered2 FILNUM out of range, or file not open3 Data block not keyed object 149 Appendix A: MSC Access DBIO Subroutine Descriptions DBIO Subroutine Descriptions Main Index Subroutine Name: WRITEI\nEntry Point: WRITEI Purpose: Insert or update entries in keyed objects Calling Sequence: CALL WRITEI (FILNUM,REC,IRET) Method: Checks are made to verify the open status of the object and the range of the logical units. The data block characteristics are recovered from the control area. The control area is checked for the special case of first write to the object. This case requires different processing than all other writes to the object. If entries already exist, then the new entry is checked to determine whether to update or create it. Updating existing entries is resolved from the entry pointers set in the file control area.For new entries, one of the following conditions exist:The current entry extends the object because its KEY is greater than the last KEY in the object. The entry is appended to the table, and the control area is updated. The current entry’s KEY is less than the first KEY in the object. This entry becomes the new first entry of the object, and the control area is updated. The current entry is between the first and last entries in the object. If space exists in the current buffer to insert the entry, then the entry is inserted and the control area is updated. If sufficient space is not available, the object is split between data blocks. Then the mapping pointers are updated, the entry is inserted, and the control area is updated. Subroutine Name: WRITES Entry Point: WRITES2. Purpose: Write content to an opened sequential object Calling Sequence: CALL WRITES (FILNUM,REC,NWRDS,IRET)FlLNUM Integer-input Logical file number assigned in open routine REC Array-input Area containing the entry to be inserted/updated IRET Integer-output Return code from the routine 0 Normal write to object 1 The data entry failed to be inserted/updated FILNUM Integer-input The logical file number assigned from open routine REC Array-input The area containing the word(s) to append to the current sequential record NWRDS Integer-input The length in words of the REC area MSC Nastran Access User’s Manual Block Data Descriptions150 Main Index 4. Method: Checks are performed to verify the open status of the object, the range of the logical unit, and the sequential object format. The status from the control area is checked to determine if the object is new or old.Local variables are set indicating database and current file position.The information is transferred from the application work area to buffers in the paging pool.When all data has been transferred, the control area is updated to indicate the current block and the last used location. Block Data Descriptions Block Data: DBCTBD\nPurpose: Initialize the labeled common block, listed below, for MSC Access. /DBCTA1/ NELEMS, LAST, INCR, NGROUP, E(1440) Description: This block data initializes data for MSC Nastran, MSC/GRASP, and MSC/XL structural elements. All elements currently defined are available. They are arranged by the element internal type number. Each element entry contains INCR number of values. References into this data area should always use INCR for index computations. This allows for future growth of the data area. NELEMS is the current number of elements in the system. LAST is the first word of the last element entry. DO loops have the following form:DO xxx I = 1, LAST, INCR . . . . . . . . xxx CONTINUEIRET Integer-output Return code from the routine 0 Normal termination 1 The FILNUM was out of range or not open2 The object form was not of sequential type3 The object was not open for write operations 151 Appendix A: MSC Access DBIO Subroutine Descriptions Block Data Descriptions Main Index In the above loop, E(I) always points to the first word of an element entry. NGROUP is the number of different groups into which the elements can be separated.E is an array containing the element information. The array contains NELEM times INCR elements. Each element is defined as follows:\nFirst half of element name (A4) Second half of element name (A4)3. Element type number4. MSC Access file mnemonic for stress and force data recovery5. Label mnemonic for table and xyplot request in recover6. Sort position in the output file processing7. Class Grouping 1-\u003e 1D elements such as RODs, BEAMs, etc2 -\u003e 2D element plates3 -\u003e 3D element solids Maximum number of grid points for the element type. (Missing grid numbers are denoted by “-1” or zero.) Number of faces in the FACE/GRASP object Number of entries within connection object11. Name of property data block12. Number of entries within property object13. Minimum number of grid points on an element14. MSC Nastran internal base element number derived from GPTABD15. Unused User defined elements can be added to this list provided they are defined in the same way, the values for NELEM and INCR are increased, and the E array size is increased. Differences from MSC Nastran DBCTBD contains information similar to the Element Summary Table (EST) described in the MSC Nastran Programmer’s Manual. The differences between the EST and the data in DBCTBD are: The EST contains all elements supported by MSC Nastran while DBCTBD contains only the elements supported by MSC/XL and MSC/GRASP. The DBCTBD list is shorter. The element types were re-enumerated in DBCTBD. MSC Nastran Access User’s Manual Block Data Descriptions152 Main Index 18. The following table relates MSC Access element type numbers to their corresponding MSC Nastran element type numbers. MnemonicMSC Access Element TypesMSC Nastran Element Types AABSF 48 101 AEROBEAM 50 16 AEROQ4 52 72 AEROT3 51 15 AXIF2 - 47 AXIF3 - 48 AXIF4 - 49 BAR 12 34 BARS 13 100 BEAM 10 2 BEAMP 88 105 BEND 54 69 BUSH 47 102 BUSH1D 92 40 CHBDYE 44 107 CHBDYG 45 108 CHBDYP 46 109 CONE - 35 CONM1 30 29 CONM2 31 30 CONROD 8 10 CONV - 110 CONVM - 111 CVINT - 192 DAMP1 20 20 DAMP2 21 21"},"title":"User's Manual P8"},"/docs/access_user_manual/msc_nastran_2024.1_access_user_manual_009/":{"data":{"":"153 Appendix A: MSC Access DBIO Subroutine Descriptions Block Data Descriptions Main Index DAMP3 22 22 DAMP4 23 23 DAMP5 - 106 DUM3 - 55 DUM4 - 56 DUM5 - 57 DUM6 - 58 DUM7 - 59 DUM8 - 60 DUM9 - 61 ELAS1 16 11 ELAS2 17 12 ELAS3 18 13 ELAS4 19 14 FLMASS - 46 FLUID2 - 43 FLUID3 - 44 FLUID4 - 45 GAP 15 38 HACAB 32 83 HACBR 33 84 HBDY - 52 HEXA 2 67 HEXAP 41 141 HEXPR 35 76 MASS1 24 25 MASS2 25 26MnemonicMSC Access Element TypesMSC Nastran Element Types\nMSC Nastran Access User’s Manual Block Data Descriptions154 Main Index MASS3 26 27 MASS4 27 28 PENPR 36 77 PENTA 6 68 PENTAP 42 142 PLOTEL 49 31 QUAD 94 164 QUAD4 1 33 QUAD8 3 64 QUADP 86 103 QUADR 29 82 QUADX 95 171 QVECT - 113 QVOL - 114 RADBC - 115 ROD 9 1 SFINT - 197 SHEAR 11 4 SLIF1D - 116 SLOT3 - 50 SLOT4 - 51 TETPR 37 78 TETRA 14 39 TETRAP 43 143 TRIA3 4 74 TRIA6 7 75 TRIAP 87 104MnemonicMSC Access Element TypesMSC Nastran Element Types\n155 Appendix A: MSC Access DBIO Subroutine Descriptions Block Data Descriptions Main Index Block Data: GRSPBD\nPurpose: Initialize the labeled common blocks listed below for MSC Access from Version 1 through 2001.0. At Version 2001.1 and later, this block data is no longer necessary and its function of initialization has been moved to the PAGCFGX subroutine. The number of words in each common block is listed in parentheses after the common block name. /DEBUG/ (30) /GRFIST/ (838) /GRDBLK/ (572)/SYSFIL/ (25) The above lengths are for the 2001.1 version and the sizes are for access to 30 logical data bases and 30 logical files open simultaneously. The common blocks indicated below are no longer used by the DBIO service layer and represent lengths used for version 1 through 2001.0. /DICPTR/ (1)/PTRBLK/ (26) Description: Do not use or access information in the labeled COMMON blocks above. The only exceptions are:TRIAR 34 70 TRIAX 96 168 TRIAX6 28 53 TUBE 5 3 VISC 93 24 VUBEM 91 191 VUHBDY - 199 VUHEXA 38 145 VUPENTA 39 146 VUQUAD 89 189 VUTETRA 40 147 VUTRIA 90 190 WELD 53 200MnemonicMSC Access Element TypesMSC Nastran Element Types Note: The MSC Access element type enumeration for GENEL is 57 and DMIG is 58 MSC Nastran Access User’s Manual Additional DBIO Information156 Main Index a. The first value in the SYSFIL common block for Version 4 through 2001.0. This value controls the FORTRAN unit number for the standard output. b. The DEBUG common block. This common area contains 30 logical variables initialized to FALSE. These variables can be used to control diagnostic output. This block data is fully described in the Version 66, MSC/NASTRAN Programmers Manual under the DBC module description. Additional DBIO Information Additional DBIO Subroutines The following subroutines are an integral part of the DBIO library. They are called by the subroutines described in the previous section. Do not use any of these names as the names for your subroutines. The above routines are described in the Version 66 MSC Nastran Programmers Manual as part of the DBC module description. Labeled Common Blocks The following labeled common blocks are used in the subroutines in the DBIO object library in Version 66. They should not be redefined or reused. Common block lengths are given in wordsBLKFIX DATMGR FAILUR MSCLOC BLKFRE DBCTBD INTSWP MOVEW BLKGET DBNCMP MSCBTP NEWFST BLKMGR DBRMOV MSCEQI PAGDBF BLKMRK DEPBUG MSCFDR SPLIT1 BLKRD DICDAT MSCGDI TABINS BLKRET DICINS MSCGDM TBLOOK BLKWRT DICMGR MSCGSK WRTFSTCFR DICRPL MSCIQE WRTLST CLC DIOMSG MSCLMK Common Block Defined In Length DBCTA1 DBCTBD 1440 DBCXXX SMPLR 100000 DEBUG PAGCFGX 30\n157 Appendix A: MSC Access DBIO Subroutine Descriptions Main Index Note that DBCXXX is the equivalent of the MSC Nastran open core common block concept and is defined in the SMPLR prototype driver program.GRDBLK PAGCFGX 572 GRFIST PAGCFGX 838 SYSFIL PAGCFGX 25Common Block Defined In Length\nMSC Nastran Access User’s Manual 158 Main Index\nMain Index Appendix B: MSC Access Data Definition Language Interface Routines BMSC Access Data Definition Language Interface Routines Introduction 160 Subroutines 160 Static COMMON Specifications 168 Additional Support Routines 169\nMSC Nastran Access User’s Manual Introduction160 Main Index Introduction The subroutines defined in this section are built as an application layer upon the fundamental DBIO service routines described in Appendix A. These routines allow applications to develop a generic interface to the objects created by the MSC Nastran DBC interface. These interfaces allow application to dynamically determine the attributes used by an object for the version release, the size of the object before open conditions, a generic symbol to token position and the numerical type of the token for application data formatting. Information which these functions utilize has been shipped with MSC Nastran starting with Version 68.0. Subroutines Subroutine Name: MSCASM Entry Point: MSCASM Purpose: Assembles a list of word pointers into literal text string with fill characters Calling Sequence: CALL MSCASM (LINE, LENGTH, DELIMIT, FILL, STR, LIST, NLIST) LINE Char-output Local application character string to return word tokens LENGTH Integer-input Maximum character length of the “line” stringDELIMIT Char-input Character to be used to delimit the tokensFILL Char-input Character to be used to fill the remainder of the assembled lineSTR Integer-in/out Starting location, initialized to zero and reset on return to current list location LIST Integer-input The dictionary word pointer list obtained via an application call to MSCPPTNLIST Integer-input The number of tokens in the list obtained via an application call to MSCPPT Method: The character string LINE is constructed from the enumerated word values contained in the LIST array. The words are separated by the DELMIT character, and the remainder of LINE is filled with the FILL character beyond the last word of the LINE to the size of the LINE defined by LENGTH. This routine can be called more than once since the number of words comprising a text clause may exceed the LINE length. The monitoring of the STR parameter will indicate when the NLIST tokens have been processed. Function Name: MSCDLC Entry Point: MSCDLC Purpose: Extracts the enumeration of a string value from the DDL mapping table.Calling Sequence:\nINDEX = MSCDLC (STRING,SLEN,PTR,NUM,DIC)\n161 Appendix B: MSC Access Data Definition Language Interface Routines Subroutines Main Index INDEX Integer-return Enumeration value of the string 0 -\u003e unsuccessful +n -\u003e enumeration value STRING Char-input Character string to locate within a schema mapping table SLEN Integer-input The length in characters of stringPTR Integer-input The mapping pointer table to be utilizedNUM Integer-input The number of entries in the associated pointer tableDIC Char-input The character dictionary associated with the pointer table Method: The words comprising the dictionary are searched for a match and the enumerated value of the word is returned. Function Name: MSCKTY Entry Point: MSCKTY Purpose: Determine the type of key an object utilizesCalling Sequence: IRET = MSCKTY (OBJECT,KEYTYP) IRET Integer-return Return code 0 -\u003e successful 1 -\u003e unsuccessful, object name was not located in DDL schema2 -\u003e first token could not be recovered OBJECT Char-input Object name to locate in the schema stored as a string of length eightKEYTYP Integer-output Type of the object key 0 -\u003e unknown1 -\u003e GKEY - grid access key2 -\u003e EKEY - element access key3 -\u003e CKEY - multi-object connection key4 -\u003e XKEY - external grid/element access key Method: Load the object DDL template and check if first token matches one of the above types. When match occurs, return enumeration as KEYTYP and set function status. Function Name: MSCLDD Entry Point: MSCLDD Purpose: Initializes application memory with schema tables.Calling Sequence: IRET = MSCLDD (DDLMAP, DDLDB, FLAG) IRET Integer-return Return code from function\nMSC Nastran Access User’s Manual Subroutines162 Main Index 0 -\u003e Successful n -\u003e Various load/skip/memory problems were detected DDLMAP Integer-output Logical file number associated with the schema mapping objectDDLBD Integer-input Logical data base application assigned to the schema data baseFLAG Integer-input Boolean flag used to reduce memory requirement by not loading mapping tablesBit-wise supplied flag defined as the “2’s” bit summations1 -\u003e Load the object name tables2 -\u003e Load the token name tables4 -\u003e Load the description word tables Method: Save the logical data base reference to the Data Definition Language resource. The load the information and counts into the static common locations. The loads proceed first for the object names, followed by the token and description areas. The various sections are optionally loaded into memory and no checks are performed concerning the target area sizes, therefore, array over runs may occur if insufficient area was allocated. Function Name: MSCLRA Entry Point: MSCLRA Purpose: Fills out the dictionary entry array from an environment table Calling Sequence: IRET = MSCLRA ( OBJECT,NAME, ENV ) IRET Integer-return Return code 0 -\u003e Successful 1 –\u003e Unsuccessful, object name was not located in DDL schema OBJECT BCD-input Object name to locate in the schema stored as a two word integerNAME Integer-output Integer array conforming to an MSC Access dictionary standardENV Integer-input The current environment table The list below indicate the location and the order of the environment array:\nProject Superelement3. Path4. Subcase5. Set Identification6. Surface Identification7. Volume Identification 163 Appendix B: MSC Access Data Definition Language Interface Routines Subroutines Main Index 8. Approach 9. Design Cycle 10. P Iteration11. Aero Mach, Q and Symmetry enumeration12. Aero configuration13. List Identification14. Component Identification Method: The object name is converted into a surrogate key and the DDL control entry recovered. The output NAME field is then constructed using the attribute flags on the control entry merging with the values in the environment array. Function Name: MSCLRT Entry Point: MSCLRT Purpose: Initializes memory for interfacing to a specific object when entry not needed. Calling Sequence: IRET = MSCLRT (MNAME,RLEN,TNAME,TLEN, STR, FTYPE, KNT, STRIDE) IRET Integer-return Return code from function -1 -\u003e Object entry is needed to resolved embedded EITHER/OR clause 0 -\u003e Successful1 -\u003e MNAME object could not be located within the schema2 -\u003e The control record could not be recovered from the MNAME object3 -\u003e The schema instance was incorrectly formatted4 –\u003e Incomplete schema instance was detected5 -\u003e Bad operational code was detected6 -\u003e The instruction operational codes are out of sequence7 -\u003e The internal memory area is about to be exceeded8 –\u003e The TNAME could not be located9 –\u003e Internal memory for clauses has been exceeded10 –\u003e Internal memory for values has been exceeded MNAME Char-input The object name to locate within the schemaRLEN Integer-input The length of the MNAME string in charactersTNAME Char-input The token name to locate within the objectTLEN Integer-input The length of the TNAME string in charactersSTR Integer-output The word displacement within the entry where the token is positionedFTYPE Integer-output The format type of the token 1 -\u003e Long Integer2 -\u003e Real Single Precision\nMSC Nastran Access User’s Manual Subroutines164 Main Index 3 -\u003e MSC Nastran Character Format 4 -\u003e Logical5 -\u003e Real Double Precision KNT Integer-output The number of times the token appears in the entrySTRIDE Integer-output The word displacement between the token(s) in the entry Method: The object name is mapped to the surrogate key and the control entry recovered. The DDL is interpreted and saved as a memory structure in a static common and passed to the other as a per need basis. Subroutine Name: MSCPIV Entry Point: MSCPIV Purpose: Recovers the schema for the DDL objectCalling Sequence: CALL MSCPIV (DDLMAP, RECORD, INST, NINST, VALUES, NVAL, DESC, FLAG) DDLMAP Integer-input Logical file handler assigned to the schema database RECORD Integer-input Control instant for enumerated object obtained from DDLMAPINST Integer-output An array of instruction codes used to describe an object entryNINST Integer-output The length of “INST” in wordsVALUES Mixed-output An array of integer/real values pointed to by the “INST” arrayNVAL Integer-output The length of “VALUES” in wordsDESC Integer-output Application area used for description enumeration data recoveryFLAG Integer-input Flag to indicate if description enumeration is to be recovered 0 -\u003e Recover description enumeration1 -\u003e Skip description enumeration recovery Method: When supplied the object data definition language control entry ( RECORD) a memory structure is created at INST for processing at the application level. This memory structure is described in Chapter 6 and an example and discussion provided in Chapter 10. The DESC area which contains the token description can be optionally skipped to save memory when not needed. Subroutine Name: MSCPPT Entry Point: MSCPPT Purpose: Extracts a dictionary word pointer list for later processing. Examples are titles, descriptions, attributes, etc. Calling Sequence: CALL MSCPPT ( DDLMAP, ADDR, LIST, NLIST )\n165 Appendix B: MSC Access Data Definition Language Interface Routines Subroutines Main Index DDLMAP Integer-input Logical file handler assigned to the schema data base ADDR Integer-input List address obtained from DDLMAP object to specific informationLIST Integer-output Local application work area used to return list valuesNLIST Integer-output The number of tokens in the list Method: Using the DDL control entry, an application writer can recover a LIST of enumerated words comprising a text clause. Examples of these text clauses are the object description, token definition and object title information. The size of LIST is assumed to be sufficient to contain the LIST of enumerated word values. Subroutine Name: MSCPTX Entry Point: MSCPTX Purpose: Recovers the text string from an enumerationCalling Sequence:\nCALL MSCPTX ( STRING, SLEN, INDEX, PTR, DIC ) STRING Char-output Local application character string to return word token SLEN Integer-output Length of the token in charactersINDEX Integer-input The token’s enumerated valuePTR Integer-input Mapping pointer table to use when resolving the enumerationDIC Char-input The dictionary table associated with the mapping pointer table Method: The information at index of the PTR array is used to recover string base and length information and the characters are transferred. Function Name: MSCRTI Entry Point: MSCRTI Purpose: Initializes memory for interfacing to a specific object when entry is needed.Calling Sequence: IRET = MSCRTI (MNAME,RLEN,TNAME,TLEN, ENTRY,ENTLEN,STR, FTYPE, KNT, STRIDE) IRET Integer-return Return code from function -1 -\u003e Object entry is needed to resolved embedded EITHER/OR clause 0 -\u003e Successful1 -\u003e MNAME object could not be located within the schema2 -\u003e The control record could not be recovered from the MNAME object3 -\u003e The schema instance was incorrectly formatted4 –\u003e Incomplete schema instance was detected\nMSC Nastran Access User’s Manual Subroutines166 Main Index 5 -\u003e Bad operational code was detected 6 -\u003e The instruction operational codes are out of sequence7 -\u003e The internal memory area is about to be exceeded8 –\u003e The TNAME could not be located9 –\u003e Internal memory for clauses has been exceeded10 –\u003e Internal memory for values has been exceeded11 -\u003e Token string located, entry content does not match request MNAME Char-input The object name to locate within the schemaRLEN Integer-input The length of the MNAME string in charactersTNAME Char-input The token name to locate within the objectTLEN Integer-input The length of the TNAME string in charactersENTRY Array-input Object entry to be used to resolve DDL clausesENTLEN Integer-input The length of the object entrSTR Integer-output The word displacement within the entry where the token is positionedFTYPE Integer-output The format type of the token 1 -\u003e Long Integer2 -\u003e Real Single Precision3 -\u003e MSC Nastran Character Format4 -\u003e Logical5 -\u003e Real Double Precision KNT Integer-output The number of times the token appears in the entrySTRIDE Integer-output The word displacement between the token(s) in the entry Method: The object name is mapped to the surrogate key and the control entry recovered. The DDL is interpreted and saved as a memory structure in a static common and passed to the other as a per need basis. Function Name: MSCTFA Entry Point: MSCTFA Purpose: Determine if object utilizes a specific dictionary attributeCalling Sequence:\nIRET = MSCTFA ( OBJECT,ATTR ) IRET Integer-return Return code 0 -\u003e object uses the attribute as a dictionary qualifier 1 -\u003e objects does not used the attribute for qualification OBJECT Char-input Object name to locate in the schema stored as a string of length eightATTR Integer-input Attribute enumeration (see MSCLRA for enumeration list)\n167 Appendix B: MSC Access Data Definition Language Interface Routines Subroutines Main Index Method: Convert the object name into a surrogate key and extract the DDL control entry. T est for usage of the enumerated attribute and return to application usage information as functional return. Function Name: MSCVDR Entry Point: MSCVDR Purpose: Recover the version and date of the Data Definition Language data base Calling Sequence:\nIRET = MSCVDR ( PVER,SVER,MON,DAY,YEAR) IRET Integer-return Return code 0 -\u003e Information was successfully recovered 1 -\u003e A read error occurred when recovering the information PVER Integer-output The primary version stamp SVER Integer-output The secondary version stamp MON Integer-output The enumerated month the DDL was compiledDAY Integer-output The enumerated day the DDL was compiledYEAR Integer-output The enumerated year the DDL was compiler as a four digit value Method: Once the DDL data base is open via the MSCLDD function, the version and date for the compilation can be recovered. The version is return in two parts, the primary and sub-version of the MSC Nastran release. This can be interpreted as “PVER.SVER” and is returned in integer format. The month (MON) is a value of 1 through 12 representing the month of the year. The YEAR value is a four digit number, therefore 1900’s or 2000+ can be distinguished. Function Name: MSCXII\nEntry Point: MSCXII Purpose: Extracts token information by relative word location when entry is required.Calling Sequence: IRET = MSCXTI ( IWORD, ENTRY,TNAME,TLEN, FTYPE) IRET Integer-return Return code 0 -\u003e Successful 1 -\u003e Unsuccessful2 –\u003e Word index is out of range of the entry3 -\u003e Word location within EITHER/OR clause, but not match was made IWORD Integer-input Token’s word displacement into the object instantENTRY Array-input Object entry to extract information by word locationTNAME Char-output The character string associated with the tokenTLEN Integer-output The length in characters of the tokenFTYPE Integer-output The format type of the token\nMSC Nastran Access User’s Manual Static COMMON Specifications168 Main Index 1 -\u003e Long Integer 2 -\u003e Real Single Precision3 -\u003e MSC Nastran Character Format4 - \u003eLogical5 - \u003eReal Double Precision Method: The token information of objects which are composed of a distinct data description can be interrogated by relative token position indicated with the IWORD parameter. When IWORD is a position within the entry, the token name, length and type are returned. Function Name: MSCXTI\nEntry Point: MSCXTI Purpose: Extracts token information by relative word location when entry not required.Calling Sequence: IRET = MSCXTI (IWORD, TNAME,TLEN, FTYPE) IRET Integer-return Return code 0 -\u003e Successful +1 -\u003e Object description was not correctly loaded via MSCLRT-1 –\u003e Use alternate function since token information is non-distinct IWORD Integer-input Token’s word displacement into the object instantTNAME Char-output The character string associated with the tokenTLEN Integer-output The length in characters of the tokenFTYPE Integer-output The format type of the token 1 -\u003e Long Integer2 -\u003e Real Single Precision3 -\u003e MSC Nastran Character Format4 - \u003eLogical5 - \u003eReal Double Precision Method: The token information of objects which are composed of a distinct data description can be interrogated by relative token position indicated with the IWORD parameter. When IWORD is a position within the entry, the token name, length and type are returned. Static COMMON Specifications Common /MSCDLP/ DDLBB, DDLMAP, RELNUM, KEYNUM, WRDNUM Integer RELPTR,KEYPTR,WRDPTR\n169 Appendix B: MSC Access Data Definition Language Interface Routines Additional Support Routines Main Index Character1 RELDIC,KEYDIC,WRDDIC Common /MSCDPR/ RELPTR(2001) Common /MSCDPK/ KEYPTR(3001)Common /MSCDPW/ WRDPTR(2001)Common /MSCDCR/ RELDIC(8000)Common /MSCDCK/ KEYDIC(9000)Common /MSCDCW/ WRDDIC(8000) Note all variables are assumed to be long integers (ie I4). The variables RELDIC, KEYDIC and WRDDIC are defined to be characters of the FORTRAN definition CHARACTER*1. The sizes of the static arrays meet the MSC Access Version 2001.1 release level. Although it is possible to recover from the DDLMAP object the size of these arrays, FORTRAN, currently does not normally provide a facility which is platform independent to perform dynamic memory allocations. These structures should be allocated within the MAIN program for platform independence. Additional inclusion into application specific routines is upon a need basis. The previously defined interface routines use these structures to exchange information and status. In addition to the above, the following internal common blocks are utilized. Common /MSCRTM/ LSTEMP, NTOKEN, RELTYP, NCLAUS,TOKLST(512),CLSLST(3,10),VALLST(10) Internal controls passed between MSCLRT and MSCXTI.All common references are initialized in subroutine MSCLDD. Additional Support Routines The following routines are used to support the schema interface, but, are not to be invoked by the application program directly. MSCCLR - Clear memory areas. MSCLDC - Loads and converts character tables from DDLPANDC.MSCLDI - Loads and converts integer tables from DDLPANDC.MSCLSP - Skips logical tables based upon flags given to MSCLDD.\nMSC Nastran Access User’s Manual Additional Support Routines170 Main Index\nMain Index Appendix C: Input/Output Examples C Input/Output Examples MSC Nastran Input Data 172 MSC Nastran Output 175 MSC Access SMPLR Program Output 190\nMSC Nastran Access User’s Manual MSC Nastran Input Data172 Main Index MSC Nastran Input Data The example problem a101x.dat located in the access sub-directory of the installation is a simple example in linear statics solution format. The model is the right quadrant of a membrane plate with a circular hole in the center. Symmetrical boundary conditions are applied to the double planes of symmetry and load are applied via rigid elements. The three loading conditions are loads in the x-direction, then the y direction and finally a SUBCOM is used to combine both previous cases. Although there are many input techniques available to construct an input deck, the most primitive method was selected for illustration. That is there are no replication nor MSGMESH directives in the deck. T wo DBC module directives have been supplied. The required PARAM,POST,0 which invokes the DBC module to perform the translation and the saving of information to the MSC Access data base; and an additional parameter to echo information within the “F06” listing indicating which objects are being created at what point of the analysis execution. For more detailed module translation positioning, one can merge the “F04” and “F06” together by inserting: NASTRAN SYSTEM(86)=6 as the first entry of the data deck. $ DEC/CMS REPLACEMENT HISTORY, Element A61X.DAT $ *2 5-AUG-1991 14:59:48 J_BELTRAN “67 PLUS/G/ CHANGED DBCCONV,X TO XL” $ *1 10-JUL-1991 15:43:05 EC004ABB “67 PLUS/G/ ACCESS TEST DECK /JGB”$ DEC/CMS REPLACEMENT HISTORY, Element A61X.DATID MSC, A101X $ JGB$ID TEST,A101 $ EXAMPLE FOR MSC/ACCESS WITHOUT MESH OPTIONSOL 101TIME 6CENDTITLE=SQUARE PLATE WITH CIRCULAR HOLE (NO MESH - SOL 101) A101XSUBTITLE=MEMBRANE PROPERTIES OF QUAD4 AND TRIA3 ELEMENTSSPC=1DISP(PLOT)=ALLSPCFORCES(PLOT)=ALLELSTRESS(PLOT)=ALLOLOAD(PLOT)=ALLSTRFIELD=ALL$GPSTRESS=ALLSUBCASE 1LABEL=UNIFORM LOAD ALONG X=5.0.LOAD=1SUBCASE 2LABEL=UNIFORM LOAD ALONG Y=5.0.LOAD=2SUBCOM 3LABEL=UNIFORM LOAD ALONG X=5.0 AND Y=5.0."},"title":"User's Manual P9"},"/docs/access_user_manual/msc_nastran_2024.1_access_user_manual_010/":{"data":{"":"173 Appendix C: Input/Output Examples MSC Nastran Input Data Main Index SUBSEQ=1.0,1.0 OUTPUT(POST)SET 9 = ALLSURFACE 1 SET 9 NORMAL ZSURFACE 7 SET 9 NORMAL Z OUTPUT SYSTEM ELEMENTBEGIN BULKPARAM POST 0PARAM DBCDIAG 32CORD2C 1 1. CORD1+ORD1 1.GRDSET 3456GRID 10000 1 1. 0.0 0.0 1 3456GRID 10001 1 1.1 0.0 0.0 1 3456GRID 10002 1 1.25 0.0 0.0 1 3456GRID 10003 1 1.5 0.0 0.0 1 3456GRID 10004 1 2.1 0.0 0.0 1 3456GRID 10005 1 3.5 0.0 0.0 1 3456GRID 10006 1 5. 0.0 0.0 1 3456GRID 10100 1 1. 10. 0.0 1 3456GRID 10101 1 1.1 10. 0.0 1 3456GRID 10102 1 1.25 10. 0.0 1 3456GRID 10103 1 1.5 10. 0.0 1 3456GRID 10104 1 2.1 10. 0.0 1 3456GRID 10105 1 3.5 10. 0.0 1 3456GRID 10200 1 1. 20. 0.0 1 3456GRID 10201 1 1.1 20. 0.0 1 3456GRID 10202 1 1.25 20. 0.0 1 3456GRID 10203 1 1.5 20. 0.0 1 3456GRID 10204 1 2.1 20. 0.0 1 3456GRID 10205 1 3.5 20. 0.0 1 3456GRID 10300 1 1. 35. 0.0 1 3456GRID 10301 1 1.1 35. 0.0 1 3456GRID 10302 1 1.25 35. 0.0 1 3456GRID 10303 1 1.5 35. 0.0 1 3456GRID 10304 1 2.1 35. 0.0 1 3456GRID 10305 1 3.5 35. 0.0 1 3456GRID 10400 1 1. 55. 0.0 1 3456GRID 10401 1 1.1 55. 0.0 1 3456GRID 10402 1 1.25 55. 0.0 1 3456GRID 10403 1 1.5 55. 0.0 1 3456GRID 10404 1 2.1 55. 0.0 1 3456GRID 10405 1 3.5 55. 0.0 1 3456GRID 10500 1 1. 70. 0.0 1 3456GRID 10501 1 1.1 70. 0.0 1 3456GRID 10502 1 1.25 70. 0.0 1 3456\nMSC Nastran Access User’s Manual MSC Nastran Input Data174 Main Index GRID 10503 1 1.5 70. 0.0 1 3456 GRID 10504 1 2.1 70. 0.0 1 3456GRID 10505 1 3.5 70. 0.0 1 3456GRID 10600 1 1. 80. 0.0 1 3456GRID 10601 1 1.1 80. 0.0 1 3456GRID 10602 1 1.25 80. 0.0 1 3456GRID 10603 1 1.5 80. 0.0 1 3456GRID 10604 1 2.1 80. 0.0 1 3456GRID 10605 1 3.5 80. 0.0 1 3456GRID 10700 1 1. 90. 0.0 1 3456GRID 10701 1 1.1 90. 0.0 1 3456GRID 10702 1 1.25 90. 0.0 1 3456GRID 10703 1 1.5 90. 0.0 1 3456GRID 10704 1 2.1 90. 0.0 1 3456GRID 10705 1 3.5 90. 0.0 1 3456GRID 10706 1 5. 90. 0.0 1 3456CQUAD4 1 1 10000 10001 10101 10100CQUAD4 2 1 10001 10002 10102 10101CQUAD4 3 1 10002 10003 10103 10102CQUAD4 4 1 10003 10004 10104 10103CQUAD4 5 1 10004 10005 10105 10104CQUAD4 6 1 10005 10006 10106 10105CQUAD4 7 1 10100 10101 10201 10200CQUAD4 8 1 10101 10102 10202 10201CQUAD4 9 1 10102 10103 10203 10202CQUAD4 10 1 10103 10104 10204 10203CQUAD4 11 1 10104 10105 10205 10204CQUAD4 12 1 10105 10106 10206 10205CQUAD4 13 1 10200 10201 10301 10300CQUAD4 14 1 10201 10202 10302 10301CQUAD4 15 1 10202 10203 10303 10302CQUAD4 16 1 10203 10204 10304 10303CQUAD4 17 1 10204 10205 10305 10304CQUAD4 18 1 10205 10206 10306 10305CQUAD4 19 1 10300 10301 10401 10400CQUAD4 20 1 10301 10302 10402 10401CQUAD4 21 1 10302 10303 10403 10402CQUAD4 22 1 10303 10304 10404 10403CQUAD4 23 1 10304 10305 10405 10404CQUAD4 24 1 10305 10306 10406 10405CQUAD4 25 1 10400 10401 10501 10500CQUAD4 26 1 10401 10402 10502 10501CQUAD4 27 1 10402 10403 10503 10502CQUAD4 28 1 10403 10404 10504 10503CQUAD4 29 1 10404 10405 10505 10504\n175 Appendix C: Input/Output Examples MSC Nastran Output Main Index CQUAD4 30 1 10405 10406 10506 10505 CQUAD4 31 1 10500 10501 10601 10600CQUAD4 32 1 10501 10502 10602 10601CQUAD4 33 1 10502 10503 10603 10602CQUAD4 34 1 10503 10504 10604 10603CQUAD4 35 1 10504 10505 10605 10604CQUAD4 36 1 10505 10506 10606 10605CQUAD4 37 1 10600 10601 10701 10700CQUAD4 38 1 10601 10602 10702 10701CQUAD4 39 1 10602 10603 10703 10702CQUAD4 40 1 10603 10604 10704 10703CQUAD4 41 1 10604 10605 10705 10704CQUAD4 42 1 10605 10606 10706 10705MAT1 1 30.+6 .3 MAT1+AT1 1SPC1 1 2 10000 10001 10002 10003 10004 10005 +M00000+M00000 10006SPC1 1 2 10700 10701 10702 10703 10704 10705 +M00001+M00001 10706GRID 10106 0 5. .881635 0.0 3456GRID 10206 0 5. 1.81985 0.0 3456GRID 10306 0 5. 3.50104 0.0 3456GRID 10606 0 .881635 5. 0.0 3456GRID 10506 0 1.81985 5. 0.0 3456GRID 10406 0 3.50104 5. 0.0 3456GRID 10806 5. 5. 3456CTRIA3 50 1 10306 10806 10406PSHELL 1 1 .1GRID 120 5. 2.5 23456GRID 121 2.5 5. 13456RBE3 51 120 1 .4408175123 10006 .9099256RBE31+BE31 123 10106 1.309702123 10206 1.590075123 10306 RBE32+BE32 .74948121235 10806RBE3 52 121 2 .4408175123 10706 .9099256RBE33+BE33 123 10606 1.309702123 10506 1.590075123 10406 RBE34+BE34 .74948121234 10806FORCE 1 120 5.+3 1.FORCE 2 121 5.+3 1. ENDDATA MSC Nastran Output The following are “F04” and “F06” outputs created by executing the sample input. The “F04” file illustrates which sub-DMAP executes the DBC module for translation. References to the “F06” for the sequential\nMSC Nastran Access User’s Manual MSC Nastran Output176 Main Index translation indicates which Access objects, with their associated attributes, are created at that position. Again, by usage of the NASTRAN directive for folding output, one can obtain a more precise location. The default translation is now MSC/XL, and other MSC products from Patran to Construct utilize this format of the data base. The MSC/GRASP translation is mentioned in the documentation, but, is not well supported or tested, and should be avoided. MACHINE MODEL OPERATING SYSTEM MSC Nastran BUILD DATE RUN DATE IBM RS/6000 370/375/37T (gallup) AIX 4.3 VERSION 2001.0 FEB 1, 2001 APR 2, 2001\n=== M S C . N a s t r a n E X E C U T I O N S U M M A R Y ===\rDay_Time Elapsed I/O_Mb Del_Mb CPU_Sec Del_CPU Subroutine 8:39:02 0:00 .0 .0 .0 .0 SEMTRN BGN 8:39:02 0:00 .0 .0 .0 .0 SEMTRN END 8:39:02 0:00 .0 .0 .0 .0 DBINIT BGN ** CURRENT PROJECT ID = ’ “BLANK” ’ ** CURRENT VERSION ID = 1 S U M M A R Y O F F I L E A S S I G N M E N T F O R T H E P R I M A R Y D A T A B A S E ( DBSNO 1, V2001.0 ) ASSIGNED PHYSICAL FILE NAME (/ORIGINAL) LOGICAL NAME DBSET STATUS BUFFSIZE CLUSTER SIZE TIME STAMP ————————————— ———— —– —— ——– ———-\n/x/kkk/a101x.T17832_49.MASTER MASTER MASTER NEW 8193 1 010402083903 /x/kkk/a101x.T17832_49.DBALL DBALL DBALL NEW 8193 1 010402083904 /x/kkk/a101x.T17832_49.OBJSCR OBJSCR OBJSCR NEW 8193 1 010402083905 **** MEM FILE **** * N/A * SCRATCH /x/kkk/a101x.T17832_49.SCRATCH SCRATCH SCRATCH NEW 8193 1 010402083906 /x/kkk/a101x.T17832_49.SCR300 SCR300 SCRATCH NEW 8193 1 010402083907 8:39:03 0:01 .0 .0 .1 .1 DBINIT END 8:39:03 0:01 .0 .0 .1 .0 XCSA BGN S U M M A R Y O F F I L E A S S I G N M E N T F O R T H E D E L I V E R Y D A T A B A S E ( DBSNO 2, V2001.0 ) ASSIGNED PHYSICAL FILE NAME (/ORIGINAL) LOGICAL NAME DBSET STATUS BUFFSIZE CLUSTER SIZE TIME STAMP ————————————— ———— —– —— ——– ———-\n/nast/msc2001t1/aix/SSS.MASTERA MASTERA MASTER OLD 8193 1 010330195319 /./SSS.MASTERA /nast/msc2001t1/aix/SSS.MSCOBJ MSCOBJ MSCOBJ OLD 8193 1 010330195324 /./SSS.MSCOBJ /nast/msc2001t1/aix/SSS.MSCSOU MSCSOU MSCSOU OLD 8193 1 010330195325 /./SSS.MSCSOU 8:39:13 0:11 23.0 23.0 2.3 2.2 XCSA END 8:39:13 0:11 23.0 .0 2.3 .0 CGPI BGN 8:39:13 0:11 23.0 .0 2.3 .0 CGPI END\n177 Appendix C: Input/Output Examples MSC Nastran Output Main Index 8:39:13 0:11 23.0 .0 2.3 .0 LINKER BGN 8:39:30 0:28 33.0 10.0 3.4 1.1 LINKER END S U M M A R Y O F P H Y S I C A L F I L E I N F O R M A T I O N ASSIGNED PHYSICAL FILE NAME RECL (BYTES) MODE FLAGS ———————————————————— ———— —- —– /x/kkk/a101x.T17832_49.SCRATCH 32768 R/W L G /x/kkk/a101x.T17832_49.OBJSCR 32768 R/W L G /x/kkk/a101x.T17832_49.MASTER 32768 R/W L G /x/kkk/a101x.T17832_49.DBALL 32768 R/W L G /x/kkk/a101x.T17832_49.SCR300 32768 R/W L G /nast/msc2001t1/aix/SSS.MASTERA 32768 R/O /nast/msc2001t1/aix/SSS.MSCOBJ 32768 R/O FLAG VALUES ARE – G FILE ON FILESYSTEM SUPPORTING FILES LARGER THAN 2GB L FILE HAS BEEN LOCKED R FILE BEING ACCESSED IN ‘RAW’ MODE ** PHYSICAL FILES LARGER THAN 2GB ARE SUPPORTED ON THIS PLATFORM ** BUT SOME FILESYSTEMS ON THIS PLATFORM MAY NOT SUPPORT FILES LARGER THAN 2GB 0 ** MASTER DIRECTORIES ARE LOADED IN MEMORY. USER OPENCORE (HICORE) = 7009361 WORDS EXECUTIVE SYSTEM WORK AREA = 218510 WORDS MASTER(RAM) = 37922 WORDS SCRATCH(MEM) AREA = 819300 WORDS ( 100 BUFFERS) BUFFER POOL AREA (GINO/EXEC) = 303511 WORDS ( 37 BUFFERS) TOTAL MSC Nastran MEMORY LIMIT = 8388604 WORDS Day_Time Elapsed I/O_Mb Del_Mb CPU_Sec Del_CPU SubDMAP Line (S)SubDMAP/Module 8:39:31 0:29 34.0 1.0 3.6 .2 XSEMDR BEGN 8:39:31 0:29 35.0 1.0 3.7 .0 SESTATIC23 (S)IFPL BEGN * 8:39:31 0:29 35.0 .0 3.7 .0 IFPL 35 IFP1 BEGN 8:39:31 0:29 35.0 .0 3.7 .0 IFPL 76 XSORT BEGN 8:39:31 0:29 35.0 .0 3.9 .2 IFPL 76 XSORT END 8:39:32 0:30 35.0 .0 3.9 .0 IFPL 154 (S)IFPS BEGN 8:39:32 0:30 35.0 .0 3.9 .0 IFPS 14 IFP BEGN 8:39:32 0:30 35.0 .0 3.9 .0 IFP * COUNT:ENTRY COUNT:ENTRY COUNT:ENTRY COUNT:ENTRY COUNT:ENTRY COUNT:ENTRY *\n1:CORD2C 42:CQUAD4 1:CTRIA3 2:FORCE 1:GRDSET 59:GRID *\n1:MAT1 2:PARAM 1:PSHELL 2:RBE3 2:SPC1 * PARAM: DBCDIAG POST * 8:39:32 0:30 35.0 .0 4.2 .3 IFPS 70 MODGM2 BEGN 8:39:32 0:30 35.0 .0 4.2 .0 IFPS 77 PVT BEGN 8:39:32 0:30 35.0 .0 4.3 .0 IFPS 91 GP1 BEGN 8:39:33 0:31 35.0 .0 4.3 .1 IFPL 159 SEPR1 BEGN 8:39:33 0:31 35.0 .0 4.4 .0 IFPL 160 DBDELETEBEGN 8:39:33 0:31 35.0 .0 4.4 .0 IFPL 175 PROJVER BEGN 8:39:33 0:31 35.0 .0 4.4 .0 IFPL 180 PVT BEGN 8:39:33 0:31 36.0 1.0 4.4 .0 IFPL 210 (S)IFPS1 BEGN 8:39:33 0:31 36.0 .0 4.4 .0 IFPS1 14 DTIIN BEGN 8:39:33 0:31 36.0 .0 4.4 .0 IFPS1 46 PLTSET BEGN 8:39:33 0:31 36.0 .0 4.4 .0 IFPS1 49 MSGHAN BEGN\nMSC Nastran Access User’s Manual MSC Nastran Output178 Main Index 8:39:33 0:31 36.0 .0 4.4 .0 IFPS1 50 MSGHAN BEGN 8:39:33 0:31 36.0 .0 4.5 .0 IFPS1 51 GP0 BEGN 8:39:33 0:31 36.0 .0 4.5 .0 IFPS1 52 MSGHAN BEGN 8:39:33 0:31 36.0 .0 4.5 .0 SESTATIC45 (S)PHASE0 BEGN 8:39:33 0:31 36.0 .0 4.5 .0 PHASE0 31 PVT BEGN 8:39:33 0:31 36.0 .0 4.5 .0 PHASE0 32 PROJVER BEGN 8:39:33 0:31 36.0 .0 4.5 .0 PHASE0 35 DTIIN BEGN 8:39:33 0:31 36.0 .0 4.5 .0 PHASE0 130 SEP1X BEGN 8:39:33 0:31 36.0 .0 4.6 .0 PHASE0 145 GP1 BEGN 8:39:34 0:32 36.0 .0 4.6 .0 PHASE0 150 GP2 BEGN 8:39:34 0:32 36.0 .0 4.6 .0 PHASE0 165 TA1 BEGN 8:39:34 0:32 36.0 .0 4.6 .0 PHASE0 166 TASNP2 BEGN 8:39:34 0:32 36.0 .0 4.6 .0 PHASE0 171 SEP1 BEGN 8:39:34 0:32 36.0 .0 4.7 .0 PHASE0 192 DBC BEGN 8:39:34 0:32 36.0 .0 4.7 .1 PHASE0 237 TABPRT BEGN 8:39:34 0:32 36.0 .0 4.7 .0 PHASE0 238 SEP3 BEGN 8:39:34 0:32 36.0 .0 4.8 .0 PHASE0 375 PVT BEGN 8:39:35 0:33 37.0 1.0 5.0 .2 PHASE0 804 (S)SETQ BEGN 8:39:35 0:33 37.0 .0 5.0 .0 PHASE0 924 GP2 BEGN 8:39:35 0:33 37.0 .0 5.0 .0 PHASE0 937 GPJAC BEGN 8:39:35 0:33 37.0 .0 5.0 .0 PHASE0 970 GP3 BEGN 8:39:35 0:33 37.0 .0 5.1 .0 PHASE0 973 LCGEN BEGN 8:39:35 0:33 37.0 .0 5.1 .0 PHASE0 979 VECPLOT BEGN 8:39:35 0:33 37.0 .0 5.1 .0 PHASE0 1013 BCDR BEGN 8:39:35 0:33 37.0 .0 5.1 .0 PHASE0 1014 CASE BEGN 8:39:35 0:33 37.0 .0 5.1 .0 PHASE0 1015 PVT BEGN 8:39:35 0:33 37.0 .0 5.2 .0 PHASE0 1051 GP4 BEGN 8:39:35 0:33 37.0 .0 5.2 .1 PHASE0 1095 MATGEN BEGN 8:39:36 0:34 37.0 .0 5.2 .0 PHASE0 1096 APPEND BEGN 8:39:36 0:34 37.0 .0 5.2 .0 PHASE0 1144 BCDR BEGN 8:39:36 0:34 37.0 .0 5.2 .0 PHASE0 1189 (S)SELA1 BEGN 8:39:36 0:34 37.0 .0 5.2 .0 PHASE0 1191 UPARTN BEGN 8:39:36 0:34 37.0 .0 5.3 .0 PHASE0 1275 DBC BEGN 8:39:36 0:34 38.0 1.0 5.3 .1 SESTATIC48 (S)SETQ BEGN 8:39:36 0:34 38.0 .0 5.4 .0 SESTATIC52 MATGEN BEGN 8:39:36 0:34 38.0 .0 5.4 .0 SESTATIC53 RESTART BEGN Data block TEMPALL has changed. 8:39:36 0:34 38.0 .0 5.4 .0 SESTATIC55 DTIIN BEGN 8:39:36 0:34 38.0 .0 5.4 .0 SESTATIC89 (S)PHASE1DRBEGN 8:39:36 0:34 38.0 .0 5.4 .0 PHASE1DR114 PVT BEGN 8:39:36 0:34 38.0 .0 5.4 .0 PHASE1DR115 (S)SETQ BEGN 8:39:36 0:34 38.0 .0 5.5 .0 PHASE1DR130 (S)DBSETOFFBEGN 8:39:36 0:34 38.0 .0 5.5 .0 PHASE1DR132 (S)PHASE1A BEGN 8:39:36 0:34 38.0 .0 5.5 .0 PHASE1A 43 TA1 BEGN 8:39:36 0:34 38.0 .0 5.5 .0 PHASE1A 52 MSGHAN BEGN 8:39:36 0:34 38.0 .0 5.5 .0 PHASE1A 53 (S)SEMG BEGN 8:39:36 0:34 38.0 .0 5.5 .0 SEMG 25 ELTPRT BEGN 8:39:37 0:35 38.0 .0 5.5 .0 SEMG 31 EMG BEGN 8:39:37 0:35 38.0 .0 5.6 .1 SEMG 116 EMA BEGN 8:39:37 0:35 38.0 .0 5.7 .1 SEMG 169 (S)XMTRXIN BEGN 8:39:37 0:35 38.0 .0 5.7 .0 SEMG 172 (S)SEMG1 BEGN 8:39:37 0:35 38.0 .0 5.7 .0 SEMG 174 PROJVER BEGN 8:39:37 0:35 38.0 .0 5.7 .0 PHASE1A 55 MSGHAN BEGN 8:39:37 0:35 38.0 .0 5.7 .0 PHASE1A 56 MSGHAN BEGN 8:39:37 0:35 38.0 .0 5.7 .0 PHASE1A 57 (S)SESUM BEGN 8:39:37 0:35 39.0 1.0 5.8 .0 PHASE1A 67 VECPLOT BEGN * 8:39:37 0:35 39.0 .0 5.8 .0 PHASE1A 114 MSGHAN BEGN 8:39:37 0:35 39.0 .0 5.8 .0 PHASE1A 115 (S)SELG BEGN 8:39:37 0:35 39.0 .0 5.8 .0 SELG 18 SSG1 BEGN 8:39:37 0:35 39.0 .0 5.8 .0 SELG 66 VECPLOT BEGN 8:39:38 0:36 39.0 .0 5.9 .0 PHASE1A 116 MSGHAN BEGN\n179 Appendix C: Input/Output Examples MSC Nastran Output Main Index 8:39:38 0:36 39.0 .0 5.9 .0 PHASE1A 117 (S)SESUM BEGN 8:39:38 0:36 39.0 .0 5.9 .0 PHASE1A 121 (S)SELA1 BEGN * 8:39:38 0:36 39.0 .0 5.9 .0 PHASE1DR180 BCDR BEGN 8:39:38 0:36 39.0 .0 5.9 .0 PHASE1DR181 PVT BEGN 8:39:38 0:36 39.0 .0 6.0 .0 PHASE1DR193 (S)PHASE1B BEGN 8:39:38 0:36 39.0 .0 6.0 .0 PHASE1B 21 (S)SEKR0 BEGN 8:39:38 0:36 39.0 .0 6.0 .0 SEKR0 17 (S)XMCE1 BEGN 8:39:38 0:36 39.0 .0 6.0 .0 XMCE1 4 MCE1 BEGN 8:39:38 0:36 39.0 .0 6.0 .0 SEKR0 18 UPARTN BEGN 8:39:38 0:36 39.0 .0 6.0 .0 SEKR0 21 UPARTN BEGN 8:39:38 0:36 39.0 .0 6.0 .0 SEKR0 26 MCE2 BEGN 8:39:38 0:36 39.0 .0 6.1 .1 SEKR0 28 VECPLOT BEGN 8:39:38 0:36 39.0 .0 6.1 .0 SEKR0 42 GPSP BEGN 8:39:38 0:36 39.0 .0 6.1 .0 PHASE1B 33 (S)SEKMR BEGN 8:39:38 0:36 39.0 .0 6.1 .0 SEKMR 12 (S)SEKR BEGN 8:39:38 0:36 39.0 .0 6.2 .0 SEKR 19 (S)PMLUSET BEGN 8:39:38 0:36 39.0 .0 6.2 .0 SEKR 22 UPARTN BEGN 8:39:38 0:36 39.0 .0 6.2 .0 SEKR 25 VECPLOT BEGN 8:39:38 0:36 39.0 .0 6.2 .0 SEKR 114 (S)SESUM BEGN 8:39:38 0:36 40.0 1.0 6.3 .0 SEKMR 13 (S)SESUM BEGN * 8:39:39 0:37 40.0 .0 6.3 .0 SEKMR 25 (S)PMLUSET BEGN * 8:39:39 0:37 40.0 .0 6.3 .0 PHASE1B 34 (S)PMLUSET BEGN 8:39:39 0:37 40.0 .0 6.3 .0 PHASE1B 67 (S)SEGOA BEGN 8:39:39 0:37 40.0 .0 6.3 .0 PHASE1B 68 (S)SELR BEGN 8:39:39 0:37 40.0 .0 6.3 .0 SELR 86 SSG2 BEGN 8:39:39 0:37 40.0 .0 6.4 .1 PHASE1B 70 (S)SESUM BEGN 8:39:39 0:37 41.0 1.0 6.5 .1 PHASE1B 206 SSG2 BEGN * 8:39:39 0:37 41.0 .0 6.5 .0 PHASE1DR200 PVT BEGN 8:39:39 0:37 41.0 .0 6.5 .0 PHASE1DR216 BCDR BEGN 8:39:39 0:37 41.0 .0 6.5 .0 SESTATIC116 BCDR BEGN 8:39:39 0:37 41.0 .0 6.5 .0 SESTATIC117 PVT BEGN 8:39:39 0:37 41.0 .0 6.6 .0 SESTATIC125 (S)PMLUSET BEGN 8:39:39 0:37 41.0 .0 6.6 .0 SESTATIC138 (S)PHASE1C BEGN 8:39:39 0:37 41.0 .0 6.6 .0 PHASE1C 20 (S)SEKRRS BEGN 8:39:39 0:37 41.0 .0 6.6 .0 SEKRRS 53 DCMP BEGN *** USER INFORMATION MESSAGE 4157 (DFMSYN) PARAMETERS FOR SPARSE DECOMPOSITION OF DATA BLOCK KLL ( TYPE=RDP ) FOLLOW MATRIX SIZE = 100 ROWS NUMBER OF NONZEROES = 760 TERMS NUMBER OF ZERO COLUMNS = 0 NUMBER OF ZERO DIAGONAL TERMS = 0 CPU TIME ESTIMATE = 0 SEC I/O TIME ESTIMATE = 0 SEC MINIMUM MEMORY REQUIREMENT = 51 K WORDS MEMORY AVAILABLE = 6999 K WORDS MEMORY REQR’D TO AVOID SPILL = 85 K WORDS MEMORY USED BY BEND = 5 K WORDS EST. INTEGER WORDS IN FACTOR = 2 K WORDS EST. NONZERO TERMS = 2 K TERMS ESTIMATED MAXIMUM FRONT SIZE = 26 TERMS RANK OF UPDATE = 24 *** USER INFORMATION MESSAGE 6439 (DFMSA) ACTUAL MEMORY AND DISK SPACE REQUIREMENTS FOR SPARSE SYM. DECOMPOSITION SPARSE DECOMP MEMORY USED = 85 K WORDS MAXIMUM FRONT SIZE = 26 TERMS INTEGER WORDS IN FACTOR = 1 K WORDS NONZERO TERMS IN FACTOR = 2 K TERMS SPARSE DECOMP SUGGESTED MEMORY = 85 K WORDS 8:39:40 0:38 41.0 .0 6.7 .1 PHASE1C 24 (S)SESUM BEGN 8:39:40 0:38 41.0 .0 6.8 .1 PHASE1C 33 (S)SESUM BEGN * 8:39:40 0:38 42.0 1.0 6.8 .0 PHASE1C 37 (S)SELRRS BEGN * 8:39:40 0:38 42.0 .0 6.8 .0 PHASE1C 38 (S)SESUM BEGN 8:39:40 0:38 42.0 .0 6.8 .0 SESTATIC141 (S)STATRS BEGN * 8:39:40 0:38 42.0 .0 6.8 .0 STATRS 90 MSGHAN BEGN 8:39:40 0:38 42.0 .0 6.8 .0 STATRS 95 SSG3 BEGN *** USER INFORMATION MESSAGE 4153 (DFNSB) FBS METHOD S2 TIME ESTIMATE TO FORM UL - CPU= 0, I/O= 0, TOTAL= 0, PASSES= 1 8:39:40 0:38 42.0 .0 6.9 .0 STATRS 119 MSGHAN BEGN 8:39:40 0:38 42.0 .0 6.9 .0 SESTATIC237 PVT BEGN 8:39:40 0:38 42.0 .0 6.9 .0 SESTATIC237 PVT END\nMSC Nastran Access User’s Manual MSC Nastran Output180 Main Index 8:39:40 0:38 42.0 .0 6.9 .0 SESTATIC238 APPEND BEGN 8:39:40 0:38 42.0 .0 6.9 .0 SESTATIC244 COPY BEGN 8:39:40 0:38 42.0 .0 6.9 .0 SESTATIC253 BCDR BEGN 8:39:40 0:38 42.0 .0 6.9 .0 SESTATIC254 (S)SESUM BEGN 8:39:40 0:38 43.0 1.0 6.9 .0 SESTATIC272 (S)SUPER3 BEGN * 8:39:40 0:38 43.0 .0 7.0 .1 SUPER3 130 SEP4 BEGN 8:39:40 0:38 43.0 .0 7.1 .0 SUPER3 217 SEDRDR BEGN 8:39:40 0:38 43.0 .0 7.1 .0 8:39:40 0:38 43.0 .0 7.1 .0 SUPER3 230 PVT BEGN 8:39:40 0:38 43.0 .0 7.1 .0 SUPER3 247 SEDR BEGN 8:39:41 0:39 43.0 .0 7.1 .0 SUPER3 264 PVT BEGN 8:39:41 0:39 43.0 .0 7.2 .0 SUPER3 290 (S)DBSETOFFBEGN 8:39:41 0:39 43.0 .0 7.2 .0 SUPER3 310 LCGEN BEGN 8:39:41 0:39 43.0 .0 7.2 .0 SUPER3 391 (S)SEDISP BEGN 8:39:41 0:39 43.0 .0 7.2 .0 SEDISP 112 BCDR BEGN 8:39:41 0:39 43.0 .0 7.2 .0 SEDISP 113 PVT BEGN 8:39:41 0:39 43.0 .0 7.3 .1 SEDISP 273 (S)SEGOA BEGN 8:39:41 0:39 43.0 .0 7.3 .0 SEDISP 274 SDR1 BEGN 8:39:41 0:39 43.0 .0 7.3 .1 SEDISP 360 BCDR BEGN 8:39:41 0:39 43.0 .0 7.3 .0 SEDISP 374 COPY BEGN 8:39:41 0:39 43.0 .0 7.3 .0 SEDISP 390 COPY BEGN 8:39:41 0:39 43.0 .0 7.3 .0 SEDISP 587 (S)SESUM BEGN 8:39:41 0:39 43.0 .0 7.4 .1 SUPER3 392 PVT BEGN * 8:39:41 0:39 43.0 .0 7.5 .1 SUPER3 600 DBC BEGN 8:39:41 0:39 43.0 .0 7.5 .0 SUPER3 604 (S)SEDRCVR BEGN 8:39:41 0:39 43.0 .0 7.5 .0 SEDRCVR 45 VECPLOT BEGN 8:39:41 0:39 43.0 .0 7.5 .0 SEDRCVR 138 SDR2 BEGN 8:39:41 0:39 43.0 .0 7.6 .1 SEDRCVR 141 SDR2 BEGN 8:39:41 0:39 43.0 .0 7.6 .0 SEDRCVR 183 SDRX BEGN 8:39:41 0:39 43.0 .0 7.7 .1 SEDRCVR 385 (S)GPSTRESSBEGN 8:39:41 0:39 43.0 .0 7.7 .0 GPSTRESS10 PLTSET BEGN 8:39:41 0:39 43.0 .0 7.7 .0 GPSTRESS12 GPSTR1 BEGN 8:39:42 0:40 43.0 .0 7.8 .1 GPSTRESS16 GPSTR2 BEGN 8:39:42 0:40 43.0 .0 7.9 .1 GPSTRESS16 GPSTR2 END 8:39:42 0:40 43.0 .0 7.9 .0 GPSTRESS18 STDCON BEGN 8:39:42 0:40 43.0 .0 7.9 .0 GPSTRESS23 GPSTR2 BEGN 8:39:42 0:40 43.0 .0 8.0 .0 SEDRCVR 494 OFP BEGN 8:39:42 0:40 43.0 .0 8.0 .0 SEDRCVR 497 OFP BEGN 8:39:42 0:40 43.0 .0 8.0 .0 SEDRCVR 501 OFP BEGN 8:39:42 0:40 43.0 .0 8.0 .0 SEDRCVR 510 OFP BEGN 8:39:42 0:40 43.0 .0 8.0 .0 SEDRCVR 554 OFP BEGN 8:39:42 0:40 43.0 .0 8.0 .0 SEDRCVR 596 DBC BEGN 8:39:42 0:40 43.0 .0 8.1 .1 SEDRCVR 597 DBC BEGN 8:39:42 0:40 43.0 .0 8.2 .0 SEDRCVR 598 DBC BEGN 8:39:42 0:40 43.0 .0 8.2 .0 SEDRCVR 600 DBC BEGN 8:39:42 0:40 43.0 .0 8.2 .0 SEDRCVR 601 DBC BEGN 8:39:42 0:40 43.0 .0 8.2 .0 SESTATIC318 (S)PRTSUM BEGN 8:39:42 0:40 43.0 .0 8.2 .0 PRTSUM 27 PROJVER BEGN 8:39:42 0:40 43.0 .0 8.2 .0 PRTSUM 28 DBDICT BEGN 8:39:42 0:40 43.0 .0 8.3 .0 PRTSUM 29 PRTPARM BEGN 8:39:43 0:41 43.0 .0 8.3 .0 SESTATIC319 MSGHAN BEGN 8:39:43 0:41 43.0 .0 8.3 .0 SESTATIC320 EXIT BEGN *** TOTAL MEMORY AND DISK USAGE STATISTICS *** +———- SPARSE SOLUTION MODULES ———–+ +————- MAXIMUM DISK USAGE ————-+ HIWATER SUB_DMAP DMAP HIWATER SUB_DMAP DMAP (WORDS) DAY_TIME NAME MODULE (MB) DAY_TIME NAME MODULE 1475181 08:39:39 SEKRRS 53 DCMP 5.500 08:39:43 SESTATIC 320 EXIT\n181 Appendix C: Input/Output Examples MSC Nastran Output Main Index *** DATABASE USAGE STATISTICS *** +—————— LOGICAL DBSETS ——————+ +————————- DBSET FILES ————— ———-+ DBSET ALLOCATED BLOCKSIZE USED USED FILE ALLOCATED HIWATER HIWATER I/O TRANSFERRED (BLOCKS) (WORDS) (BLOCKS) % (BLOCKS) (BLOCKS) (MB) (GB) MASTER 5000 8192 54 1.08 MASTER 5000 54 1.688 .029 DBALL 250000 8192 3 .00 DBALL 250000 3 .094 .000 OBJSCR 5000 8192 117 2.34 OBJSCR 5000 117 3.656 .006 SCRATCH 500100 8192 11 .00 (MEMFILE 100 95 2.969 .000) SCRATCH 250000 1 .031 .000 SCR300 250000 1 .031 .000 ============== TOTAL: .035 *** BUFFER POOL AND SCRATCH 300 USAGE STATISTICS *** +—————– BUFFER POOL —————–+ +————————– SCRATCH 300 —————- ———-+ OPTION BLOCKS BLOCKS BLOCKS OPTION HIWATER SUB_DMAP DMAP OPN/CLS SELECTED ALLOCATED REUSED RELEASED SELECTED (BLOCKS) DAY_TIME NAME MODULE COUNTER GINO,EXEC 37 1865 495 2 1 8:39:02 PREFACE 0 PREFACE 0 *** SUMMARY OF PHYSICAL FILE I/O ACTIVITY *** ASSIGNED PHYSICAL FILE NAME RECL (BYTES) READ/WRITE COUNT ———————————————————— ———— ———— /x/kkk/a101x.T17832_49.SCRATCH 32768 1 /x/kkk/a101x.T17832_49.OBJSCR 32768 185 /x/kkk/a101x.T17832_49.MASTER 32768 939 /x/kkk/a101x.T17832_49.DBALL 32768 7 /x/kkk/a101x.T17832_49.SCR300 32768 1 /nast/msc2001t1/aix/SSS.MASTERA 32768 62 /nast/msc2001t1/aix/SSS.MSCOBJ 32768 216\nMSC Nastran Access User’s Manual MSC Nastran Output182 Main Index\nTHIS PROGRAM IS CONFIDENTIAL AND A TRADE SECRET OF Hexagon AB AND/OR ITS SUBSIDIARIES. THE RECEIPT OR POSSESSION OF THIS PROGRAM DOES NOT CONVEY ANY RIGHTS TO REPRODUCE OR DISCLOSE ITS CONTENTS, OR TO MANUFACTURE, USE, OR SELL ANYTHING HEREIN, IN WHOLE OR IN PART, WITHOUT THE SPECIFIC WRITTEN CONSENT OF Hexagon AB AND/OR ITS SUBSIDIARIES. * * * * * * * * * * * * * * * * * * * * * * * * * * Hexagon AB * * * * * * * * * * * * M S C . N a s t r a n * * * * * * * * VERSION - 2001.0.1 Tier 1 * * * * * * * * FEB 1, 2001 * * * * * * * * * * * * IBM RS/6000 * * * * * * * * MODEL 370/375/37T (gallup) * * * * * * * * AIX 4.3 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n*APRIL 2, 2001 MSC Nastran 2/ 1/01 PAGE 1 0 N A S T R A N F I L E A N D S Y S T E M P A R A M E T E R E C H O 0 NASTRAN SYSTEM(303)=1 $ MSC Nastran 2001 R1 NASTRAN SYSTEM(303)=0 $(/NAST/CONF/NAST2001T1RC[3]) $ DEC/CMS REPLACEMENT HISTORY, ELEMENT A61X.DAT $ *2 5-AUG-1991 14:59:48 J_BELTRAN “67 PLUS/G/ CHANGED DBCCONV,X TO XL” $ *1 10-JUL-1991 15:43:05 EC004ABB “67 PLUS/G/ ACCESS TEST DECK /JGB” $ DEC/CMS REPLACEMENT HISTORY, ELEMENT A61X.DAT 1 APRIL 2, 2001 MSC Nastran 2/ 1/01 PAGE 2 0 N A S T R A N E X E C U T I V E C O N T R O L E C H O 0 ID MSC, A101X $ JGB $ID TEST,A101 $ EXAMPLE FOR MSC/ACCESS WITHOUT MESH OPTION SOL 101 TIME 6 CEND 1 SQUARE PLATE WITH CIRCULAR HOLE (NO MESH - SOL 101) A101X APRIL 2, 2001 MSC Nastran 2/ 1/01 PAGE 3 183 Appendix C: Input/Output Examples MSC Nastran Output Main Index MEMBRANE PROPERTIES OF QUAD4 AND TRIA3 ELEMENTS 0 0 C A S E C O N T R O L E C H O COMMAND COUNT 1 TITLE=SQUARE PLATE WITH CIRCULAR HOLE (NO MESH - SOL 101) A101X 2 SUBTITLE=MEMBRANE PROPERTIES OF QUAD4 AND TRIA3 ELEMENTS 3 SPC=1 4 DISP(PLOT)=ALL 5 SPCFORCES(PLOT)=ALL 6 ELSTRESS(PLOT)=ALL 7 OLOAD(PLOT)=ALL 8 STRFIELD=ALL 9 $GPSTRESS=ALL 10 SUBCASE 1 11 LABEL=UNIFORM LOAD ALONG X=5.0. 12 LOAD=1 13 SUBCASE 2 14 LABEL=UNIFORM LOAD ALONG Y=5.0. 15 LOAD=2 16 SUBCOM 3 17 LABEL=UNIFORM LOAD ALONG X=5.0 AND Y=5.0. 18 SUBSEQ=1.0,1.0 19 OUTPUT(POST) 20 SET 9 = ALL 21 SURFACE 1 SET 9 NORMAL Z 22 SURFACE 7 SET 9 NORMAL Z OUTPUT SYSTEM ELEMENT 23 BEGIN BULK 0 INPUT BULK DATA ENTRY COUNT = 1241 SQUARE PLATE WITH CIRCULAR HOLE (NO MESH - SOL 101) A101X APRIL 2, 2001 MSC Nastran 2/ 1/01 PAGE 4 MEMBRANE PROPERTIES OF QUAD4 AND TRIA3 ELEMENTS 0 0 S O R T E D B U L K D A T A E C H O ENTRY COUNT . 1 .. 2 .. 3 .. 4 .. 5 .. 6 .. 7 .. 8 .. 9 .. 10 . 1- CORD2C 1 1. CORD1 2- +ORD1 1. 3- CQUAD4 1 1 10000 10001 10101 10100 4- CQUAD4 2 1 10001 10002 10102 10101 5- CQUAD4 3 1 10002 10003 10103 10102 6- CQUAD4 4 1 10003 10004 10104 10103 7- CQUAD4 5 1 10004 10005 10105 10104 8- CQUAD4 6 1 10005 10006 10106 10105 9- CQUAD4 7 1 10100 10101 10201 10200 10- CQUAD4 8 1 10101 10102 10202 10201 11- CQUAD4 9 1 10102 10103 10203 10202 12- CQUAD4 10 1 10103 10104 10204 10203 13- CQUAD4 11 1 10104 10105 10205 10204 14- CQUAD4 12 1 10105 10106 10206 10205 15- CQUAD4 13 1 10200 10201 10301 10300 16- CQUAD4 14 1 10201 10202 10302 10301 17- CQUAD4 15 1 10202 10203 10303 10302 18- CQUAD4 16 1 10203 10204 10304 10303 19- CQUAD4 17 1 10204 10205 10305 10304 20- CQUAD4 18 1 10205 10206 10306 10305 21- CQUAD4 19 1 10300 10301 10401 10400 22- CQUAD4 20 1 10301 10302 10402 10401 23- CQUAD4 21 1 10302 10303 10403 10402 24- CQUAD4 22 1 10303 10304 10404 10403 25- CQUAD4 23 1 10304 10305 10405 10404\nMSC Nastran Access User’s Manual MSC Nastran Output184 Main Index 26- CQUAD4 24 1 10305 10306 10406 10405 27- CQUAD4 25 1 10400 10401 10501 10500 28- CQUAD4 26 1 10401 10402 10502 10501 29- CQUAD4 27 1 10402 10403 10503 10502 30- CQUAD4 28 1 10403 10404 10504 10503 31- CQUAD4 29 1 10404 10405 10505 10504 32- CQUAD4 30 1 10405 10406 10506 10505 33- CQUAD4 31 1 10500 10501 10601 10600 34- CQUAD4 32 1 10501 10502 10602 10601 35- CQUAD4 33 1 10502 10503 10603 10602 36- CQUAD4 34 1 10503 10504 10604 10603 37- CQUAD4 35 1 10504 10505 10605 10604 38- CQUAD4 36 1 10505 10506 10606 10605 39- CQUAD4 37 1 10600 10601 10701 10700 40- CQUAD4 38 1 10601 10602 10702 10701 41- CQUAD4 39 1 10602 10603 10703 10702 42- CQUAD4 40 1 10603 10604 10704 10703 43- CQUAD4 41 1 10604 10605 10705 10704 44- CQUAD4 42 1 10605 10606 10706 10705 45- CTRIA3 50 1 10306 10806 10406 46- FORCE 1 120 5.+3 1. 47- FORCE 2 121 5.+3 1. 48- GRDSET 3456 49- GRID 120 5. 2.5 23456 50- GRID 121 2.5 5. 13456 1 SQUARE PLATE WITH CIRCULAR HOLE (NO MESH - SOL 101) A101X APRIL 2, 2001 MSC Nastran 2/ 1/01 PAGE 5 MEMBRANE PROPERTIES OF QUAD4 AND TRIA3 ELEMENTS 0 0 S O R T E D B U L K D A T A E C H O ENTRY COUNT . 1 .. 2 .. 3 .. 4 .. 5 .. 6 .. 7 .. 8 .. 9 .. 10 . 51- GRID 10000 1 1. 0.0 0.0 1 3456 52- GRID 10001 1 1.1 0.0 0.0 1 3456 53- GRID 10002 1 1.25 0.0 0.0 1 3456 54- GRID 10003 1 1.5 0.0 0.0 1 3456 55- GRID 10004 1 2.1 0.0 0.0 1 3456 56- GRID 10005 1 3.5 0.0 0.0 1 3456 57- GRID 10006 1 5. 0.0 0.0 1 3456 58- GRID 10100 1 1. 10. 0.0 1 3456 59- GRID 10101 1 1.1 10. 0.0 1 3456 60- GRID 10102 1 1.25 10. 0.0 1 3456 61- GRID 10103 1 1.5 10. 0.0 1 3456 62- GRID 10104 1 2.1 10. 0.0 1 3456 63- GRID 10105 1 3.5 10. 0.0 1 3456 64- GRID 10106 0 5. .881635 0.0 3456 65- GRID 10200 1 1. 20. 0.0 1 3456 66- GRID 10201 1 1.1 20. 0.0 1 3456 67- GRID 10202 1 1.25 20. 0.0 1 3456 68- GRID 10203 1 1.5 20. 0.0 1 3456 69- GRID 10204 1 2.1 20. 0.0 1 3456 70- GRID 10205 1 3.5 20. 0.0 1 3456 71- GRID 10206 0 5. 1.81985 0.0 3456 72- GRID 10300 1 1. 35. 0.0 1 3456 73- GRID 10301 1 1.1 35. 0.0 1 3456 74- GRID 10302 1 1.25 35. 0.0 1 3456 75- GRID 10303 1 1.5 35. 0.0 1 3456 76- GRID 10304 1 2.1 35. 0.0 1 3456 77- GRID 10305 1 3.5 35. 0.0 1 3456 78- GRID 10306 0 5. 3.50104 0.0 3456 79- GRID 10400 1 1. 55. 0.0 1 3456\n185 Appendix C: Input/Output Examples MSC Nastran Output Main Index 80- GRID 10401 1 1.1 55. 0.0 1 3456 81- GRID 10402 1 1.25 55. 0.0 1 3456 82- GRID 10403 1 1.5 55. 0.0 1 3456 83- GRID 10404 1 2.1 55. 0.0 1 3456 84- GRID 10405 1 3.5 55. 0.0 1 3456 85- GRID 10406 0 3.50104 5. 0.0 3456 86- GRID 10500 1 1. 70. 0.0 1 3456 87- GRID 10501 1 1.1 70. 0.0 1 3456 88- GRID 10502 1 1.25 70. 0.0 1 3456 89- GRID 10503 1 1.5 70. 0.0 1 3456 90- GRID 10504 1 2.1 70. 0.0 1 3456 91- GRID 10505 1 3.5 70. 0.0 1 3456 92- GRID 10506 0 1.81985 5. 0.0 3456 93- GRID 10600 1 1. 80. 0.0 1 3456 94- GRID 10601 1 1.1 80. 0.0 1 3456 95- GRID 10602 1 1.25 80. 0.0 1 3456 96- GRID 10603 1 1.5 80. 0.0 1 3456 97- GRID 10604 1 2.1 80. 0.0 1 3456 98- GRID 10605 1 3.5 80. 0.0 1 3456 99- GRID 10606 0 .881635 5. 0.0 3456 100- GRID 10700 1 1. 90. 0.0 1 3456 1 SQUARE PLATE WITH CIRCULAR HOLE (NO MESH - SOL 101) A101X APRIL 2, 2001 MSC Nastran 2/ 1/01 PAGE 6 MEMBRANE PROPERTIES OF QUAD4 AND TRIA3 ELEMENTS 0 0 S O R T E D B U L K D A T A E C H O ENTRY COUNT . 1 .. 2 .. 3 .. 4 .. 5 .. 6 .. 7 .. 8 .. 9 .. 10 . 101- GRID 10701 1 1.1 90. 0.0 1 3456 102- GRID 10702 1 1.25 90. 0.0 1 3456 103- GRID 10703 1 1.5 90. 0.0 1 3456 104- GRID 10704 1 2.1 90. 0.0 1 3456 105- GRID 10705 1 3.5 90. 0.0 1 3456 106- GRID 10706 1 5. 90. 0.0 1 3456 107- GRID 10806 5. 5. 3456 108- MAT1 1 30.+6 .3 MAT1 109- +AT1 1 110- PARAM DBCDIAG 32 111- PARAM POST 0 112- PSHELL 1 1 .1 113- RBE3 51 120 1 .4408175123 10006 .9099256RBE31 114- +BE31 123 10106 1.309702123 10206 1.590075123 10306 RBE32 115- +BE32 .74948121235 10806 116- RBE3 52 121 2 .4408175123 10706 .9099256RBE33 117- +BE33 123 10606 1.309702123 10506 1.590075123 10406 RBE34 118- +BE34 .74948121234 10806 119- SPC1 1 2 10000 10001 10002 10003 10004 10005 +M00000 120- +M00000 10006 121- SPC1 1 2 10700 10701 10702 10703 10704 10705 +M00001 122- +M00001 10706 ENDDATA 0 TOTAL COUNT= 123 M O D E L S U M M A R Y NUMBER OF GRID POINTS = 59 NUMBER OF CQUAD4 ELEMENTS = 42 NUMBER OF CTRIA3 ELEMENTS = 1\nMSC Nastran Access User’s Manual MSC Nastran Output186 Main Index NUMBER OF RBE3 ELEMENTS = 2 1 SQUARE PLATE WITH CIRCULAR HOLE (NO MESH - SOL 101) A101X APRIL 2, 2001 MSC Nastran 2/ 1/01 PAGE 7 MEMBRANE PROPERTIES OF QUAD4 AND TRIA3 ELEMENTS 0 MSC.XL DATA BASE CONVERSION STARTED PRODUCT 0 0 0 0 0 0 0 0 0 0 PROJECT 0 0 0 0 0 0 0 0 0 0 PATHQUAL 0 0 0 0 0 0 0 0 0 0 PATHLINK 0 0 0 0 0 0 0 0 0 0 PATHQUAL 0 0 0 0 0 0 0 0 0 0 PATHLINK 0 0 0 0 0 0 0 0 0 0 PATHINT 0 0 0 0 0 0 0 0 0 0 SUPERS 1 0 0 0 0 0 0 0 0 0 CSTM 1 0 1 0 0 0 0 0 0 0 UNDEFORMED GEOMETRY RECOVERY INITIATED UNDEFORMED GEOMETRY RECOVERY FOR SUPERELEMENT 0 PSHELL 1 0 1 0 0 0 0 0 0 0 MAT1 1 0 1 0 0 0 0 0 0 0 POST-PROCESSING DATA RECOVERY INITIATED OUTPUT RECOVERY FOR SUPERELEMENT 0 LOADS DATA RECOVERY INITIATED LOADS DATA RECOVERY FOR SUPERELEMENT 0 MSC.XL DATA BASE CONVERSION FINISHED 1 SQUARE PLATE WITH CIRCULAR HOLE (NO MESH - SOL 101) A101X APRIL 2, 2001 MSC Nastran 2/ 1/01 PAGE 8 MEMBRANE PROPERTIES OF QUAD4 AND TRIA3 ELEMENTS 0 MSC.XL DATA BASE CONVERSION STARTED PROJECT 0 0 0 0 0 0 0 0 0 0 PATHQUAL 0 0 0 0 0 0 0 0 0 0 PATHLINK 0 0 0 0 0 0 0 0 0 0 PATHINT 0 0 0 0 0 0 0 0 0 0 CSTM 1 0 1 0 0 0 0 0 0 0 UNDEFORMED GEOMETRY RECOVERY INITIATED UNDEFORMED GEOMETRY RECOVERY FOR SUPERELEMENT 0 GRIDX 1 0 1 0 0 0 0 0 0 0 CQD4 1 0 1 0 0 0 0 0 0 0 CTR3 1 0 1 0 0 0 0 0 0 0 LIMITS 1 0 1 0 0 0 0 0 0 0 RBE3 1 0 1 0 0 0 0 0 0 0 RBEPOOL 1 0 1 0 0 0 0 0 0 0 POST-PROCESSING DATA RECOVERY INITIATED OUTPUT RECOVERY FOR SUPERELEMENT 0 EQEXING 1 0 1 0 0 0 0 0 0 0 EQEXINE 1 0 1 0 0 0 0 0 0 0 LOADS DATA RECOVERY INITIATED\n187 Appendix C: Input/Output Examples MSC Nastran Output Main Index LOADS DATA RECOVERY FOR SUPERELEMENT 0 SID 1 0 1 0 0 0 0 0 0 0 FORCE 1 0 1 0 1 0 0 0 0 0 FORCE 1 0 1 0 2 0 0 0 0 0 SPC1 1 0 1 0 1 0 0 0 0 0 MSC.XL DATA BASE CONVERSION FINISHED 1 SQUARE PLATE WITH CIRCULAR HOLE (NO MESH - SOL 101) A101X APRIL 2, 2001 MSC Nastran 2/ 1/01 PAGE 9 MEMBRANE PROPERTIES OF QUAD4 AND TRIA3 ELEMENTS 0 *** USER INFORMATION MESSAGE 7310 (VECPRN) ORIGIN OF SUPERELEMENT BASIC COORDINATE SYSTEM WILL BE USED AS REFERENCE LOCATION. RESULTANTS ABOUT ORIGIN OF SUPERELEMENT BASIC COORDINATE SYSTEM IN SUPERELEMENT BASIC SYSTEM COORDINATES.0 OLOAD RESULTANT SUBCASE/ LOAD DAREA ID TYPE T1 T2 T3 R1 R2 R30 1 FX 5.000000E+03 —- —- —- 0.000000E+00 -1.250000E+04 FY —- 0.000000E+00 —- 0.000000E+00 —- 0.000000E+00 FZ —- —- 0.000000E+00 0.000000E+00 0.000000E+00 —- MX —- —- —- 0.000000E+00 —- —- MY —- —- —- —- 0.000000E+00 —- MZ —- —- —- —- —- 0.000000E+00 TOTALS 5.000000E+03 0.000000E+00 0.000000E+00 0.000000E+00 0.000000E+00 -1.250000E+040 2 FX 0.000000E+00 —- —- —- 0.000000E+00 0.000000E+00 FY —- 5.000000E+03 —- 0.000000E+00 —- 1.250000E+04 FZ —- —- 0.000000E+00 0.000000E+00 0.000000E+00 —- MX —- —- —- 0.000000E+00 —- —- MY —- —- —- —- 0.000000E+00 —- MZ —- —- —- —- —- 0.000000E+00 TOTALS 0.000000E+00 5.000000E+03 0.000000E+00 0.000000E+00 0.000000E+00 1.250000E+041 SQUARE PLATE WITH CIRCULAR HOLE (NO MESH - SOL 101) A101X APRIL 2, 2001 MSC Nastran 2/ 1/01 PAGE 10 MEMBRANE PROPERTIES OF QUAD4 AND TRIA3 ELEMENTS 0 SUBCASE 1 *** SYSTEM INFORMATION MESSAGE 6916 (DFMSYN) DECOMP ORDERING METHOD CHOSEN: BEND, ORDERING METHOD USED: BEND *** USER INFORMATION MESSAGE 5293 (SSG3A) FOR DATA BLOCK KLL LOAD SEQ. NO. EPSILON EXTERNAL WORK EPSILONS LARGER THAN .001 ARE FLAGGED WITH ASTERISKS 1 -2.0102575E-16 4.5937185E+00 2 7.3114566E-16 4.5937185E+001 SQUARE PLATE WITH CIRCULAR HOLE (NO MESH - SOL 101) A101X APRIL 2, 2001 MSC Nastran 2/ 1/01 PAGE 11 MEMBRANE PROPERTIES OF QUAD4 AND TRIA3 ELEMENTS 0 MSC.XL DATA BASE CONVERSION STARTED PROJECT 0 0 0 0 0 0 0 0 0 0 PATHQUAL 0 0 0 0 0 0 0 0 0 0 PATHLINK 0 0 0 0 0 0 0 0 0 0 PATHINT 0 0 0 0 0 0 0 0 0 0 POST-PROCESSING DATA RECOVERY INITIATED SUBCASES 1 0 1 0 0 1 0 0 0 0 SUBCASE 1 0 1 0 0 1 0 0 0 0 OUTPUT RECOVERY FOR SUPERELEMENT 0\nMSC Nastran Access User’s Manual MSC Nastran Output188 Main Index LOADS DATA RECOVERY INITIATED LOADS DATA RECOVERY FOR SUPERELEMENT 0 MSC.XL DATA BASE CONVERSION FINISHED 1 SQUARE PLATE WITH CIRCULAR HOLE (NO MESH - SOL 101) A101X APRIL 2, 2001 MSC Nastran 2/ 1/01 PAGE 12 MEMBRANE PROPERTIES OF QUAD4 AND TRIA3 ELEMENTS 0 *** USER INFORMATION MESSAGE 7310 (VECPRN) ORIGIN OF SUPERELEMENT BASIC COORDINATE SYSTEM WILL BE USED AS REFERENCE LOCATION. RESULTANTS ABOUT ORIGIN OF SUPERELEMENT BASIC COORDINATE SYSTEM IN SUPERELEMENT BASIC SYSTEM COORDINATES.0 SPCFORCE RESULTANT SUBCASE/ LOAD DAREA ID TYPE T1 T2 T3 R1 R2 R30 1 FX -5.000000E+03 —- —- —- 0.000000E+00 0.000000E+00 FY —- 3.233598E-12 —- 0.000000E+00 —- 1.250000E+04 FZ —- —- 0.000000E+00 0.000000E+00 0.000000E+00 —- MX —- —- —- 0.000000E+00 —- —- MY —- —- —- —- 0.000000E+00 —- MZ —- —- —- —- —- 0.000000E+00 TOTALS -5.000000E+03 3.233598E-12 0.000000E+00 0.000000E+00 0.000000E+00 1.250000E+040 2 FX -3.950618E-12 —- —- —- 0.000000E+00 0.000000E+00 FY —- -5.000000E+03 —- 0.000000E+00 —- -1.250000E+04 FZ —- —- 0.000000E+00 0.000000E+00 0.000000E+00 —- MX —- —- —- 0.000000E+00 —- —- MY —- —- —- —- 0.000000E+00 —- MZ —- —- —- —- —- 0.000000E+00 TOTALS -3.950618E-12 -5.000000E+03 0.000000E+00 0.000000E+00 0.000000E+00 -1.250000E+04 *** USER WARNING MESSAGE 4591 (GPSTR1) ILLEGAL PARAMETER SPECIFICATION ON A SURFACE OR VOLUME CARD. ID= 71 SQUARE PLATE WITH CIRCULAR HOLE (NO MESH - SOL 101) A101X APRIL 2, 2001 MSC Nastran 2/ 1/01 PAGE 13 MEMBRANE PROPERTIES OF QUAD4 AND TRIA3 ELEMENTS 0 1 SQUARE PLATE WITH CIRCULAR HOLE (NO MESH - SOL 101) A101X APRIL 2, 2001 MSC Nastran 2/ 1/01 PAGE 14 MEMBRANE PROPERTIES OF QUAD4 AND TRIA3 ELEMENTS 0 1 SQUARE PLATE WITH CIRCULAR HOLE (NO MESH - SOL 101) A101X APRIL 2, 2001 MSC Nastran 2/ 1/01 PAGE 15 MEMBRANE PROPERTIES OF QUAD4 AND TRIA3 ELEMENTS 0 MSC.XL DATA BASE CONVERSION STARTED PROJECT 0 0 0 0 0 0 0 0 0 0 PATHQUAL 0 0 0 0 0 0 0 0 0 0 PATHLINK 0 0 0 0 0 0 0 0 0 0 PATHINT 0 0 0 0 0 0 0 0 0 0 POST-PROCESSING DATA RECOVERY INITIATED OUTPUT RECOVERY FOR SUPERELEMENT 0 SUBGRID 1 0 1 0 0 1 0 0 0 0 SUBCTITL 1 0 1 0 0 1 0 0 0 0 DISPR 1 0 1 1 0 1 0 0 0 0 DISPR 1 0 1 2 0 1 0 0 0 0 DISPR 1 0 1 3 0 1 0 0 0 0 LOADR 1 0 1 1 0 1 0 0 0 0 LOADR 1 0 1 2 0 1 0 0 0 0 LOADR 1 0 1 3 0 1 0 0 0 0\n189 Appendix C: Input/Output Examples MSC Nastran Output Main Index SPCFR 1 0 1 1 0 1 0 0 0 0 SPCFR 1 0 1 2 0 1 0 0 0 0 SPCFR 1 0 1 3 0 1 0 0 0 0 SOLVE 1 0 0 0 0 0 0 0 0 0 SUBELEM 1 0 1 0 0 1 0 0 0 0 SUBCTITL 1 0 1 0 0 1 0 0 0 0 SQD4R 1 0 1 1 0 1 0 0 0 0 STR3R 1 0 1 1 0 1 0 0 0 0 SQD4R 1 0 1 2 0 1 0 0 0 0 STR3R 1 0 1 2 0 1 0 0 0 0 SQD4R 1 0 1 3 0 1 0 0 0 0 STR3R 1 0 1 3 0 1 0 0 0 0 SOLVE 1 0 0 0 0 0 0 0 0 0 SURFSET 1 0 1 0 0 1 0 0 0 0 SGSPR 1 0 1 1 1 1 0 0 0 0 SGSVR 1 0 1 1 1 1 0 0 0 0 SUBGRID 1 0 1 0 0 1 0 0 0 0 SGSPR 1 0 1 1 7 1 0 0 0 0 SGSVR 1 0 1 1 7 1 0 0 0 0 SGSPR 1 0 1 2 1 1 0 0 0 0 SGSVR 1 0 1 2 1 1 0 0 0 0 SGSPR 1 0 1 2 7 1 0 0 0 0 SGSVR 1 0 1 2 7 1 0 0 0 0 SGSPR 1 0 1 3 1 1 0 0 0 0 SGSVR 1 0 1 3 1 1 0 0 0 0 SGSPR 1 0 1 3 7 1 0 0 0 0 SGSVR 1 0 1 3 7 1 0 0 0 0 LOADS DATA RECOVERY INITIATED LOADS DATA RECOVERY FOR SUPERELEMENT 0 MSC.XL DATA BASE CONVERSION FINISHED 1 SQUARE PLATE WITH CIRCULAR HOLE (NO MESH - SOL 101) A101X APRIL 2, 2001 MSC Nastran 2/ 1/01 PAGE 16 MEMBRANE PROPERTIES OF QUAD4 AND TRIA3 ELEMENTS 0 MSC.XL DATA BASE CONVERSION STARTED PROJECT 0 0 0 0 0 0 0 0 0 0 PATHQUAL 0 0 0 0 0 0 0 0 0 0 PATHLINK 0 0 0 0 0 0 0 0 0 0 PATHINT 0 0 0 0 0 0 0 0 0 0 UNDEFORMED GEOMETRY RECOVERY INITIATED UNDEFORMED GEOMETRY RECOVERY FOR SUPERELEMENT 0 POST-PROCESSING DATA RECOVERY INITIATED OUTPUT RECOVERY FOR SUPERELEMENT 0 LOADS DATA RECOVERY INITIATED LOADS DATA RECOVERY FOR SUPERELEMENT 0 MSC.XL DATA BASE CONVERSION FINISHED 1 SQUARE PLATE WITH CIRCULAR HOLE (NO MESH - SOL 101) A101X APRIL 2, 2001 MSC Nastran 2/ 1/01 PAGE 17 MEMBRANE PROPERTIES OF QUAD4 AND TRIA3 ELEMENTS 0\nMSC Nastran Access User’s Manual MSC Access SMPLR Program Output190 Main Index\nD B D I C T P R I N T * * * * SUBDMAP = PRTSUM , DMAP STATEMENT NO. 28 0 * * * * A N A L Y S I S S U M M A R Y T A B L E * * * * 0 SEID PEID PROJ VERS APRCH SEMG SEMR SEKR SELG SELR MODES DYNRED SOLLIN PVALID SOLNL LOOPID DESIGN CYCLE SENSITIVITY ————————————————————————————————————————– 0 0 1 1 ’ ’ T T T T T F F T 0 F -1 0 F0SEID = SUPERELEMENT ID. PEID = PRIMARY SUPERELEMENT ID OF IMAGE SUPERELEMENT. PROJ = PROJECT ID NUMBER. VERS = VERSION ID. APRCH = BLANK FOR STRUCTURAL ANALYSIS. HEAT FOR HEAT TRANSFER ANALYSIS. SEMG = STIFFNESS AND MASS MATRIX GENERATION STEP. SEMR = MASS MATRIX REDUCTION STEP (INCLUDES EIGENVALUE SOLUTION FOR MODES). SEKR = STIFFNESS MATRIX REDUCTION STEP. SELG = LOAD MATRIX GENERATION STEP. SELR = LOAD MATRIX REDUCTION STEP. MODES = T (TRUE) IF NORMAL MODES OR BUCKLING MODES CALCULATED. DYNRED = T (TRUE) MEANS GENERALIZED DYNAMIC AND/OR COMPONENT MODE REDUCTION PERFORMED. SOLLIN = T (TRUE) IF LINEAR SOLUTION EXISTS IN DATABASE. PVALID = P-DISTRIBUTION ID OF P-VALUE FOR P-ELEMENTS LOOPID = THE LAST LOOPID VALUE USED IN THE NONLINEAR ANALYSIS. USEFUL FOR RESTARTS. SOLNL = T (TRUE) IF NONLINEAR SOLUTION EXISTS IN DATABASE. DESIGN CYCLE = THE LAST DESIGN CYCLE (ONLY VALID IN OPTIMIZATION). SENSITIVITY = SENSITIVITY MATRIX GENERATION FLAG.1 * * * END OF JOB * * * MSC Access SMPLR Program Output The output producted by the MSC Access Prototype Program (SMPLR) depends on the type of data base created during the MSC Nastran execution. In general, the output from a MSC/XL translation contains more objecs and information than the equivalent MSC/GRASP translation. The SMPLR program prototype does not print all information on the data base. Also the output presented here as been edited to shorten the document. Objects have been selected to illustrate possible procedures to employ during application development. In addition, not all entries in the selected objects are output, usually the first, middle and last 15 entries are selected for illustration. The output of the prototype is divided into three sections. The control information stored in the data base directory. The data base object dictionary entry and attributes in a three line format.3. Selected output from objects via subroutines OUTELC,OUTELM,OUTGPF, ect. The following output was obtained from the Access data base created in the previous section. Note to obtain a complete data base content 191 Appendix C: Input/Output Examples MSC Access SMPLR Program Output Main Index MSC/Access PROTOTYPE SMPLR JANUARY,2001 PROCESSING DATA BASE : a101x.xdb DATA BASE BLOCK SIZE ================== 1024 NUMBER OF ALLOCATED DISK BLOCKS ======= 2147483640 NUMBER OF UNUSED BLOCKS =============== 2147483464 NUMBER OF USED BLOCKS ================= 176 START OF DEAD BLOCK CHAIN ============= 0 BLOCK NUMBER OF DICTIONARY PI ========= 2 NUMBER OF FILES ON THE DATA BASE ====== 56 LAST ASSIGNED INTERNAL FILE NUMBER ==== 56 BLOCK NUMBER OF FIRST DICTIONARY DB === 3 NUMBER OF DICTIONARY DATA BLOCKS ====== 2 NUMBER OF DICTIONARY SI BLOCKS ======== 1 BLOCK NUMBER OF FIRST DICTIONARY SI === 4 FORTRAN UNIT ASSOCIATED TO DATA BASE == 40 DATA DEFINITION LANGUAGE VERSION ====== 20010 DATA DEFINITION LANGUAGE CODES ======== 70201798 DATA BASE OPEN MODE FLAG ============== 1 BLOCK CONVERSION FLAG ================= 0 LENGTH OF DATA BLOCK NAMES ============ 12 LENGTH OF DICTIONARY ENTRY (IN WORDS) = 12 TOTAL DICTIONARY ENTRY LENGTH ========= 24 CQD4 1 0 1 0 0 0 0 0 0 0 12 1 37 38 12 85 1 42 1 1 42 38 CSTM 1 0 1 0 0 0 0 0 0 0 8 1 25 26 24 42 1 1 1 1 1 26 CTR3 1 0 1 0 0 0 0 0 0 0 13 1 40 41 10 102 50 1 1 1 50 41 DDLFORDB 0 0 0 0 0 0 0 0 0 0 1 2 0 5 0 0 0 5311 5317 0 0 10 DISPR 1 0 1 1 0 1 0 0 0 0 27 1 80 81 7 145 0 60 1 1 59 81 DISPR 1 0 1 2 0 1 0 0 0 0 28 1 83 84 7 145 0 60 1 1 59 84 DISPR 1 0 1 3 0 1 0 0 0 0 29 1 86 87 7 145 0 60 1 1 59 87 EQEXINE 1 0 1 0 0 0 0 0 0 0 18 1 55 56 2 510 -4 46 1 1 50 56 EQEXING 1 0 1 0 0 0 0 0 0 0 17 1 52 53 3 340 -1 61 1 1 10806 53 FORCE 1 0 1 0 1 0 0 0 0 0 20 1 61 62 6 170 120 1 1 1 120 62 FORCE 1 0 1 0 2 0 0 0 0 0 21 1 64 65 6 170 121 1 1 1 121 65 GRIDX 1 0 1 0 0 0 0 0 0 0 11 1 34 35 11 92 120 59 1 1 10806 35 LIMITS 1 0 1 0 0 0 0 0 0 0 14 1 43 44 7 145 0 1 1 1 0 44 LOADR 1 0 1 1 0 1 0 0 0 0 30 1 89 90 7 145\nMSC Nastran Access User’s Manual MSC Access SMPLR Program Output192 Main Index 0 60 1 1 59 90 LOADR 1 0 1 2 0 1 0 0 0 0 31 1 92 93 7 145 0 60 1 1 59 93 LOADR 1 0 1 3 0 1 0 0 0 0 32 1 95 96 7 145 0 60 1 1 59 96 MAT1 1 0 1 0 0 0 0 0 0 0 10 1 31 32 12 85 1 1 1 1 1 32 PATHINT 0 0 0 0 0 0 0 0 0 0 6 1 21 22 21 48 1 4 1 1 4 22 PATHLINK 0 0 0 0 0 0 0 0 0 0 5 1 18 19 7 145 1 4 1 1 4 19 PATHQUAL 0 0 0 0 0 0 0 0 0 0 4 1 15 16 2 510 -7 8 1 1 1 16 PRODUCT 0 0 0 0 0 0 0 0 0 0 2 2 0 11 0 0 0 23 24 0 0 11 PROJECT 0 0 0 0 0 0 0 0 0 0 3 1 12 13 16 63 -1 2 1 1 1 13 PSHELL 1 0 1 0 0 0 0 0 0 0 9 1 28 29 11 92 1 1 1 1 1 29 RBE3 1 0 1 0 0 0 0 0 0 0 15 1 46 47 5 204 51 2 1 1 52 47 RBEPOOL 1 0 1 0 0 0 0 0 0 0 16 1 48 49 15 68 -1 11 1 1 10 49 SGSPR 1 0 1 1 1 1 0 0 0 0 45 1 134 135 4 255 -1 59 1 1 59 135 SGSPR 1 0 1 1 7 1 0 0 0 0 47 1 142 143 4 255 -1 59 1 1 59 143 SGSPR 1 0 1 2 1 1 0 0 0 0 49 1 149 150 4 255 -1 59 1 1 59 150 SGSPR 1 0 1 2 7 1 0 0 0 0 51 1 156 157 4 255 -1 59 1 1 59 157 SGSPR 1 0 1 3 1 1 0 0 0 0 53 1 163 164 4 255 -1 59 1 1 59 164 SGSPR 1 0 1 3 7 1 0 0 0 0 55 1 170 171 4 255 -1 59 1 1 59 171 SGSVR 1 0 1 1 1 1 0 0 0 0 46 1 137 138 9 113 1 171 2 1 171 140 SGSVR 1 0 1 1 7 1 0 0 0 0 48 1 145 146 9 113 1 171 2 1 171 148 SGSVR 1 0 1 2 1 1 0 0 0 0 50 1 152 153 9 113 1 171 2 1 171 155 SGSVR 1 0 1 2 7 1 0 0 0 0 52 1 159 160 9 113 1 171 2 1 171 162 SGSVR 1 0 1 3 1 1 0 0 0 0"},"title":"User's Manual P10"},"/docs/access_user_manual/msc_nastran_2024.1_access_user_manual_011/":{"data":{"":"193 Appendix C: Input/Output Examples MSC Access SMPLR Program Output Main Index 54 1 166 167 9 113 1 171 2 1 171 169 SGSVR 1 0 1 3 7 1 0 0 0 0 56 1 173 174 9 113 1 171 2 1 171 176 SID 1 0 1 0 0 0 0 0 0 0 19 1 58 59 2 510 1 2 1 1 2 59 SOLVE 1 0 0 0 0 0 0 0 0 0 36 1 107 108 2 510 1 1 1 1 1 108 SPC1 1 0 1 0 1 0 0 0 0 0 22 1 67 68 7 145 10000 14 1 1 10706 68 SPCFR 1 0 1 1 0 1 0 0 0 0 33 1 98 99 7 145 0 60 1 1 59 99 SPCFR 1 0 1 2 0 1 0 0 0 0 34 1 101 102 7 145 0 60 1 1 59 102 SPCFR 1 0 1 3 0 1 0 0 0 0 35 1 104 105 7 145 0 60 1 1 59 105 SQD4R 1 0 1 1 0 1 0 0 0 0 38 1 113 114 17 60 -1 44 1 1 42 114 SQD4R 1 0 1 2 0 1 0 0 0 0 40 1 119 120 17 60 -1 44 1 1 42 120 SQD4R 1 0 1 3 0 1 0 0 0 0 42 1 125 126 17 60 -1 44 1 1 42 126 STR3R 1 0 1 1 0 1 0 0 0 0 39 1 116 117 17 60 -1 3 1 1 1 117 STR3R 1 0 1 2 0 1 0 0 0 0 41 1 122 123 17 60 -1 3 1 1 1 123 STR3R 1 0 1 3 0 1 0 0 0 0 43 1 129 130 17 60 -1 3 1 1 1 130 SUBCASE 1 0 1 0 0 1 0 0 0 0 24 2 0 73 0 0 1 4 5 0 0 73 SUBCASES 1 0 1 0 0 1 0 0 0 0 23 1 70 71 8 127 1 3 1 1 3 71 SUBCTITL 1 0 1 0 0 1 0 0 0 0 26 1 77 78 97 10 1 3 1 1 3 78 SUBELEM 1 0 1 0 0 1 0 0 0 0 37 1 110 111 28 36 1 3 1 1 3 111 SUBGRID 1 0 1 0 0 1 0 0 0 0 25 1 74 75 29 35 1 3 1 1 3 75 SUPERS 1 0 0 0 0 0 0 0 0 0 7 2 0 24 0 0 -7 1 2 0 0 24 SURFSET 1 0 1 0 0 1 0 0 0 0 44 1 132 133 3 340 1 2 1 1 7 133 ACCESS PROJECT 1 NASTRAN RESTART VERSION 1 TITLE :\nMSC Nastran Access User’s Manual MSC Access SMPLR Program Output194 Main Index MSC PRODUCT: NASTRAN RELEASE 2001 MSC Nastran PATH INDEX 1 QUALIFER: MODEL TYPE:INT NUMBER 1 VALUES FOLLOWING ON NEXT LINE(S) …. 0 QUALIFER: SOLID TYPE:INT NUMBER 1 VALUES FOLLOWING ON NEXT LINE(S) …. 0 QUALIFER: HIGHQUAL TYPE:INT NUMBER 1 VALUES FOLLOWING ON NEXT LINE(S) …. 0 QUALIFER: AUXMID TYPE:INT NUMBER 1 VALUES FOLLOWING ON NEXT LINE(S) …. 0 DATA BLOCK CODE 1 DICTIONARY NAME:DISPR APPROACH:STATICS (DISPLACEMENT) PROJECT 1 PATH 1 SEID 0 SUBCASE 1 DESIGN CYCLE 0 P-ITERATION 0 GRID ID 120 —- 0.00000E+00 1.83749E-03 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 GRID ID 121 —- 0.00000E+00 0.00000E+00 -5.64702E-04 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 GRID ID 10000 —- 0.00000E+00 1.10024E-03 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 GRID ID 10001 —- 0.00000E+00 1.11034E-03 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 GRID ID 10002 —- 0.00000E+00 1.11848E-03 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 GRID ID 10003 —- 0.00000E+00 1.13370E-03 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 GRID ID 10004 —- 0.00000E+00 1.21602E-03 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 GRID ID 10005 —- 0.00000E+00 1.56928E-03 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 GRID ID 10006 —- 0.00000E+00 2.02355E-03 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 GRID ID 10100 —- 0.00000E+00 1.05410E-03 -2.59923E-04 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 DATA BLOCK CODE 4 DICTIONARY NAME:SPCFR APPROACH:STATICS (CONSTRAINT FORCES) PROJECT 1 PATH 1 SEID 0 SUBCASE 1 DESIGN CYCLE 0 P-ITERATION 0 GRID ID 120 —- 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 GRID ID 121 —- 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 GRID ID 10000 —- 0.00000E+00 0.00000E+00 5.66691E+01 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 GRID ID 10001 —- 0.00000E+00 0.00000E+00 9.93207E+01 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 GRID ID 10002 —- 0.00000E+00 0.00000E+00 8.11467E+01 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 GRID ID 10003 —- 0.00000E+00 0.00000E+00 5.18784E+01 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 GRID ID 10004 —- 0.00000E+00 0.00000E+00 -1.21092E+01 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 GRID ID 10005 —- 0.00000E+00 0.00000E+00 -1.26546E+02 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 GRID ID 10006 —- 0.00000E+00 0.00000E+00 -1.50360E+02 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 GRID ID 10100 —- 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 DATA BLOCK CODE 5 DICTIONARY NAME:LOADR APPROACH:STATICS (LOAD) PROJECT 1 PATH 1 SEID 0 SUBCASE 1 DESIGN CYCLE 0 P-ITERATION 0\n195 Appendix C: Input/Output Examples MSC Access SMPLR Program Output Main Index GRID ID 120 —- 0.00000E+00 5.00000E+03 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 GRID ID 121 —- 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 GRID ID 10000 —- 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 GRID ID 10001 —- 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 GRID ID 10002 —- 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 GRID ID 10003 —- 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 GRID ID 10004 —- 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 GRID ID 10005 —- 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 GRID ID 10006 —- 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 GRID ID 10100 —- 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 DATA BLOCK CODE 7 DICTIONARY NAME:SGSVR APPROACH:STATICS (GRID POINT STRESS SURFACE) PROJECT 1 PATH 1 SEID 0 SUBCASE 1 SURFACE ID 1 DESIGN CYCLE 0 P-ITERATION 0 GRID ID 10000 —- 0.00000E+00 FIBER 1 = Z1 -7.94082E+02 -1.27099E+04 1.01180E+03 4.81915E+00 -7.08778E+02 -1.27952E+04 6.04321E+03 1.24559E+04 GRID ID 10000 —- 0.00000E+00 FIBER 2 = Z2 -7.94082E+02 -1.27099E+04 1.01180E+03 4.81915E+00 -7.08778E+02 -1.27952E+04 6.04321E+03 1.24559E+04 GRID ID 10000 —- 0.00000E+00 FIBER 3 = MID -7.94082E+02 -1.27099E+04 1.01180E+03 4.81915E+00 -7.08778E+02 -1.27952E+04 6.04321E+03 1.24559E+04 GRID ID 10001 —- 0.00000E+00 FIBER 1 = Z1 -6.21777E+02 -8.67669E+03 1.38681E+02 9.86067E-01 -6.19390E+02 -8.67908E+03 4.02984E+03 8.38656E+03 GRID ID 10001 —- 0.00000E+00 FIBER 2 = Z2 -6.21777E+02 -8.67669E+03 1.38681E+02 9.86067E-01 -6.19390E+02 -8.67908E+03 4.02984E+03 8.38656E+03 GRID ID 10001 —- 0.00000E+00 FIBER 3 = MID -6.21777E+02 -8.67669E+03 1.38681E+02 9.86067E-01 -6.19390E+02 -8.67908E+03 4.02984E+03 8.38656E+03 GRID ID 10002 —- 0.00000E+00 FIBER 1 = Z1 -6.21777E+02 -8.67669E+03 1.38681E+02 9.86067E-01 -6.19390E+02 -8.67908E+03 4.02984E+03 8.38656E+03 GRID ID 10002 —- 0.00000E+00 FIBER 2 = Z2 -2.14120E+02 -4.48617E+03 -4.89693E+01 -6.56650E-01 -2.13558E+02 -4.48673E+03 2.13659E+03 4.38386E+03 GRID ID 10002 —- 0.00000E+00 FIBER 3 = MID -2.14120E+02 -4.48617E+03 -4.89693E+01 -6.56650E-01 -2.13558E+02 -4.48673E+03 2.13659E+03 4.38386E+03 GRID ID 10003 —- 0.00000E+00 FIBER 1 = Z1 -6.21777E+02 -8.67669E+03 1.38681E+02 9.86067E-01 -6.19390E+02 -8.67908E+03 4.02984E+03 8.38656E+03 GRID ID 10003 —- 0.00000E+00 FIBER 2 = Z2 1.87503E+03 -1.55681E+03 -1.40624E+02 -2.34253E+00 1.88078E+03 -1.56257E+03 1.72167E+03 2.98627E+03 GRID ID 10003 —- 0.00000E+00 FIBER 3 = MID 1.87503E+03 -1.55681E+03 -1.40624E+02 -2.34253E+00 1.88078E+03 -1.56257E+03 1.72167E+03 2.98627E+03 GRID ID 10004 —- 0.00000E+00 FIBER 1 = Z1 -2.14120E+02 -4.48617E+03 -4.89693E+01 -6.56650E-01 -2.13558E+02 -4.48673E+03 2.13659E+03 4.38386E+03 GRID ID 10004 —- 0.00000E+00 FIBER 2 = Z2 5.39521E+03 1.95853E+01 -1.36566E+02 -1.45433E+00 5.39868E+03 1.61182E+01 2.69128E+03 5.39064E+03 GRID ID 10004 —- 0.00000E+00 FIBER 3 = MID 5.39521E+03 1.95853E+01 -1.36566E+02 -1.45433E+00 5.39868E+03 1.61182E+01 2.69128E+03 5.39064E+03 GRID ID 10005 —- 0.00000E+00 FIBER 1 = Z1 -2.14120E+02 -4.48617E+03 -4.89693E+01 -6.56650E-01 -2.13558E+02 -4.48673E+03 2.13659E+03 4.38386E+03 GRID ID 10005 —- 0.00000E+00 FIBER 2 = Z2 8.44496E+03 1.18999E+03 -8.55874E+01 -6.75797E-01 8.44597E+03 1.18898E+03 3.62849E+03 7.91871E+03 GRID ID 10005 —- 0.00000E+00 FIBER 3 = MID 8.44496E+03 1.18999E+03 -8.55874E+01 -6.75797E-01 8.44597E+03 1.18898E+03 3.62849E+03 7.91871E+03 GRID ID 10006 —- 0.00000E+00 FIBER 1 = Z1 -2.14120E+02 -4.48617E+03 -4.89693E+01 -6.56650E-01 -2.13558E+02 -4.48673E+03 2.13659E+03 4.38386E+03 GRID ID 10006 —- 0.00000E+00 FIBER 2 = Z2 1.02669E+04 2.56622E+03 2.26108E+02 1.68040E+00 1.02735E+04 2.55959E+03 3.85697E+03 9.26288E+03 GRID ID 10006 —- 0.00000E+00 FIBER 3 = MID\nMSC Nastran Access User’s Manual MSC Access SMPLR Program Output196 Main Index 1.02669E+04 2.56622E+03 2.26108E+02 1.68040E+00 1.02735E+04 2.55959E+03 3.85697E+03 9.26288E+03 GRID ID 10100 —- 0.00000E+00 FIBER 1 = Z1 1.87503E+03 -1.55681E+03 -1.40624E+02 -2.34253E+00 1.88078E+03 -1.56257E+03 1.72167E+03 2.98627E+03 GRID ID 10100 —- 0.00000E+00 FIBER 2 = Z2 -6.69237E+02 -1.03717E+04 1.50030E+03 8.59242E+00 -4.42542E+02 -1.05984E+04 5.07792E+03 1.03842E+04 GRID ID 10100 —- 0.00000E+00 FIBER 3 = MID -6.69237E+02 -1.03717E+04 1.50030E+03 8.59242E+00 -4.42542E+02 -1.05984E+04 5.07792E+03 1.03842E+04 GRID ID 10101 —- 0.00000E+00 FIBER 1 = Z1 1.87503E+03 -1.55681E+03 -1.40624E+02 -2.34253E+00 1.88078E+03 -1.56257E+03 1.72167E+03 2.98627E+03 GRID ID 10101 —- 0.00000E+00 FIBER 2 = Z2 -1.55507E+01 -7.05868E+03 -1.90979E+01 -1.55360E-01 -1.54990E+01 -7.05873E+03 3.52162E+03 7.05100E+03 GRID ID 10101 —- 0.00000E+00 FIBER 3 = MID -1.55507E+01 -7.05868E+03 -1.90979E+01 -1.55360E-01 -1.54990E+01 -7.05873E+03 3.52162E+03 7.05100E+03 GRID ID 10102 —- 0.00000E+00 FIBER 1 = Z1 1.87503E+03 -1.55681E+03 -1.40624E+02 -2.34253E+00 1.88078E+03 -1.56257E+03 1.72167E+03 2.98627E+03 GRID ID 10102 —- 0.00000E+00 FIBER 2 = Z2 1.11877E+03 -4.09973E+03 -1.20762E+03 -1.24179E+01 1.38468E+03 -4.36564E+03 2.87516E+03 5.19819E+03 GRID ID 10102 —- 0.00000E+00 FIBER 3 = MID 1.11877E+03 -4.09973E+03 -1.20762E+03 -1.24179E+01 1.38468E+03 -4.36564E+03 2.87516E+03 5.19819E+03 DATA BLOCK CODE 7 DICTIONARY NAME:SGSVR APPROACH:STATICS (GRID POINT STRESS SURFACE) PROJECT 1 PATH 1 SEID 0 SUBCASE 1 SURFACE ID 7 DESIGN CYCLE 0 P-ITERATION 0 GRID ID 10000 —- 0.00000E+00 FIBER 1 = Z1 -4.98782E+02 -1.30052E+04 4.89390E+02 2.23749E+00 -4.79661E+02 -1.30243E+04 6.27232E+03 1.27912E+04 GRID ID 10000 —- 0.00000E+00 FIBER 2 = Z2 -4.98782E+02 -1.30052E+04 4.89390E+02 2.23749E+00 -4.79661E+02 -1.30243E+04 6.27232E+03 1.27912E+04 GRID ID 10000 —- 0.00000E+00 FIBER 3 = MID -4.98782E+02 -1.30052E+04 4.89390E+02 2.23749E+00 -4.79661E+02 -1.30243E+04 6.27232E+03 1.27912E+04 GRID ID 10001 —- 0.00000E+00 FIBER 1 = Z1 -4.48765E+02 -8.84970E+03 -3.52465E+01 -2.40381E-01 -4.48617E+02 -8.84985E+03 4.20062E+03 8.63429E+03 GRID ID 10001 —- 0.00000E+00 FIBER 2 = Z2 -4.48765E+02 -8.84970E+03 -3.52465E+01 -2.40381E-01 -4.48617E+02 -8.84985E+03 4.20062E+03 8.63429E+03 GRID ID 10001 —- 0.00000E+00 FIBER 3 = MID -4.48765E+02 -8.84970E+03 -3.52465E+01 -2.40381E-01 -4.48617E+02 -8.84985E+03 4.20062E+03 8.63429E+03 GRID ID 10002 —- 0.00000E+00 FIBER 1 = Z1 -4.48765E+02 -8.84970E+03 -3.52465E+01 -2.40381E-01 -4.48617E+02 -8.84985E+03 4.20062E+03 8.63429E+03 GRID ID 10002 —- 0.00000E+00 FIBER 2 = Z2 2.05532E+02 -4.90582E+03 -6.08948E+01 -6.82471E-01 2.06258E+02 -4.90655E+03 2.55640E+03 5.01286E+03 GRID ID 10002 —- 0.00000E+00 FIBER 3 = MID 2.05532E+02 -4.90582E+03 -6.08948E+01 -6.82471E-01 2.06258E+02 -4.90655E+03 2.55640E+03 5.01286E+03 GRID ID 10003 —- 0.00000E+00 FIBER 1 = Z1 -4.48765E+02 -8.84970E+03 -3.52465E+01 -2.40381E-01 -4.48617E+02 -8.84985E+03 4.20062E+03 8.63429E+03 GRID ID 10003 —- 0.00000E+00 FIBER 2 = Z2 2.39898E+03 -2.08076E+03 -7.16339E+01 -9.15884E-01 2.40012E+03 -2.08191E+03 2.24102E+03 3.88481E+03 GRID ID 10003 —- 0.00000E+00 FIBER 3 = MID 2.39898E+03 -2.08076E+03 -7.16339E+01 -9.15884E-01 2.40012E+03 -2.08191E+03 2.24102E+03 3.88481E+03 GRID ID 10004 —- 0.00000E+00 FIBER 1 = Z1 2.05532E+02 -4.90582E+03 -6.08948E+01 -6.82471E-01 2.06258E+02 -4.90655E+03 2.55640E+03 5.01286E+03 GRID ID 10004 —- 0.00000E+00 FIBER 2 = Z2 5.87345E+03 -4.58648E+02 -8.23709E+01 -7.45163E-01 5.87452E+03 -4.59719E+02 3.16712E+03 6.11735E+03 GRID ID 10004 —- 0.00000E+00 FIBER 3 = MID 5.87345E+03 -4.58648E+02 -8.23709E+01 -7.45163E-01 5.87452E+03 -4.59719E+02 3.16712E+03 6.11735E+03 GRID ID 10005 —- 0.00000E+00 FIBER 1 = Z1 2.05532E+02 -4.90582E+03 -6.08948E+01 -6.82471E-01 2.06258E+02 -4.90655E+03 2.55640E+03 5.01286E+03 GRID ID 10005 —- 0.00000E+00 FIBER 2 = Z2 8.78289E+03 8.52057E+02 -6.17921E+01 -4.46377E-01 8.78337E+03 8.51576E+02 3.96590E+03 8.39006E+03 GRID ID 10005 —- 0.00000E+00 FIBER 3 = MID 8.78289E+03 8.52057E+02 -6.17921E+01 -4.46377E-01 8.78337E+03 8.51576E+02 3.96590E+03 8.39006E+03 GRID ID 10006 —- 0.00000E+00 FIBER 1 = Z1 2.05532E+02 -4.90582E+03 -6.08948E+01 -6.82471E-01 2.06258E+02 -4.90655E+03 2.55640E+03 5.01286E+03 GRID ID 10006 —- 0.00000E+00 FIBER 2 = Z2 1.06701E+04 2.16301E+03 2.69041E+02 1.80959E+00 1.06786E+04 2.15450E+03 4.26206E+03 9.78099E+03 GRID ID 10006 —- 0.00000E+00 FIBER 3 = MID 1.06701E+04 2.16301E+03 2.69041E+02 1.80959E+00 1.06786E+04 2.15450E+03 4.26206E+03 9.78099E+03\n197 Appendix C: Input/Output Examples MSC Access SMPLR Program Output Main Index GRID ID 10100 —- 0.00000E+00 FIBER 1 = Z1 2.39898E+03 -2.08076E+03 -7.16339E+01 -9.15884E-01 2.40012E+03 -2.08191E+03 2.24102E+03 3.88481E+03 GRID ID 10100 —- 0.00000E+00 FIBER 2 = Z2 -3.82434E+02 -1.06585E+04 -1.39999E+02 -7.80392E-01 -3.80527E+02 -1.06604E+04 5.13993E+03 1.04753E+04 GRID ID 10100 —- 0.00000E+00 FIBER 3 = MID -3.82434E+02 -1.06585E+04 -1.39999E+02 -7.80392E-01 -3.80527E+02 -1.06604E+04 5.13993E+03 1.04753E+04 GRID ID 10101 —- 0.00000E+00 FIBER 1 = Z1 2.39898E+03 -2.08076E+03 -7.16339E+01 -9.15884E-01 2.40012E+03 -2.08191E+03 2.24102E+03 3.88481E+03 GRID ID 10101 —- 0.00000E+00 FIBER 2 = Z2 -2.82484E+02 -6.79175E+03 -1.15786E+03 -9.79172E+00 -8.26587E+01 -6.99157E+03 3.45446E+03 6.95061E+03 GRID ID 10101 —- 0.00000E+00 FIBER 3 = MID -2.82484E+02 -6.79175E+03 -1.15786E+03 -9.79172E+00 -8.26587E+01 -6.99157E+03 3.45446E+03 6.95061E+03 GRID ID 10102 —- 0.00000E+00 FIBER 1 = Z1 2.39898E+03 -2.08076E+03 -7.16339E+01 -9.15884E-01 2.40012E+03 -2.08191E+03 2.24102E+03 3.88481E+03 GRID ID 10102 —- 0.00000E+00 FIBER 2 = Z2 4.08827E+02 -3.38978E+03 -2.00061E+03 -2.32440E+01 1.26811E+03 -4.24906E+03 2.75859E+03 5.00509E+03 GRID ID 10102 —- 0.00000E+00 FIBER 3 = MID 4.08827E+02 -3.38978E+03 -2.00061E+03 -2.32440E+01 1.26811E+03 -4.24906E+03 2.75859E+03 5.00509E+03 DATA BLOCK CODE 1 DICTIONARY NAME:DISPR APPROACH:STATICS (DISPLACEMENT) PROJECT 1 PATH 1 SEID 0 SUBCASE 2 DESIGN CYCLE 0 P-ITERATION 0 GRID ID 120 —- 0.00000E+00 -5.64702E-04 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 GRID ID 121 —- 0.00000E+00 0.00000E+00 1.83749E-03 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 GRID ID 10000 —- 0.00000E+00 -4.17106E-04 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 GRID ID 10001 —- 0.00000E+00 -4.43562E-04 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 GRID ID 10002 —- 0.00000E+00 -4.64091E-04 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 GRID ID 10003 —- 0.00000E+00 -4.78164E-04 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 GRID ID 10004 —- 0.00000E+00 -4.98751E-04 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 GRID ID 10005 —- 0.00000E+00 -5.90846E-04 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 GRID ID 10006 —- 0.00000E+00 -7.20318E-04 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 GRID ID 10100 —- 0.00000E+00 -3.71053E-04 2.59675E-04 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 DATA BLOCK CODE 4 DICTIONARY NAME:SPCFR APPROACH:STATICS (CONSTRAINT FORCES) PROJECT 1 PATH 1 SEID 0 SUBCASE 2 DESIGN CYCLE 0 P-ITERATION 0 GRID ID 120 —- 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 GRID ID 121 —- 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 GRID ID 10000 —- 0.00000E+00 0.00000E+00 -1.56313E+02 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 GRID ID 10001 —- 0.00000E+00 0.00000E+00 -3.31012E+02 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 GRID ID 10002 —- 0.00000E+00 0.00000E+00 -4.12946E+02 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 GRID ID 10003 —- 0.00000E+00 0.00000E+00 -6.65053E+02 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 GRID ID 10004 —- 0.00000E+00 0.00000E+00 -1.22627E+03 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 GRID ID 10005 —- 0.00000E+00 0.00000E+00 -1.51762E+03 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 GRID ID 10006 —- 0.00000E+00 0.00000E+00 -6.90789E+02 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 GRID ID 10100 —- 0.00000E+00\nMSC Nastran Access User’s Manual MSC Access SMPLR Program Output198 Main Index 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 DATA BLOCK CODE 5 DICTIONARY NAME:LOADR APPROACH:STATICS (LOAD) PROJECT 1 PATH 1 SEID 0 SUBCASE 2 DESIGN CYCLE 0 P-ITERATION 0 GRID ID 120 —- 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 GRID ID 121 —- 0.00000E+00 0.00000E+00 5.00000E+03 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 GRID ID 10000 —- 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 GRID ID 10001 —- 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 GRID ID 10002 —- 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 GRID ID 10003 —- 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 GRID ID 10004 —- 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 GRID ID 10005 —- 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 GRID ID 10006 —- 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 GRID ID 10100 —- 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 DATA BLOCK CODE 7 DICTIONARY NAME:SGSVR APPROACH:STATICS (GRID POINT STRESS SURFACE) PROJECT 1 PATH 1 SEID 0 SUBCASE 2 SURFACE ID 1 DESIGN CYCLE 0 P-ITERATION 0 GRID ID 10000 —- 0.00000E+00 FIBER 1 = Z1 4.62745E+02 3.35039E+04 -1.41924E+03 -8.75450E+01 3.35647E+04 4.01896E+02 1.65814E+04 3.33656E+04 GRID ID 10000 —- 0.00000E+00 FIBER 2 = Z2 4.62745E+02 3.35039E+04 -1.41924E+03 -8.75450E+01 3.35647E+04 4.01896E+02 1.65814E+04 3.33656E+04 GRID ID 10000 —- 0.00000E+00 FIBER 3 = MID 4.62745E+02 3.35039E+04 -1.41924E+03 -8.75450E+01 3.35647E+04 4.01896E+02 1.65814E+04 3.33656E+04 GRID ID 10001 —- 0.00000E+00 FIBER 1 = Z1 2.13852E+03 2.76481E+04 -2.26296E+02 -8.94918E+01 2.76501E+04 2.13651E+03 1.27568E+04 2.66461E+04 GRID ID 10001 —- 0.00000E+00 FIBER 2 = Z2 2.13852E+03 2.76481E+04 -2.26296E+02 -8.94918E+01 2.76501E+04 2.13651E+03 1.27568E+04 2.66461E+04 GRID ID 10001 —- 0.00000E+00 FIBER 3 = MID 2.13852E+03 2.76481E+04 -2.26296E+02 -8.94918E+01 2.76501E+04 2.13651E+03 1.27568E+04 2.66461E+04 GRID ID 10002 —- 0.00000E+00 FIBER 1 = Z1 2.13852E+03 2.76481E+04 -2.26296E+02 -8.94918E+01 2.76501E+04 2.13651E+03 1.27568E+04 2.66461E+04 GRID ID 10002 —- 0.00000E+00 FIBER 2 = Z2 3.76291E+03 2.14575E+04 -2.14732E+01 -8.99305E+01 2.14575E+04 3.76289E+03 8.84731E+03 1.98455E+04 GRID ID 10002 —- 0.00000E+00 FIBER 3 = MID 3.76291E+03 2.14575E+04 -2.14732E+01 -8.99305E+01 2.14575E+04 3.76289E+03 8.84731E+03 1.98455E+04 GRID ID 10003 —- 0.00000E+00 FIBER 1 = Z1 2.13852E+03 2.76481E+04 -2.26296E+02 -8.94918E+01 2.76501E+04 2.13651E+03 1.27568E+04 2.66461E+04 GRID ID 10003 —- 0.00000E+00 FIBER 2 = Z2 3.92687E+03 1.63497E+04 9.52609E+01 8.95607E+01 1.63504E+04 3.92614E+03 6.21213E+03 1.47836E+04 GRID ID 10003 —- 0.00000E+00 FIBER 3 = MID 3.92687E+03 1.63497E+04 9.52609E+01 8.95607E+01 1.63504E+04 3.92614E+03 6.21213E+03 1.47836E+04 GRID ID 10004 —- 0.00000E+00 FIBER 1 = Z1 3.76291E+03 2.14575E+04 -2.14732E+01 -8.99305E+01 2.14575E+04 3.76289E+03 8.84731E+03 1.98455E+04 GRID ID 10004 —- 0.00000E+00 FIBER 2 = Z2 2.62550E+03 1.26843E+04 1.12570E+02 8.93589E+01 1.26855E+04 2.62424E+03 5.03064E+03 1.15982E+04 GRID ID 10004 —- 0.00000E+00 FIBER 3 = MID 2.62550E+03 1.26843E+04 1.12570E+02 8.93589E+01 1.26855E+04 2.62424E+03 5.03064E+03 1.15982E+04 GRID ID 10005 —- 0.00000E+00 FIBER 1 = Z1 3.76291E+03 2.14575E+04 -2.14732E+01 -8.99305E+01 2.14575E+04 3.76289E+03 8.84731E+03 1.98455E+04 GRID ID 10005 —- 0.00000E+00 FIBER 2 = Z2 9.98008E+02 1.03231E+04 7.32832E+01 8.95498E+01 1.03237E+04 9.97432E+02 4.66313E+03 9.86287E+03 GRID ID 10005 —- 0.00000E+00 FIBER 3 = MID 9.98008E+02 1.03231E+04 7.32832E+01 8.95498E+01 1.03237E+04 9.97432E+02 4.66313E+03 9.86287E+03\n199 Appendix C: Input/Output Examples MSC Access SMPLR Program Output Main Index GRID ID 10006 —- 0.00000E+00 FIBER 1 = Z1 3.76291E+03 2.14575E+04 -2.14732E+01 -8.99305E+01 2.14575E+04 3.76289E+03 8.84731E+03 1.98455E+04 GRID ID 10006 —- 0.00000E+00 FIBER 2 = Z2 -8.74269E+01 8.44391E+03 -7.58213E+01 -8.94908E+01 8.44458E+03 -8.81006E+01 4.26634E+03 8.48898E+03 GRID ID 10006 —- 0.00000E+00 FIBER 3 = MID -8.74269E+01 8.44391E+03 -7.58213E+01 -8.94908E+01 8.44458E+03 -8.81006E+01 4.26634E+03 8.48898E+03 GRID ID 10100 —- 0.00000E+00 FIBER 1 = Z1 3.92687E+03 1.63497E+04 9.52609E+01 8.95607E+01 1.63504E+04 3.92614E+03 6.21213E+03 1.47836E+04 GRID ID 10100 —- 0.00000E+00 FIBER 2 = Z2 1.44464E+03 3.00713E+04 -4.94549E+03 -8.04696E+01 3.09016E+04 6.14345E+02 1.51436E+04 3.05990E+04 GRID ID 10100 —- 0.00000E+00 FIBER 3 = MID 1.44464E+03 3.00713E+04 -4.94549E+03 -8.04696E+01 3.09016E+04 6.14345E+02 1.51436E+04 3.05990E+04 GRID ID 10101 —- 0.00000E+00 FIBER 1 = Z1 3.92687E+03 1.63497E+04 9.52609E+01 8.95607E+01 1.63504E+04 3.92614E+03 6.21213E+03 1.47836E+04 GRID ID 10101 —- 0.00000E+00 FIBER 2 = Z2 2.52957E+03 2.50446E+04 -2.80374E+03 -8.30074E+01 2.53885E+04 2.18568E+03 1.16014E+04 2.43693E+04 GRID ID 10101 —- 0.00000E+00 FIBER 3 = MID 2.52957E+03 2.50446E+04 -2.80374E+03 -8.30074E+01 2.53885E+04 2.18568E+03 1.16014E+04 2.43693E+04 GRID ID 10102 —- 0.00000E+00 FIBER 1 = Z1 3.92687E+03 1.63497E+04 9.52609E+01 8.95607E+01 1.63504E+04 3.92614E+03 6.21213E+03 1.47836E+04 GRID ID 10102 —- 0.00000E+00 FIBER 2 = Z2 3.19767E+03 2.03124E+04 -9.71655E+02 -8.67610E+01 2.03674E+04 3.14269E+03 8.61237E+03 1.89921E+04 GRID ID 10102 —- 0.00000E+00 FIBER 3 = MID 3.19767E+03 2.03124E+04 -9.71655E+02 -8.67610E+01 2.03674E+04 3.14269E+03 8.61237E+03 1.89921E+04 DATA BLOCK CODE 7 DICTIONARY NAME:SGSVR APPROACH:STATICS (GRID POINT STRESS SURFACE) PROJECT 1 PATH 1 SEID 0 SUBCASE 2 SURFACE ID 7 DESIGN CYCLE 0 P-ITERATION 0 GRID ID 10000 —- 0.00000E+00 FIBER 1 = Z1 5.10938E+02 3.34557E+04 -4.86759E+02 -8.91537E+01 3.34629E+04 5.03748E+02 1.64796E+04 3.32139E+04 GRID ID 10000 —- 0.00000E+00 FIBER 2 = Z2 5.10938E+02 3.34557E+04 -4.86759E+02 -8.91537E+01 3.34629E+04 5.03748E+02 1.64796E+04 3.32139E+04 GRID ID 10000 —- 0.00000E+00 FIBER 3 = MID 5.10938E+02 3.34557E+04 -4.86759E+02 -8.91537E+01 3.34629E+04 5.03748E+02 1.64796E+04 3.32139E+04 GRID ID 10001 —- 0.00000E+00 FIBER 1 = Z1 2.33665E+03 2.74499E+04 3.41322E+01 8.99221E+01 2.74500E+04 2.33661E+03 1.25567E+04 2.63594E+04 GRID ID 10001 —- 0.00000E+00 FIBER 2 = Z2 2.33665E+03 2.74499E+04 3.41322E+01 8.99221E+01 2.74500E+04 2.33661E+03 1.25567E+04 2.63594E+04 GRID ID 10001 —- 0.00000E+00 FIBER 3 = MID 2.33665E+03 2.74499E+04 3.41322E+01 8.99221E+01 2.74500E+04 2.33661E+03 1.25567E+04 2.63594E+04 GRID ID 10002 —- 0.00000E+00 FIBER 1 = Z1 2.33665E+03 2.74499E+04 3.41322E+01 8.99221E+01 2.74500E+04 2.33661E+03 1.25567E+04 2.63594E+04 GRID ID 10002 —- 0.00000E+00 FIBER 2 = Z2 3.63005E+03 2.15904E+04 5.65368E+01 8.98196E+01 2.15905E+04 3.62987E+03 8.98033E+03 2.00239E+04 GRID ID 10002 —- 0.00000E+00 FIBER 3 = MID 3.63005E+03 2.15904E+04 5.65368E+01 8.98196E+01 2.15905E+04 3.62987E+03 8.98033E+03 2.00239E+04 GRID ID 10003 —- 0.00000E+00 FIBER 1 = Z1 2.33665E+03 2.74499E+04 3.41322E+01 8.99221E+01 2.74500E+04 2.33661E+03 1.25567E+04 2.63594E+04 GRID ID 10003 —- 0.00000E+00 FIBER 2 = Z2 3.59921E+03 1.66773E+04 6.95123E+01 8.96955E+01 1.66777E+04 3.59884E+03 6.53943E+03 1.52012E+04 GRID ID 10003 —- 0.00000E+00 FIBER 3 = MID 3.59921E+03 1.66773E+04 6.95123E+01 8.96955E+01 1.66777E+04 3.59884E+03 6.53943E+03 1.52012E+04 GRID ID 10004 —- 0.00000E+00 FIBER 1 = Z1 3.63005E+03 2.15904E+04 5.65368E+01 8.98196E+01 2.15905E+04 3.62987E+03 8.98033E+03 2.00239E+04 GRID ID 10004 —- 0.00000E+00 FIBER 2 = Z2 2.25541E+03 1.30543E+04 7.96738E+01 8.95773E+01 1.30549E+04 2.25483E+03 5.40005E+03 1.20863E+04 GRID ID 10004 —- 0.00000E+00 FIBER 3 = MID 2.25541E+03 1.30543E+04 7.96738E+01 8.95773E+01 1.30549E+04 2.25483E+03 5.40005E+03 1.20863E+04 GRID ID 10005 —- 0.00000E+00 FIBER 1 = Z1 3.63005E+03 2.15904E+04 5.65368E+01 8.98196E+01 2.15905E+04 3.62987E+03 8.98033E+03 2.00239E+04 GRID ID 10005 —- 0.00000E+00 FIBER 2 = Z2 7.02545E+02 1.06186E+04 6.23433E+01 8.96398E+01 1.06190E+04 7.02153E+02 4.95840E+03 1.02859E+04 GRID ID 10005 —- 0.00000E+00 FIBER 3 = MID 7.02545E+02 1.06186E+04 6.23433E+01 8.96398E+01 1.06190E+04 7.02153E+02 4.95840E+03 1.02859E+04 GRID ID 10006 —- 0.00000E+00 FIBER 1 = Z1\nMSC Nastran Access User’s Manual MSC Access SMPLR Program Output200 Main Index 3.63005E+03 2.15904E+04 5.65368E+01 8.98196E+01 2.15905E+04 3.62987E+03 8.98033E+03 2.00239E+04 GRID ID 10006 —- 0.00000E+00 FIBER 2 = Z2 -4.29733E+02 8.78622E+03 -2.26735E+02 -8.85915E+01 8.79179E+03 -4.35308E+02 4.61355E+03 9.01733E+03 GRID ID 10006 —- 0.00000E+00 FIBER 3 = MID -4.29733E+02 8.78622E+03 -2.26735E+02 -8.85915E+01 8.79179E+03 -4.35308E+02 4.61355E+03 9.01733E+03 GRID ID 10100 —- 0.00000E+00 FIBER 1 = Z1 3.59921E+03 1.66773E+04 6.95123E+01 8.96955E+01 1.66777E+04 3.59884E+03 6.53943E+03 1.52012E+04 GRID ID 10100 —- 0.00000E+00 FIBER 2 = Z2 3.94676E+02 3.11213E+04 1.39326E+02 8.97402E+01 3.11219E+04 3.94044E+02 1.53639E+04 3.09268E+04 GRID ID 10100 —- 0.00000E+00 FIBER 3 = MID 3.94676E+02 3.11213E+04 1.39326E+02 8.97402E+01 3.11219E+04 3.94044E+02 1.53639E+04 3.09268E+04 GRID ID 10101 —- 0.00000E+00 FIBER 1 = Z1 3.59921E+03 1.66773E+04 6.95123E+01 8.96955E+01 1.66777E+04 3.59884E+03 6.53943E+03 1.52012E+04 GRID ID 10101 —- 0.00000E+00 FIBER 2 = Z2 2.17007E+03 2.54041E+04 1.15155E+03 8.71695E+01 2.54610E+04 2.11314E+03 1.16739E+04 2.44730E+04 GRID ID 10101 —- 0.00000E+00 FIBER 3 = MID 2.17007E+03 2.54041E+04 1.15155E+03 8.71695E+01 2.54610E+04 2.11314E+03 1.16739E+04 2.44730E+04 GRID ID 10102 —- 0.00000E+00 FIBER 1 = Z1 3.59921E+03 1.66773E+04 6.95123E+01 8.96955E+01 1.66777E+04 3.59884E+03 6.53943E+03 1.52012E+04 GRID ID 10102 —- 0.00000E+00 FIBER 2 = Z2 3.42250E+03 2.00876E+04 1.98771E+03 8.32915E+01 2.03214E+04 3.18870E+03 8.56636E+03 1.89296E+04 GRID ID 10102 —- 0.00000E+00 FIBER 3 = MID 3.42250E+03 2.00876E+04 1.98771E+03 8.32915E+01 2.03214E+04 3.18870E+03 8.56636E+03 1.89296E+04 DATA BLOCK CODE 1 DICTIONARY NAME:DISPR APPROACH:STATICS (DISPLACEMENT) PROJECT 1 PATH 1 SEID 0 SUBCASE 3 DESIGN CYCLE 0 P-ITERATION 0 GRID ID 120 —- 0.00000E+00 1.27279E-03 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 GRID ID 121 —- 0.00000E+00 0.00000E+00 1.27279E-03 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 GRID ID 10000 —- 0.00000E+00 6.83135E-04 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 GRID ID 10001 —- 0.00000E+00 6.66775E-04 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 GRID ID 10002 —- 0.00000E+00 6.54388E-04 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 GRID ID 10003 —- 0.00000E+00 6.55541E-04 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 GRID ID 10004 —- 0.00000E+00 7.17268E-04 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 GRID ID 10005 —- 0.00000E+00 9.78437E-04 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 GRID ID 10006 —- 0.00000E+00 1.30323E-03 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 GRID ID 10100 —- 0.00000E+00 6.83047E-04 -2.47586E-07 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 DATA BLOCK CODE 4 DICTIONARY NAME:SPCFR APPROACH:STATICS (CONSTRAINT FORCES) PROJECT 1 PATH 1 SEID 0 SUBCASE 3 DESIGN CYCLE 0 P-ITERATION 0 GRID ID 120 —- 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 GRID ID 121 —- 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 GRID ID 10000 —- 0.00000E+00 0.00000E+00 -9.96435E+01 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 GRID ID 10001 —- 0.00000E+00 0.00000E+00 -2.31691E+02 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 GRID ID 10002 —- 0.00000E+00 0.00000E+00 -3.31799E+02 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 GRID ID 10003 —- 0.00000E+00 0.00000E+00 -6.13174E+02 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 GRID ID 10004 —- 0.00000E+00 0.00000E+00 -1.23838E+03 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00\n201 Appendix C: Input/Output Examples MSC Access SMPLR Program Output Main Index GRID ID 10005 —- 0.00000E+00 0.00000E+00 -1.64417E+03 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 GRID ID 10006 —- 0.00000E+00 0.00000E+00 -8.41149E+02 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 GRID ID 10100 —- 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 DATA BLOCK CODE 5 DICTIONARY NAME:LOADR APPROACH:STATICS (LOAD) PROJECT 1 PATH 1 SEID 0 SUBCASE 3 DESIGN CYCLE 0 P-ITERATION 0 GRID ID 120 —- 0.00000E+00 5.00000E+03 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 GRID ID 121 —- 0.00000E+00 0.00000E+00 5.00000E+03 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 GRID ID 10000 —- 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 GRID ID 10001 —- 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 GRID ID 10002 —- 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 GRID ID 10003 —- 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 GRID ID 10004 —- 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 GRID ID 10005 —- 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 GRID ID 10006 —- 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 GRID ID 10100 —- 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 0.00000E+00 DATA BLOCK CODE 7 DICTIONARY NAME:SGSVR APPROACH:STATICS (GRID POINT STRESS SURFACE) PROJECT 1 PATH 1 SEID 0 SUBCASE 3 SURFACE ID 1 DESIGN CYCLE 0 P-ITERATION 0 GRID ID 10000 —- 0.00000E+00 FIBER 1 = Z1 -3.31337E+02 2.07940E+04 -4.07436E+02 -8.88955E+01 2.08018E+04 -3.39193E+02 1.05705E+04 2.09735E+04 GRID ID 10000 —- 0.00000E+00 FIBER 2 = Z2 -3.31337E+02 2.07940E+04 -4.07436E+02 -8.88955E+01 2.08018E+04 -3.39193E+02 1.05705E+04 2.09735E+04 GRID ID 10000 —- 0.00000E+00 FIBER 3 = MID -3.31337E+02 2.07940E+04 -4.07436E+02 -8.88955E+01 2.08018E+04 -3.39193E+02 1.05705E+04 2.09735E+04 GRID ID 10001 —- 0.00000E+00 FIBER 1 = Z1 1.51674E+03 1.89714E+04 -8.76149E+01 -8.97124E+01 1.89718E+04 1.51630E+03 8.72775E+03 1.82609E+04 GRID ID 10001 —- 0.00000E+00 FIBER 2 = Z2 1.51674E+03 1.89714E+04 -8.76149E+01 -8.97124E+01 1.89718E+04 1.51630E+03 8.72775E+03 1.82609E+04 GRID ID 10001 —- 0.00000E+00 FIBER 3 = MID 1.51674E+03 1.89714E+04 -8.76149E+01 -8.97124E+01 1.89718E+04 1.51630E+03 8.72775E+03 1.82609E+04 GRID ID 10002 —- 0.00000E+00 FIBER 1 = Z1 1.51674E+03 1.89714E+04 -8.76149E+01 -8.97124E+01 1.89718E+04 1.51630E+03 8.72775E+03 1.82609E+04 GRID ID 10002 —- 0.00000E+00 FIBER 2 = Z2 3.54880E+03 1.69713E+04 -7.04425E+01 -8.96993E+01 1.69717E+04 3.54843E+03 6.71163E+03 1.55051E+04 GRID ID 10002 —- 0.00000E+00 FIBER 3 = MID 3.54880E+03 1.69713E+04 -7.04425E+01 -8.96993E+01 1.69717E+04 3.54843E+03 6.71163E+03 1.55051E+04 GRID ID 10003 —- 0.00000E+00 FIBER 1 = Z1 1.51674E+03 1.89714E+04 -8.76149E+01 -8.97124E+01 1.89718E+04 1.51630E+03 8.72775E+03 1.82609E+04 GRID ID 10003 —- 0.00000E+00 FIBER 2 = Z2 5.80190E+03 1.47928E+04 -4.53631E+01 -8.97109E+01 1.47931E+04 5.80167E+03 4.49570E+03 1.29101E+04 GRID ID 10003 —- 0.00000E+00 FIBER 3 = MID 5.80190E+03 1.47928E+04 -4.53631E+01 -8.97109E+01 1.47931E+04 5.80167E+03 4.49570E+03 1.29101E+04 GRID ID 10004 —- 0.00000E+00 FIBER 1 = Z1 3.54880E+03 1.69713E+04 -7.04425E+01 -8.96993E+01 1.69717E+04 3.54843E+03 6.71163E+03 1.55051E+04 GRID ID 10004 —- 0.00000E+00 FIBER 2 = Z2 8.02071E+03 1.27038E+04 -2.39966E+01 -8.97064E+01 1.27040E+04 8.02059E+03 2.34169E+03 1.11278E+04 GRID ID 10004 —- 0.00000E+00 FIBER 3 = MID 8.02071E+03 1.27038E+04 -2.39966E+01 -8.97064E+01 1.27040E+04 8.02059E+03 2.34169E+03 1.11278E+04\nMSC Nastran Access User’s Manual MSC Access SMPLR Program Output202 Main Index GRID ID 10005 —- 0.00000E+00 FIBER 1 = Z1 3.54880E+03 1.69713E+04 -7.04425E+01 -8.96993E+01 1.69717E+04 3.54843E+03 6.71163E+03 1.55051E+04 GRID ID 10005 —- 0.00000E+00 FIBER 2 = Z2 9.44296E+03 1.15131E+04 -1.23041E+01 -8.96595E+01 1.15132E+04 9.44289E+03 1.03514E+03 1.06303E+04 GRID ID 10005 —- 0.00000E+00 FIBER 3 = MID 9.44296E+03 1.15131E+04 -1.23041E+01 -8.96595E+01 1.15132E+04 9.44289E+03 1.03514E+03 1.06303E+04 GRID ID 10006 —- 0.00000E+00 FIBER 1 = Z1 3.54880E+03 1.69713E+04 -7.04425E+01 -8.96993E+01 1.69717E+04 3.54843E+03 6.71163E+03 1.55051E+04 GRID ID 10006 —- 0.00000E+00 FIBER 2 = Z2 1.01795E+04 1.10101E+04 1.50287E+02 8.00536E+01 1.10365E+04 1.01531E+04 4.41683E+02 1.06224E+04 GRID ID 10006 —- 0.00000E+00 FIBER 3 = MID 1.01795E+04 1.10101E+04 1.50287E+02 8.00536E+01 1.10365E+04 1.01531E+04 4.41683E+02 1.06224E+04 GRID ID 10100 —- 0.00000E+00 FIBER 1 = Z1 5.80190E+03 1.47928E+04 -4.53631E+01 -8.97109E+01 1.47931E+04 5.80167E+03 4.49570E+03 1.29101E+04 GRID ID 10100 —- 0.00000E+00 FIBER 2 = Z2 7.75398E+02 1.96996E+04 -3.44519E+03 -7.99966E+01 2.03073E+04 1.67710E+02 1.00698E+04 2.02240E+04 GRID ID 10100 —- 0.00000E+00 FIBER 3 = MID 7.75398E+02 1.96996E+04 -3.44519E+03 -7.99966E+01 2.03073E+04 1.67710E+02 1.00698E+04 2.02240E+04 GRID ID 10101 —- 0.00000E+00 FIBER 1 = Z1 5.80190E+03 1.47928E+04 -4.53631E+01 -8.97109E+01 1.47931E+04 5.80167E+03 4.49570E+03 1.29101E+04 GRID ID 10101 —- 0.00000E+00 FIBER 2 = Z2 2.51402E+03 1.79859E+04 -2.82284E+03 -7.99765E+01 1.84848E+04 2.01508E+03 8.23488E+03 1.75642E+04 GRID ID 10101 —- 0.00000E+00 FIBER 3 = MID 2.51402E+03 1.79859E+04 -2.82284E+03 -7.99765E+01 1.84848E+04 2.01508E+03 8.23488E+03 1.75642E+04 GRID ID 10102 —- 0.00000E+00 FIBER 1 = Z1 5.80190E+03 1.47928E+04 -4.53631E+01 -8.97109E+01 1.47931E+04 5.80167E+03 4.49570E+03 1.29101E+04 GRID ID 10102 —- 0.00000E+00 FIBER 2 = Z2 4.31645E+03 1.62127E+04 -2.17928E+03 -7.99391E+01 1.65994E+04 3.92979E+03 6.33479E+03 1.50250E+04 GRID ID 10102 —- 0.00000E+00 FIBER 3 = MID 4.31645E+03 1.62127E+04 -2.17928E+03 -7.99391E+01 1.65994E+04 3.92979E+03 6.33479E+03 1.50250E+04 DATA BLOCK CODE 7 DICTIONARY NAME:SGSVR APPROACH:STATICS (GRID POINT STRESS SURFACE) PROJECT 1 PATH 1 SEID 0 SUBCASE 3 SURFACE ID 7 DESIGN CYCLE 0 P-ITERATION 0 GRID ID 10000 —- 0.00000E+00 FIBER 1 = Z1 1.21558E+01 2.04505E+04 2.63108E+00 8.99926E+01 2.04505E+04 1.21553E+01 1.02192E+04 2.04444E+04 GRID ID 10000 —- 0.00000E+00 FIBER 2 = Z2 1.21558E+01 2.04505E+04 2.63108E+00 8.99926E+01 2.04505E+04 1.21553E+01 1.02192E+04 2.04444E+04 GRID ID 10000 —- 0.00000E+00 FIBER 3 = MID 1.21558E+01 2.04505E+04 2.63108E+00 8.99926E+01 2.04505E+04 1.21553E+01 1.02192E+04 2.04444E+04 GRID ID 10001 —- 0.00000E+00 FIBER 1 = Z1 1.88789E+03 1.86002E+04 -1.11426E+00 -8.99962E+01 1.86002E+04 1.88789E+03 8.35616E+03 1.77318E+04 GRID ID 10001 —- 0.00000E+00 FIBER 2 = Z2 1.88789E+03 1.86002E+04 -1.11426E+00 -8.99962E+01 1.86002E+04 1.88789E+03 8.35616E+03 1.77318E+04 GRID ID 10001 —- 0.00000E+00 FIBER 3 = MID 1.88789E+03 1.86002E+04 -1.11426E+00 -8.99962E+01 1.86002E+04 1.88789E+03 8.35616E+03 1.77318E+04 GRID ID 10002 —- 0.00000E+00 FIBER 1 = Z1 1.88789E+03 1.86002E+04 -1.11426E+00 -8.99962E+01 1.86002E+04 1.88789E+03 8.35616E+03 1.77318E+04 GRID ID 10002 —- 0.00000E+00 FIBER 2 = Z2 3.83558E+03 1.66845E+04 -4.35792E+00 -8.99806E+01 1.66845E+04 3.83558E+03 6.42448E+03 1.51357E+04 GRID ID 10002 —- 0.00000E+00 FIBER 3 = MID 3.83558E+03 1.66845E+04 -4.35792E+00 -8.99806E+01 1.66845E+04 3.83558E+03 6.42448E+03 1.51357E+04 GRID ID 10003 —- 0.00000E+00 FIBER 1 = Z1 1.88789E+03 1.86002E+04 -1.11426E+00 -8.99962E+01 1.86002E+04 1.88789E+03 8.35616E+03 1.77318E+04 GRID ID 10003 —- 0.00000E+00 FIBER 2 = Z2 5.99818E+03 1.45966E+04 -2.12169E+00 -8.99859E+01 1.45966E+04 5.99818E+03 4.29919E+03 1.27077E+04 GRID ID 10003 —- 0.00000E+00 FIBER 3 = MID 5.99818E+03 1.45966E+04 -2.12169E+00 -8.99859E+01 1.45966E+04 5.99818E+03 4.29919E+03 1.27077E+04 GRID ID 10004 —- 0.00000E+00 FIBER 1 = Z1 3.83558E+03 1.66845E+04 -4.35792E+00 -8.99806E+01 1.66845E+04 3.83558E+03 6.42448E+03 1.51357E+04 GRID ID 10004 —- 0.00000E+00 FIBER 2 = Z2 8.12886E+03 1.25957E+04 -2.69711E+00 -8.99654E+01 1.25957E+04 8.12886E+03 2.23342E+03 1.10608E+04 GRID ID 10004 —- 0.00000E+00 FIBER 3 = MID 8.12886E+03 1.25957E+04 -2.69711E+00 -8.99654E+01 1.25957E+04 8.12886E+03 2.23342E+03 1.10608E+04\n203 Appendix C: Input/Output Examples MSC Access SMPLR Program Output Main Index GRID ID 10005 —- 0.00000E+00 FIBER 1 = Z1 3.83558E+03 1.66845E+04 -4.35792E+00 -8.99806E+01 1.66845E+04 3.83558E+03 6.42448E+03 1.51357E+04 GRID ID 10005 —- 0.00000E+00 FIBER 2 = Z2 9.48544E+03 1.14706E+04 5.51174E-01 8.99841E+01 1.14706E+04 9.48544E+03 9.92595E+02 1.06181E+04 GRID ID 10005 —- 0.00000E+00 FIBER 3 = MID 9.48544E+03 1.14706E+04 5.51174E-01 8.99841E+01 1.14706E+04 9.48544E+03 9.92595E+02 1.06181E+04 GRID ID 10006 —- 0.00000E+00 FIBER 1 = Z1 3.83558E+03 1.66845E+04 -4.35792E+00 -8.99806E+01 1.66845E+04 3.83558E+03 6.42448E+03 1.51357E+04 GRID ID 10006 —- 0.00000E+00 FIBER 2 = Z2 1.02404E+04 1.09492E+04 4.23056E+01 8.65965E+01 1.09517E+04 1.02379E+04 3.56931E+02 1.06128E+04 GRID ID 10006 —- 0.00000E+00 FIBER 3 = MID 1.02404E+04 1.09492E+04 4.23056E+01 8.65965E+01 1.09517E+04 1.02379E+04 3.56931E+02 1.06128E+04 GRID ID 10100 —- 0.00000E+00 FIBER 1 = Z1 5.99818E+03 1.45966E+04 -2.12169E+00 -8.99859E+01 1.45966E+04 5.99818E+03 4.29919E+03 1.27077E+04 GRID ID 10100 —- 0.00000E+00 FIBER 2 = Z2 1.22420E+01 2.04628E+04 -6.72523E-01 -8.99981E+01 2.04628E+04 1.22422E+01 1.02253E+04 2.04567E+04 GRID ID 10100 —- 0.00000E+00 FIBER 3 = MID 1.22420E+01 2.04628E+04 -6.72523E-01 -8.99981E+01 2.04628E+04 1.22422E+01 1.02253E+04 2.04567E+04 GRID ID 10101 —- 0.00000E+00 FIBER 1 = Z1 5.99818E+03 1.45966E+04 -2.12169E+00 -8.99859E+01 1.45966E+04 5.99818E+03 4.29919E+03 1.27077E+04 GRID ID 10101 —- 0.00000E+00 FIBER 2 = Z2 1.88759E+03 1.86123E+04 -6.30875E+00 -8.99784E+01 1.86123E+04 1.88759E+03 8.36237E+03 1.77440E+04 GRID ID 10101 —- 0.00000E+00 FIBER 3 = MID 1.88759E+03 1.86123E+04 -6.30875E+00 -8.99784E+01 1.86123E+04 1.88759E+03 8.36237E+03 1.77440E+04 GRID ID 10102 —- 0.00000E+00 FIBER 1 = Z1 5.99818E+03 1.45966E+04 -2.12169E+00 -8.99859E+01 1.45966E+04 5.99818E+03 4.29919E+03 1.27077E+04 GRID ID 10102 —- 0.00000E+00 FIBER 2 = Z2 3.83133E+03 1.66978E+04 -1.29028E+01 -8.99425E+01 1.66978E+04 3.83132E+03 6.43326E+03 1.51500E+04 GRID ID 10102 —- 0.00000E+00 FIBER 3 = MID 3.83133E+03 1.66978E+04 -1.29028E+01 -8.99425E+01 1.66978E+04 3.83132E+03 6.43326E+03 1.51500E+04 DATA BLOCK CODE 1 DICT NAME:SQD4R ELEM TYPE 1 (STRESS-QUAD4 ) APPROACH:STATICS\nPROJECT 1 PATH 1 SEID 0 SUBCASE 1 DESIGN CYCLE 0 P-ITERATION 0 ELEM ID 1 —- 0.00000E+00 -5.00000E-02 -3.90633E+02 -9.89847E+03 -3.34236E+02 -2.01085E+00 -3.78898E+02 -9.91020E+03 9.72629E+03 5.00000E-02 -3.90633E+02 -9.89847E+03 -3.34236E+02 -2.01085E+00 -3.78898E+02 -9.91020E+03 9.72629E+03 ELEM ID 2 —- 0.00000E+00 -5.00000E-02 -3.40616E+02 -5.74298E+03 -8.58873E+02 -8.81933E+00 -2.07359E+02 -5.87624E+03 5.77536E+03 5.00000E-02 -3.40616E+02 -5.74298E+03 -8.58873E+02 -8.81933E+00 -2.07359E+02 -5.87624E+03 5.77536E+03 ELEM ID 3 —- 0.00000E+00 -5.00000E-02 9.54975E+02 -2.55262E+03 -1.20264E+03 -1.72199E+01 1.32771E+03 -2.92535E+03 3.76889E+03 5.00000E-02 9.54975E+02 -2.55262E+03 -1.20264E+03 -1.72199E+01 1.32771E+03 -2.92535E+03 3.76889E+03 ELEM ID 4 —- 0.00000E+00 -5.00000E-02 3.92762E+03 -5.30515E+02 -1.30795E+03 -1.52016E+01 4.28303E+03 -8.85918E+02 4.78786E+03 5.00000E-02 3.92762E+03 -5.30515E+02 -1.30795E+03 -1.52016E+01 4.28303E+03 -8.85918E+02 4.78786E+03 ELEM ID 5 —- 0.00000E+00 -5.00000E-02 7.59926E+03 4.14896E+02 -1.19995E+03 -9.23584E+00 7.79439E+03 2.19775E+02 7.68685E+03 5.00000E-02 7.59926E+03 4.14896E+02 -1.19995E+03 -9.23584E+00 7.79439E+03 2.19775E+02 7.68685E+03 ELEM ID 6 —- 0.00000E+00 -5.00000E-02 9.48650E+03 1.72584E+03 -8.69122E+02 -6.31242E+00 9.58264E+03 1.62970E+03 8.88066E+03 5.00000E-02 9.48650E+03 1.72584E+03 -8.69122E+02 -6.31242E+00 9.58264E+03 1.62970E+03 8.88066E+03 ELEM ID 7 —- 0.00000E+00 -5.00000E-02 -2.74285E+02 -7.55177E+03 -9.63625E+02 -7.41639E+00 -1.48851E+02 -7.67720E+03 7.60387E+03 5.00000E-02 -2.74285E+02 -7.55177E+03 -9.63625E+02 -7.41639E+00 -1.48851E+02 -7.67720E+03 7.60387E+03 ELEM ID 8 —- 0.00000E+00 -5.00000E-02 -1.24403E+02 -3.97377E+03 -2.47472E+03 -2.60632E+01 1.08598E+03 -5.18415E+03 5.80385E+03 5.00000E-02 -1.24403E+02 -3.97377E+03 -2.47472E+03 -2.60632E+01 1.08598E+03 -5.18415E+03 5.80385E+03\nMSC Nastran Access User’s Manual MSC Access SMPLR Program Output204 Main Index ELEM ID 9 —- 0.00000E+00 -5.00000E-02 1.14535E+03 -1.28974E+03 -3.46623E+03 -3.53229E+01 3.60166E+03 -3.74605E+03 6.36371E+03 5.00000E-02 1.14535E+03 -1.28974E+03 -3.46623E+03 -3.53229E+01 3.60166E+03 -3.74605E+03 6.36371E+03 ELEM ID 10 —- 0.00000E+00 -5.00000E-02 3.90654E+03 3.63394E+02 -3.77900E+03 -3.24416E+01 6.30861E+03 -2.03868E+03 7.53765E+03 5.00000E-02 3.90654E+03 3.63394E+02 -3.77900E+03 -3.24416E+01 6.30861E+03 -2.03868E+03 7.53765E+03 DATA BLOCK CODE 1 DICT NAME:STR3R ELEM TYPE 4 (STRESS-TRIA3 ) APPROACH:STATICS\nPROJECT 1 PATH 1 SEID 0 SUBCASE 1 DESIGN CYCLE 0 P-ITERATION 0 ELEM ID 50 —- 0.00000E+00 -5.00000E-02 3.69424E+01 1.00370E+04 3.69424E+01 8.97883E+01 1.00371E+04 3.68060E+01 1.00187E+04 5.00000E-02 3.69424E+01 1.00370E+04 3.69424E+01 8.97883E+01 1.00371E+04 3.68060E+01 1.00187E+04 DATA BLOCK CODE 1 DICT NAME:SQD4R ELEM TYPE 1 (STRESS-QUAD4 ) APPROACH:STATICS\nPROJECT 1 PATH 1 SEID 0 SUBCASE 2 DESIGN CYCLE 0 P-ITERATION 0 ELEM ID 1 —- 0.00000E+00 -5.00000E-02 1.34051E+03 2.94299E+04 3.32397E+02 8.93221E+01 2.94338E+04 1.33657E+03 2.87888E+04 5.00000E-02 1.34051E+03 2.94299E+04 3.32397E+02 8.93221E+01 2.94338E+04 1.33657E+03 2.87888E+04 ELEM ID 2 —- 0.00000E+00 -5.00000E-02 3.16622E+03 2.34241E+04 8.53288E+02 8.75923E+01 2.34600E+04 3.13034E+03 2.20620E+04 5.00000E-02 3.16622E+03 2.34241E+04 8.53288E+02 8.75923E+01 2.34600E+04 3.13034E+03 2.20620E+04 ELEM ID 3 —- 0.00000E+00 -5.00000E-02 3.88633E+03 1.82539E+04 1.19096E+03 8.52934E+01 1.83519E+04 3.78828E+03 1.67816E+04 5.00000E-02 3.88633E+03 1.82539E+04 1.19096E+03 8.52934E+01 1.83519E+04 3.78828E+03 1.67816E+04 ELEM ID 4 —- 0.00000E+00 -5.00000E-02 3.21360E+03 1.40386E+04 1.29515E+03 8.32714E+01 1.41914E+04 3.06079E+03 1.29355E+04 5.00000E-02 3.21360E+03 1.40386E+04 1.29515E+03 8.32714E+01 1.41914E+04 3.06079E+03 1.29355E+04 ELEM ID 5 —- 0.00000E+00 -5.00000E-02 1.49319E+03 1.12852E+04 1.17612E+03 8.32462E+01 1.14244E+04 1.35391E+03 1.08112E+04 5.00000E-02 1.49319E+03 1.12852E+04 1.17612E+03 8.32462E+01 1.14244E+04 1.35391E+03 1.08112E+04 ELEM ID 6 —- 0.00000E+00 -5.00000E-02 3.60914E+02 9.45280E+03 8.87037E+02 8.44794E+01 9.53853E+03 2.75180E+02 9.40396E+03 5.00000E-02 3.60914E+02 9.45280E+03 8.87037E+02 8.44794E+01 9.53853E+03 2.75180E+02 9.40396E+03 ELEM ID 7 —- 0.00000E+00 -5.00000E-02 1.22424E+03 2.70955E+04 9.58482E+02 8.78812E+01 2.71309E+04 1.18878E+03 2.65565E+04 5.00000E-02 1.22424E+03 2.70955E+04 9.58482E+02 8.78812E+01 2.71309E+04 1.18878E+03 2.65565E+04 ELEM ID 8 —- 0.00000E+00 -5.00000E-02 2.94933E+03 2.16669E+04 2.46205E+03 8.26305E+01 2.19853E+04 2.63089E+03 2.07950E+04 5.00000E-02 2.94933E+03 2.16669E+04 2.46205E+03 8.26305E+01 2.19853E+04 2.63089E+03 2.07950E+04 ELEM ID 9 —- 0.00000E+00 -5.00000E-02 3.68814E+03 1.70056E+04 3.44455E+03 7.63238E+01 1.78438E+04 2.84996E+03 1.66033E+04 5.00000E-02 3.68814E+03 1.70056E+04 3.44455E+03 7.63238E+01 1.78438E+04 2.84996E+03 1.66033E+04 ELEM ID 10 —- 0.00000E+00 -5.00000E-02 3.21480E+03 1.31624E+04 3.73574E+03 7.15453E+01 1.44091E+04 1.96812E+03 1.35328E+04 5.00000E-02 3.21480E+03 1.31624E+04 3.73574E+03 7.15453E+01 1.44091E+04 1.96812E+03 1.35328E+04 DATA BLOCK CODE 1 DICT NAME:STR3R ELEM TYPE 4 (STRESS-TRIA3 ) APPROACH:STATICS\nPROJECT 1 PATH 1 SEID 0 SUBCASE 2 DESIGN CYCLE 0 P-ITERATION 0 ELEM ID 50 —- 0.00000E+00 -5.00000E-02 1.00370E+04 3.69424E+01 3.69424E+01 2.11661E-01 1.00371E+04 3.68060E+01 1.00187E+04\n205 Appendix C: Input/Output Examples MSC Access SMPLR Program Output Main Index 5.00000E-02 1.00370E+04 3.69424E+01 3.69424E+01 2.11661E-01 1.00371E+04 3.68060E+01 1.00187E+04 DATA BLOCK CODE 1 DICT NAME:SQD4R ELEM TYPE 1 (STRESS-QUAD4 ) APPROACH:STATICS\nPROJECT 1 PATH 1 SEID 0 SUBCASE 3 DESIGN CYCLE 0 P-ITERATION 0 ELEM ID 1 —- 0.00000E+00 -5.00000E-02 9.49873E+02 1.95314E+04 -1.83884E+00 -8.99943E+01 1.95314E+04 9.49873E+02 1.90742E+04 5.00000E-02 9.49873E+02 1.95314E+04 -1.83884E+00 -8.99943E+01 1.95314E+04 9.49873E+02 1.90742E+04 ELEM ID 2 —- 0.00000E+00 -5.00000E-02 2.82560E+03 1.76811E+04 -5.58418E+00 -8.99785E+01 1.76811E+04 2.82560E+03 1.64513E+04 5.00000E-02 2.82560E+03 1.76811E+04 -5.58418E+00 -8.99785E+01 1.76811E+04 2.82560E+03 1.64513E+04 ELEM ID 3 —- 0.00000E+00 -5.00000E-02 4.84131E+03 1.57012E+04 -1.16765E+01 -8.99384E+01 1.57012E+04 4.84129E+03 1.39267E+04 5.00000E-02 4.84131E+03 1.57012E+04 -1.16765E+01 -8.99384E+01 1.57012E+04 4.84129E+03 1.39267E+04 ELEM ID 4 —- 0.00000E+00 -5.00000E-02 7.14122E+03 1.35081E+04 -1.28013E+01 -8.98848E+01 1.35081E+04 7.14119E+03 1.17048E+04 5.00000E-02 7.14122E+03 1.35081E+04 -1.28013E+01 -8.98848E+01 1.35081E+04 7.14119E+03 1.17048E+04 ELEM ID 5 —- 0.00000E+00 -5.00000E-02 9.09246E+03 1.17000E+04 -2.38393E+01 -8.94762E+01 1.17003E+04 9.09224E+03 1.06388E+04 5.00000E-02 9.09246E+03 1.17000E+04 -2.38393E+01 -8.94762E+01 1.17003E+04 9.09224E+03 1.06388E+04 ELEM ID 6 —- 0.00000E+00 -5.00000E-02 9.84741E+03 1.11786E+04 1.79151E+01 8.92291E+01 1.11789E+04 9.84717E+03 1.05761E+04 5.00000E-02 9.84741E+03 1.11786E+04 1.79151E+01 8.92291E+01 1.11789E+04 9.84717E+03 1.05761E+04 ELEM ID 7 —- 0.00000E+00 -5.00000E-02 9.49959E+02 1.95437E+04 -5.14244E+00 -8.99842E+01 1.95437E+04 9.49958E+02 1.90865E+04 5.00000E-02 9.49959E+02 1.95437E+04 -5.14244E+00 -8.99842E+01 1.95437E+04 9.49958E+02 1.90865E+04 ELEM ID 8 —- 0.00000E+00 -5.00000E-02 2.82492E+03 1.76931E+04 -1.26696E+01 -8.99512E+01 1.76931E+04 2.82491E+03 1.64634E+04 5.00000E-02 2.82492E+03 1.76931E+04 -1.26696E+01 -8.99512E+01 1.76931E+04 2.82491E+03 1.64634E+04 ELEM ID 9 —- 0.00000E+00 -5.00000E-02 4.83349E+03 1.57159E+04 -2.16809E+01 -8.98858E+01 1.57159E+04 4.83345E+03 1.39424E+04 5.00000E-02 4.83349E+03 1.57159E+04 -2.16809E+01 -8.98858E+01 1.57159E+04 4.83345E+03 1.39424E+04 ELEM ID 10 —- 0.00000E+00 -5.00000E-02 7.12134E+03 1.35258E+04 -4.32658E+01 -8.96130E+01 1.35261E+04 7.12105E+03 1.17194E+04 5.00000E-02 7.12134E+03 1.35258E+04 -4.32658E+01 -8.96130E+01 1.35261E+04 7.12105E+03 1.17194E+04 DATA BLOCK CODE 1 DICT NAME:STR3R ELEM TYPE 4 (STRESS-TRIA3 ) APPROACH:STATICS\nPROJECT 1 PATH 1 SEID 0 SUBCASE 3 DESIGN CYCLE 0 P-ITERATION 0 ELEM ID 50 —- 0.00000E+00 -5.00000E-02 1.00739E+04 1.00739E+04 7.38849E+01 4.50000E+01 1.01478E+04 1.00000E+04 1.00747E+04 5.00000E-02 1.00739E+04 1.00739E+04 7.38849E+01 4.50000E+01 1.01478E+04 1.00000E+04 1.00747E+04\nMSC Nastran Access User’s Manual MSC Access SMPLR Program Output206 Main Index"},"title":"User's Manual P11"},"/docs/summary/":{"data":{"":"This documents of Nastran 95 include:\nNASTRAN Programmers Manual NASTRAN Users Manual 2 The Python scripts to convert the manuals into markdown files can be found in the following zip file:\npdfs_processing_scripts.zip "},"title":"A Summary"},"/docs/users/":{"data":{"":"NASASP-222(08) VOLUME II NASTRAN@ USER’S MANUAL JUNE 1986 runm\nNASASP-222(08) Volume 11 NASTRAN USER’S MANUAL June1986\nForsalefromComputer Software Management andInformation Center(COSMIC) Computer Services Annex,University ofGeorgia, Athens, Georgia 30602 ‘ ●\nCOSMIC TheUniversity ofGeorgia Computer Services Annex Athens, GA30602 (404) 542-3265 NASTWN USER MANUAL UPDATE NOTE TheNASTRAN User Manual isscheduled forreview each year todetermine whether updates are required. Toaddyour name tothedatabase to receive notification when updates areavailable, youwill need tocomplete this form andreturn to COSMIC .This will betheonly mailing list for keeping users informed about themanual updates. Your Name: Company: Mailing Address: City: State: Zip: June, 1986 Fold, staple, and return this form asaself-mailer.\nII BUSINESS REPLYMAIL 1FIRSTCLASS PERMITNO,559 ATHENS, CiEORGIA I F’OSTAGE WILLBEPAIDBYADDRESSES COSMIC TheUniversity ofGeorgia Computer Services Annex Athens, GA30602NOPOSTAGE NECESSARY IFMAILED INTHE UNITEDSTATES\nINTRODUCTION TheUser’sManualisoneoffourmanuals thatconstitute thedocumentation forNASTRAN, the otherthreebeingtheTheoretical Manual, theProgrammer’s ManualandtheDemonstration Problem Manual.Although theUser’sManualcontains alloftheinformation thatisdirectly associated withthesolution ofproblems withNASTRAN, theuserwillfinditdesirable torefertotheother manuals forassistance inthesolution ofspecific userproblems. TheTheoretical Manualgivesanexcellent introduction toNASTRAN andpresents developments of theanalytical andnumerical procedures thatunderlie theprogram. TheUser’sManual is instructive andencyclopedic innature, butisrestricted tothoseitemsrelated totheuseof NASTRAN thataregenerally independent ofthecomputing systembeingused.Computer-dependent topicsandinformation thatisrequired forthemaintenance andmodification oftheprogram are treated intheProgrammer’s Manual. TheProgrammer’s Manualalsoprovides acomplete description oftheprogram, including themathematical equations implemented inthecode.TheDemonstration Problem Manualpresents adiscussion ofthesampleproblems delivered w!thNASTRAN, thereby illustrating theformulation ofthedifferent typesofprob’!ems thatcanbsolvedwithNASH?PN. Inaddition tothefourmanual described above,thereisalsoaNASTRAN User’sGuidethat servesasahandbook forusers. Itdescribes alloftheNASTRAN features andoptions and illustrates thembyexamples. Otherexcellent sources forNASTRAN-related topicsarethe proceedings oftheNASTRAN Users’Colloquia (heldnormally everyyear)whichprovide alargebody ofinformation basedonuserexperiences withNASTRAN. TheUser’sManualhasrecently beencompletely revised andupdated. Withaviewtofacilitate easierupdating ofthemanualinthefuturetokeepupwithnewerreleases ofNASTRAN, ithasnow beendivided intotwovolumes. VolumeIconsists ofsevensections dIldcontains allofthematerial thatwasintheold singlevolume, exceptSection 3.Thissection hasbeenre-arranged intofoursections andforms VolumeII.Inordertoavoidconfusion, Section 3ofVolumeIdoesnotcontain anything otherthan areference tothenewVolumeII.Also,itshouldbenotedherethat,unlessexplicitly indicated otherwise, allreferences tosections ineachvolumereferonl ——..—.—-—.. —….—.–………——..ytosections inthatvolume,—.——.—— —— ..——. . NASTRAN usesthefiniteelement approach tostructural modeling, wherein thedistributed physical properties ofastructure arerepresented byafinitenumberofstructural elements which areinterconnected atafinitenumberofgridpoints, towhichloadsareapplied andforwhich displacements are’calculated. Theprocedures fordefining andloading astructural modelare i(05/30/86)\ndescribed inVolumeI,Section 1.Thissection contains afunctional reference foreverycardthat isusedforstructural modeling. TheNASTRAN DataDeck,including thedetails foreachofthedatacards,isdescribed in VolumeI,Section 2.Thissection alsodiscusses theNASTRAN control cardsthatareassociated withtheuseoftheprogram. Asmentioned earlier, VolumeI,Section 3doesnotcontain anything otherthanareference to VolumeII. Theprocedures forusingtheNASTRAN plotting capability aredescribed inVolumeI,Section 4. Bothdeformed andundeformed plotsofthestructural modelareavailable. Response curvesarealso available forstatic, transient response, frequency response, modalflutter andmodalaeroelastic response analyses. NASTRAN contains problem solution sequences, calledrigidformats, Eachoftheserigid formats isassociated withthesolution ofproblems foraparticular typeofstaticordynamic analysis. inaddition totherigidformatprocedures, theusermaychoosetowritehisownDirect Abstraction Program (DMAP), Thisprocedure permits theusertoexecute aseriesofmatrix operations ofhischoicealongwithanyutility modules orexecutive operations thathemayneed. Therulesgoverning thecreation ofDMAPprograms aredescribed inVolumeI,Section 5. TheNASTRAN diagnostic messages aredocumented andexplained inVolumeI,Section 6.The NASTRAN Dictionary, inVolumeI,Section 7,contains descriptions ofmnemonics, acronyms, phrases, andothercommonly usedNASTRAN terms. VolumeII,Section 1contains ageneral description ofrigidformatprocedures. Specific instructions andinformation fortheuseofeachrigidformataregiveninVolumeII,Sections 2,3 and4,whichdealwiththerigidformats associated withtheDISPLACEMENT, HEATandAERO approaches, respectively. Thereisalimited numberofsampleproblems included intheUser’sManual. However, amore comprehensive setofdemonstration problems, atleastoneforeachoftherigidformats, is described intheNASTRAN Demonstration Problem Manual, Thedatadecksareavailable ontapefor eachofthecomputer systems onwhichNASTRAN hasbeenimplemented. Samples oftheprinter output andofstructure plotsandresponse plotscanbeobtained byexecuting thesedemonstration problems. Theprinter outputfortheseproblems isalsoavailable onmicrofiche. ii(05/30/86)Matrix @ I"},"title":"User's Manual"},"/docs/users/users_manual_001/":{"data":{"":"NASASP-222(08) VOLUME II NASTRAN@ USER’S MANUAL JUNE 1986 runm\nNASASP-222(08) Volume 11 NASTRAN USER’S MANUAL June1986\nForsalefromComputer Software Management andInformation Center(COSMIC) Computer Services Annex,University ofGeorgia, Athens, Georgia 30602 ‘ ●\nCOSMIC TheUniversity ofGeorgia Computer Services Annex Athens, GA30602 (404) 542-3265 NASTWN USER MANUAL UPDATE NOTE TheNASTRAN User Manual isscheduled forreview each year todetermine whether updates are required. Toaddyour name tothedatabase to receive notification when updates areavailable, youwill need tocomplete this form andreturn to COSMIC .This will betheonly mailing list for keeping users informed about themanual updates. Your Name: Company: Mailing Address: City: State: Zip: June, 1986 Fold, staple, and return this form asaself-mailer.\nII BUSINESS REPLYMAIL 1FIRSTCLASS PERMITNO,559 ATHENS, CiEORGIA I F’OSTAGE WILLBEPAIDBYADDRESSES COSMIC TheUniversity ofGeorgia Computer Services Annex Athens, GA30602NOPOSTAGE NECESSARY IFMAILED INTHE UNITEDSTATES\nINTRODUCTION TheUser’sManualisoneoffourmanuals thatconstitute thedocumentation forNASTRAN, the otherthreebeingtheTheoretical Manual, theProgrammer’s ManualandtheDemonstration Problem Manual.Although theUser’sManualcontains alloftheinformation thatisdirectly associated withthesolution ofproblems withNASTRAN, theuserwillfinditdesirable torefertotheother manuals forassistance inthesolution ofspecific userproblems. TheTheoretical Manualgivesanexcellent introduction toNASTRAN andpresents developments of theanalytical andnumerical procedures thatunderlie theprogram. TheUser’sManual is instructive andencyclopedic innature, butisrestricted tothoseitemsrelated totheuseof NASTRAN thataregenerally independent ofthecomputing systembeingused.Computer-dependent topicsandinformation thatisrequired forthemaintenance andmodification oftheprogram are treated intheProgrammer’s Manual. TheProgrammer’s Manualalsoprovides acomplete description oftheprogram, including themathematical equations implemented inthecode.TheDemonstration Problem Manualpresents adiscussion ofthesampleproblems delivered w!thNASTRAN, thereby illustrating theformulation ofthedifferent typesofprob’!ems thatcanbsolvedwithNASH?PN. Inaddition tothefourmanual described above,thereisalsoaNASTRAN User’sGuidethat servesasahandbook forusers. Itdescribes alloftheNASTRAN features andoptions and illustrates thembyexamples. Otherexcellent sources forNASTRAN-related topicsarethe proceedings oftheNASTRAN Users’Colloquia (heldnormally everyyear)whichprovide alargebody ofinformation basedonuserexperiences withNASTRAN. TheUser’sManualhasrecently beencompletely revised andupdated. Withaviewtofacilitate easierupdating ofthemanualinthefuturetokeepupwithnewerreleases ofNASTRAN, ithasnow beendivided intotwovolumes. VolumeIconsists ofsevensections dIldcontains allofthematerial thatwasintheold singlevolume, exceptSection 3.Thissection hasbeenre-arranged intofoursections andforms VolumeII.Inordertoavoidconfusion, Section 3ofVolumeIdoesnotcontain anything otherthan areference tothenewVolumeII.Also,itshouldbenotedherethat,unlessexplicitly indicated otherwise, allreferences tosections ineachvolumereferonl ——..—.—-—.. —….—.–………——..ytosections inthatvolume,—.——.—— —— ..——. . NASTRAN usesthefiniteelement approach tostructural modeling, wherein thedistributed physical properties ofastructure arerepresented byafinitenumberofstructural elements which areinterconnected atafinitenumberofgridpoints, towhichloadsareapplied andforwhich displacements are’calculated. Theprocedures fordefining andloading astructural modelare i(05/30/86)\ndescribed inVolumeI,Section 1.Thissection contains afunctional reference foreverycardthat isusedforstructural modeling. TheNASTRAN DataDeck,including thedetails foreachofthedatacards,isdescribed in VolumeI,Section 2.Thissection alsodiscusses theNASTRAN control cardsthatareassociated withtheuseoftheprogram. Asmentioned earlier, VolumeI,Section 3doesnotcontain anything otherthanareference to VolumeII. Theprocedures forusingtheNASTRAN plotting capability aredescribed inVolumeI,Section 4. Bothdeformed andundeformed plotsofthestructural modelareavailable. Response curvesarealso available forstatic, transient response, frequency response, modalflutter andmodalaeroelastic response analyses. NASTRAN contains problem solution sequences, calledrigidformats, Eachoftheserigid formats isassociated withthesolution ofproblems foraparticular typeofstaticordynamic analysis. inaddition totherigidformatprocedures, theusermaychoosetowritehisownDirect Abstraction Program (DMAP), Thisprocedure permits theusertoexecute aseriesofmatrix operations ofhischoicealongwithanyutility modules orexecutive operations thathemayneed. Therulesgoverning thecreation ofDMAPprograms aredescribed inVolumeI,Section 5. TheNASTRAN diagnostic messages aredocumented andexplained inVolumeI,Section 6.The NASTRAN Dictionary, inVolumeI,Section 7,contains descriptions ofmnemonics, acronyms, phrases, andothercommonly usedNASTRAN terms. VolumeII,Section 1contains ageneral description ofrigidformatprocedures. Specific instructions andinformation fortheuseofeachrigidformataregiveninVolumeII,Sections 2,3 and4,whichdealwiththerigidformats associated withtheDISPLACEMENT, HEATandAERO approaches, respectively. Thereisalimited numberofsampleproblems included intheUser’sManual. However, amore comprehensive setofdemonstration problems, atleastoneforeachoftherigidformats, is described intheNASTRAN Demonstration Problem Manual, Thedatadecksareavailable ontapefor eachofthecomputer systems onwhichNASTRAN hasbeenimplemented. Samples oftheprinter output andofstructure plotsandresponse plotscanbeobtained byexecuting thesedemonstration problems. Theprinter outputfortheseproblems isalsoavailable onmicrofiche. ii(05/30/86)Matrix @ I\nTABLEOFCONTENTS Section PageNo. 1.RIGIDFORMATS 1.1GENERAL DESCRIPTION OFRIGIDFORMATS ………………………………….1.1-1 1.1.1 InputFileProcessor …………………………………………1.1-2 1.1,2 Functional Modules andSupporting DMAPOperations ……………….1.1-4 1.1.3 Checkpoint/Restart Procedures …………………………………1.1-5 1.1.4 TypesofRestarts ……………………………………………1.1-7 1.1.4.1 Unmodified Restart …………………………………..1.1-8 1.1.4.2 Modified Restart …………………………………….1.1-8 1.1.4,3 Modified Restart withRigidFormatSwitch………………1.1-10 1.1.5 UseofDMAPALTERs inRestarts ………………………………..1.1-10 1.1.6 RigidFormatOutput………………………………………….1.1-11 1.1.7 RigidFormatDataBase……………………………………….1.1-13 1.1.7.1 DesignoftheDataBase………………………………1.1-13 1.1.7.2 Implementation oftheDataBase…….,.’……………….1.1-17 1.1.7,3 UsageoftheDataBase……………………………….1.1-17 1.1.7.4 Development ofUserRigidFormats ……………………..1.1-18 1.1.7.5 UsageofUser-Developed RigidFormats ………………….1.1-20 2.DISPLACEMENT RIGIDFORMATS 2.1STATICANALYSIS …………..0…………,……………………………2.1-1 2.1.1 2.1.2 2.1.3 2.1.4 2.1,5 2.1.6 2.1.7 2.2STATIC 2.2.1 2.2.2 2.2.3 2.2.4DMAPSequence forStaticAnalysis ……………………………..2.1-1 Description ofImportant DMAPOperations forStaticAnalysis ……..2.1-9 OutputforStaticAnalysis ……………………………………2.1-16 CaseControl DeckforStaticAnalysis ………………………….2.1-16 Parameters forStaticAnalysis ……………..4………………..2.1-16 Automatic AI.TERsforAutomated Multi-stage Substructuring ………..2.1-19 RigidFormatErrorMessages fromStaticAnalysis ………………..2.1-19 ANALYSIS WITHINERTIA RELIEF…………………..0….0…………2.2-1 DMAPSequence forStaticAnalysis withInertia Relief……………2.2-1 Description ofImportant DMAPOperations forStaticAnalysis withInertia Relief……………,….,,.,…………………….2.2-6 OutputforStaticAnalysis withInertia Relief………………….2.2-11 CaseControl DeckforStaticAnalysis withInertia Relief………..2.2-11 iii(05/30/86)\nTABLEOFCONTENTS (Continued) Section PageNo. 2.2.5 Parameters forStaticAnalysis withInertia Relief……,………..2.2-11 2.2.6 Automatic ALTERsforAutomated Multi-stage Substructuring ………..2.2-13 2.2.7 RigidFormatErrorMessages fromStaticAnalysis withInertia Relief…………………………………..,…….2.2-13 2.3NORMALMODESANALYSIS ……………………………………………….2.3-1 2.3.1 2.3.2 2.3.3 2.3.4 2.3.5 2,3.6 2.3.7 2.3.8 2.3.9DMAPSequence forNormalModesAnalysis ………………………..2.3-1 Description ofImportant DMAPOperations forNormalModesAnalysis ..2.3-6 OutputforNormalModesAnalysis …………,………………….O2.3-11 CaseControl DeckforNormalModesAnalysis ……,………………2.3-13 Parameters forNormalModesAnalysis …………….,………,…,,2.3-14 Optional Diagnostic OutputforFEER…….,,…..,………………2.3-15 TheAPPENDFeature ……………………………………..,…..2,3-17 Automatic ALTERsforAutomated Multi-stage Substructuring ………..2.3-18 RigidFormatErrorPles$ages fromNormalModesAnalysis …………..2.3-18 2.4STATICANALYSIS WITFIDIFFERENTIAL STIFFNESS .0………..,……………….2.4-1 2.4.1 DMAPSequence forStaticAnalysis with Differential Stiffness …………………………….. 2.4.2 Description ofImportant DMAPOperations forStaticAnalys withDifferential Stiffness …………0..,.,………… 2.4.3 OutputforStaticAnalysis withDifferential Stiffness … 2.4.4 CaseControl DeckforStaticAnalysis withDifferential St” 2.4.5 Parameters forStaticAnalysis withDifferential Stiffness 2.4.6 RigidFormatErrorMessaaes fromStaticAnalysis with……….2.4-1 s ……….2.4-9 ..,…….2.4-17 ffness….2.4-18 ……….2.4-18 Differential Stiffness -……………………………………….2.4-19 2.5BUCKLING ANALYSIS .,………,……………….,………………………2.5-1 2.5.1 DMAPSequence forBuckling Analysis ……………………………2.5-1 2.5.2 Description ofImportant DMAPOperations forBuckling Analysis ……2.5-7 2.5.3 OutputforBuckling Analysis …………….,….0……………,..2.5-13 2.5.4 CaseControl DeckforBuckling Analysis ………………………..2.5-13 2.5.5 Parameters forBuckling Analysis ………………….0…………,2.5-14 2.5.6 Optional Diagnostic OutputforFEER……………………,…,..,.2.5-14 2.5.7 RigidFormatErrorMessages fromBuckling Analysis ………,……..2.5-15 2.6PIECEWISE LINEARSTATICANALYSIS ………..,…………………………..2.6-1 2.6.1 DMAPSequence forPiecewise LinearStaticAnalysis ………………2.6-1 iv(05/30/86)\nTABLEOFCONTENTS (Continued Section ● 2.7 2.8 2.9PageNo. 2.6.2 Description ofImportant DMAPOperations forPiecewise Linear StaticAnalysis ,………….,…0………,…..0….,………….2.6-7 2.6.3 OutputforPiecewise LinearStaticAnalysis …………………….2.6-13 ?.6.4 CaseControl DeckforPiecewise LinearStaticAnalysis …………..2.6-13 2.6.5 Parameters forPiecewise LinearStaticAnalysis …………………2.6-13 2.6.6 RigidFormatErrorMessages fromPiecewise LinearStaticAnalysis …2.6-14 DIRECTCOMPLEX EIGENVALUE ANALYSIS .,………………………………….2.7-1 2.7.: DMAPSequence forDirectComplex Eigenv.1 ?,7.2 Description ofImportant DMAPOperations Eigenvalue Analysis ….,….,………. 2.7.3 output forDirectComplex Eigenvalue ha’reanalysis …………….2.7-I forDirectComplex ……………………….2.7-7 ysis,.,.,..,……….,.,..2.7-13 2,7.4 CaseContro”l DeckforDirectComplex Eigenvalue Analysis …………2.7-15 2.7.5 Parameters forDirectComplex Eigenvalu: Al:alysis ……………….?.7-1.6 2.7.6 RigidFormatErrorMessages frpm!irectComplex EigenYalue Analysis .?.7-17 DIRECTFREQUENCY ANDRANDOMRESpNSE……………………….!……….2.8-1 2.8.1 DMAPSequence forDirectFrequency andRandomResponse ?.G-l ………….. 2.8.2 Description ofImportant DMAPOperations forDirectFrequency and RandomResponse ……….,………………..-………………..2.8-9 2.8.3 OutputforDirect,Frequency andRandomResponse …………………2.8-16 2.8.4 CaseContro”l Deck,forDirectFrequency andRandomResponse ……….2.8-16 2.8.5 Parameters forDirectFrequency andRandomResponse ……………..2.8-17 2.8.6 Automatic ALTERsforAutomated Multi-stage Substructuring ………..2.8-18 2.8.7 RigidFormatErrorMessages fromDirectFrequency andRandomResponse …………………………0………….,….2.8-18 DIRECTTRANSIENT RESPONSE …….,…………………………………….2.9-1 2.9.1 2.9.2 2.9.3 2.9.4 2.9.5 2.9.6 2.9.7 2.9,8DMAPSequence forDirectTransient Response …………………….2.9-1 Description ofImportant DMAPOperations forDirect Transient Response …………………………o….o……..””. 2“9-8 OutputforDirectTransient Response …………………………..2,9-15 CaseControl DeckforDirectTransient Response ……………….“.2.9-:.5 Parameters forDirectTransient Response ……………………….2.9-16 TheCONTINUE Feature ……..0..,…..,………,………………..2.9-17 Automatic ALTERsforAutomated Multi-staSe Substructuring ………..2.9-18 RigidFormatErrorMessages fromDirect V(05/30/86)Transient Response ……….2.9-18\nTABLEOFCONTENTS (Continued) ..\u003eecrlon~ 2.10MODALCOMPLEX EIGENVALUE ANALYSIS …………………………………….2.10-1 2.10.1 2.10.2 2.10.3 2.10.4 2.10.5 2.10.6 2.10.7 2.10.8DMAPSequence forModalComplex Eigenvalue Analysis ……………..2.10-1 Description ofImportant DMAPOperations forModalComplex Eigenvalue Analysis ………..,……………………….,……..2.10-7 OutputforModalComplex Eigenvalue Analysis ……………,……..2.10-13 CaseControl DeckforModalComplex Eigenvalue Analysis ………,…2.10-13 Parameters forModalComplex Eigenvalue Analysis ………………..2,10-13 Optional Diagnostic OutputforFEER……,……..,..,.,…………2.10-14 TheAPPENDFeature ……………..0………………,…………,2.10-15 RigidFormatErrorMessages fromModalComplex Eigenvalue Analysis ,.2.10-15 2.11MODALFREQUENCY ANDRANDOMRESPONSE ……………….,“.e….,……….,..2.11-1 2.11.1 2.11.2 2.11.3 2.11.4 2.11.5 2.11.6 2.11.7 2.11.8DMAPSequence forModalFrequency andRandomResponse ……………2.11-1 Description ofImportant DMAPOperations forModalFrequency and RandomResponse …..,,…………,.,……………..,.,,…….,..2.11-9 OutputforModalFrequency andRandomResponse ………..,……….2.11-17 CaseControl DeckforModalFrequency andRandomResponse ………..2.11-17 Parameters forModalFrequency andRandomResponse ……..,….,….2,11-17 Optional Diagnostic OutputforFEER……….,.,….,….,……….2,11-18 TheAPPENDFeature …………………….,…….,…….,,…..,.2.11-19 RigidFormatErrorMessages fromModalFrequency andRandomResponse …,.,,………….,…………………,…..,2.11-19 2.12MODALTRANSIENT RESPONSE …………………0..,…….,.,…,.,,..,,….,.2,12-1 2.12.1 2.12,2 2.12.3 2.12.4 2.12.5 2.12.6 2.12.7 2.12.8 2.12.9DMAPSequence forModalTransient Response …………,…..,.,..,..2.12-1 Description ofImportant DMAPOperations forModal Transient Response ……………….,….,…,…..,……………2.12-8 OutputforModalTransient Response ………..,,…,……,.,…..,,2.12-15 CaseControl DeckforModalTransient Response ……,……,……,.2.12-15 Parameters forModalTransient Response …..,………….,…..,…2,12-15 Optional Diagnostic OutputforFEER……,….,,..,…,,…,……..2,12’-17 TheAPPENDFeature ..,…………….,…….,…..,…..,……….2.12-17 TheCONTINUE Feature ….,………………….,……,..,……,,..2,12-17 RigidFormatErrorMessages fromModalTransient Response ………..?!.12-1.7 2.13NORMALMODESWITHDIFFERENTIAL STIFFNESS ., 2.13.1 DMAPSequence forNormalModeswith vi(05/30/86)?,~~-1…………………,.,,,……\u003e Differential Stiffue$s ..,,..,.“~,13-!I\nTABLEOFCONTENTS (Continued) Section 2.13.2 2,13.3 2.13.4 2.13.5 2.13.6 2.13.7 2.1.3 2.14STAT 2.14c 1 2.14.2 2.14.3 2.14.4 2.14,5 2.14.6PageNo. Description ofImportant DMAPOperations forNormalModeswith Differential Stiffness …………,………….0……………….2.13-8 OutputforNormalModeswithDifferential Stiffness ……………..2.13-16 CaseControl DeckforNormalModeswithDifferential Stiffness ……2.13-16 Parameters forNormalModeswithDifferential Stiffness ………….2.13-17 Optional Diagnostic OutputforFEER……………………………2.13-18 TheAPPENDFeature ………………….,……………………..c2.13-18 RigidFormatErrorMessages fromNormalModeswith Differential Stiffness ……………………………………….2.13-18 ANALYSIS USINGCYCLICSYMMETRY …………..,……………………2.14-1 DMAPSequence forStaticAnalysis UsingCyclicSymmetry ………….2.14-1 Description ofImportant DMAPOperations forStaticAnalysis Using CyclicSymmetry ,…….0……………….,……………………2.14-7 OutputforStaticAnalysis UsingCyclicSymmetry ……,………….2.14-12 CaseControl DeckforStaticAnalysis UsingCyclic’Symmetry ………2.14-12 Parameters forStaticAnalysis UsingCyclicSymmetry …………….2.14-12 RigidFormatErrorMessages fromStaticAnalysis Using CyiilicSymmetry ……………………………………+……….2.14-14 2.15NORMALMODESANALYSIS USINGCYCLICSYMMETRY ……………………………2.15-1 2.15.1 2.15.2 2.15.3 2.15.4 2.15.5 2.15.6 2.15.7 2.15.8DMAPSequence forNormalModesAnalysis UsingCyclicSymmetry …….2.15-1 Description ofImportant DMAPOperations forNormalModesAnalysis UsingCyclicSymmetry ……………,………………………….2.15-6 OutputforNormalModesAnalysis UsingCyclicSymmetry …………..2.15-10 CaseControl DeckforNormalModesAnalysis UsingCyclicSymnetry …2.15-10 Parameters forNormalModesAnalysis UsingCyclicSymmetry ……….2.15-10 Optional Diagnostic OutputforFEER……………………………2.15-12 TheAPPENDFeature …..0…. ……0……………………………2.15-12 RigidFormatErrorMessages fromNormalModesAnalysis Using —.- CyclicSymmetry .,……………..0………0…………………..Z.15-lZ ?.1.6(STATIC AEROTHERMOELASTIC DESIGN/ANALYSIS OFAXIAL-FLOW COMPRESSORS ……….2.16-1 ‘2.16.1 ?,16.2 2.16.3DMAPSequence forStaticAerothermoelastic Design/Analysis of Axial-Flow Compressors o………………………………………2.16-1 Description ofImportant DMAPOperations forStatic Aerothermoelastic Design/Analysis ofAxial-Flow Compressors ………2.16-10 OutputforStaticAerothermoelastic Design/Analysis ofAxial-Flow Compressors …………………………………………………2.16-19 vii(05/30/86)\nTABLEOFCONTENTS (Continued) Section 2.16.4 2.16.5 2.16.6PageNo, CaseControl DeckforStaticAerothem,~elastic Design/Analysis of Axial-Flow Compressors ……………………………………….2.16-20 Parameters forStaticAerothermoelastic Design/Analysis ofAxial- FlowCompressors ……,………………#……………………..2.16-20 RigidFormatErrorMessages fromStaticAerothermoelastic Design/ Analysis ofAxial-Flow Compressors …,…………………………2.16-22 3.HEATRIGIDFORMATS 3.1STATICHEATTRANSFER ANALYSIS …,..,……………….,………………..3.1-1 3.1,1 3.1.2 3.1.3 3.1.4 3.1.5 3.1.6DMAPSequence forStaticHeatTransfer Analysis …………………3.I-1 Description ofImportant DMAPOperations forStaticHeat Transfer Analysis ……………………………..,……………3.1-6 OutputforStaticHeatTransfer Analysis ………………….,…,.3.1-11 CaseControl DeckforStaticHeatTransfer Analysis ….. Parameters forStaticHeatTransfer Analysis ,…..,0…. RigidFormatErrorMessages fromStaticHeatTransfer Aria’ 3,2NONLINEAR STATICHEATTRANSFER ANALYSIS ….,.,…..,……………………3.1-11 ………..3.1-11 ysis……3.1-12 ………..3.2-1 3.2.1 DMAPSequence forNonlinear StaticHeatTransfer Analysis ………..3.2-1 3.2.2 Description ofImportant DMAPOperations forNonlinear StaticHeat Transfer Analysis ………..,…………,……………………..3.2-5 3.2.3 OutputforNonlinear StaticHeatTransfer Analysis ………………3.2-8 3.2.4 CaseControl DeckforNonlinear StaticHeatTransfer Analysis …….3.2-8 3.2.5 Parameters forNonlinear StaticHiatTransfer Analysis …………..3.2-8 3.2.6 RigidFormatErrorMessages fromNonlinear StaticHeat Transfer Analysis ……………………….,..,…………….,..3.2-9 3.3TRANSIENT HEATTRANSFER ANALYSIS ……………………………………..3,3-1 3.3.1 DMAPSequence forTransient HeatTransfer Analysis ………………3.3-1 3.3.2 Description ofImportant DMAPOperations forTransient HeatTransfer Analysis ………,……………,……………….,……..,,..,.3.3-7 3,3.3 OutputforTransient HeatTransfer Analysis …………………….3.3-13 3.3.4 CaseControl DeckforTransient HeatTransfer Analysis …………..3.3-13 3.3.5 Parameters forTransient HeatTransfer 3.3.6 RigidFormatErrorMessages fromTrans 4.AERORIGIDFORMATS 4,1BLADECYCLICMODALFLUTTER ANALYSIS ……….Analysis …………………3.3-14 entHeatTransfer Analysis …3,3-14 …………………………4.1-1 4.1.1 DMAPSequence forBladeCyclicModalFlutter Analysis ……………4.1-1 viii(05/30/86)\nSection 4.1.2 4.1.3 4.1.4 4.1.5 4.1.6 4.1.7 4.1.8TABLEOFCONTENTS (Continued) PageNo. Description ofImportant DMAPOperations forBladeCyclicModal Flutter Analysis …………………………………………….4.1-9 OutputforBladeCyclicModalFlutter Analysis ………………….4.1-17 CaseControl DeckforBladeCyclicModalFlutter Analysis ………..4.1-17 Parameters forBladeCyclicModalFlutter Analysis ………………4.1-18 Optional Diagnostic OutputforFEER……………………………4.1-20 TheAPPENDFeature ………….,………………………………4.1-20 RigidFormatErrorMessages fromBladeCyclicModalFlutter—- Analysis …………….0…………………………………….4.1-ZU 4.2MODALFLUTTER ANALYSIS ………………………………………………4.2-1 4.2.1 4.2.2 4.2.3 4.2.4 4.2.5 4.2.6 4.2.7DMAPSequence forModalFlutter Analysis ……………………….4.2-1 Description ofImportant DMAPOperations forModalFlutter Analysis .4.2-8 OutputforModalFlutter Analysis ……………………………..4.2-16 CaseControl DeckforModalFlutter Analysis ……………………4.2-17 Parameters forModalFlutter Analysis ………………………….4.2-17 Optional Diagnostic OutputforFEER……………………………4.2-18 TheAPPENDFeature …………………………………………..4.2-18 4.2.8 RigidFormatErrorMessages fromModalFlutter Analysis ………….4.2-18 4.3MODALAEROELASTIC RESPONSE ……………….:…………………………4.3-1 4.3.1 DMAPSequence forModalAeroelastic Response ……………………4.3-1 4.3.2 Description ofImportant DMAPOperations forModalAeroelastic Response ……………………………………………………4.3-8 4.3.3 OutputforModalAeroelastic Response ………………………….4.3-16 4.3.4 CaseControl DeckforModalAeroelastic Response ………………..4.3-17 4.3.5 Parameters forModalAeroelastic Response ………………………4.3-17 4.3.6 Optional Diagnostic OutputforFEER……………………………4.3-19 4.3.7 TheAPPENDFeature …………………………………………..4.3-19 4.3.8 RigidFormatErrorMessages fromModalAeroelastic Response ………4.3-19 ix(05/30/86)\n1.RIGIDFORMATS 1.1GENERAL DESCRIPTION OFRIGIDFORMATS Themostgeneral wayofusingNASTRAN iswithauser-written DirectMatrixAbstraction Program (DMAP). Thisprocedure permits theusertoexecute aseriesofmatrixoperations ofhis choicealongwithanyutility modules orexecutive operations thathemayneed.Theusermayeven choosetowriteamoduleofhisown.Therulesgoverning alloftheseoperations aredescribed in VolumeI,Section 5. Inordertorelieve theuserofthenecessity ofconstructing aDMAPsequence foreachofhis problems, anumberofsuchsequences, calledrigidformats, havebeenincluded withNASTRAN, All oftheserigidformats areresident onadatabasecalledtheRigidFormatDataBase,whfchis described indetailinSection 1.1.7. Eachrigidformatinthisdatabaseconsists ofaDMAP sequence andtheassociated restart tables. Theserestart tablesareautomatically usedbythe program tomodifytheseriesofDMAPoperations toaccount foranychanges thataremadeinany partoftheDataDeckwhenmakingarestart, afterhavingpreviously runall,orapart,ofthe problem. Without suchtables, theuserwouldhavetocarefully modifyhisDMAPsequence toaccount fortheconditions surrounding eachrestart. Thechances forerrorinmakingthesemodifications forrestart areverygreat. Therestart tablesnotonlyrelieve theuseroftheburdenof modifying hisDMAPsequence, butalsoassurehimofacorrect andefficient program execution. Inaddition totheDkiAPsequence provided witheachrigidformat, anumberofoptions are available, whicharesubsets ofeachcomplete DMAPsequence. Subsets areselected byspecifying thesubsetnumbers (zeroforthecomplete DMAPsequence) alongwiththerigidformatnumberonthe SOLcardintheExecutive Control Deck.Seethedescription oftheSOLcardinVolumeI,Section 2.2forthelistofavailable subsets. IftheuserwishestomodifytheDMAPsequence ofarigidformatinsomemannernotprovided forintheavailable subsets, hecanusetheALTERfeature described inSection 2.2.Typical uses aretoschedule anEXITpriortocompletion, inordertocheckintermediate output, schedule the printing ofatableoramatrixfordiagnostic purposes, andtodeleteoraddafunctional module totheDMAPsequence. (ThemannerinwhichDMAPALTERsarehandled inrestarts isdiscussed in Section 1.1.5.) Theusershouldbefamilfar withtherulesforDMAPprograming, asdescribed in VolumeI,Section 5,priortomakingALTERstoarigidformat. Thefollowing rigidformats forstructural analysis arecurrently included inNASTRAN: 1.StaticAnalysis 1.1-1(05/30/86)\nRIGIDFORMATS 2.StaticAnalysis withInertia Relief 3.NormalModesAnalysis 4.StaticAnalysis withDifferential Stiffness 5.Buckling Analysis 6.Piecewise LinearStaticAnalysis 7.DirectComplex Eigenvalue Analysis 8.DirectFrequency andRandomResponse 9.DirectTransient Response 10.ModalComplex Eigenvalue Analysis 11.ModalFrequency andRandomResponse 12.ModalTransient Response 13.NormalModesAnalysis withDifferential Stiffness 14.StaticAnalysis withCyclicSynnnetry 15.NormalModesAnalysis with’CyclicSymmetry 16.StaticAerothermoelastic Design/Analysis ofAxial-Flow Compressors Thefollowing rigidformats forheattransfer analysis areincluded inNASTRAN: 1.LinearStaticHeatTransfer Analysis 3.Nonlinear StaticHeatTransfer Analysis 9.Transient HeatTransfer Analysis Thefollowing rigidformats foraeroelastic analysis areincluded inNASTRAN: 9.BladeCyclicModalFlutter Analysis 10.ModalFlutter Analysis 11.ModalAeroelastic Response 1.1.1InputFileProcessor TheInputFileProcessor operates inthePreface priortotheexecution oftheDMAP operations intherigidformat. Acomplete description oftheoperations inthePreface isgiven intheProgrammer’s Manual. Themaininterest hereistoindicate thesourceofdatablocksthat arecreated inthePreface andhenceappearonlyasinputsintheDMAPsequences oftherigid formats. Noneofthedatablockscreated bytheInputFileProcessor arecheckpointed, astheyare alwaysregenerated onrestart. TheInputFileProcessor isdivided intofiveparts, Thefirst part(IFP1)processes theCaseControl Deck,thesecondpart(IFP)processes theBulkDataDeck, 1.1-2(05/30/86)I\nGENERAL DESCRIPTION OF thethirdpart(IFP3)performs additional processingRIGIDFORMATS ofthebulkdatacardsassociated withthe aconical shellelement, andthefourthpart(IFP4)performs additional processing ofthebulkdata cardsassociated withthefluidelement. Thefifthsection (IFP5)processes datarelated to acoustic cavityanalysis. IFP1processes theCaseControl Deckandcreates theCaseControl DataBlock(CASECC), the PlotControl Dat~Block(PCDB), andtheXY-Plot Control DataBlock(XYCDB). IFP1alsoexamines all ofthecards,exceptthoseassociated withplotting, forerrorsinformatoruse.Iferrorsare detected, theyareclassed aseitherfatalorwarning, andsuitable errormessages areprovided. Reference toVolumeI,Section 2.3willassisttheuserincorrecting errorsintheCaseControl Deck.Iftheerrorisfatal,theExecutive Systemwillnotallowtheexecution tocontinue beyond thecompletion ofthePreface. TheBulkDataDeckissortedinthePreface, ifnecessary, beforetheexecution ofthesecond partoftheInputFileProcessor. IFPchecksallofthebulkdatacardsforerrorsaccording to therulesgivenforeachcardinVolum(iI,Section 2.4.Iferrorsaredetected, suitable messages areprovided totheuser.Iftheerlorisclassed asfatal,theExecutive Systemwillnotallow theexecution tocontinue beyondthecompletion ofthePreface. IFPcreates thedatablocksthat areinputtothevarious partoftheGeometry Processor (GEOMl, GE!3M2,GE@M3andGE@M4), the oElement Properties Table(EP?’),theMaterial Properties Table(MPT),theElement Deformation Table (EDT),andtheDirectInputTable(DIT). ThethirdpartoftheInputFileProcessor (IFP3)converts theinformation onthespecial conical shellcards(CCONEAX, CTRAPAX, CTRIAAX, F!3RCEAX, M!3MAX,MPCAX,OMITAX, PCONEAX, P@INTAX, PRESAX, PTRAPAX, PTRIAAX, RINGAX, SECTAX, SPCAX,SUPAX,andTEMPAX) toreflect thenumberof harmonics specified bytheuserontheAXICcard.Thisconverted information isaddedtoany existing information ondatablocksGEfJMl,GEk3M2,GE!3M3andGE!3M4. Thefourthpartoftheinputfileprocessor (IFP4)converts theinformation onthefluid- related cards(AXIF,BDYLIST, CFLUID2, CFLUII13, CFLUID4, DMIAX,FLSYM,FREEPT, FSLIST, GRIDB, PRESPT, andRINGFL) toreflect thedesired harmonics, bolmdaries, andmatrixinput. Thisconverted information isaddedtoGEOMl,GE@M2,GE0M4andMATP!30L. Thefifthpartoftheinputfileprocessor (IFP5)converts theinformation ontheacoustic cavityrelated cards(AXSi.OT, CAXIF2, CAXIF3, CAXIF4, CSL0T3, CSL0T4, GRIDF,GRIDS,andSLBDY)to equivalent structural scalarpoints, elements, scalarsprings andplotting elements. This converted information isaddedtotheGEflMl 1.andGE0M2datablocks. -3(05/30/86)\nRIGIDFORMATS 1.1.2Functional Modules andSupporting DMAPOperations TheDMAPlistings oftherigidformats currently included withNASTRAN arepresented inthe following sections. Following eachlisting aresubsections thatdealwiththefollowing itemsfor e eachrigidformat: 1.Briefdescription ofimportant DMAPoperations fortherigidformat 2.Outputavailable fromtherigidformat 3.CaseControl Decksetupfortherigidformat 4.Parameters usedintherigidformat 5.Automatic ALTERsforAutomated Multi-stage Substructuring (ifapplicable totherigid format) 6.Rigidformaterrormessages 7.Anyotherfeatures peculiar totherigidformat Descriptions ofallmajorfunctional modules aregivenintheProgrammer’s Manual. Additional information isalsogivenintheTheoretical Manual. Descriptions ofallotherNASTRAN modules aregiveninVolumeI,Section 5. Themodules inthefollowing listappearrepeatedly intherigidformats. Sincethepurpose oftheseoperations inarigidformatisobvious, theyaregenerally omitted fromthedescriptions oftheDMAPoperations inthefollowing sections. giveninVolumeI,Section 5. 1.BEGINindicates thebeginning oftheDMAPMorecomplete descriptions ofthesemodules are ●sequence constituting therigidformat. 2.ENDindicates theendoftheDMAPsequence constituting therigidformat maltermination whenexecuted. 3._FILEmakesdeclarations relative toaparticular file. ABC=TAPEstatesthatfileABCwillbeassigned asasequential file. DEF=APPENDstatesthatfileDEFmaybeextended astheresultofan intherigidformat. GHI=SAVEstatesthatfileGHIshouldnotbedropped afteruseasit forsubsequent executions ofaninternaoop. 4,LABELspecifies alabeled pointinthesequence ofDMAPinstructions. referenced byREPT,JUMPandCI?JNDinstructions. 5.PARAMperforms specified operations oninteger DMAPparameters.andcausesa internal loop maybeneeded Labelsare 6.PRECHKactuates theautomatic generation ofexplicit CHKPNTinstructions. (PRECHK ALL Immediately andautomatically CHKPNTS alloutputdatablocksfromeachfunctional module, alldatablocksmentioned ineachPURGEinstruction andallsecondary datablocksineach EQUIVinstruction.)* TheCHKPNTinstruction specifies alistoffilestobewritten on %Theonlyexceptions to outputinsubstructurethisaretheCASESS, CASEIandCASECCdatablocksappearing as analyses. 1.1-4(05/30/86)\nGENERAL DESCRIPTION OFRIGIDFORMATS thenewproblem tape(NPTP), including filesthatmayhavebeenpurged, eitherbecause theywerenotgenerated inthisparticular execution orwereexplicitly purgedwitha PURGEinstruction. 7.PURGEspecifies thenamesoffilesthat.areconditionally dropped basedontheparameter named. 1.1.3Checkpoint/Restart Procedures Thecheckpoint/restart feature available inNASTRAN isaverysophisticated anduseful capability. Thepurpose ofttlisfeature istoenableausertocheckpoint aNASTRAN runandthen restart it(withorwithout changes indata)byexecuting onlythosemodules thatneedtobe executed fortherestart. Thereareseveral situations inwhichtheuseofthecheckpoint/restart feature maybe desirable. Someofthesearelistedbelow: 1.Theusermaywishtoperform hisanalysis taskintwoormorestagesbyspecifying scheduled exitsinoneormoreruns. 2.Theusermaywanttoensurethatunscheduled exits(resulting fromsuchcausesasdata errors, insufficient timejii;suffic,ient coreorhardware failures) willnotrequire him torepeathisentireanalysis. 3.Theusermaywishtorerunhisproblem bymakinglimited changes inhisdata. Scheduled exitscanberequested atanypointinarigidformatbymeansoftheALTER feature. (ThemannerinwhichALTERsarehandled inrestarts isdiscussed inSection 1.1.5). An exitisscheduled byinsertirl~ thefollowing cardsintheExecutive Ccmtt’ol Deck: ALTER K1$ EXIT K2$ ENDALTER $ where K1=DMAPstatement numberafterwhichexitwilltakeplace and K2=NumberoftimesEXITinstruction willbeskipped before zero,Forusewithloops,wheretheuserwishestoexecute scheduling theexit. Iftheuserchooses torestart theproblem without makinganychanges, execute anunmodified restart following thelastcompleted checkpoint. Unscheduled exitsareusually causedbyerrorsoninputcardsorI~eingexecuted -default is theloopK2timesbefore theExecutive Systerrjwill errorsinthestructural modelresulting frommissing orinconsistent inputdata.Whensucherrorsaredetected, an unscheduled exitisperformed accompanied withtheolutputoftheapplicable usererrormessages. Following thecorrection oftheinputdataerrors, amodified restart canbeperformed. 1.1-5(05/30/86)\nRIGIDFORMATS Unscheduled exitsmayalsooccurbecause ofmachine failure orinsufficient timeallowance. Inthesecases,anunmodified restart isusually madefollowing thelastcompleted checkpoint. In somecases,whereaportion oftheproblem hasbeencompleted, including theoutputforthe completed portion, amodified restart mustbemadefollowing anunscheduled exitdueto insufficient timeallowance. Thesesituations arediscussed underCaseControl Deckrequirements inthesections dealing withtheindividual rigidformats. Theinitial execution ofanyproblem mustbemadewithacomplete NASTRAN DataDeck, including allofthebulkdata.However, allorpartofthebulkdatamaybeassembled from alternate inputsources, suchastheUser’sMasterFileoramodulewritten bytheusertogenerate input. TheUser’sMasterFileisdescribed inVolumeI,Section 2.5 discussed inVolumeI,Section 2,6. Forrestarts, theBulkDataDeckconsists onlyofdeletecards andnewcardswhichtheuserwishestoadd.Theprevious BulkDataandusergenerated inputis (seeVolumeI,Section 2.4) DeckisreadfromtheOld Problem Tape.AllotherpartsoftheNASTRAN DataDeck,including theExecutive Control Deck,the CaseControl Deck,theBEGINBULKcardandtheENDDATA cardmustberesubmitted eventhoughno changes aremadeinthecontrol decksandnonewbulkdataisadded. Inaddition, theRESTART cards(ordictionary) punched duringtheprevious execution mustbeincluded intheExecutive Control Deck.Whenchanging rigidformats, thesolution number ofthenewrigidformat. ANewProblem Tape(NPTP)isconstructed onlywhencheckpoS@L)mustbechanged tothenumber ntingisrequested (CHKPNT YES)in theExecutive Control Deck.TheNPTPshouldbeassigned toaphysical tapeorotherstorage device thatcanbedismounted andsavedattheconclusion oftheexecution. Atthecompletion ofan initial execution, theNPTPcontains theinputdeck,withthebulkdatainsortedform,andallof thefilesthatwerecheckpointed duringtheexecution. Forrestarts, theOldProblem Tape(13PTP)isdefined astheProblem Tapethatwaswritten duringtheprevious execution. TheNPTPisdefined astheProblem Tapewritten duringthecurrent execution, beginning withtherestart. Atthecompletion ofanunmodified restart, theNPTP contains theinputdeck,withthebulkdatainsortedform,allfilesfromtheOPTPthatare necessary tocomplete thesolution, andallofthefilescheckpointed duringthecurrent executicn. Atthecompletion ofamodified restart, theNPTPissimilar, except thattheinFutdeckis modified according totheinformation shbmitted fortherestart. 1.1-6(05/30/86)"},"title":"User's Manual P1"},"/docs/users/users_manual_002/":{"data":{"":"1.1.4GENERAL DESCRIPTION OFRIGIDFORMATS TypesofRestarts ●Thetypeofarestart isdetermined automatically bytheprogram bycomparing theinputdata oftherestart runwiththatofthecheckpoint run.Theuserneednotbeconcerned aboutthe mannerinwhichthisisdone,butmaybeinterested inknowing theresulting type. Thetypesofrestarts presently recognized inNASTRAN aresummarized inthefollowing table. TypesofRestarts inNASTRAN InearlierRestart data compared to checkpoint data Noeffective changes Effective changes only totheCase Control Deck andlorthe BulkData Deck Changein rigidformatResulting type ofrestart e Unmodified Yes restart Modified Yes restart Modified restart Yes withrigid formatswitch Imment DMAP Yes Yes No ~ersions ofNASTRAN, anadditional typeofrestart, calledthepseudomodified restart, wasrecognized forcasesinvolving changes onlyinoutputrequests. Thisisnolonger donesinceitisnowhandled asaspecial caseofthemodified restart. Themannerinwhicharestart ishandled bytheprogram depends onitstypeandonits environment (rigidformatorDMAPenvironment). Thisisdiscussed inthefollowing sections. Animportant termthatisfrequently encountered inthefollowing discussion isthereentry pointfora,restart. Thisisdefined asthelastreentry pointspecified intherestart dictionary. Itisaninteger equaltotheinstruction numberoftheDMAPinstruction inthe checkpoint runatwhichanunmodified restart willresumeexecution. (SeeVolumeI,Section 2.2.) 1.1-7(05/30/86)\nRIGIDFORMATS 1.1.4.1 Unmodified Restart Anunmodified restart involves noeffective changes tothedata.Theexecution inthistype ofrestart resumes atthereentry point. Unmodified restarts inbothrigidformatandDMAPe environments arehandled inanidentical manner. Itisusefultodistinguish between twotypesofunmodified restarts. Thesearedescribed below. -Unmodified restart inwhichthereentry pointisnotwithinaDMAPloop Thisisthesimplest typeofrestart possible. Inthiscase,theexecution flagsforallDMAP instructions priortothereentry pointareturnedoffandtheexecution flagsforallDMAP instructions fromthereentry pointonwards areturnedon.Allinputfilesordatablocksrequired fortherestart already existontheJ3PTPandwillberetrieved. -Unmodified restart inwhichthereentry pointiswithinaDMAPloop. Inthiscase,initially, theexecution flagsforallDMAPinstructions priortothereentry point areturnedoffandtheexecution flagsforallDMAPinstructions fromthereentry pointonwards are turnedGn.Thisissoindicated intheDMAPsourcelisting. However, subsequently, theDMAP instructions priortothereentry pointandwithintheDMAPlooparerecognized andtheirexecution flagsareturnedon.Theuserisinformed aboutthisintheoutput. Note,however, thatthe execution doesresumeatthereentry point,eventhoughDMAPinstructions priortothispointare turnedon.DMAPinstructions withintheDMAPloopandpriortothereentry pointareexecuted only o ifadditional passesintheloopneedtobeexecuted. Iftherestart iswithinthelastpassof theDMAPloop,obviously DMAPinstructions withintheloopandpriortothereentry pointarenot executed eventhoughtheirexecution flagsareon. Allinputfilesordatablocksrequired bytherestart already existontheOPTPandwillbe retrieved. 1.1.4.2 Modified Restart Thistypeofrestart involves oneormoreeffective changes tothedataintheCaseControl Deckand/orintheBulkDataDeck, Theheartoftherestart logicformodified restarts intherigidformatenvironment isthe Modu”leExecution Decision Table(MEDT)associated witheachrigidformat. TheMEDTforeachrigid furmatdciually comprises threedistinct tables. ThesearetheCardNameRestart Table,theRigid ~crmatChangeRestart TableandtheFileNameRestart Tableassociated withthatrigidformat. fr{.uediscussion inSection 1.1.7. SeealsoSections 1.10and7oftheProgrammer’s Manual.) 1.1-8(05/30/86) “\nGENERAL Inthecaseofmodified restartsDESCRIPTION OFRIGIDFORMATS intherigidformatenvironment, allDMAPinstructions from thereentry pointsonwards havetheirexecution flagsturnedon.Inaddition, thistypeofrestart generally requires thatcertain DMAPinstructions priortothereentry pointalsobeturnedon, depending onthespecific datachanges involved. TheDMAPinstructions thatneedtobesoturned onaredetermined fromtheCardNameRestart Table. TheDMAPsourcelisting provided intheoutput indicates alltheDMAPinstructions whoseexecution flagsareinitially turnedonbytheabove procedure. OncetheDMAPinstructions areinitially turnedonasdescribed above,theprogram checksto seeifalloftherequired inputdatablocksareeitherbeinggenerated bypriormodules orare available onthe13PTPforretrieval. Ifso,noadditional DMAPinstructions needtobeturnedon. If,however, thereareanyinputdatablocksthatareneither beinggenerated bypriormodules nor areavailable ontheOPTP,theprogram needstoturnonadditional DMAPinstructions inorderto generate therequired datablocks. TheDMAPinstructions thatneedtobesoturnedonare determined fromtheFileNameRestart Table. Aftertheadditional DMAPinstructions areturnedonasdescribed intheaboveparagraph, the process isrepeated untilitisensured thatalloftherequired inputdatablocksareeitherbeing generated bypriormodules orcanberetrieved from@PTP. AlltheDMAPinstructions thatareturnedonaspertheabovelogic(bytheuseoftheFil”e NameRestart Table)areidentified andlistedintherestart outputjustaftertheDMAPsource listing. Itshouldbenotedthattheexecution inamodified restart willstartatthefirstmodulein theDMAPsequence whoseexecution flagisturnedon.Generally, thisisbeforethereentry point. Inthecaseofmodified restarts intheDMAPenvironment, theeffectofchanges intheCase Control Deckand/orintheBulkDataDeckonparticular modules cannotbedetermined sincetheDMAP itselfis,bydefinition, notpredefine. (AnMEDTismeaningless foraDMAP.)Hence,itis assumed thatthechanges willaffecttheentireDMAPwhich,therefore, needstobere-executed. Thisisaccomplished intheprogram byre-setting thereentry pointtozero-and treating thiscase asanunmodified restart. ThiscausestheentireDMAPtobere-executed. Thoseinputfilesordatablocksthatareneededfortherestart andthatareavailable on thejlPTPareretrieved, justasitisdoneinthecaseofmodified restarts intherigidformat environment. 1.1-9(05/30/86)\nRIGIDFORMATS 1.1.4.3 Modified Restart withRigidFormatSwitch Thistypeofrestart involves aswitchfromonerigidformattoanother. Itmayormaynot involve effective changes tothedataintheCaseControl Deckand/orintheBulkDataDeck. Themostimportant pointtorecognize inthistypeofrestart isthatthereentry pointis quitemeaningless sinceitwasdetermined inrelation toanother rigidformat. Thisishandled in theprogram byresetting thereentry pointtoanextremely highvaluewhich,forallpractical purposes, canbeconsidered tobeinfinite. Asaresult, allDMAPinstructions intherestart are considered tobebeforethereentry pointandnoDMAPinstructions areconsidered toexistafter thereentry point. Oncethisimportant changeismade,thistypeofrestart ishandled intheprogram inthe samemannerasamodified restart, withoneimportant modification: theDMA.Pinstructions thatare initially turnedonaredetermined notonlyfromtheCardNameRestart Table,butalsofromthe RigidFormatChangeRestart Table. 1.1.5UseofDMAPALTERsinRestarts Because different typesofrestarts arehandled differently bytheprogram, theusershould becareful intheuseofDMAPALTERsinrestarts. Inthecaseofanunmodified restart inwhichthereentry pointisnotwithinaDMAPloop, theonlyDMAPinstructions thatareflagged forexecution arethosethatarebeyond(andinclude) thereentry point. Hence,aDMAPALTERwillbeflagged forexecution onlyifitisbeyondthe reentry pointandwillbeignored ifitisbeforethereentry point.* Inthecaseofanunmodified restart inwhichthereentry pointiswithinaDMAPloop,the onlyDMAPinstructions flagged forexecution arethosethatarebeyond(andinclude) thereentry pointandthosethatarebeforethereentry pointbutwithintheDMAPloop.Hence,aDMAPALTER willbeflagged forexecution onlyifitisbeyondthereentry pointorbeforeitbutwithinthe DMAPloop.Otherwise, itwillbe.ignored.* *TheusercanensurethataDMAPALTERinanunmodified restart isflagged forexecution by suitably deleting thelatterpartoftherestart dictionary sothatthereentry pointisbefore theDMAPALTER. This,ofcourse, willcausemoremodules tobeexecuted intherestart. 1,1-10(05/30/86)\nGENERAL DESCRIPTION OFRIGIDFORMATS Inthecaseofamodified restart andamodified restart withrigidformatswitch, aDMAP ALTERwillbeflagged forexecution regardless ofitsposition intheDMAPwithrespect tothe reentry point. 1.1.6RigidFormatOutput Although mostoftherigidformatoutput isoptional, someoftheprinter outputis automatic. Theprinter outputisdesigned for132characters perline,withthelinesperpage controlled bytheNLINESkeyword ontheNASTRAN card(seeVolumeI,Section 2.1)andtheLINEcard intheCaseControl Deck(seeVolumeI,Section 2.3).TheNLINESandLINEdefault issettoffton n-inch paper. Optional titlesareprinted atthetopofeachpagefrominformation intheCase Control Deck.Thesetitlesmaybedefined atthesubcase level. Thepagesareautomatically dated andnumbered. Theoutputfromthedatarecovery andplotmodules isalloptional, anditsselection is controlled bycardsintheCaseControl Deck.Thedetails ofmakingselections intheCaseControl Deckaredescribed inVolumeI,Section 2.3forprinter andpunchoutput, andinVolumeI,Section 4forplotter output. Sincetheoutputs fromthedatarecovery andplotmodules varyconsiderably withtherigidformat, alistofavailable outputisincluded inthesection ontheCaseControl Deckforeachrigidformat. Information ontheforceandstressoutputavailable foreachelement typeisgiveninVolumeI,Section 1.3. ThefirstpartoftheoutputforaNASTRAN runisprepared duringtheexecution ofthe Preface, priortothebeginning oftheDMAPsequence oftherigidformat. Thefollowing outputis eitherautomatically oroptionally provided duringtheexecution ofthePreface: 1. 2. 3. 4. 5. 6.NASTRAN titlepage-Twofullpagesautomatic, unlesschanged withtheTITLEOPT keyword ontheNASTRAN card(seeVolumeI,Section 2.1)beforetheExecutive Control Deck. Executive Control Deckecho-Automatic. CaseControl Deckecho-Automatic. Unsorted BulkDataDeckecho-Optional, selected inCaseControl DeckwiththeECHO Card.(Automatic inrestart runsandinrunsemployin 7theUser’sMasterFile,unless suppressed intheCaseControl OeckwiththeECHOcard. SortedBulkDataDeckecho-Automatic, unlesssuppressed intheCaseControl Deckwith theECHOCard, DMAPlisting -Selected withDIAG14(ortheLISToptiononanXDMAPcard)inthe Executive Control Deck. Provides thelistOFDMAPinstructions, including those resulting fromALTERs, forthesubsetoftherigidformatbeingexecuted, (Automatic in restart runsandinrunsusingtheDMAPapproach (APPDMAP)orthesubstructure capability (APPDISP,SUBS),unlesssuppressed bytheNOLISToptiononanXDMAPcardin theExecutive Control Deck.) 1.1-11(05/30/86)\nKLtil!Ji_UKM/41S 7,Checkpoint Dictionary -Automatic, whenoperating inthecheckpoint mode.Aprinted echo (unless suppressed withtheDIAG9cardintheExecutive Control Deck)andpunched output areprepared foradditions tothecheckpoint dictionary aftertheexecution ofeach checkpoint. Whenmakingrestarts, thefollowing additional outputisautomatically prepared duringthe execution ofthePreface: 1, 2. 3. 4. 5. 6. 7.Asterisks ()areplacedbesidetheDMAPstatement numbers ofallinstructions thatare flagged forexecution intherestart. (ItshouldbeemrIhasized thataDMAPinstruction markedwiththesymbolisonlyflaedforexecution; ’whether itactually g *AP.)ets-executed ornotisdecided bythelogicinthe Pluses(+)areplacedbesidetheDMAPstatement numbers ofallinstructions thatare processed onlyatDMAPcompilation time.(DMAPinstructions BEGIN,COMPOFF, C@MPON, FILE,LABEL,PRECHKandXDMAParetheonlyinstructions thatbelongtothiscategory,) Message indicating thebitposition activated byarigidformatchange. Message indicating thetypeofrestart (unmodified, modified ormodified withrigid formatswitch). Tableindicating, amongotherthings, theeffective datachanges (ifany)andthe associated “packed bitpositions” thatcontrol therestart. Thetabledistinguishes between effective changes madetotheCaseControl DeckandthosemadetotheBulkData Deck,Thereaderisreferred totheProgrammer’s Manualforthefullinterpretation of thistable. ListoffilesalongwiththeDMAPinstructions thatweremarkedforexecution (ifany)by theFileNameRestart Table. ListoffilesfromtheOldProblem Tape,including purqedfiles,usedtoinitiate the-r- estart. Anumberoffatalerrorsaredetected bytheDMAPstatements inthevarious rigidformats. Thesemessages indicate thepresence offatalusererrorsthateithercannotbedetermined bythe functional modules orcanbemoreeffectively detected bytheDMAPstatements intherigidformat. Thedetection ofsuchanerrorcausesatransfer toaLABELinstruction neartheendoftherigid format.Thetextofthemessage isoutputandtheexecution isterminated. Thesemessages will alwaysappearattheendoftheNASTRAN output. Themessages applicable toeachrigidformatare described underthedescription ofthatrigidformat. NASTRAN diagnostic messages areusually identified bynumbers. Thesemessages maybe program diagnostics oruserdiagnostics, andtheymaycontain information, warnings, or indication ofafatalerror. Therearealsoafewunnumbered, self-explanatory messages, example, thetimethattheexecution ofeachfunctional modulebeginsandends.either an for TheGridPointSingularity Table(GPST)isautomatically outputfollowing theexecution of theGridPointSingularity Processor (GPSP)ifsingularities remaininthestiffness matrixatthe gridpointlevel. Thistablecontains allpossible combinations ofsingle-point constraints, in theglobalcoordinate system, thatcanbeusedtoremovethesingularities. Entries inthistable 1,1-12(05/30/86)\nGENERAL DESCRIPTION OFRIGIDFORMATS @shouldonlybetreated aswarnings, because itcannotbedetermined atthegridpointlevelwhether ornotthesingularities areremoved byothermeans,suchasgeneral elements ormultipoint constraints. Further information onthismatterisgivenintheTheoretical Manual. Several itemsofoutputarediscussed inothersections. Outputthatisnotassociated with allof output (PARAMtherigidformats isdiscussed inthesections treating theindividual rigidformats. Some isunderthecontrol ofPARAMcards. Theseitemsarediscussed inVolumeI,Section 2.4 card). TheDIAGcardisusedtocontrol theprinting ofsomeoutput. Alistofthe available outputunderDIAGcontrol isgiveninthedescription oftheExecutive Control Deckin VolumeI,Section 2.2. Anyofthematrices ortablesthatareprepared bythefunctional modules canbeprinted by usingselected utility modules described inVolumeI,Section 5.5.Theseutility modules canbe scheduled atanypointinarigidformatbyusingtheALTERfeature. (SeeSection 1.1.5forthe mannerinwhichALTERsarehandled inrestarts.) Ingeneral, theyshouldbescheduled irrrinediately afterthefunctional modulethatgenerates thetableormatrixtobeprinted. Notethatfunctional modules cannotbeseparated fromaSAVEinstruction. However, theuseriscautioned tocheckthe calling sequence fortheutility egenerated priortothispoint. 1.1.7RigidFormatDataBase-——. Asindicated earlier, the information foralloftherigidmodule, inordertobecertain thatallrequired inputshavebeen RigidFormatDataBasecontains theDMAPsequences andother formats inNASTRAN. Itsdesignallowsforconvenient maintenance oftheexisting rigidformats aswellastheaddition ofnewrigidformats. Editing ofthedata basemaybedonebyusingstandard texteditors provided onthehostcomputer systems. 1.1.7.1 DesignoftheDataBase TheRigidFormatDataBaseisacollection ofallrigidformats available totheuserin NASTRAN. EachRigidFormatismaintained asaseparate card-image entrywithinthedatabase.The entryforeachrigidformatconsists ofthreeparts. ThefirstpartistheDMAPpart.It.contains theDMAPsequence fortherigidformat, theDMAPsequence subsetflags,therestart flags(card name,filenameandrigidformatswitchrestart flags)andthesubstructure DMAPALTERcontrol flags. Thesecondpartcontains thecardnametableandthethirdpartcontains thefilename table. Therestart flagsinthefirstpartandthenametablescomprising thesecondandthird 1.1-13(05/30/86)\nRIGIDFORMATS partsarenotprocessed byNASTRAN innon-restart runs.Similarly, thesubstructure control flags inthefirstpartarenotprocessed innon-substructure runs. @ Theformatofthedatabaseisfreefield. Eachofthethreepartsinarigidformatentry isseparated from’theotherpartsbya“$”card.Thefollowing fictitious example illustrates a rigidformatentryinthedatabase. APR.86 $$$$THISISACOMMENT$$$$***************************************************** MODULEl INl,IN2,/f3uTl,guT2//PARMl $ s8ST 1,3,9-12 RFMT 188,200-201 CARD 1-20,30,44 FILE 100-104,110 pHSl II pHS2 DB5 PHS3 D7 $$$$************************** MgDuLE2 IN3,1N4/0UT3/PARM2 $ CARD 1-40,45 FILE 101,102 pHS2 DE5 $$$$****************************************** . . . $$$$ $CARDNAMETABLE $$$$ AXICAXIFCELAS1 ;CELAS2 ADUM1CDUM1CR@D . . $$$$“$FILENAMETABLE $$$$ 94 SLTGPTT 95 KGGXGPST . . $ “ Theveryfirstcardofanentryidentifies therelease ofNASTRAN withwhichtherigidformat isassociated. Inthisexample, therigidformatisassociated withtheApril1986release. The“$CARD” cardseparates thecardnametablefromtheDMAPpartoftheentryandthe “$FILE” cardseparates thefilenametablefromthecardnametable. A“$”cardterminates the filendmetableandtherigidformatentry. Comment cardsareidentified inthedatabasebythe“$$$$”identification inthefirstfour columns ofthefieldandcontrol cardsareidentified bythe“**”identification inthefirst fourcolumns ofthefield. 1.1-14(05/30/86)\n● ● ●GENERAL DESCRIPTION OFRIGIDFORMATS Comment cardsmaybeplacedanywhere inthecardnameorfilenametables(thesecondand thirdpartsofarigidformatentry). However, comment cardshavearequired usageandservea specific purpose intheDMAPpartofarigidformatentry. Inthispart,aconment cardisusedto distinguish andseparate aOMAPentry(thatis,aDMAPstatement anditsassociated control cards) fromanother DMAPentry. fromthenextDMAPentry. stringof“”isusedfor entries. AllDMAPstatementsHence,theremustbeatleastonecomment cardseparating aDMAPentry Inthedatabasesupplied withNASTRAN, acomment cardwithatrailing thispurpose toserveasacosmetic delineation between successive DMAP mustconform totherulesasspecified inVolumeI,Section 5,2.Any cardintheDMAPpartofarigidformatentrythatdoesnotbeginwith“$$$$”or“”inthe firstfourcolumns ofthefieldisconsi( Comment andcontrol cardsinarig’ cardscanonlyextendupto72columns. Control cards(thatis,cardsthateredtobeaDMAPstatement orpartofaDMAPstatement. dformatentrycanextendup.to80columns. beginwith“*”inthefirstfourcolumnsHowever, DMAP ofthefield) repermitted onlyintheDMAPpartofarigidformatentry. Acontrol cardmusthaveanyoneof sevenfour-character namesincolumns fivethrough eight. Thepermissible namesare:SBST,RFMT, CARD,FILE,PHS1,PHS2andPHS3.Control cardsfollowthecorresponding DMAPstatement inthe entryandmaybespecified inanyorder. The“SBST”, “RFMT”, “CARD”and“FILE”control cardscontain sequences ofnumbers and/or rangesofnumbers inascending orderrepreseited bytheuseofadash.Acommaisrequired after eachnumberinasequence orafterarangeofnumbers, ifanadditional numberorrangeofnumbers istofo”llow. Theremaybemultiple cardsforanyoneofthesecontrol cardsforaspecific DMAP statement. The“SBST”control cardprovides DMAPsequence subsetcontrols. Ifauserrequests a9iven subsetontheSOLcardofaNASTRAN runandthatnumberisinthesequence ofnumbers givenonthe “SBST”card,thentheassociated DMAPstatement isdeleted. Therangeofsubsetnumbers isfrom1 to9andeachnumberisdocumented underthedescription oftheSOLExecutive Control cardin VolumeI,Section 2.2. The“RFMT”control cardisprocessed inrestart runsandisapplicable tocaseswherearigid formatswitchhasoccurred. Eachrigidformathasauniquenumberassigned toit.ForAPPROACH DISP,rigidformats 1through 16areassigned thenumbers 187through 202,respectively. For APPROACH HEAT,rigidformats 1,3and9areassigned thenumbers 207,2C8and209,respectively. 1.1-15(05/30/86)\nKltill.1tUKPIAIS ForAPPROACH AERO,rigidformats 9,10and11areassigned thenumbers 216,214and215, respectively. ADMAPstatement isflagged forexecution inamodified restart ifthenumber associated withtherigidformatthatwasusedinthecheckpointed runislistedinthesequence of numbers givenonthe“RFMT”cardprovided withtheDMAPstatement. The“CARD”and“FILE”control cardsprovide restart information forchanges thatinvolve inputdataorfileswithintheDMAP.Foragivenrigidformat, everytypeofeffective changein theCaseControl andBulkDataDecksandeachoutputfile(ordatablock)intheDMAPisassigned a numberasdefined inthecardnameandfilenametablesinthesecondandthirdpartsofarigid formatentry. Inamodified restart, ifthenumberassociated withaninputdatachangeoran affected fileappears inthesequence ofnumbers givenonthe“CARD”or“FILE”cards,thenthe corresponding DMAPstatement isflagged forexecution intherestart run. Theinformation provided byallofthe“CARD”control cardsinarigidformatentryis collectively referred toastheCardNameRestart Table. Similarly, theinformation provided by allofthe“FILE”and“RFMT”control cardsinarigidformatentryiscollectively referred toas theFileNameRestart TableandtheRigidFormatChangeRestart Table,respectively. Foragiven rigidformat, thesethreerestart tablescompose theModuleExecution Decision Table(MEDT)ofthat rigidformat. The“PHS1”, “PHS2”and“PHS3”control cardsareusedtoindicate wheresubstructure DMAp ,,LTERsaretobegenerated. Thenumberfollowing the“PHS”referstothesubstructure phase number. Thesecardsmusthaveoneofthefollowing flags: “In”,“Dn”,“DBn”or“DEn”. The“n”in theseflagsisaninteger thatreferstothesubroutine governing thesubstructure run(subroutine ASCMOI, ASCM05, ASCM07orASCM08) andmusthavethevalue“l”forPhase1cards,eitherthevalue “5”or“8”forPhase2cards,andeitherthevalue“l”or“7”forPhase3cards. The“I”inthe “In”flagindicates thataDMAPALTERistobeinserted afterthisDMAPstatement. The“D”inthe “Dn”flagindicates thatthisDMAPstatement istobedeleted andpossibly replaced byaDMAP ALTER. The“DB”inthe“DBn”flagandthe“DE”inthe“DEn”flagindicate thebeginning andthe endofagroupofcontiguous DMAPstatements thataretobedeleted andpossibly replaced byaDMAP ALTER. Usersarecautioned tobeverycareful inmakinganychanges tothesesubstructure control cardsbecause oftheirimpactontheDMAPALTERsautomatically generated insubstructure analyses. (Theautomated substructure capability iscurrently implemented onlyinrigidformats 1,2,3,8 and9,APPROACH DISP.) 1.1-16(05/30/86)\nGENERAL DESCRIPTION OFRIGIDFORMATS Thecardnameandfilenametablesassignnumbers toeverytypeofeffective changeinthe CaseControl andBulkDataDecksandtoeveryoutputfile(ordatablock)intheDMAP.Numbers 1 through 93areallocated tocardnamesandnumbers 94through 186areallocated tofile(ordata block)names. Thisinformation isusedsubsequently todetermine theDMAPstatements tobeflagged forexecution inmodified restarts. Theformatofthesetablesisfreefield. Eachentryinthese tablesmusthaveaninteger numberinthefirstfieldandalistofnamesintheremaining fields oftheentry. characters. No thesetablestoAllnamesaretobealphanumeric andmaycontain uptoamaximum ofeight nameshouldappeartwiceinthese“tables. Comment cardsmaybefreelyusedin facilitate readability. 1.1,7.2 Implementation oftheDataBase TheRigidFormatDataBaseisimplemented differently ontheCDC,DECVAX,IBMandUNIVAC versions. OntheCDCandDECVAXversions, eachrigidformatentryisstoredasaseparate file. ThelocalnamesofthesefilesduringaNASTRAN execution are:DISPIthrough DISP16forAPPROACH DISP;HEAT1,HEAT3andHEAT9forAPPROACH HEAT;AER09,AEROIOandAERf311forAPPROACH AERi3.These samefilesarestoredasmembers ofapartitioned dataset(PDS)ontheIBMversion andiiselements oftheNASTRAN fileontheUNIVACversion. Thememberandelement namesareexactly thesameas thelocalfilenamesontheCDCandDECVAXversions. RigidFormatDataBasemustbereferred tobyaData RFDATA. OntheUNIVACversion, theNASTRAN fileis absolutes. (SeeReferences 1and2fortheformats ofOntheIBMversion, thePDScontaining the Definition card,“DD”,withtheDDnameof thefilecontaining theNASTRAN program filenamesfortheCDCandDECVAXversions, respectively. SeeReference 3fortheformats ofDDnames andmembernamesfortheIBMversion. SeeReference 4fortheformatofUNIVACfilenames.) 1.1.7.3 UsageoftheDataBase Thefollowing examples illustrate themannerinwhichtheRigidFormatDataBaseisaccessed andusedonallofthe,four versions ofNASTRAN. CDCVERSION /J17B. . ~ET,DISpl,DISP2, DISP3,DISP4,DISP5. GET,DISP6,DISP7,DISP8,DISP9,DISP1O. GET,DISP11,DISP12,DISP13,DISP14,DISP15,DISP16. 1.1-17 05/30/86)\nRIGIDFORMATS GET,HEAT1,HEAT3,HEAT9 ,AER!39,AER@10,AER011 . RFL,220000. REDUCE,-. LINKl,INPUT,@UTPUT ,PUNCH,UT1. {~@R …. . ~NDDATA /Ef3F DECVAXVERSION ASSIGN DDB1:[NASOIR]DISP1 .DTDISP1. ASSIGN DDB1:[NASOIR]DISP2. OTDISP2. . AssIGN bOBI:[NASOIR]HEAT1 .DTHEATI. . ASSIGN 6DBI:[NASDIR]AER011.DT AER1311. @DoBl:[NASDIR]NASTRAN DEM@.DT IBMVERSION //EXECNASTRAN //NS.RFDATA DDDSN=RIGID.FORMAT.DATA.DISP=SHR {NS.SySIN DD* ‘‘- …. . iNDDATA // UNIVACVERSION @ASG,A*NASTRAN. @XQT *NASTRAN.LINK1 1.1.7.4 Development ofUserRigidFormats Inaddition tousingCOSMIC-supplied formats, withrestart capabilities included. rulesexplained earlier andmustbesimilarrigidformats, usersmaydevelop theirownrigid Rigidformats developed byusersmustconform tothe incontent andstructure totheCOSMIC-supplied rigid formats. Eachuser-developed rigidformatmustresideasaseparate fileontheCDCandDECVAX versions, asamemberofaPDSontheIBMversion andasafileorfile.element ontheUNIVAC version. Beforedeveloping theirownrigidformats, usersarestrongly advised tocarefully studyand examine theCOSMIC-supplied rigidformats, particularly withregardtotheiruseofcontrol cards. Thefollowing important guidelines shouldhelpusersindeveloping theirownrigidformats. 1.1-18(05/30/86)\nGENERAL DESCRIPTION OFRIGIDFORMATS 1. 2. 3. 4, 5. 6. 7.TheDMAPsequence oftheuserrigidformatmustbetestedforitscorrectness andlogic. Thistesting maybedoneeitherinaDMAPenvironment orintheenvironment ofan existing rigidformatbyuseofALTERs. Thecardnametable(thesecondpartofarigidformatentry)mustbeconstructed by assigning numbers 1through 93foralltypesofCaseControl andBulkDataDeckchanges thatwillaffectthelogicoftherigidformat. Normally, thoseinputdatachanges that havethesameeffectonthelogicoftherigidformatareassigned thesamenumber. Thefilenametable(thethirdpartofarigidformatentry)mustbeconstructed by assigning numbers 94through 186forallfiles(ordatablocks) thatareoutputbythe functional modules intherigidformat. Normally, allfiles(ordatablocks) outputfrom agivenfunctional moduleareassigned thesamenumber. TheDMAPpart(thefirstpartofarigidformatentry)mustbeconstructed byfollowing eachstatement intheDMAPsequence bytheappropriate control cardsandbyensuring that eachDMAPentry(thatis,aDMAPstatement anditsassociated control cards)isseparated fromthenextDMAPentrybyatleastonecomment card. AgivenDMAPstatement mustbefollowed bya“SBST”control cardifthatDMAPstatement belongs tooneormoreoftheDMAPsubsets. Thesesubsetnumbers mustbespecified on the“SBST”card.Theacceptable subsetnumbers andtheirmeanings aredocumented under thedescription oftheSOLExecutive Control cardinVolumeI,Section 2.2. A“RFMT”control cardmustfollowaDMAPstatement ifthatDMAPinstruction istobe flagged forexecution onrestart fromacheckpoint ofoneoftheCOSMIC-supplied rigid formats. (Itisnotpossible tohavearestart inaCOSMIC-supplied rigidformatfroma checkpoint ofanuser-developed rigidformat.) ThiswillbesoifthisDMAPinstruction isnotpartoftheDMAPsequence oftherigidformatthatwasusedinthecheckpoint run. The“RFMT”control cardmustlistthenumbers oftheappropriate COSMIC-supplied rigid formats (187through 202forrigidformats 1through 16,respectively, forAPPROACH DISP; 207,208and209forrigidformats 1,3and9,respectively, forAPPR9ACH HEAT;and216, 214and215forrigidformats 9,10and11,respectively, forAPPROACH AERO). ADMAPstatement mustbefollowed byoneormore“CARD”control cardsindicating the effective inputdatachanges thatrequire thatDMAPinstruction tobeflagged for execution onrestart. Anyeffective inputdatachangewillaffectoneormorefiles(or datablocks) orparameters intheDMAPsequence. Therefore, foragivendatachange, all 1.1-19(05/30/86)\n8, 9. 10.RIGIDFORMATS CMAPinstructions thatusetheaffected files(ordatablocks) orparameters asinputare potential candidates tobeflagged forexecution onrestart. However, thelogicofthese individual OMAPinstructions mustbechecked further (seetheProgrammer’s Manual) tosee iftheyarereallyimpacted bythegivendatachange. Thisprocedure mustbeapplied in turntothose input. This considered.DMAPinstructions thatusetheoutputoftheaffected DMAPinstructions as procedure mustberepeated untiltheentireDMAPsequence hasbeen ADMAPstatement mustbefollowed byoneormore“FILE”control cardsindicating theDMAP files(ordatablocks) whosegeneration requires theexecution flagforthatDMAP statement tobeturnedonduringrestart. Normally, foragivenDMAPfile(ordata block)thatisrequired onrestart butisnotavailable fromthecheckpoint run,theDMAP instruction thatgenerated itmustbeflagged forexecution. However, inpractice, additional DMAPinstructions likePURGEandEQUIVthatmanipulate thegivenfile(ordata block)mustalsobeflaggedfor execution. Therestart flagsforaC9NDDMAPinstruction (anditscompanion LABELDMAPinstruction) mustinclude therestart flagsforthoseDMAPinstructions whoseexecution itcontrols. “PHS1”, “PHS2”and“PHS3”control cardsmustnotbeusedasthesubstructure capability isnotapplicable touserrigidformats. 1.1.7.5 UsageofUser-Developed RigidFormats Anuser-developed rigidformatisreferenced through theuseoftheSOLcardintheExecutive Control Deck. However, instead ofspecifying thesolution number orthenameofthe COSMIC-supplied rigidformatonthiscard,thenameoftheuser-developed rigidformat is specified. ThisnameisafilenameontheCDCandDECVAXversions, amembernameof aPDSonthe IBMversion andafileorfile.element nameontheUNIVACversion. Themembernamegivenonthe IBMversion mustbeinthefilereferenced ontheRFDATADOstatement. Themannerinwhichan user-developed rigidformatisaccessed andusedissimilar tothatofaCOSMIC-supplied rigid format, asexplained intheexamples givenSection 1.1.7.3. Thus,forinstance, anuser-developed rigidformatcanbeaccessed andusedontheCDCversion inthefollowing manner. /J@B. . GET,NEWRF. RFL,220000. 1.1-20(05/30/86)\nGENERAL DESCRIPTION OFRIGIDFORMATS REDUCE.-. LINK1,iNPUT,OUTPUT,pUNCH ,UT1. lEOR ID”…. S@LNEWRF ;EOF 1.1-21(05/30/86)\nRIGIDFORMATS REFERENCES 1.Control DataCorporation NOS1.0Reference Manual, Document No.60435400. 2.VAX/VMS Command Language User’sGuide,Digital Equipment Corporation, OrderNo.AA-D023C-TE. 3,IBMOS/VS2 MVSJCL,Document No,GC28-0692-4. 4.SperryUNIVAC1100SeriesExecutive SystemEXECProgrammer Reference, Volume2,Document No. UP-4144.2. 1.1-22(05/30/86)\n2.DISPLACEMENT RIGIDFORMATS 2,1STATICANALYSIS 2,1.1DMAPSequence forStaticAnalysis RIGIDFORMATDMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT1 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCELISTING OPTIONS INEFFECT GO ERR=2 LIST NODECK NOREF NOOSCAR\n1BEGIN DISP01-STATICANALYSIS -APR.86$ 2FILE oPTP2=sAvE/EsTl=sAvE $ 3FILE QG=APPEND/PGG=APPEND/UGV-APPEND/GM=SAVE/KNN=SAVE $ 4SETVAL //V,Y,lNTERACT/0/v,Y,5YS21/O $ 5PARAM //14PY/CARDNO/O/O $ 6COhPOFF l,INTERACT $ 7PRECHK ALL$ 8COMPON I,INTERACT $ 10COMPOFF LBLINT02,SYS21 $ v 11GPl GEOMl,GEOM2,/GPL,EQEXIN,GPDT, CSTM,BGPDT,SIL/S,N,LUSET/ NOGPDT/ALWAYS=-l $ 12PLTTRAN BGPDTsSIL/BGPDP,SIP/LUSET/.S,N, LUSEP$ 13GP2 GEoM2,EQExlN/EcT $ 14PARAML PCOR//~~PRES*////JUMPPLOT $ 15PURGE PLTSETX,PLTPAR,GPSETS,ELSETS/JUMPPLOT $ 16COND P1,JUMPPLOT $ 17PLTSET PCOB,EQEXIN,ECT/?LTSETX,PLTPAR,GPSETS ,ELSETS/S,N,NSIL/ S,N,JUMPPLOT $ 18PRTMSG PLTSETX// $ 19PARAM //MPY/PLTFLG/l/l $ 20PARAM //MPY/PFILE/O/O $ 21COND P1,JUMPPLOT $ 22PLOT PLTPAR,GPSETS,ELSETS,CASECC,BGPDT, EQEXIN,SIL, ,ECT,,/PLOTXl/ NSIL/LUSET/S,N,JUMPPLOT/S,N, PLTFLG/S,N,PFILE $ 2.1-1(05/30/86)\nDISPLACEMENT RIGIDFORMATS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 1 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 23PRTMSG 24LABEL 25GP3 26PARAM 27TA1 28PARAH 29coNo 30PURGE 31oPTPR1 32LABEL 33CONO 34PARA14 35EQUIV 36Et4G 37COND 38EMA 39LABEL 40PURGE 41COND 42EMA 43LABEL 44COND 45COND 46GPWGPLOTX1// $ PI$ GEOM3,EQEXlN,GEOM2/SLT,GPTT/S,N,NOGRAV/NEVER=l $ /lANO/NOFtGG/NOGRAv/V,y,GRDPNT–I $ ECT,EPT,BGPDT,SIL,GPTT,CSTM/EST,GE l,GPECT,,/ LUSET/S,N,NOSIMP/l/S,N,NOGENL/S,N,GENEL $ //~NO/NOELMT/NOGENL/NOslMp $ ERRORk,NOELMT $ KGGX,GPST/NOSIMP/OGPST/GENEL $ MPT,EPT,ECT,OIT,EST/OPTPl/S,N,PR lNT/S,N,TSTART/S,N,COUNT $ LOOPTOP $ LBL1,NOSIMP $ //ADD/NOKGGX/l/O $ oPTPl,oPTP2/NEvER/EsT,EsTl/NEvER $ EST,CSTM,MPT,DIT,GEOM2,/KELM,KDl CT,MEL/l,MDICT,,,/S,N,NOKGGX/ S,N,NOMGG////C,Y, COUPMASS/C,Y,CPBAR/ C,Y,CPROD/C,Y,CPQUADl/C,Y, CPQUA02/C,Y,CPTRIAl/C,Y,CPTRl A2/ C,Y,CPTUBE/C,Y,CPQOPLT/C,Y, CPTRPLT/C,Y,CPTRBSC/ V,Y,VOLUME/V,Y,SURFACE $ JMPKGG,NOKGGX $ GPECT,KO}CT,KELM/KGGX,GPST $ JMPKGG $ f4GG/NOMGG $ JMPMGG,NOMGG $ GPECT,MDICT,MELM/MGG,/-l/C,Y,WTMASS=l .0$ JMPMGG $ LBL1,GRDPNT $ ERROR2,NOMGG $ BGPOP,CSTM,EQEXlN,/IGG/OGPWG/V,Y,GRDPNT/C,Y,WTMASS $ 2.1-2(05/30/86)\nSTATICANALYSIS RIGIDFORMATDMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT1 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCELISTING 41 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 6k 65 66 67 68 69 10 71OFP LABEL EQUIV CONO SMA3 LABEL PARAM LABEL GPk CONO PARAH PURGE COND PARAM COND GPSP OFP LABEL EQU[V COND HCE1 MCE2 LABEL EQUIV CONDOGPWG,,,,,//S,N,CARDNO $ LBL1$ KGGX,KGG/NOGENL $ LBLIIA,NOGENL $ GEl,KGGX/KGG/LUSET/NOGENL/NOS IMP$ LBL1lA $ //MPY/NSK IP/O/O$ LBL1l$ CASECC,GEOM4,EQEX lN,GPDT,BGPDT,CSTM,GPST/RG, YS,USET,ASET/ LUSET/S,N,MPCFl/S,N,MPCF2/S,N,Sl NGLE/S,N,OMIT/S,N,REACT/ S,N,NSKlP/S,N,REPEAT/S,N,NOSET/S,N,NOL/S,N,NOA/C,Y,ASETOUT/ S,Y,AUTOSPC $ ERROR3,NOL $ //AND/NOSR/SINGLE/REACT $ KRR,KLR,QR,DM/REACT/GM/MPCF l/GO,KOO,LOO,PO ,UOOV,RUOV/OMIT/PS , KFS,KSS/SINGLE/QG/NOSR $ LBL4,GENEL $ //EQ/GPSPFLG/AUTOSPC/O $ LBL4,GPSPFLG $ GPL,GPST,USET,SIL/OGPST/S,N,NOGPST $ OGPST,,,,,//S,N,CARDNO $ LBL4$ KGG,KNN/MPCFi $ LBL2,MPCF2 $ USET,RG/GM $ USET,GM,KGG,,,/KNN,,, $ LBL2$ KNN,KFF/SINGLE $ LBL3,SINGLE $ 2.1-3(05/30/86)\nDISPLACEMENT RIGIDFORMATS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 1 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 72SCE1 73LABEL 74EQUIV 75COND 76S14PI 77LABEL 78EQtJIV 79COUD 80RBMG1 81LABEL 82RBMG2 83CONO 8kRBMG3 85LABEL 86SSG1 87EQUIV 88CONO 89SSG2 90LABEL 91SSG3 92“COND 93MATGPR 94MATGPR 95LABEL 96SDRIUSET,KNN,,./KFF,KFS,KSS,,, $ LBL3$ KFF,KAA/OMiT $ LBL5,0MIT $ USET,KFF,,,/GO,KAA,KOO,LOO, ,,,,$ LBL5$ KAA,KLL/REA.CT $ LBL6,REACT $ USET,KAA,/KLL,KLR,KRR,,, $ LBL6$ KLL/LLL $ LBL7,REACT $ LLL,KLR,KRR/DM $ LBL7$ SLT,BGPDT,CSTM,SIL,EST,MPT,GPTT, EDT,MGG,CASECC,OIT,/PG,,,,/ LUSET/NSKIP’ $ PG,PL/NOSET $ LBL1O,NOSET $ USET,GM,YS,KFS,GO,OM,PG/QR,PO,PS,PL $ LBL1O$ LLL,KLL,PL,LOO,KOO,PO/ULV,UOOV,RULV,RUOV/OMlT/V,Y, iRES=-1/ NSKIP/S,N,EPSl $ LBL9,1RES $ GPL,USET,SIL,RULV//L $ GPL,USET,SIL,RUOV//O $ LBL9$ USET,PG,ULV,UOOV,YS,GO,GM,PS, KFS,KSS,QR/UGV,PGG,QG/NSKIP/ sTATlcs $ 2.1-4(05/30/86)"},"title":"User's Manual P2"},"/docs/users/users_manual_003/":{"data":{"":"STATICANALYSIS RIGIDFORMAT OMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 1 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 97COND 98REPT 99JUMP 100PARAM 101COND 102LABEL 103GPFDR 104OFP 105COND 106EQMCK 107OFP 108LABEL 109SOR2 110COND 111CURV 112LABEL 113PURGE llkCOND 115SOR2 116COND 117CURV 118LABEL 119PURGELBL8,REPEAT $ LBL11,360 $ ERROR1 $ //NoT/TEST/REPEAT $ ERROR5,TEST $ LBL8$ CASECC,UGV,KELM,KDICT,ECT,EQEX lN,GPECT,PGG,QG/ONRGYl,DGPFBl/ sTATlcs $ ONRGY1,OGPFB1 ,,,,//S,N,CARONO $ NOMPCF,GROEQ $ CASECC,EQEXIN,GPL,BGPDT,SI L,USET,KGG,GM,UGV,PGG,QG,CSTM/ OQMl/V,Y,OPT=O/V,Y,GRDEQ/NSK IP$ OQMl,,,,,//S,N,CARDNO $ NOMPCF $ CASECC, CSTM,MPT,DIT,EQEX IN,SIL,GPTT, EDT,BGPDP, ,QG,UGV,EST, XYCOB,PGG/OPGl ,OQG1,OUGV1,OES1 ,OEFl,PUGV1/STATICS/S,N, NosoRT2/-l/s,N,sTRNFLG $ LBLSTRS,STRESS $ OESl,MPT,CSTM,EST,SIL,GPL/OESIM,OES lG/V,Y,STRESS/ V,Y,NINTPTS $ LBLSTRS $ OESIM/STRESS $ LBLSTRN,STRNFLG $ ,CASECC,CSTM,MPT,OIT,EQEXIN ,SIL,GPTT,EDT,BGPDT, ,,UGV,EST, ,/ ,,,OESIA,,/STATICS//l $ LBLSTRN,STRAIN $ OESIA,MPT,CSTM,EST,SIL,GPL/OES lAM,OESIAG/V,Y,STRAIN/ V,Y,NINTPTS $ LBLSTRN $ OESIA/STRNFLG $ 2.1-5(05/30/86)\nDISPLACEMENT RIGIDFORMATS RIGIDFORMAT OMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIOFORMAT 1 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 120COND 121SOR3 122PARAM 123COND 124OFP 125SCAN 126OFP 127JUMP 128LABEL 129oFP 130SCAN 131OFP 132LABEL 133OFP 134XYTRAN 135XYPLOT 136JUMP 137LABEL 138PURGE 139COND 1400PTPR2 141EQUIV 142COND 143LABEL 144OFPLBL17,NosoRT2 $ ouGvl,oPGl,oQGl,oEFl,oEsl,/ouGv2 ,0PG2,0QG2,0EF2,0ES2, $ //suB/pRTsoRTz/NosoRT2/I $ LBLSORT1,PRTSORT2 $ 0UGV2,0PG2,0QG2,0EF2,0ES2,//S,N, CARDNO $ CASECC,0ES2,0EF2/OESF2/RF $ 0ESF2,,,,,//S,N,CARDNO $ LBLXYPLT $ LBLSORT1 $ OUGVl,OPGl,OQGl,OEFl,OESl,//S,N,CARDNO $ CASECC,OESl,OEFl/OESFl/RF $ OESF1,,,,,/lS,N,CARDNO $ LBLXYPLT $ OESIM,OESIG,OESIA,OESIAM,OESIAG,//S,N, CARDNO $ xYcDB,oPG2,oQG2,ouGv2,oEs2,oEF2/xYPLTT/TRAN/PsET/s,N, PFILE/S,N,CARONO $ XYPLTT// $ DPLOT$ LBL17$ ouGv2/NosoRT2 $ LBLOFP,COUNT $ OPTPl,OESl,EST/OPTP2,ESTl/S,N,PRlNT/TSTART/S,N,COUNT/S, N, CARONO $ EsTl,EsT/ALwAYs/oPTP2,0PTPl/ALwAYs $ LOOPENO,PRINT $ LBLOFP $ OUGVl,OPGl,OQGl,OEFl,OESl,//S,N,CARDNO $I 2.1-6(05/30/86)\nSTATICANALYSIS I RIGIDFORMAT DMAPLISTING APRILIg86RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT I LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING lk5SCAN 146OFP 147OFP 148LABEL 149CONO 150PLOT 151PRTMSG )52LABEL 153LABEL 154COND 155REPT 156JUMP 157LABEL 158PRTPARM 159LABEL 160PRTPARM 161LABEL 162PRTPARM 163LABEL 164PRTPARM 165LABELCASECC,OESl,OEF1/OESFIX/RF $ OESFIX,,,,,//S,N;CARDNO $ OESIM,OESIG,OESIA,OESIAM,OESIAG,//S,N,CARONO $ OPLOT$ P2,JUMPPLOT $ PLTPAR,GPSETS, ELSETS,CASECC,BGPDT,EQEXIN,SI P,PUGVl,,GPECT,OESl/ PLoTx2/NsIL/LuSEP/JUMPPLOT/PLTFLG/S,N,PF ILE$ PLoTx2// $ P2$ LOOPENO $ FINIS,COUNT $ LOOPTOP,360 $ FINIS$ ERROR1 $ //-l/STATICS $ ERROR2 $ //-2/sTATlcs $ ERROR3 $ //-3/sTATlcs $ ERROR4 $ //-4/sTATlcs s ERROR5 $ 166PRTPARM //-5/STATlcs $ 167LABEL FINIS$ 168PURGE OUMMY/ALWAYS $ 169LABEL LBLINT02 $ 170CO14PON LBLINT01,SYS21 $ 2.1-7(05/30/86)\nDISPLACEMENT RIGIDFORMATS RIGIDFDRMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIOFORMAT 1 LEVEL2.0NASTRAN OMAPCOMPILER -SOURCE LISTING 224LABEL LBLINT1 $ 225END $ 2.1-8(05/30/86)\nSTATICANALYSIS 2.1.2 Description ofImportant DMAPOperations forStaticAnalysis Note:TheDMAPsequence forstaticanalysis involves theuseofparameters INTERACT and ml(seeSection 2.1.5), Theseparameters areofrelevance onlywhentheprimary purpose oftheuseristomakeinteractive restart runs.(Thetwoparameters arethenspecified via thePARAMcardintheBulkDataDeck.) However, thesetwoparameters arenotrequired for normalnon-interactive batchruns.Consequently, therigidformatDMAPlisting shownin Section 2.1.1wasgenerated bynotspecifying theseparameters (viathePARAMbulkdata card).AS aresult., the COMPOFnd COMPONinstructions usingtheseparameters assumea valueofOfortheseparameters (seeVolumeI,Section 5.7). 6.COMPOFF causestheDMAPcompiler tocompile thenextinstruction (DMAPNo.7)asthe parameter INTERACT isO(seeNoteabove). 8.COMPONcausestheDMAPcompiler toskipthecompilation ofthenextinstruction (DMAPNo.9, notshown)astheparameter INTERACT isO(seeNoteabove). 10.CklMPOFF causestheDMAPcompiler tocompile allofthefollowing instructions through LABEL LBLINT02 (DMAPNos.11through 169)astheparameter SYS21isO(seeNoteabove). 11,GP1generates coordinate systemtransformation matrices, tablesofgridpointlocations, and tablesrelating theinternal andexternal gridpointnumbers. 12.PLTTRAN modifies special scalargridpointsintheBGPDTandSILtables. 13.GP2generates Element Connection Tablewithinternal indices. 16.GotoDMAPNo.24iftherearenostructure plotrequests. 17.PLTStrtransforms userinputintoaformusedtodrivethestructure plotter. 18,PRTMSGprintserrormessages associated withthestructure plotter. 21.GotoDMAPNo.24ifnoundeformed structure plotsarerequested, 22.PLOTgenerates allrequested undeformed structure plots. 23.PRTMSGprintsplotter dataandengineering dataforeachundeformed plotgenerated. 25.GP3generates StaticLoadsTableandGridPointTemperature Table. 27.TA1generates element tablesforuseinmatrixassembly andstressrecovery. 29.GotoDMAPNo.163andprintErrorMessage No.4ifnoelements havebeendefined. 31.i3PTPRlperforms phaseoneproperty optimization andinitialization check. 32.Beginning ofloopforproperty optimization, 33.GotoDMAPNo,48iftherearenostructural elements. 36.‘EMGgenerates structural element stiffness andmassmatrixtablesanddictionaries forlater assembly,by theEMAmodule. 37.GotoDMAPNo.39ifnostiffness matrixistobeassembled. 38.EMAassembles stiffness matrix[Kg]andGridPointSingularity Table. 41.GotoDMAPNo.43ifnomassmatrixistobeassembled. 42.EMAassembles massmatrix[Mgg]. 44.GotoDMAPNo.48ifnoweightandbalance information isrequested. 45.GotoDMAPNo.159andprintErrorMessage No.2ifnomassmatrixexists. 2.1-9(05/30/86)\nDISPLACEMENT RIGIDFORMATS 46.GPWGgenerates weightandbalance information. 47.klFPformats theweightandbalance information prepared byGPWGandplacesitonthesystem outputfileforprinting.m 49. 50. 51. 54. 55. 56. 59. 61. 62, 63. 65. 66. 67.Equivalence [Kg]to[Kgg]ifnogeneral elements exist. GotoDMAPNo.52ifnogeneral elements exist. SMA3addsgeneral elements to[Kg]toobtainstiffness matrix[Kgg]. Beginning ofloopformultiple constraint sets. GP4generates flagsdefining members ofvarious displacement sets(USET), formsmultipoint constraint equations [Rg]{ug}=Oandformsenforced displacement vector{Ys}. GotoDMAPNo.161andprintErrorMessage No.3ifnoindependent degrees offreedom are defined. GotoDMAPNo.64ifgeneral elements arepresent, GotoDMAPNo.64ifnopotential gridpointsingularities exist. GPSPgenerates atableofpotential gridpointsingularities, flFPformats thetableofpotential gridpointsingularities prepared byGPSPandplacesit onthesystemoutputileforprinting. Equivalence [Kgg]to[Knn]ifnomultipoint constraints exist. GotoDMAPNo.69iftheMPCsetforthecurrent passisunchanged fromthatoftheprevious pass. MCE1partitions multipoint constraint equations [Rg]=[Rm~Rn] and solvesformultipoint constraint transformation matrix[Gm]=-[Rm]-l[Rn]. 68.MCE2partitions stiffness matrix [Kgg]= andperforms matrixreduction [Knn]=[Knm]+[G:][\\n +[n][Gm] 70.Equivalence [Knn] 71.GotoDMAPNo.73to[Kfflifnosingle-point constraints ifnosingle-point constraints exist. 72.SCE1partitions outsingle-point constraints [Knn]= [1fy- , Ksf1Kss 74.Equivalence [Kff] 75.GotoDMAPNo.77to[Kaa]ifnoomitted coordinates ifnoomitted coordinates exist. 2.1-10(05/30/86)+[G;][Km][Gm]. exist. exist.1\nSTATICANALYSIS 76.SMP1partitions constrained stiffness matrix [KIK [Kff]=‘a+N ‘oaI’00 solvesfortransformation matrix [Gol=-[Kool-l[Koal andperforms matrixreduction [Kaal=[Kaal+[K~al[Gol . 78.Equivalence [Kaa]to 79.GotoDMAPNo. 81if 80.RBMG1 82.RBMG2 83.GOto 84.RBMG3partitions out[KLL]ifnofree-body supports exist. nofree-body supports exist. free-body supports [1KkkIKgr [Kaa]= –+– . ‘rtI‘rr decomposes constrained stiffness matrix[KLB]=[LLL][ULR]. DMAPNo.85ifnofree-body supports exist. formsrigidbodytransformation matrix [D]=-[KLJ1[Kkr] , calculates rigidbodycheckmatrix [xl=[Krrl+[K;rl[Dl andcalculates rigidbodyerrorratio e= T14Tx. Krr 86.SSG1generates staticloadvectors {Pg}. 87.Equivalence {Pglto{pi}ifnoconstraints areaPpliedO 88.GotoDMAPNo.90ifnoconstraints areapplied. 89.SSG2applies constraints tostaticloadvectors HPn {Pg}= —–,{Pn}={~n}+[G;]{pml , Pm 2.1-11(05/30/86)\nDISPLACEMENT RIGIDFORMATS (Pf}={Pf}-[KfJ{YJ , (Pa}={;a}+[G:]{PO}, andcalculates determinate forcesofreaction {qr}=-{Pr}-[DT]{PLI. 91.SSG3solvesfordisplacements ofindependent coordinates {ui}=[KIL]-l{Pl} , solvesfordisplacements ofomitted coordinates {u:}=[KOO]-l{PO} , calculates residual vector (RULV) andresidual coordinates {6PL}={Pi}-[Kli]{ug}vector errorratioforindependent 9 {u:}{\u0026Pk} ‘t❑ {P:}{ui} andcalculates residual vector(RU@V) andresidual vectorerrorratioforomitted coordinates {tSPo}={Po}-[Koo]{u:l , {u:){fsPo?= ‘o {P:}{u:} 92.GotoDMAPNo.95ifresidual vectors arenottobeprinted. 93.MATGPR printstheresidual vectorforindependent coordinates (RULV), 94.MATGPR printstheresidual vectorforomitted coordinates (RUOV), 96.SDR1recovers dependent displacements H‘k={Ua}, —— ‘r HUa ——={Uf}, ‘o{Uo}=[Go]{ual +{u:}, H‘f——❑ {Un}, Y5 2,1-12(05/30/86)\n97. 98, 99. 101. 103. 104, 105. 106. 107. 109. 110. 111. 114. 115. 116. 117. 120. 121. 123. 124.{um}=[Gm]{un} ,STATICANALYSIS H‘n—.={Ugl Um andrecovers single-point forcesofconstraint {q5}=-{p~}+[KJ{uf} +[K5l{y~}. GotoDMAPNo.102ifallconstraint setshavebeenprocessed. GotoDMAPNo.54ifadditional setsofconstraints needtobeprocessed. GotoDMAPNo.157andprintErrorMessage No.1asthenumberofconstraint setsexceeds 360. GotoDMAPNo.165andprintErrorMessage No.5ifmultiple boundary conditions are attempted withanimproper subset. GPFDRcalculates thegridpointforcebalance (OGPFB1) andelement strainenergy (ONRGyl) forrequested sets. OFPformats thetablesprepared byGPFDRandplacesthemonthesystemoutputfilefor printing. GotoDMAPNo.108ifnomultipoint constraint forcebalance isrequested. EQMCKcalculates theforceandmoment equilibrium checkandprepares themultipoint constraint forcebalance (OQMl)foroutput. !dFPformats thetableprepared byEQMCKandplacesitonthesystemoutputfilefor printing. SDR2calculates theelement forces(!3EFI)andstresses (PES1)andprepares loadvectors (OPGl), displacement vectors (OUGVl) andsingle-point forcesofconstraint (OQGl)foroutput andtranslation components ofthedisplacement vectors (PUGV1). GotoDMAPNo.112ifelement stresses inmaterial coordinate systemandstresses atthe connected gridpointsarenottobecalculated. CURVcalculates element stresses inmaterial coordinate system(!JESIM) andstresses atthe connected gridpoints(9ES1G). GotoDMAPNo.118ifelement strains/curvatures arenottobecalculated. SDR2calculates element strains/curvatures (!i3ESlA). GotoDMAPNo.118ifelement strains/curvatures inmaterial coordinate systemand strains/curvatures attheconnected gridpointsarenottobecalculated. CURVcalculates element strains/curvatures inmaterial coordinate system (OESIAM) and strains/curvatures attheconnected gridpoints(!JESIAG). GotoDMAPNo.137iftherearenorequests foroutputsortedbygridpointnumberor element number. SDR3prepares requested outputsortedbygridpointnumberofelement number. GotoDMAPNo.128ifprinted outputsortedbygridpointnumberorelement numberisnot required. @tPformats thetablesprepared bySDR3foroutputsortedbygridpointnumberorelement numberandplacesthemonthesystemoutputfileforprinting. 2.1-13(05/30/86)I\n1 DISPLACEMENT RIGIDFORMATS 125. 126, 127, 129. 130. 131. 133. 134. 135. 136. 139. 140. 141. 142. 144. 145. 146. 147. 149. 150. 151. 154, 155. 156, 158. 160. 162,SCANexamines theelement stresses andforcescalculated bySDR3andgenerates scanned outputthatmeetsthespecifications setbytheuser. OFPformats thescanned outputtableprepared bySCANandplacesitonthesystemoutput fileforprinting. GotoDMAPNo.132. 13FPformats thetablesprepared bySDR2foroutputsortedbysubcase numberandplacesthem onthesystemoutputfileforprinting. SCANexamines theelement stresses andforcescalculated bySOR2andgenerates scanned outputthatmeetsthespecifications setbytheuser. @FPformats thescanned outputtableprepared bySCANandplacesitonthesystemoutput fileforprinting. 13FPformats thetablesprepared byCURVandSDR2foroutputsortedbysubcase numberand placesthemonthesystemoutputfileforprinting. XYTRANprepares theinputforrequested X-Yplots. XYPL13Tprepares therequested X-Yplotsofdisplacements, forces, stresses, loadsand single-point forcesofconstraint vs.subcase. GotoDMAPNo. 148. GotoDMAPNo.143ifthereisnophasetwoproperty optimization. 0PTPR2performs phasetwoproperty optimization. Equivalence EST1toESTand0PTP2toOPTP1. GotoDMAPNo.153ifnoadditional outputistobeprinted forthisloop. OFPformats thetablesprepared bySDR2foroutputsortedbysubcase numberandplacesthem onthesystemoutputfileforprinting. SCANexamines theelement stresses andforcescalculated bySDR2andgenerates scanned outputthatmeetsthespecifications setbytheuser. OFPformats thescanned outputtableprepared bySCANandplacesitonthesystemoutput fileforprinting. !3FPformats thetablesprepared byCURVandSDR2foroutputsortedbysubcase numberand placesthemonthesystemoutputfileforprinting. GotoDMAPNo. PLOTgenerates PRTMSGprints generated. Goto Goto Goto Print Print PrintDMAPNo. DMAPNo. DMAPNo.152ifnodeformed structure plotsarerequested. allrequested deformed structure andcontour plots. plotter data,engineering data,andcontour dataforeachdeformed 167andmakenormalexitifproperty optimization iscomplete. 32ifadditional loopsforproperty optimization areneeded. 167andmakenormalexit. ErrorMessage No.1andterminate execution. ErrorMessage No.2andterminate execution. ErrorMessage No,3andterminate execution. 2.1-14(05/30/86,plot\nSTATICANALYSIS 164.PrintErrorMessage No.4andterminate execution. ●166.PrintErrorMessage No.5andterminate execution. 170.C0MP$3Ncausesthe!3MAPcompiler toskipthecompilation ofal through LABELLBLINTOI (DMAPNos.171through 223,notshown (seeNoteatthebeginning ofthissection).ofthefollowing instructions asthep~rameter SYS21isO 2.1-15(05/30/86)\nDISPLACEMENT RIGIDFORMATS 2.1.3OutputforStaticAnalysis Thefollowing printed output, sortedbyloads(S9RT1) orbygridpointnumberorelement number(S!dRT2), mayberequested forStaticAnalysis solutions: 1.Displacements andcomponents ofstaticloadsandsingle-point forcesofconstraint at selected gridpointsorscalarpoints. 2.Forcesandstresses inselected elements. 3.Strains/curvatures inselected elements (onlyforTRIA1, IRIA2,QUAD1andQUAD? elements). Thefollowing plotter outputmayberequested: 1.Undeformed anddeformed plotsofthestructural model. 2.Contour plotsofstresses anddisplacements. 3.X-Yplotofanycomponent ofdisplacement, staticload,orsingle-point forceof constraint foragridpointorscalarpointversussubcase. 4.X-Yplotofanystressorforcecomponent foranelement versussubcase. 2.1.4CaseControl DeckforStaticAnalysis Thefollowing itemsrelatetosubcase definition anddataselection forStaticAnalysis: 1.Aseparate subcase mustbedefined foreachuniquecombination ofconstraints andstatic loads. 2.Astaticloading condition mustbedefined for(notnecessarily within) eachsubcase withaLOAD,TEMPERATURE(L!3AD), orDEF!3RMselection unlessallloading isspecified with gridpointdisplacements onSPCcards. 3.AnSPCsetmustbeselected for(notnecessarily within) eachsubcase, unlessthemodel isaproperly supported freebody,orallconstraints arespecified onGRIOcards, ScalarConnection cards,orwithGeneral Elements. 4,Loading conditions associated withthesamesetsofconstraints shouldbeincontiguous subcases inordertoavoidunnecessary looping. 5.REPCASE maybeusedtorepeatsubcases inordertoallowmultiple setsofthesame outputitem. 2.1.5Parameters forStaticAnalysis Thefollowing parameters areusedinStaticAnalysis: 2.1-16(05/30/86)\n1. 2. 3. 4. 5. 6. 7. 8. 9.STATIC ANALYSIS ASET@UT -optional. Apositive integer valueof——— datiiblocktobegenerated bytheGP4module. Athisparameter causestheASEToutput negative integf;r vdlueorOsuppresses thegeneration ofthisoutputdatablock. Thedefault valueisO. AUTffSPC -reserved forfutureoptional use.Thedefault valueis-1...___ C@UPMASS -CPllAR,CPRf)D,CPQUAD1, CPQUAD2, CPTRIA1, CPTRIA2, CPTUBE, CPQDPLT, CPTRPLT, CPTRBSC -optional. Theseparameters causethegeneration ofcoupled massmatrices ratherthanlumpedmassmatrices forallbarelements, rodelements, andplateelements thatinclude bending stiffness. GRDEQ-optional. Apositive integer valueofthisparameter selects thegridpoint—— aboutwhichequilibrium willbechecked fortheCaseControl outputrequest, MPCFf3RLt. Iftheinteger valueiszero,thebasicoriginisused.Thedefault valueis-1. GRDPNT-optional. Apositive integer valueofthisparameter causestheGridPoint WeightGenerator tobeexecuted andtheresulting weightandbalance information tobe printed. INTERACT -optional. Thisparameter,—— whentheprimary purpose oftheuserliketheSYS21parameter, isofrelevance only istomakeinteractive restart runs.Insucha case,theinteger vlueofthisparameter mustbesetto-1(viaaPARAMbulkdatacard) inbotht.hcbi}thcheckpoint run(thatprecedes theinteractive restart run)aswellas intheinteractive rest.~rt run.Ifnotsospecified viaaPARAMbulkdatacard,the CJ3MP(CIFF andC@MPONinstructions intheDMAPsequence thatusethisparameter assumea valueofOforthisparameter (seeVolumeI,Section 5.7). jRES-optional. Apositive integer valueofthisparameter causestheprinting ofthe residual vectors following eachexecution oftheSSG3module. ~INTPTS -optional. Apositive integer valueofthisparameter specifies thenumberof closest independent pointstobeusedintheinterpolation forcomputing stresses or strains/curvatures atgridpoints(onlyforTRIA1,TRIA2,QUAD1andQUAD2elements). A negative integer valueorOspecifies thatallindependent pointsaretobeusedinthe interpolation. Thedefault valueisO. (4PT-optional. Apositive integer valueofthisparameter causesbothequilibrium and multipoint constraint forcestobecalculated fortheCaseControl outputrequest, MPCF@RCE, Anegative integer valueofthisparameter causesonlytheequilibrium force balance tobecalculated fortheoutputrequest. Thedefault valueisOwhichcauses onlythemultipoint constraint forcestobecalculated fortheoutputrequest. 2.1-17(05/30/86)\n10. 11, 12. 13. 14. 15,STRAIN-optional. ThisDISPLACEMENT RIGIDFORMATS parameter controls thetransformat onofelement strains/curvatures tothematerial coordinate system(onlyforTRIA1,TRIA2,QUAD1and QUAD2elements). Ifitisapositive integer, thestrains/curvatures fortheseelements aretransformed tothematerial coordinate system. Ifitiszero,strains/curvatures at theconnected gridpoints arealsocomputed inaddition totheelement strains/curvatures inthematerial coordinate system. Anegative integer vtilueresults innotransformation ofthestrains/curvatures. Thedefault valueis-1. STRESS-optional. Thisparameter controls thetransformation ofelement stresses to thematerial coordinate system(onlyforTRIA1,TRIA2,QUAD1andQUAD2elements). Ifit isapositive integer, thestresses fortheseelements aretransformed tothematerial coordinate system. Ifitiszero,stresses attheconnected gridpointsarealso computed inaddition totheelement stresses inthematerial coordinate system. A negative integer valueresults innotransformation ofthestresses. Thedefault value is-1, SURFACE -optional. Thecomputations oftheexternal surface areasforthe—— two-dimensional andthree-dimensional elements areactivated bythisparameter whenthey aregenerated intheEMGmodule. Theresults aremultiplied bytherealvalueofthis parameter. Seethedescription underthePARAMbulkdatacardfordetails. SYS21-optional. Thisparameter, liketheINTERACT parameter, isofrelevance only whentheprimary purpose oftheuseristomakeinteractive restart runs.Insucha case,theinteger valueofthisparameter mustbesetto-1(viaaPARAMbulkdatacard) intheinteractive restart run(thatfollows abatchcheckpoint run).Ifnot so specified viaaPARAMbulkdatacard,theCOMPOFF andCOMPONinstructions intheDMAP sequence thatusethisparameter assumeavalueofOforthisparameter (seeVolumeI, Section 5.7). VOLUME-optional. Thevolumecomputations forthetwo-dimensional and three-dimensional elements areactivated bythisparameter whentheyaregenerated in theEMGmodule. Theresults aremultiplied bytherealvalueofthisparameter. See thedescription underthePARAMbulkdatacardfordetails. WTMASS-optional. Thetermsofthemassmatrixaremultiplied bytherealvalueof—-. thisparameter whentheyaregenerated intheEMAmodule. 2.1-18(05/30/86)\nSTATICANALYSIS 2.1.6Automatic ALTERsforAutomated Multi-stage Substructuring Thefollowing lines substructure analyses. Phase1:5,56,oftheStaticAnalysis, RigidFormat1,areALTERed forautomated 78-85,87-153 Phase2:5,11-11,14-24,28-29,35-35,49-52,59-64,103-153 Phase3:78-85,88-95,96 IfAPPDISP,SU8Sisused,theusermayalsospecify ALTERs. However, thesemustnot interfere withtheautomatically generated DMAPstatement ALTERslistedabove. SeeVolumeI, Section 5.9foradescription andlisting oftheALTERswhichareautomatically generated for substructuring. 2.1.7RigidFormatErrorMessages fromStaticAnalysis Thefollowing fatalerrorsaredetected bytheDMAPstatements intheStaticAnalysis rigid format. Thetextforeacherrormessage isgivenbelowincapital letters andisfollowed by additional explanatory material, including suggestions forremedial action. STATICANALYSIS ERRORMESSAGE NO.1-ATTEMPT TOEXECUTE MORETHAN360L!30PS. Anattempt hasbeenmadetousemorethan360different setsofboundary conditions ormorethan 360passesintheoptimization loophavebeenattempted. Thisnumbermaybeincreased byALTERing theREPTinstruction following SDR1intheformercaseandtheREPTinstruction following thelast PRTMSGinstruction inthelattercase. STATICANALYSIS ERRklRMESSAGE NO.2-MASSMATRIXREQUIRED FORWEIGHTANDBALANCE CALCULATIONS, Themassmatrixisnullbecause eithernoelements weredefined withConnection cards, nonstructural masswasnotdefined onaProperty card,orthedensity wasnotdefined onaMaterial card. STATICANALYSIS ERRORMESSAGE NO.3-NOINDEPENDENT DEGREES OFFREEDOM HAVEBEENDEFINED. Eithernodegrees offreedom havebeendefined onGRID,SP131NTorScalarConnection cards,orall defined degrees offreedom havebeenconstrained bySPC,MPC,SUP@RT, OMITorGRDSETcards,or grounded onScalarConnection cards. STATICANALYSIS ERRORMESSAGE N@.4-NOELEMENTS HAVEBEENDEFINED. Noelements havebeendefined witheitherConnection cardsorGENELcards. STATICANALYSIS ERRORMESSAGE NO.5-ALOOPING pROBLEM RUNONANON-LOOpING SUBSET. Aproblem requiring boundary condition changes wasrunonsubset1or3.Theproblem shouldbe restarted onsubsetO. 2.1-19(05/30/86)\nDISPLACEMENT RIGIDFORMATS 2.1-20(05/30/86)\nDISPLACEMENT RIGIDFORMATS 2.2STATICANALYSIS WITHINERTIA RELIEF 2.2.1DMAPSequence forStaticAnalysis WithInertia Relief RIGIDFORMATDMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 2 LEVEL2.oNASTRAN DMAPCOMPILER -SOURCE LISTING OPTIONS INEFFECT GO ERR=2 LIST NOOECK NOREF NOOSCAR\n1BEGIN 2PRECHK 3FILE 4PARAM 5GPI 6PLTTRAN 7GP2 8PARAML 9PURGE 10COND ?1PLTSET 12PRTMSG 13PARAM lkPARAN 15COND 16PLOT 17PR’TMSG 8LABEL 19GP3 20TA1 21CONDDISP02 -STATIC ANALYSIS WITHINERTIA RELIEF -APR.1986$ ALL$ QG=APPENO/PGG=APPEND/UGV=APPEND/GMESAVE/KNN=SAVE/MNN=SAVE $ //MPY/CARDNO/O/O $ GEOMl,GEOM2,/GPL,EQEXIN,GPDT,CSTM, BGPOT,SIL/S,N,LUSET/ NOGPDT/ALWAYS=-l $ BGPDT,SIL/BGPOP,SIP/LUSET/S,N, LUSEP$ GEoM2,EQExlN/EcT $ PCDB//~PREs*////JuMppLoT $ PLTSETX,PLTP.4R,GPSETS,ELSETS/JUHPPLOT $ P1,JUMPPLOT $ PCOB,EQEXIN,ECT/PLTSETX,PLTPAR,GPSETS ,ELSETS/S,N,NSIL/ S,N,JUMPPLOT S PLTSETX// $ //*Mpy,/pLTFLG/i/l $ //*MPvf/PFILE/O/O $ P1,JUMPPLOT $ PLTPAR,GPSETS, ELSETS,CASECC, BGPDT,EQEXIN,SIL,,ECT,,/PLOTXl/ NSIL/LUSET/S,N,JUMPPLOT/S,N ,PLTFLG/S,N,PFILE $ PLOTX1// $ PI$ GEoM3.EQExlN,GEoM2/sLT$GpTT/NoGRAv $ ECT,EPT,BGPDT,SIL,GPTT,CSTM/EST ,GEl,GPECT,,/ LUSET/S,N,NOSIMP/l/S,N,NOGENL/S .N,GENEL $ ERROR6,NOSIMP $ 2.2-1(05/30/86)\nDISPLACEMENT RIGIDFORMATS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 2 LEVEL2.0NASTRAN OMAPCOMPILER -SOURCE LISTING 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 4kPURGE PARAM PARAM EMG PURGE COND EMA LABEL COND EMA COND GPWG OFP LABEL EQUIV COND SMA3 LABEL PARAM LABEL GP4 COND CONDOGPST/GENEL $ //ADD /NoKGGx/l /o$ //ADD/NoMGG/l/o $ EST,CSTM,MPT,DlT,GEOM2,/KELM, KDICT,MELM,MDICT,,,/S,N,NOKGGX/ S,N,NOMGG////C,Y,COUPMAC,/C, Y,CPBAR/ c,Y,cPRoD/c,Y,cPQuAol/c,Y,cPQuAD2/c, Y,cPTRIA1/c,Y,cPTRlA2/ C,Y,CPTUBE/C,Y,CPQOPLT/C,Y,CPTRPLT/C,Y, CPTRBSC/ V,Y,VOLUME/V,Y,SURFACE $ KGGX,GPST/NOKGGX $ JMPKGG,NOKGGX $ GPECT,KDICT,KELM/KGGX,GPST $ JMPKGG $ ERROR1,NOMGG $ GPECT,MDICT,MELM/MGG,/-l/C,Y,WTMASS=l .0$ LGPWG,GRDPNT $ BGPDP,CSTM,EQEXIN,MGG/OGPWG/V, Y.GROPNT=-I/C.Y.WTMASS $ OGPWG,,,,,//S!N,CARDNO $ LGPWG$ KGGX,KGG/NOGENL $ LBL1lA,NOGENL $ GEl,KGGX/KGG/LUSET/NOGENL/NOS lMP$ LBLIIA $ //Mpy/NsKIp/o/o $ LBLII$ CASECC,GEOM4,EQEXIN,GPDT,BGPDT ,CSTM,GPST/RG,YS,USET,ASET/ LUSET/S,N,MPCFl/S,N,MPCF2/S ,N,SINGLE/S,N,OMIT/S,N,REACT/ S,N,NSKIP/S,N,REPEAT/S,N,NOSET/S, N,NOL/S,N,NOA/C,Y,ASETOUT/ S,Y,AUTOSPC $ ERROR3,NOL $ ERROR4,REACT $ 2.2-2(05/30/86)\nSTATICANALYSIS WITHINERTIA RELIEF eRIGIDFORMAT OMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 2 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING k5PURGE k6 k7 48 49 50 51 52 53 54CONO PARAH CONO GPSP OFP LABEL EQUIV CONO NCE1 55MCE2 56LABEL 57EQUIV 58 59 60 61 62 63 64 65 66 67 68 69COND SCE1 LABEL EQUIV COND SMP1 LABEL RBMG1 RBMG2 RBMG3 RBMG4 SSG1GM/MPCFl/GO,KOO,LOO,MOO,MOA, PO,UOOV,RUOV/OMIT/KSS,KFS, PS/ SINGLE $ LBL4,GENEL $“ //EQ/GPSPFLG/AUTOSPC/O $ LBLk,GPSPFLG $ GPL,GPST,USET,SIL/OGPST/S,N,NOGPST $ OGPST,,,,,//S,N,CARDNO $ LBL4$ KGG,KNN/MPCFl/MGG,MNN/MPCFl $ LBL2,MPCF2 $ USET,RG/Gll $ USET,GM,KGG,MGG,,/KNN,MNN, ,$ LBL2s KNN,KFF/SINGLE/MNN,MFF/SINGLE $ LBL3,SINGLE $ USET,KNN,MNN,,/KFF,KFS,KSS,MFF ,,$ LBL3$ KFF,KAA/OMIT/ MFF,MAA/OMIT $ LBL5,0MIT $ USET,KFF,MFF,,/GO,KAA,KOO, LOO,MAA,MOO,MOA, ,$ LBL5$ USET,KAA,MAA/KLL,KLR,KRR,MLL,MLR,MRR s KLL/LLL $ LLL,KLR,KRR/DM $ DM,MLL,MLR,MRR/MR $ SLT,BGPOT,CSTM,SIL,EST,MPT, GPTT,EDT,MGG,CASECC,DIT,/PG, ,,,/ LUSET/NSKIP $ 2.2-3(05/30/86)\nDISPLACEMENT RIGIDFORMATS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 2 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 70SSG2 71SSGk 72ssG3 73COND 74MATGPR 75MATGPR 76LABEL 77SOR1 78CONO 79REPT 80JUMP 81PARAM 82COND 83LABEL 84CDND 85EQMCK 86OFP 87LABEL 88SDR2 89OFP 90SCAN 91OFP 92coNo 93PLOTUSET,GM,YS,KFS,GO,DM,PG/QR,PO,PS, PL$ PL,QR,PO,MR,MLR,OM,MLL,MOO,MOA,GO,USET/pL I,pO~/OMT $ LLL,KLL,PLl,LOO,KOO,POl/ULV, UOOV,RULV,RUOV/OMIT/V,Y, lRES=-1/NSKIP/S,N,EPSl $ LBL9,1RES $ GPL,USET,SIL,RULV//L $ GPL,USET,SIL,RUOV//O $ LBL9$ USET,PG,ULV,UOOV,YS,GO,GM,PS ,KFS,KSS,QR/UGV,PGG,QG/NSKIP/ sTATlcs $ LBL8,REPEAT $ LBL1l,360$ ERROR2 $ //*NoTf\u003c/TEsT/REpEAT $ ERROR5,TEST $ LBL8$ NOMPCF,GRDEQ $ CASECC, EQEXIN,GPL,BGPDT,SIL, USET,KGG,GM,UGV,PGG,QG,CSTM/ OQMl/V,Y,OPT=O/V,Y,GRDEQ/NSK 1P$ OQMl,,,,,//S,N,CARDNO $ NDMPCF $ CASECC,CSTM,MPT,DIT,EQEXIN, SIL,GPTT,EDT,BGPDP, ,QG,LIGV, EST,,PGG/ OPG1,OQG1,OUGV1,OESI,OEF1, PUGV1/fSTATICS\u003c $ OUGVl,OPGl,OQGl,OEFl,OESl,//S,N ,CARDNO $ CASECC,OESl,OEF1/OESFl/*RF~: $ OESF1,,,,,//S,N,CARDNO $ P2,JUMPPLOT $ PLTPAR,GPSETS, ELSETS,CASECC, BGPOT,EQEXIN,S IP,PUGV1, ,GPECT,OES 1/ PLOTX2/NSlL/LUSEP/JUMPPLOT/PLTFLG/S,N,PF ILE$ 2.2-4(05/30/86)"},"title":"User's Manual P3"},"/docs/users/users_manual_004/":{"data":{"":"STATICANALYSIS WITHINERTIA RELIEF eRIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIOFORMAT 2 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 94PRTMSG PLoTx2// $ 95LABEL P2$ g6JUMP FINIS$ 97LABEL ERROR]$ 98PRTPARM //-1/lNERTIA $ 99LABEL ERROR2$ 100PRTPAR!4 //-2/lNERTIA $ 101LABEL ERROR3 $ 102PRTPARM //-3/lNERTIA~’r $ 103LABEL ERROR4 $ 104PRTPARM //-4/lNERTIA $ m105LABEL ERROR5 $ 106PRTPARM //-5/\u003e~lNERTIA $ 107LABEL ERROR6 s 108PRTPARM //-6/:\u003clNERTIA~~ $ 109LABEL FINIS$ 110PURGE DUM!4Y/ALWAYS $ 111END $ 2.2-5(05/30/86)\nDISPLACEMENT RIGIDFORMATS 2.2,2Description ofImportant DMAPOperations forStaticAnalysis withInertia Relief 5,GP1generates coordinate systemtransformation matrices, tablesofgridpointlocations, and tablesrelating theinternal andexternal gridpointnumbers.a 6.PLTTRAN modifies special scalargridpointsintheBGPDTandSILtables. 7.GP2generates Element Connection Tablewithinternal indices, 10,GotoDMAPNo.18iftherearenostructure plotrequests, 11.PLTSETtransforms userinputintoaformusedtodrivethestructure plotter. 12.PRTMSGprintserrormessages associated withthestructure plotter. 15.GotoDMAPNo.18ifnoundeformed structure plotsarerequested, 16.PL17Tgenerates allrequested undeformed structure plots. 17.PRTMSGprintsplotter dataandengineering dataforeachundeformed plotgenerated. 19.GP3generates StaticLoadsTableandGridPointTemperature Table. 20.TA1generates element tablesforuseinmatrixassembly andstressrecovery. 21.GotoDMAPNo.107andprintErrorMessage No.6iftherearenostructural elements. 25,EMGgenerates structural element stiffness andmassmatrixtablesanddictionaries forlater assembly bytheEMAmodule. 27.GotoDMAPNo.’29ifnostiffness matrixistobeassembled. 28.EMAassembles stiffness matrix[K\u0026]andGridPointSingularity Table. 30.GotoDMAPNo.97andprintErrorMessage No,1ifnomassmatrixistobeassembled. 31.EMAassembles massmatrix[Mgg]. 32.GotoDMAPNo.35ifnoweightandbalance information isrequested. 33.GPWGgenerates weightandbalance information. 34.@FPformats theweightandbalance information prepared byGPWGandplacesitonthesystem outputfileforprinting. 36.Equivalence [Kg]to[Kgg]ifnogeneral elements exist. 37.GotoDMAPNo.39ifnogeneral elements exist, 38.SMA3addsgeneral elements to[Kg]toobtainstiffness matrix[Kgg]. 41.Beginning ofloopformultiple constraint sets. 42.GP4generates flagsdefining members ofvarious displacement sets(USET), formsmultipoint constraint equations [Rg]{ug} =Oandformsenforced displacement vector{Ys}. 43.GotoDMAPNo.10land printErrorMessage No.3ifnoindependent degrees offreedom are defined. 44.GotoDMAPNo.103andprintErrorMessage No.4ifnofree-body supports exist. 46.GotoDMAPNo.51ifgeneral elements arepresent. 2.2-6(05/30/86)\nSTATICANALYSIS WITHINERTIA RELIEF 48. 49. 50. 52. 53. 54. 55. 57. 58. 59. 61. 62. 63.GotoDMAPNo.51ifnopotential gridpointsingularities exist. GPSPgenerates atableofpotential gridpointsingularities. !3FPformats thetableofpotential gridpointsingularities prepared byGPSPandplacesit onthesystemoutputfileforprinting. Equivalence [Kgg]to[Knn]and[Mgg]to[Mnn]ifnomultipoint constraints exist. GotoDMAPNo.56iftheMPCsetforthecurrent passisunchanged fromthatoftheprevious pass. MCEIpartitions multipoint constraint equations [Rgl=[RmRnl andsolvesfor . multipoint constraint transformation matrix[Gm]=-[Rm]-l[Rn]. MCE2partitions stiffness andmassmatrices andperforms matrixreductions [Knn]=[iinn]+[G$[\\nl +[nl[Gml +[Gl[$JIGml and [Mnn]=[;nn]+[Gj[Mmnl +[M;nl[Gml +[G;IIMJIGMI. Equivalence [Knnlto[Kff]and[Mnnlto[Mff]ifnosin91e-Point constraints exist” GotoDMAPNo.60ifnosingle-point constraints exist. SCE1partitions outsingle-point constraints [1‘ff’‘fs[Knn]=–+–and [1[Mnn]=‘ff‘fs ‘SfI‘ss ‘SfI‘ss Equivalence [Kff]to[Kaaland[Mff]to[Maalifnoomitted GOtoDMAPNo.64ifnoomitted coordinates exist. SMP1partitions constrained stiffness [1lKao [Kffl =~~K– and oa00 solvesfortransformation matrix[Go]andmassmatrices IMIMao [Mff]=\u0026a+— ‘oa1’00 L. coordinates exist. =-[Koo]-l[Koa] andperforms matrixreductions [Kaal=[iaal+[Kal[Gol 2.2-7(05/30/86)\nDISPLACEMENT RIGIDFORMATS and 65.RBMG1 66.RBMG2 67.RBMG3[Maa]❑ [;aa]+[Ma][Go] +[G][Moa] +[G~][Moo][Go] . partitions outfree-body supports decomposes constrained stiffness matrix[Klg]=[LIL][ULL], formsrigidbodytransformation matrix [D]=-[KLl]-l[Kir] , calculates rigidbodycheckmatrix [X]=[Krr]+[K:r][D] andcalculates rigidbodyerrorratio =x l-l-%Krr 68.RBMG4formsrigidbodymassmatrix [mr]=[Mrr]+[Mrl[Dl +[DTl[MLrl +[DTIIMLLIIDI. 69.SSG1generates staticloadvectors {Pg}. 70.SSG2applies constraints tostaticloadvectors HEn{Pg}= —– ,{Pnl={~n}+[G:]{Pm}, Pm 11‘f{Pn}’ —– ,{Pf}={Pf}-[Kfs]{ys} , P5 [1ia {Pf}= —– ,{Pa}={Pa}+[G;]{PO}, P. HP {Pa}=—L- Pr andcalculates determinate forcesofreaction {qr}=-{Pr}-[DT]{Pi}. 2.2-8(05/30/86)\n71. 0 72, 73. 74. 75. 77.SSG4calculates inertiaSTATICANALYSIS WITHINERTIA RELIEF loadsandcombines therewith staticloads (‘E‘r)and{P]I={Pil+[M][D]+[M][mr]-l{qr} ‘p:’={’o’+~“J[GJ+[MqH“[mr]-’{qr’SSG3solvesfordisplacements ofindependent coordinates {uL}=[KLL]-l{P:} , solvesfordisplacements ofomitted coordinates {u:}=[Kool-b) , calculates residual vector (RULV)andresidual vector errorratioforindependent coordinates {u:}{dP:} ‘L= {P:} andcalculates residual vector(RUOV)and coordinates {6P;}={P:}- -r{Ui} residual vectorerrorratioforomitted Koo]{U:}, {U:}{6P:} F. -0 GotoDMAPNo.76ifresidual vectors MATGPRprintstheresidual vectorfor MATGPRprintstheresidual vectorfor SDR1recovers dependent displacementsarenottobeprinted. independent coordinates (RULV). omitted coordinates (RUOV). H‘L={u,{uo}=[Go]{ua} +{u:}\u003e –u;a HUa NUf ——={Uf},——. {Un}, Y5‘o uUn {um}=[Gm]{un} ,––={Ugl urn 2.2-9(05/30/86)\n78. 79. 80. 82. 84. 85. 86. 88. 89. 90. 91. 92. 93. 94. 96. 98. 100. 102. 104. 106. 108.DISPLACEMENT RIGIDFORMATS andrecovers single-point forcesofconstraint {q5}=-{P51+[K;~]{Uf}+[Kss]{Ys}. GotoDMAPNo,83ifallconstraint setshavebeenprocessed. GotoDMAPNo.41ifadditional setsofconstraints needtobeprocessed. GotoDMAPNo.99andprintErrorMessage No.2asthenumberofconstraint setsexceeds 360. GotoDMAPNo.105andprintErrorMessage No.5ifmultiple boundary conditions are attempted withanimproper subset. GotoDMAPNo.87ifnomultipoint constraint forcebalance isrequested. EQMCKcalculates theforceandmomentequilibrium checkandprepares themultipoint constraint forcebalance (OQMl)foroutput. OFPformats thetableprepared byEQMCKandplacesitonthesystemoutputfilefor printing. SDR2calculates element forces(OEFl)andstresses (13ES1)andprepares loadvectors (f3PGl), displacement vectors (OUGVl), andsingle-point forcesofconstraint (k3QGl)foroutputand translation components ofthedisplacement vector(PUGV1). !3FPformats thetablesprepared bySDR2andplacesthereon thesystemoutputfilefor printing. SCANexamines theelement stresses andforcescalculated bySDR2andgenerates scanned outputthatmeetsthespecifications setbytheuser. OFPformats thescanned outputtableprepared bySCANandplacesitonthesystemoutput fileforprinting. GotoDMAPNo. PLOTgenerates PRTMSGprints generated. GotoDMAPNO.95ifnodeformed structure plotsarerequested. allrequested deformed structure andcontour plots. plotter data,engineering data,andcontour dataforeachdeformed plot 109andmakenormalexit. PrintErrorMessage No.1andterminate execution. PrintErrorMessage No.2andterminate execution. PrintErrorMessage No.3andterminate execution. PrintErrorMessage No.4andterminate execution. PrintErrorMessage No.5andterminate execution. PrintErrorMessage No.6andterminate execution. 2.2-10(05/30/86)\nSTATICANALYSIS WITHINERTIA RELIEF 2.2.3OutputforStaticAnalysis withInertia Relief The 1. 2. 3. 4. 5. The 1. 2.following output mayberequested forStatic Analysis withInertia Relief: Displacements atselected gridpoints duetothesumoftheapplied loadsandthe inertia loads. Nonzero components oftheapplied static loadsatselected gridpoints. Reactions onfree-body supports duetoapplied loads (single-point forces of constraint). Forces andstresses inselected elements duetothesumof 1oads. Scanned outputofforcesandelements inselected elements. following plotter outputmayberequested: Undeformed anddeformed plotsofthestructural model. Contour plotsofstresses anddisplacements.theapplied loadsandinertia 2.2.4CaseControl DeckforStaticAnalysis withInertia Relief Thefollowing itemsrelatetosubcase definition anddataselection forStaticAnalysis with Inertia Relief: 1. 2. 3, 4. 5.Aseparate subcase mustbedefined foreach loads. Astaticloading condition mustbedefined withaLllADselection.uniquecombination ofconstraints andstatic for(notnecessarily within) eachsubcase AnSPCsetmaybeselected onlyifusedtoremovegridpointsingularities orsome,but notall,ofthefreebodymotions. Atleastonefreebodysupport mustbeprovided with aSUPORTcardintheBulkDataDeck. Loading conditions associated withthesamesets subcases inordertoavoidunnecessary looping. REPCASE maybeusedtorepeatsubcases inorder outputitem. 2.2.5Parameters forStaticAnalysis withInertia Reliefofconstraints shouldbeincontiguous toallowmultiple setsforthesame Thefollowing parameters areusedinStaticAnalysis withInertia Relief: 2.2-11(05/30/86)\n1. 2. 3. 4. 5. 6. 7. 8. 9. 10.DIsPLACEMENT RIGIDFORMATS ASETliMJT -optional. Apositive integer valueofthisparameter causestheASEToutput datablocktobegenerated bytheGP4module. Anegative integer valueorOsuppresses thegeneration ofthisoutputdatablock. Thedefault valueis(). AUT~SPC -reserved forfutureoptional use.Thedefault valueis-1. CfJUPMASS -CPBAR,CPR@D,CPQUAD1, CPQUAD2, CPTRIA1, CPTRIA2, CPTUBE, CPQDPLT, CPTRPLT, CPTRBSC -optional. Theseparameters causethegeneration ofcoupled massmatrices ratherthanlumpedmassmatrices forallbarelements, rodelements, andplateelelllents thatinclude bending stiffness. GRDEQ-optional. Apositive integer valueofthisparameter selects thegridpoint aboutwhichequilibrium willbechecked fortheCaseControl outputrequest, MPCF@RCE. Iftheinteger valueiszero,thebasicoriginisused.Thedefault valueis-1. GRDPNT-optional. WeightGenerator to printed, IRES-optional. AApositive integer valueofthisparameter causestheGridPoint beexecuted andtheresulting weightandbalance information tobe positive integer valueofthisparameter causestheprinting ofthe residual vectors following theexecution oftheSSG3module. 13PT-optional. Apositive integer valueofthisparameter causesbothequilibrium and multipoint constraint forcestobecalculated fortheCaseControl outputrequest, MPCFfJRCE. Anegative integer valueofthisparameter causesonlytheequilibrium force balance tobecalculated fortheoutputrequest. Thedefault valueisOwhichcauses onlythemultipoint constraint forcestobecalculated fortheoutputrequest. SURFACE -optional. Thecomputations oftheexternal surface areasforthe two-dimensional andthree-dimensional elements areactivated bythisparameter whenthey aregenerated intheEMGmodule. Theresults aremultiplied bytherealvalueofthis parameter. Seethedescription underthePARAMbulkdatacardfordetails. VOLUME -optional. Thevolume computations forthetwo-dimensional and three-dimensional elements areactivated bythisparameter whentheyaregenerated in theEMGmodule. Theresults aremultiplied bytherealvalueofthisparameter. See thedescription underthePARAMbulkdata WTMASS-optional. Thetermsofthemass thisparameter whentheyaregenerated incardfordetails. matrixaremultiplied bytherealvalueof theEMAmodule. 2.2-12(05/30/86)\nSTATICANALYSIS WITHINERTIA RELIEF 2.2.6Automatic ALTERsforAutomated Multi-stage Substructurinq aThefollowing linesoftheStaticAnalysis withInertia Relief, RigidFormat2,areALTERed in automated substructure analyses. Phase1:4,44-44,65-68,70-96 Phase2:4,5-5,8-18,21-21,30-30,36-39,46-51,84-98 Phase3:65-68,70-76,77 IfAPPDISP,SUBSisused,theusermayalsospecify ALTERs. However, thesemustnot interfere withtheautomatically generated DMAPstatement ALTLRslistedabove. SeeVolumeI, Section 5,9foradescription andlisting oftheALTERswhichareautomatically generated for substructuring. 2.2.7RigidFormat ErrorMessages fromStatic Analysis withInertia Relief Thefollowing fatalerrorsaredetected bytheDMAPstatements intheStaticAnalysis with Inertia Reliefrigidformat. Thetextforeacherrormessage isgivenbelowincapital letters and isfollowed byadditional explanatory material, including suggestions forremedial action. ●STATICANALYSIS WITHINERTIA RELIEFERRORMESSAGE NO.1-MASSMATRIXREQUIRED FORCALCULATION OF INERTIA Lf!ADS. Themassmatrixisnullbecause eithernoelements weredefined withConnection cards, nonstructural masswasnotdefined onaProperty card,orthedensity wasnotdefined onaMaterial card. STATICANALYSIS WITHINERTIA RELIEFERRORMESSAGE NO.z-ATTEMPT TOEXECUTE MORETHAN360LOllPS. Anattempt hasbeenmadetousemorethan360different setsofboundary conditions. Thisnumber maybeincreased byALTERing theREPTinstruction following SDR1. STATICANALYSIS WITHINERTIA RELIEFERRORMESSAGE ND.3-NoINDEPENDENT DEGREES OFFREED17M HAVE BEENDEFINED. Eithernodegrees offreedom havebeendefined onGRID,SP$31NTorScalarConnection cards,orall defined degrees offreedom havebeenconstrained bySPC,MPC,YJPORT,OMITOrGRDsETcards,Or grounded onScalarConnection cards. STATJCANALYSIS WITHINERTIA RELIEFERRORMESSAGE NO.4-FREE-BODY SUPP@RTS AREREQUIRED. Astatically determinate setofsupports mustbespecified onaSUPklRTcardinordertodetermine therigidbodycharacteristics ofthestructural model. 2.2-13(05/30/86)\nDISPLACEMENT RIGIDFORMATS STATICANALYSIS WITHINERTIA RELIEFERR13RMESSAGE No.5- SUBSET. Aproblem requiring boundary condition changes wasrunon restarted onsubsetO. STATICANALYSIS WITHINERTIA RELIEFERR13RMESSAGE N@.6-ALOOPING PR@BLEM RUNONAN@N-LO@PING subset1or3,Theproblem shouldbe NOSTRUCTURAL ELEMENTS HAVEBEENDEFINED. Nostructural elements havebeendefined withConnection cards, I 2.2-14(05/30/86)\nDISPLACEMENT 2.3NORMALMODESANALYSIS 2.3.1DMAPSequence forNormalModesAnalysis RIGIDFORMATDMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIOFORMAT3RIGIDFORMATS LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING OPTIONS INEFFECT GO ERR-2 LIST NODECK NOREF NOOSCAR\n1BEGIN 2PRECHK 3FILE 4PARA14 5GP1 6PLTTRAN ~GP2 8PARAML 9PURGE 10CONO 11PLTSET 12PRTMSG 13PARAM J4PARAfl 15COND 16PLOT 17PRTMSG 18LABEL 19GP3 20TA1 21CONDDISP03-NORMALMODESANALYSIS -APR.1986$ ALL$ LAMA=APPEND/PHIA=APPEND $ //HPY/CARONO/O/O $ GEOMl,GEDM2,/GPL,EQEXIN,GPDT, CSTM,BGPDT,SIL/S,N,LUSET/ NOGPDT/ALWAYS=-l $ BGPOT,SIL/BGPDP,SIP/LUSET/S,N, LUSEP$ GEoM2,EQExlN/EcT $ PCDB//PRES////JUMPPLOT $ PLTSETX,PLTPAR,GPSETS,ELSETS/JUMPPLOT $ Pl,JU14PPLOT $ PCDB,EQEXIN,ECT/PLTSETX,PLTPAR,GPSETS, ELSETS/S,N,NS(L/ S,N,JUMPPLOT $ PLTSETX// $ //MPY/PLTFLG/l/l $ //MPY/PFILE/O/O $ P1,JUMPPLOT $ PLTPAR,GPSETS,ELSETS,CASECC,BGPDT, EQEXIN,SIL,,ECT,,/PLOTXl/ NSIL/LUSET\\S,N,JUMPPLOT/S,N,PLTFLG/S,N,PF ILE$ PLOTX1//$ P1$ GEoM3,EQExIN,GEom2/,GPTT/NoGRAv $ ECT,EPT,BGPDT,SIL,GPTT,CSTM/EST,GE l,GPECT,,/ LUSET/S,N,NOSIMP/l/S,N,NOGENL/S,N,GENEL $ ERROR4,NOSIMP $ 2.3-1(05/30/86)\nDISPLACEMENT RIGIDFORMATS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 3 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44PURGE PARAII PARAM EMG PURGE CONO EMA LABEL COND EMA COND GPWG OFP LABEL EQUIV COND SMA3 LABEL PARAM GPk COND PURGE CONDOGPST/GENEL $ //AoD/NoKGGx/I/o $ //Aoo/NoMGG/I/o $ EST,CSTM,MPT,DlT,GEOM2,/KELM, KDICT,MELM,MDICT,,,/S,N,NOKGGX/ S,N,NOMGG////C,Y,COUPMAC,Y,,Y, CPBAR/ C,Y,CPROO/C,Y,CPQUADl/C,Y, CPQUAD2/C,Y,CPTRlAl/C,Y,CPTRl A2/ C,Y,CPTUBE/C,Y,CPQOPLT/C,Y, CPTRPLT/C,Y,CPTRBSC/ V,Y,VOLUME/V,Y,SURFACE $ KGGX,GPST/NOKGGX $ JMPKGG,NOKGGX $ GPECT,KDICT,KELM/KGGX,GPST $ JMPKGG $ ERROR1,NOMGG $ GPECT,MDICT,MELM/MGG,/-l/C,Y,WTMASS=l .0$ LGPWG,GRDPNT $ BGPDP,CSTM,EQEXIN,MGG/OGPWG/V,Y,GRDPNT=- l/C,Y,WTMASS $ OGPWG,,,,,//S,N,CARDNO $ LGPWG$ KGGX,KGG/NOGENL $ LBL1l,NOGENL $ GEl,KGGX/KGG/LUSET/NOGENL/NOS IMP$ LBL1l$ //~~MPY*/NSKIP/O/O $ CASECC,GEOM4,EQEXIN,GPDT,BGPOT,CSTM, GPST/RG,YS,USET,ASET/ LUSET/S,N,MPCFl/S,N,MPCF2/S ,N,SINGLE/S,N,OMIT/S,N,REACT/ S,N,NSKIP/S,N,REPEAT/S,N,NOSET/S, N,NOL/S,N,NOA/C,Y,ASETOUT/ S,Y,AUTOSPC $ ERROR3,NOL $ KRR,KLR,DM,MLR,MR/REACT/GM/MPCF l/GO/OMIT/KFS/SINGLE/QG/NOSET $ LBL4,GENEL $ 2.3-2(05/30/86)\nNORMALMODESANALYSIS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 3 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 45PARAM b6COND 47GPSP 48OFP 49LABEL 50EQUIV 51COND 52mcEl 53MCE2 54LABEL 55EQUIV 56COND 57;CE1 58LABEL 59EQUIV 60EQUIV 61COND 62SMP1 63SMP2 64LABEL 65COND 66RBMG1 67RBMG2 68RBMG3 69RBMGk 70LABEL//EQ/GPSPFLG/AUTOSPC/O $ LBL4,GPSPFLG $ GPL,GPST,USET,SIL/OGPST/S,N,NOGPST $ OGPST,, ,,,//S,N,CARDNO $ LBL4$ KGG,KNN/MPCFl/MGG,HNN/t4PCFl $ LBL2,MPCF1 $ USET,RG/GM $ USET,GM,KGG,MGG,,/KNN,HNN, ,$ LBL2$ KNN,KFF/SINGLE/MNN,MFF/SINGLE $ LBL3,SINGI.E $ USET,KNN,MNN,,/KFF,KFS,,MFF ,,$ LBL3$ KFF,KAA/OMIT $ MFF,MAA/OMIT $ LBL5,0MIT $ USET,KFF,,,/GO,KAA,KOO, LOO,,,,,$ USET,GO,MFF/t4AA $ LBL5$ LBL6,REACT $ USET,KAA,MAA/KLL,KLR,KRR,MLL ,MLR,MRR $ KLL/LLL $ LLL,KLR,KRR/OM $ Ofl,FILL,MLR,MRR/MR LBL6$ 2.3-3(05/30/86)\nDISPLACEMENT RIGIDFORMATS RIGIDFORMATOMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT3 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCELISTING DYNAMICS,GPL,SIL,USET/GPLD,S lLD,USETD,,,,,,,EED,EQDYN/ LUSET/LUSETD/NOTFL/NODLT/NOPSDL/NOFRL/ NONLFT/NOTRL/S,N,NOEED//NOUE $ ERROR2,NOEED $ //Hpy/NEIGv/I/-l $ KAA,t4AA,MR,DM,EED,USET,CASECC/LAMA,PH lA,Ml,OEIGS/MODES/ S,N,NEIGV $ OEIGS,,,,,//S,N,CARDNO $ FINIS,NEIGV $ LAMA,,,,,//S,N,CARDNO $ USET,,PHIA,,,GO,GM,,KFS,,/PHIG,,QG/l/REl G$ NOMPCF,GRDEQ $ CASECC,EQEXIN,GPL,BGPDT,SIL, USET,KGG,GM,PHIG,LAMA,QG,CSTM/ OQM1/V,Y,OPT=O/V,Y,GRDEQ/-l $ OQMl,,,,,//S,N,CARDNO $ NOMPCF $ CASECC,CSTM,MPT,DIT,EQEXI N,SIL,,,BGPDP,LAMA,QG,PHI G,EST,,/ ,OQGl,OPHIG,OESl,OEFl,PPHIG/\u003e?RE lG#~$ OPHIG,OQGl,OEFl,OESl,,//S,N, CARDNO $ CASECC,OESl,OEF1/OESFl/RF $ OESF1,,,,,//S,N,CARDNO $ P2,JUMPPLOT $ PLTPAR,GPSETS,ELSETS,CASECC, BGPDT,EQEXIN,SI P,,PPHIG,GPECT,OES 1/ PLOTX2/NSlL/LUSEP/JUMPPLOT/PLTFLG/S ,N,PFILE $ PLOfX2// $ P2$ FINIS$ ERROR1 $71DPD 72COND 73PARA!4 74READ 75OFP 76COND 77OFP 78SDR1 79COND 80EQHCK 81OFP 82LABEL 83SOR2 8kOFP 85SCAN 86OFP 87COND 88PLOT 89PRTflsG 90LABEL 91JUMP 92LABEL 93PRTPARM //-1/MoDES $ 2.3-4(05/30/86)\nNORMALMODESANALYSIS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT3 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCELISTING gh 95 96 97 98 99 100 10I 102LABEL PRTPARM LABEL PRTPARH LABEL PRTPARtl LABEL PURGE ENOERROR2 $ //-2/HODES $ ERROR3 $ //-3/MODES $ ERRORk $ //-b/tIODES $ FINIS$ DUMMY/ALWAYS $ s 2.3-5(05/30/86)\nDISPLACEMENT RIGIDFORMATS 2.3.2 5, 6. 7. 10. 110 12. 15. 16. 17. 19. 20. 21. 25. 27. 28. 30. 31. 32. 33. 34. 36. 37. 38. 41. 42. 44. 46. 47.Description ofImportant DMAPOperations forNormalModesAnalysis GP1generates coordinate systemtransformation matrices, tablesofgridpointlocations, and tablesrelating theinternal andexternal gridpointnumbers. PLTTRAN modifies special scalargridpointsintheBGPDTandSILtables. GP2generates Element Connection Tablewithinternal indices. GotoDMAPNo.18iftherearenostructure plotrequests, PLTSETtransforms userinputintoaformusedtodrivethestructure plotter. PRTMSGprintserrormessages associated withthestructure plotter. GotoDMAPNo.18ifnoundeformed structure plotsarerequested. PL@Tgenerates allrequested undeformed structure plots, PRTMSGprintsplotter dataandengineering dataforeachundeformed plotgenerated. GP3generates GridPointTemperature Table. TA1generates element tablesforuseinmatrixassembly andstressrecovery. GotoDMAPNo.98andprintErrorMessage No.4iftherearenostructural elements. EMGgenerates structural element stiffness andmassmatrixtablesanddictionaries forlater assembly bytheEMAmodule. GotoDMAPNo.29ifnostiffness matrixistobeassembled. EMAassembles stiffness matrix[Kg]andGridPointSingularity Table, GotoDMAPNo.92andprintErrorMessage No.1ifnomassmatrixisto EMAassembles massmatrix[Mgg]. GotoDMAPNo.35ifnoweightandbalance information isrequested. GPWGgenerates weightandbalance information.beassembled. OFPformats theweightandbalance information prepared byGPWGandplacesitonthesystem outputfileforprinting. Equivalence [K\u0026]to[Kgg]ifnogeneral elements exist. GotoDMAPNo.39ifnogeneral elements exist. SMA3addsgeneral elements to[Kg]toobtainstiffness matrix[Kgg]. GP4generates flagsdefining members ofvarious displacement sets(USET)andforms multipoint constraint equations [Rg]{ugl=O. GotoDMAPNo.96andprintErrorMessage No.3ifnoindependent degrees offreedom are defined. GotoDMAPNo.49ifgeneral elements arepresent, GotoDMAPNo.49ifnopotential gridpointsingularities exist. GPSPgenerates atableofpotential gridpointsingularities. 2.3-6(05/30/86)\nNORMALMODESANALYSIS 48.!3FPformats thetableofpotential gridpointsingularities prepared byGPSPandplacesit onthesystemoutputfileforprinting. 50.Equivalence [Kgg]to[Knn]and[Mgg]to[Mnn]ifnomultipoint constraints exist. 51.GotoDMAPNo.54ifnomultipoint constraints exist. 52.MCE1partitions multipoint constraint equations [Rgl=[RmRnl andsolvesfor multipoint constraint transformation matrix[Gm]❑ -[Rm]-l[Rnj. 53.MCE2partitions stiffness andmassmatrices [KIK [Kgg]=flKm mnmmand [Mgg]=1 MIM ,1A“+~ MmnIMmm andperforms matrixreductions [Knnl=[nnl+[Gl[Kmnl +[Knl[Gml +[Gl[\\ml[Gml and [Mnnl=[inn]+[G;l[Mmnl +[M:nl[Gml +[G;l[Mmml[Gml . 55.Equivalence [Knnlto[Kff]and[Mnn]tO[Mff]ifnosin91e-point constraints exist” 56.GotoDMAPNo.58ifnosingle-point constraints exist. 57.SCE1partitions outsingle-point constraints [1Kff/Kfs [1‘ff’‘fs[Knn].—+—and [Mnn]= –+– . KsfIKs~ MsfIMss 59.Equivalence [Kff]to[Kaa]ifnoomitted coordinates exist. 60.Equivalence [Mff]to[Maa]ifnoomitted coordinates ‘xiSt” 61.GotoDMAPNo.64ifnoomitted coordinates exist. 62.SMP1partitions constrained stiffness matrix HKIK [Kff]=:K , oa00 solvesfortransformation matrix [Go]=-[Kool-l[Koal andperforms matrixreduction [Kaal=[aal+[Kal[Gol . 63.SMP2partitions constrained massmatrix 2.3-7(05/30/86)\nDISPLACEMENT RIGID r-7 IIM[M rMffl=:-+M~ ‘ oa00L J andperforms matrixreduction 65.Goto 66.RBMG1 67.RBt4G2 68,RBMG3[Maa] DMAPNo.70if partitions out [Kaa]=FORMATS =[iaal+[Mal[Gol +[Gj[Moal +[Gl[Mool[Gol . nofree-body supports exist. free-body supports [:] and[M’J=[?J?]decomposes constrained stiffness matrix[Kgk]=[LLL][ULL]. formsrigidbodytransformation matrix [D]=-[KiL]-l[K1r], calculates rigidbodycheckmatrix [X]=[Krrl+[K;rl[rIl andcalculates rigidbodyerrorratio E. \u0026x. Krr 69.RBMG4formsrigidbodymassmatrix [q.]=[Mrrl+[Mjrl[Dl +[DTl[Mkrl +[DTIIMILIIDI. 71.DPDextracts Eigenvalue Extraction DatafromDynamics datablock. 72.GotoDMAPNo.94andprintErrorMessage No.2ifthereisnoEigenvalue Extraction Data. 74.READextracts realeigenvalues andeigenvectors fromtheequation [Kaa-AMaal{ua} =O, calculates rigidbodymodesbyfinding asquare [mol=[ool[fnrl[$rol isdiagonal andnormalized, computes rigidbody [1DO [Oaol=–~, ‘$romatrix[@ro]suchthat eigenvectors 2.3-8(05/30/86)e ● e\nNORMALMODESANALYSIS calculates modalmassmatrix [Ml=[I$~l[Maal[tIa] 75. 76. 77. 78. 79. 80. 81. 83. 84. 85. 86. 87.andnormalizes eigenvectors according toone 1)Unitvalueofaselected component 2)Unitvalueofthelargest component 3)Unitvalueofthegeneralized mass.ofthefollowing userrequests: f5FPformats thesummary ofeigenvalue extraction information (!JEIGS) prepared byREADand placesitonthesystemoutputfileforprinting. GotoDMAPNo.lOOandmakenormalexitifnoeigenvalues werefound. @FPformats theeigenvalues(LAMA)prepared byREADandplacesthemonthesystemoutput fileforprinting. SDR1recovers dependent components oftheeigenvectors {$.}=[Go]{$al, H4f ——❑ {On} , ‘$sH‘$a ={of} , —— 40 {+m}=[Gml{tIn}, H‘$n——={$91 ‘$M andrecovers single-point forcesofconstraint {qs}=[Kfs]Ti$f}. GotoDMAPNo.82ifnomultipoint constraint forcebalance isrequested. EQMCKcalculates theforceandmomentequilibrium checkandprepares themultipoint constraint forcebalance (!3QMl)foroutput. OFPformats thetableprepared byEQMCKandplaces itonthesystem output filefor printing. SDR2calculates element forces(OEFl)andstresses (OEsl) andprepares eigenvectors (WHIG) andsingle-point forcesofconstraint (OQGl)foroutputandtranslation components ofthe eigenvectors (PpHIG). i3FPformats thetablesprepared bySDR2andplacesthemonthesystemoutputfilefor printing. SCANexamines theelement stresses outputthatmeetsthespecifications !3FPformats thescanned outputtable fileforprinting.andforcescalculated bySDR2andgenerates scanned setbytheuser. prepared bySCANandplacesitonthesystemoutput GotoDMAPNo.90ifnodeformed structure plotsarerequested. 2.3-9(05/30/86)\nDISPLACEMENT RIGIDFORMATS 88.PLOTgenerates allrequested deformed structure andcontour plots. 89.PRTMSGprintsplotter data,engineering data,andcontour dataforeachdeformed plot generated. 91.GotoDMAPNo.100andmakenormalexit. 93.PrintErrorMessage No.1andterminate execution. 95.PrintErrorMessage No.2andterminate execution. 97.PrintErrorMessage No.3andterminate execution. 99.PrintErrorMessage No.4andterminate execution. 2.3-10(05/30/86)"},"title":"User's Manual P4"},"/docs/users/users_manual_005/":{"data":{"":"NORMALMODESANALYSIS 2.3.3OutputforNormalModesAnalysis ●Eacheigenvalue isidentified withamodenumberdetermined bysorting theeigenvalues by theiralgebraic magnitude. Thefollowing summary oftheeigenvalues extracted isautomatically printed: 1.ModeNumber 2.Extraction Order 3.Eigenvalue 4.RadianFrequency 5.CyclicFrequency 6.Generalized Mass 7.Generalized Stiffness Thefollowing summary oftheeigenvalue analysis performed, usingtheInverse Powermethod, isautomatically printed: 1.Numberofeigenvalues extracted. 2.Numberofstarting pointsused. 3.Numberofstarting pointmoves. 4.Numberoftriangular decompositions. 5.Numberofvectoriterations. 6.Reasonfortermination. (1)Twoconsecutive singularities encountered whileperforming triangular decomposition. (2)Fourshiftpointswhiletracking asingleroot. (3)Al1eigenval uesfoundinthefrequency rangespecified. (4)Threetimesthenumberofrootsestimated inthefrequency rangehavebeen extracted, (5)Alleigenvalues thatexistintheproblem havebeenfound. (6)Thenumberofrootsdesired havebeenfound. (7)Oneormoreeigenvalues havebeenfoundoutside thefrequency rangespecified. (8)Insufficient timeto (9)Unabletoconverge 7.Largest off-diagonal modalfindanother root. masstermandthenumberfailing thecriterion. 2.3-11(05/30/86)\nThefollowing summary ofthe automatically printed:DISPLACEMENT RIGIDFORMATS eigenvalue analysis performed, usingtheDeterminant method, is 1.Numberofeigenvalues extracted. 2.Numberofpassesthrough starting points. 3.Numberofcriteria changes. 4.Numberofstarting pointmoves. 5.Numberoftriangular decompositions. 6.Numberoffailures toiterate toaroot. i’.Reasonfortermination. (1)Thenumberofrootsdesiredhavebeenfound. (2)Allpredictions foreigenvalues areoutside thefrequency rangespecified. (3)Insufficient timetofindanother root. (4)Matrixissingular atfirstthreestarting points. 8.Largest off-diagonal modalmasstermandthenumberfailing thecriterion. 9.Sweptdeterminant function foreachstarting point. Thefollowing summary oftheeigenvalue analysis performed, usingtheGivensmethod, is automatically printed: 1.Numberofeigenvalues extracted. 2.Numberofeigenvectors computed. 3.Numberofeigenvalue convergence failures. 4.Numberofeigenvector convergence failures. 5.Reasonfortermination. (1)Normaltermination. (2)Insufficient timetocalcu”ateeigenvalues andnumber ofeigenvectors requested. (3)Insufficient timetofindadditional eigenvectors. 6.Largest off-diagonal modalmasstermandthenumberfailing thecriterion. Thefollowing summary oftheeigenvalue analysis performed, usingtheTridiagonal Reduction (FEER-FastEigenvalue Extraction Routine) method, isautomatically printed, 1.Numberofeigenvalues extracted. 2.Numberofstarting pointsused. Thiscorresponds tothetotalnumberofrandomstarting andrestart vectors usedbythe FEERprocess. 2.3-12(09;30/83)\nNORMALMODESANALYSIS 3.Numberofstarting pointmoves. NotusedinFEER(setequaltozero). 4.Numberoftriangular decompositions. Alwaysequaltoone,exceptforunshifted vibration problems (rootsstarting fromthe lowestrequested). Inthiscase,amaximum ofthreeshiftsandthreedecompositions are employed toremovepossible stiffness matrixsingularities. 5.Totalnumberofvectoriterations. Thetotalnumberofreorthogonal izations ofallthetrialvectors employed. 6.Reasonfortermination. (0)Normaltermination. (1)Fewerthan.therequested number ofeigenval uesandeigenvectors havebeen extracted, (3)Theproblem sizehasbeenreduced. However, thedesired numberofaccurate eigensolutions specified ontheEIGBorEIGRcardmayhavebeenobtained. A detailed listofthecomputed errorboundscanbeobtained byrequesting DIAG16in theExecutive Control Deck. 7.Largest off-diagonal modalmasstermandthenumberfailing themassorthogonality criterion. Thefollowing outputmayberequested: 1.Eigenvectors alongwiththeassociated eigenvalue foreachmode. 2.Nonzero components ofthesingle-point forcesofconstraint forselected modesat selected gridpoints. 3.Forcesandstresses inselected elements forselected modes. 4.Scanned outputofforcesandelements inselected elements. Thefollowing plotter outputmayberequested: 1.Undeformed plotofthestructural modelandmodeshapesforselected modes. 2.Contour plotsofstresses anddisplacements forselected modes. 2.3.4CaseControl DeckforNormalModesAnalysis Thefollowing itemsrelatetosubcase definition anddataselection forNormalModes Analysis: 1.METH@DmustbeusedtoselectanEIGRcardthatexistsintheBulkDataDeck. 2,3-13(05/30/86)\nDISPLACEMENT RIGIDFORMATS 2.Onrestart, thecurrent EIGRcardcontrols theeigenvalue extraction, regardless ofwhat calculations weremadeintheprevious execution. Consequently, whenmakingrestarts witheithertheDeterminant method, theInverse Powermethod ortheTridiagonal Reduction (FEER)method, METHODshouldbechanged toselectanEIGRcardthatavoidsthe extraction ofpreviously foundeigenvalues. Thisisparticularly important following unscheduled exitsduetoinsufficient timetofindalleigenvalues intherangeof interest. 3.AnSPCsetmustbeselected unlessthemodelisafreebodyorallconstraints specified onGRIDcards,ScalarConnection cardsorwithGeneral Elements. 4.Multiple subcases areusedonlytocontrol outputrequests. Asinglesubcase sufficient ifthesameoutputisdesired forallmodes. Ifmultiple subcasesare is are present, theoutputrequests MODESmaybeusedtorepeat several consecutive modes.willbehonored in subcases inordersuccession forincreasing modenumbers, tomakethesameoutputrequest for 2.3.5Parameters forNormalModesAnalysis Thefollowing parameters areusedinNormalModesAnalysis: 1. 2. 3. 4. 5.ASET@UT -optional. Apositive integer valueofthisparameter causestheASEToutput datablocktobegenerated bytheGP4module. Anegative integer valueorOsuppresses thegeneration ofthisoutputdatablock. Thedefault valueisO. AUT@SPC -reserved forfutureoptional use.Thedefault valueis-1. C@UPMASS -CPBAR,CPROD,CPQUAD1, CPQUAD2, CPTRIA1, CPTR1A2 CPTUBE CPQDPLT, CPTRPLT, ——-l—-—~— —— CPTRBSC -optional. Theseparameters causethegeneration ofcoupled massmatrices ratherthanlumpedmassmatrices forallbarelements, rodelements, andplateelements thatinclude bending stiffness. =-optional. Apositive integer valueofthisparameter selects thegridpoint aboutwhichequilibrium willbechecked fortheCaseControl outplltrequest, MPCF9RCE. Iftheinteger valueiszero,thebasicoriginisused.Thedefault valueis-1. GRDPNT-optional. Apositive integer valueofthisparameter causestheGridPoint WeightGenerator tobeexecuted andtheresulting weightandbalance information tobe printed. Allfluidrelated massesareignored. 2.3-14(05/30/86)\n6.13PT-opt— multipoint MPCFORCE. balance to 7. 8. 9.NORMALMOOESANALYSIS onal.Apositive integer valueofthisparameter causesbothequilibrium and constraint forcestobecalculated fortheCaseControl outputrequest, Anegative integer valueofthisparameter causesonlytheequilibrium force becalculated fortheoutputrequest. Thedefault valueisOwhichcauses onlythemultipoint constraint forcestobecalculated fortheoutputrequest. SURFACE -optional. Thecomputations oftheexternal surface areasforthe two-dimensional andthree-dimensional elements areactivated bythisparameter whenthey aregenerated intheEMGmodule. Theresults aremultiplied bytherealvalueofthis parameter. Seethedescription underthePARAMbulkdatacardfordetails. VOLUME -optional. Thevolume computations forthetwo-dimensional and three-dimensional elements areactivated bythisparameter whentheyaregenerated in theEMGmodule. Theresults aremultiplied bytherealvalueofthisparameter. See thedescription underthePARAMbulkdatacardfordetails. WTMASS-optional. Thetermsofthestructural massmatrixaremultiplied bythereal valueofthisparameter whentheyaregenerated intheEMAmodule. Notrecommended for useinhydroelastic problems. @2.3.6Optional Diagnostic OutputforFEER Special detailed information related tothegeneration ofthereduced problem size,the elements ofthereduced tridiagonal matrix, computed errorboundsandothernumerical testscanbe obtained byrequesting DIAG16intheNASTRAN Executive Control Deck. Themeaning ofthisinformation isexplained belowintheorderinwhichitappears inthe DIAG16output, ORDER MAXRANK - RED~RDER - 13RTHVCT - USERSHIFT - INTERNAL SHIFT-Theorderoftheunreduced problem (sizeofthe[Kaa]matrix) :~eRmaximum numberofexisting finiteeigensolutions asinitially detected by Theorderofthereduced eigenproblem whichwillbesolvedtoobtainthenumber ofaccurate solutions requested bytheuser Thenumberofpreviously computed accurate eigenvectors ontheeigenvector file whichweregenerated priortoarestart orbytheNASTRAN rigidbodymode generator Theuserspecified shiftafterconversion fromcyclestoradians -squared (used onlyinfrequency problems). Asmallpositive valueautomatically computed toremovesingularities ifthe userhasspecified azeroshift. Otherwise, thenegative oftheusershift (usedonlyinfrequency problems). 2,3-15(05/30/86)\nDISPLACEMENT RIGIDFORMATS SINGULARITY CHECK-PASS:theshifted stiffness matrixisnon-singular -:thenumberofinternal shiftsneededtoremovestiffness matrix singularities TRIDIAGONAL ELEMENTS ROWj,,,-Thecomputed tridiagonal elements ofthereduced eigenmatrix: j-Matrixrow -Diagonal element -Off-diagonal element -Firstestimate ofoff-diagonal element inthenextrow @RTHITER -Thenumberoftimesareorthogonal ization ofatrialvectorhasbeenperformed. MAXPR13J -Themaximum projection oftheabovetrialvectoronthepreviously computed accurate trialvectors (priortothecurrent reorthogonal ization) N@RMALFACT -Thenormalization factorforthereorthogonalized trialvector OPENCORENOTUSEDFEER3-OpencorenotusedbySubroutine FEER3,insingle-precision words FEERQRWELEMENT ,ITER,,RATIO*,PROJ*****:\n-Theinternal eigenvalue numberintheorderofitsextraction byFEER ** -Thenumberofinverse poweriterations performed toextract theassociated eigenvector ofthereduced system(thisisnotaphysical eigenvector) *** -Ifamultiple roothasbeendetected, thenumberoftimesthattheprevious multiple-root, reduced-system eigenvectors havebeenprojected outofthe current multiple-root eigenvector beforerepeating theinverse poweriterations **** -Theabsolute ratioofmaximum, reduced-system eigenvector elements for successive inverse poweriterations ***** -Themaximum projection ofacurrent multiple-root eigenvector onpreviously computed eigenvectors forthesameroot PHYSICAL EIGENVALUE ,,THEORERRORPERCENT, PASS@RFAIL: Theinternal eigenvalue numberintheorderofitsextraction byFEER ** Theassociated physical eigenvalue (Aforbuckling problems, UZforfrequency problems) *** -Theoretical upperboundontherelative eigenvalue error PASS -Thecomputed errorislessthanorequaltotheallowable specified ontheEIGB orEIGRbulkdatacard(default is.001/nwherenistheorderofthestiffness matrix) FAIL -Thecomputed errorisgreater thantheallowable andthismodeisnotaccepted forfurther processing OPENCOREN@TUSEDFEER4-OpencorenotusedbySubroutine FEER4,insingle-precision words FEERCOMPLETE *,,,** Theremaining CPUtimeavailable following decomposition oftheshifted stiffness matrix, inseconds (thetotaltimeisspecified ontheTIMEcardin theExecutive Control Deck) ** Theremaining CPUtime,inseconds aftercompleting Subroutine FEER3 *** -Theremaining CPUtime,inseconds aftercompleting Subroutine FEER4 2.3-16(05/30/86) NORMALMODESANALYSIS ****Thetotaloperation countforFEERafterdecomposition oftheshifted stiffness matrix. Oneoperation isconsidered tobeamultiplication ordivision followed byanaddition 2.3.7TheAPPENDFeature Inrealeigenvalue analysis, itisfrequently necessary toaddneweigenvalues and eigenvectors tothosealready computed inaprevious run.TheAPPENDt’eature (seeSection 9.2.2of theTheoretical Manualfordetails) makesitpossible todothiswithout re-executing theentire problem. Itisavailable whenusingtheInverse Power,Determinant andIridiagonal Reduction (FEER)methods ofeigenvalue extraction. InordertousetheAPPEND feature, theusershould employ thefollowing steps: 1.Request acheckpoint ofaneigenvalue problem byemploying either theInverse Power, Determinant orTridiagonal Reduction (FEER) method. 2.Checktoensurethatatleastoneeigenvalue andoneeigenvector arecomputed inthis runandthattheLAMA(eigenvalue) andPHIA(eigenvector) filesaresuccessfully checkpointed. 3.Restart theproblem bychanging theEIGRcardintheBulkData satisfied:eithertheMETHODcardintheCaseControl Deckand/or Deckandensuring thatthefollowing conditions are a.Thestructural modelandtheconstraint datafortherestart mustbethesameas thatusedinthecheckpoint run, b.Themethodofeigenvalue extraction employed intherestart neednotbethesameas thatusedinthecheckpoint run,buttherangeofeigenvalues specified ontheEIGR BulkDatacardshouldnotinclude theeigenvalues already checkpointed inStepI. c.Iftheuserwishestoretrieve onlyasubsetofthecheckpointed eigenvalues and eigenvectors, aDMAPaltershouldbeemployed intheExecutive Control Decktoreset theparameter NEIGVtothedesired valuebymeansofaPARAMstatement justbefore theREADmoduleintheDMAPsequence, (SeeSection 9.2.2oftheTheoretical Manual fordetails.) 2.3-17(05/30/86)\nDISPLACEMENT RIGIDFORMATS 4.Notethattheeigenvalues andeigenvectors outputbytherestart include thoseretrieved fromthecheckpointed runofStep1.Also,theresulting eigenvectors arenormalized according tothemethodofnormalization specified intherestart. 2.3.8Automatic ALTERsforAutomated Multi-stage Substructuring Thefollowing linesoftheNormalModesAnalysis, RigidFormat3,areALTERed inautomated substructure analyses. Phase1:4,42,65-70,71-91 Phase2:4,5-5,8-18,21.-21,30-30,36-39,44-49,79-93 Phase3:65-70,71-77,78 IfAPPDISP,SUBSisused,theusermayalsospecify ALTERs. However, thesemustnot interfere withtheautomatically generated DMAPstatement ALTERslistedabove. SeeVolumeI, Section 5.9foradescription andlisting oftheALTERswhichareautomatically generated for substructuring. 2.3.9RigidFormatErrorMessages fromNormalModesAnalysis—— Thefollowing fatalerrorsaredetected bytheDMAPstatements intheNormalModesAnalysis rigidformat. Thetextforeacherrormessage isgivenbelowincapital letters andisfollowed by additional explanatory material, including suggestions forremedial action. N@RMALMODEANALYSIS ERR13RMESSAGE NO.1-MASSMATRIXREQUIRED FORREALEIGENVALUE ANALYSIS. Themassmatrixisnullbecause eithernostructural elements weredefined withConnection cards, nonstructural masswasnotdefined onaProperty card,orthedensity wasnotdefined onaMaterial card. NORMALMODEANALYSIS ERRORMESSAGE No.2-EIGENVALUE EXTRACTION DATAREQUIRED FORREALEIGENVALUE ANALYSIS. Eigenvalue extraction datamustbesupplied onanEIGRcardintheBulkDataDeckandMETHODinthe CaseControl DeckmustselectanEIGRset. NORMALMODEANALYSIS ERRORMESSAGE NO.3-NOINDEPENDENT DEGREES OFFREEDOM HAVEBEENDEFINED. Eithernodegrees offreedom havebeendefined onGRID,SP@INTorScalarConnection cards,orall defined degrees offreedom havebeenconstrained bySPC,K!PC,SUPORT, OMITorGRDSETcards,or grounded onScalarConnection cards. NORMALM@DEANALYSIS ERRORMESSAGE NO.4-NoSTRUCTURAL ELEMENTS HAVEBEENDEFINED. Nostructural elements havebeendefined withConnection cards. 2.3-18(05/30/86)\nDISPLACEMENT RIGIDFORMATS 2.4STATICANALYSIS WITHDIFFERENTIAL STIFFNESS 2.4.1DMAPSequence forStatic Analysis WithDifferential Stiffness RIGIDFORMAT DMAPLISTING APRILlg86RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT ~ LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING OPTIONS INEFFECT GO ERR=2 LIST NODECK NOREF NOOSCAR\n1BEGIN 2PRECHK 3PARAM bGP1 5CONO 6PLTTRAN 7GP2 8PARAML 9PURGE 10COND 1:PLTSET 12PRTMSG 13PARAM 14PARAM 15COND 16PLOT 17PRTMSG 18LABEL 19GP3 20PARAM 21TA1DISPok-DIFFERENTIAL STtFFNESS ANALYSIS -APR.1986$ ALL$ //MPY/CARONO/O/O $ GEOMl,GEOM2,/GPL,EQEXlN,GPDT, CSTM,BGPDT,SiL/S,N,LUSET/ S,N,NOGPDT/MINUSl=-l $ ERROR3,NOGPDT $ BGPDT,SIL/BGPDP,SIP/LLJSET/S ,N,LUSEP $ GEoM2,EQExlN/EcT $ PCDE//PRESJ’I////JUMPPLOT $ PLTSETX,PLTPAR,GPSETS,ELSETS/JUMPPLOT $ Pl,JUMPPLjlT $ PCDB,EQEXIN,ECT/PLTSETX,PLTPAR,GPSETS ,ELSETS/S,N,NSIL/ S,N,JUMPPLOT $ PLTSETXi/ $ j/W4PY/PLTFLG/l/i $ //MPY/PFILE/O/O $ P1,JUMPPLOT $ PLTPAR,GPSETS, ELSETS,CASECC, BGPDT,EQEXIN,SIL, ,ECT,,/PLOTXl/ NSiL/LUSET/S,N,JUMPPLOT/S,N, PLTFLG/s,N,pFILE $ PLOTX1// $ PI$ GEOM3,EQEXlN,GEOM2/SLT,GPTT/S ,N,NOGRAV $ //AND/NOMGG/NOGRAV/V,Y,GRDPNT=- iS ECT,EPT,BGPOT,SIL,GPTT,CSTM/EST, GEl,GpECT+,/ LUSET/S,N,NOSIMP/l/S,N,NOGENL/S ,N,GENEL $ 2.4-1(05/30/86)\nDISPLACEMENT RIGIDFORMATS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT k LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 4kCONO PURGE PARAH EMG PURGE CONO EMA LABEL CONO EMA LABEL CONO CONO GPWG OFP LABEL EQUIV CONO SMA3 LABEL PARAM CASE GP4ERROR1,NOSIMP $ OGPST/GENEL $ //Aoo/NoKGGx/l/o $ EST,CSTM,MPT,DlT,GEOM2,/KELM,KO ICT,MELM,MOICT, ,,/S,N,NOKGGX/ S,N,NOMGG////C, Y,COUPMASS/C,Y, CPBAR/ c,Y,cPRoD/c,Y,cPQuAol/c,Y,cPQuAD2/c,Y, cPTRiA1/c,Y,cPTRlA2/ C,Y,CPTUBE/C,Y,CPQDPLT/C,Y,CPTRPLT/C,Y,CPTRBSC/ V,Y,VOLUME/V,Y,SURFACE $ KGGX,GPST/NOKGGX/MGG/NOMGG $ JMPKGG,NOKGGX $ GPECT,KOICT,KELM/KGGX,GPST $ JMPKGG $ JMPMGG,NOMGG $ GPECT,MOLCT,MELM/MGG,/-l/C,Y ,WTMASS=l.O $ JMPMGG $ LBL1,GROPNT $ ERROR4,NOMGG $ BGPOP,CSTM,EQEXIN,MGG/OGPWG/V,Y ,GROPNT/C,Y,WTMASS $ OGPWG,,,,,//S,N,CARONO $ LBL1$ KGGX,KGG/NOGENL $ LBL1l,NOGENL $ GEl,KGGX/KGG/LUSET/NOGENL/NOS IMP$ LBL1l$ //MPYf/NSKIP/O/O $ CASECC,/CASEXX/*TRANRESP~/O/NOLOOP $ CASEXX,GEOM4, EQEXIN,GPDT,BGPOT, CSTM,GPST/RG,YS,USET,ASET/ LUSET/S,N,MPCFl/S,N,MPCF2/S,N ,SINGLE/S,N,OMIT/S,N,REACT/S ,N, NSKIP/S,N,REPEAT/S,N,NOSET/S ,N,NOL/S,N,NOA/C,Y,ASETOUT/ S,Y,AUTOSPC $ 2.4-2(05/30/86)\nSTATICANALYSIS WITHDIFFERENTIAL STIFFNESS RIGIDFORMAT OMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 4 LEVEL2.0NASTRAN OMAPCOMPILER -SOURCE LISTING 45COND 46PURGE 47COND 48JUMP 49LABEL 50COND 51PARAM 52COND 53GPSP 54OFP 55LABEL 56EQUIV 57CONO 58MCE1 59MCE2 60LABEL 61EQUIV 62CONCI 63SCE1 64LABEL 65EQUIV 66COND 67SMP1 68LABEL 6gRBMG2ERROR5,NOL $ GM/MPCFl/GO,.KOO,LOO,PO,UOOV,RUOV/OMIT/PS, KFS,KSS,QG, YBS,PBS,KBFS,KBSS,KDFS,KOSS/S INGLE$ LBL4D,REACT $ ERROR2 $ LBL4D$ LBL4,GENEL$ //EQ/GPSPFLG/AUTOSPC/O $ LBL4,GPSPFLG $ GPL,GPST,USET,SIL/OGPST/S,N,NOGPST $ OGPST,,,,,//S,N,CARDNO $ LBL4$ KGG,KNN/MPCFl $ LBL2,MPCF1 $ USET,RG/GM $ USET,GM,KGG,,,/KNN,, ,$ LBL2$ KNN,KFF/SINGLE $ LBL3,SINGLE $ USET,KNN,,,/KFF,KFS,KSS,,, $ LBL3$ KFF,KAA/OMIT $ LBL5,0MIT $ USET,KFF ,,,/GO,KAAsKOO,LOO,,,,, $ LBL5s KAA/LLL $ 2.4-3(05/30/86)\nDISPLACEMENT RIGIDFORMATS RIGIDFORMAT OMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIOFORMAT 4 LEVEL2.0NASTRAN OMAPCOMPILER -SOURCE LISTING 70SSG1 71EQUIV 72COND 73SSG2 74LABEL 75SSG3 76COND 77MATGPR 78MATGPR 79LABEL 80.SOR1 81SOR2 82OFP 83SCAN 8bOFP 85CONO 86PLOT 87PRTMSG 88LABEL 89TA1 90OSMG1 91PARAM 92PARAMSLT,BGPOT,CSTM,SI L,EST,MPT,GPTT, EEIT,MGG,CASEXX,OIT,/ PG,,,,/LUSET/l $ PG,PL/NOSET $ LBL1O,NOSET $ USET,GM,YS,KFS,GO,,PG/,PO, PS,PL$ LBL1O$ LLL,KAA,PL,LOO,KOO,PO/ULV, UOOV,RULV,RUOV/OMIT/V,Y, lRES=-1/ l/S,N,EPSl $ LBL9,1RES $ GPL,USET,SIL,RULV//L $ GPL,USET,SIL,RUOV//Of~ $ LBL9$ USET,,ULV,UOOV,YS,GO,GM,PS, KFS,KSS,/UGV,PGl,QG/l/$~OSO $ CASECC,CSTM,MPT,DIT, EQEXIN.SIL,GPTT,EDT, BGPOP,,QG,UGV, EST,,PG/ OPG1,OQG1,OUGV1,OES1,OEF1 ,PUGV1/DSO( $ OUGV1,OPG1,OQG1,OEF1,OES1 ,//S,N,CARDNO $ CASECC,OESl,OEF1/OESFl/*RF~ $ OESF1,,,,,//S,N,CARONO $ P20JUMPPLOT $ PLTPAR,GPSETS, ELSETS,CASECC, BGPOT,EQEXIN,S IP,PUGV1,,GPECT,OES1 / PL(lTX2/NSlL/LUSEP/JUMPPLOT/PLTFLG/S, N,PFILE $ PLoTx2// $ P2s ECT,EPT,BGPDT,SIL,GPTT,CSTM/Xl ,X2,X3,ECPT,GPCT/LUSET/ NOSIMP/O/NOGENL/GENEL $ CASECC,GPTT,S IL,EDT,UGV,CSTM,MPT, ECPT,GPCT,OIT/KOGG/ DSCOSET $ //~~AOOfc/SHIFT/-l/O $ //~’(ADO*/COUNT/ALWAYS=-l/NEVER= 1$ 2,4-4(05/30/86)\nSTATICANALYSIS WITHDIFFERENTIAL STIFFNESS RIGIDFORMATDMAPLISTING APRILlg86RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT4 LEVEL2.0NASTRAN OMAPCOMPILER 93PARAMR 94PARAML 95LABEL 96EQUIV 97PARAM 98EQUIV 99COND 100MCF2 101LABEL 102EQUIV 103COND 104SCE1 105LABEL 106EQUIV 107COND 108SMF’2 109LABEL 110ADD 111ADD 112ADD 113COND 114tlPYAll 115MPYAO 116UMERGE 117EQUIV 118CONO//*ADDfi/DsEpsl/o.o/o.o YS//NULL////NOYS $ OUTLPTOP $ PG,PG1/NOYS $ //KLOCK/TO $ KDGG,KDNN/MPCFl $ LBL2D,MPCFI $-SOURCE LISTING $ USET,GM,KDGG ,,,/KDNN,,, $ LBL2D$ KDNN,KDFF/SINGLE $ LBL3D,SINGLE $ USET,KDNN ,,,/KDFF,KDFS,KDSS,,, $ LBL3D$ KDFF,KDAA/OMIT $ LBL5D,0MIT $ USET,GO,t(DFF/KDAA $ LBL5D$ KAA,KDAA/KBLL $ KFS,KDFS/KBFS $ KSS,KDSS/KBSS $ PGOK,NOYS $ KBSS,YS,/PSS/O/l/l/l $ KBFS,YS,/PFS/O/l/l/l $ USET,PFS,PSS/PN/*N$~/F/S $ PN,PGX/MPCFl $ LBL6D,MPCF1 $ 2.4-5(05/30/86)\nDISPLACEMENT RIGIDFORMATS RIGIDFORHAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 4 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 119UMERGE 120LABEL 121ADD 122EQUIV 123LABEL 124ADO 125RBMG2 126PRTPARM 127PRTPARM 128LABEL 129PARAII 130SSG2 131SSG3 132COND 133MATGPR 134LABEL 135SDR1 136ADD 137DSMGI 138MPYAD 139DSCHK 140COND 141COND 142EQUIV 143REPTUSET,PN,/PGX/G/N/M $ LBL6D$ PGX,PG/PGG/(-l.O,O.O) $ PGG,PG1/ALWAYS $ PGOK$ PGl,/PGO/ $ KBLL/LBLL/S,N,POWER/S,N,OET $ //O/DET $ //0/powERff $ INLPTOP $ //KLocK/TI $ USET,GM,YS,KDFS,GO,,PG1/,PBO, PBS,PBL $ LBLL,KBLL,PBL ,,,/UBLV,,RUBLV,/-l/V,Y,lRES/NDSK lP/S,N, EPSI$ LBL9D,IRES$ GPL,USET,SIL,RUBLV//~’rL $ LBL9D$ USET,,UBLV,,YS,GO,GM,PBS,KBFS ,KBSS,/UBGv,,QBG/l/DSl $ UBGV,UGV/DUGV/(-l.0,0.0) $ CASECC,GPTT,SI L,EDT,OUGV,CSTM,MPT, ECPT,GPCT,DIT/DKDGG/ DSCOSET $ DKOGG,UBGV,PGO/PGll/O/l/l/O $ PGl,PGll,UBGV//C,Y,EPSlO=l .E-5/S,N,DSEPSl/C,Y,NT=10/TO/ T1/S,N,l)ONE/S,N,SHIFT/S,N,COUNT/C,Y,BETAD=4 ~ 00NE,DONE $ SHIFT,SHIFT $ PG,PG1/NEVER/PGll,PGl/ALWAYS/PG l,PG1l/NEVER $ INLPTOP, IOOO$ 2.4-6(05/30/86)\nSTATICANALYSIS WITHDIFFERENTIAL STIFFNESS ●RIGIDFOIW!AT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 4 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING lk4TABPT 145LABEL 146ADO 147EQUIV 148EQUIV 149REPT 150TABPT 151LABEL 152sDR2 153OFP 154CONO ●155PLOT 156 157 158 159 160 161 162 163 164 165 166 167 168PRTMSG LABEL JUMP LABEL PRTPARM LABEL PRTPARM LABEL PRTPARM LABEL PRTPARM LABEL PRTPARMPGll,PGl,PG,,// $ SHIFT$ DKDGG,KDGG/KDGGl/(-l.0,0.0) $ UBGV,UGV/ALWAYS/KOGGl,KDGG/ALWAYS $ KDGG,KOGGl/NEVER/UGV,UBGV/NEVER $ OUTLPTOP,1000 $ KOGGl,KDGG,UGvs,// $ 00NE$ CASECC,CSTM,HPT,DIT,EQEXIN,S IL,GPTT,EDT,BGPDP, ,QBG,UBGV,EST, ,/ ,OQBGl,OUBGVl,OESBl,OEFBl,PUBGV1/DSl $ OUBGVl,OQBGl,OEFBl,OESBl,,//S,N, CARONO $ P3,JUMPPLOT $ PLTPAR,GPSETS,ELSETS,CASECC,BGPDT, EQEXIN,SI P,PUBGVI, ,GPECT, OESB1/PLOTX3/NSIL/LUSEP/JUMPPLOT/PLTFLG/S ,N, PFILE$ PLoTx3// $ P3$ FINIS$ ERROR1 $ //-1/DIFFSTIF $ ERROR2 $ //-2/DIFFsTIF $ ERROR3 $ //-3/olFFsTiF $ ERROR4 $ //-4/olFFsTIF $ ERROR5 $ //-5/DIFFsTIF $ 2.4-7(05/30/86)\nDISPLACEMENT RIGIDFORMATS RIGIDFDRMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 4 LEVEL2.0NASTRAN OMAPCOMPILER -SOURCE LISTING 169LABEL FINIS$ 170PURGE OUMMY/MINUSl $ 171END $ 2.4-8(05/30/86)\n2.4.2 4. 5, 6. i’. 10. 11. 12. 15. 16. 17. 19. 21, 22. 25. 27, 28, 30, 31. 33. 34. 35. 36. 38. 39, 40. 43. 44. 45.STATICANALYSIS WITHDIFFERENTIAL STIFFNESS Description ofImportant DMAPOperations forStaticAnalysis withDifferential Stiffness GP1generates coordinate systemtransformation matrices, tablesofgridpointlocations, and tablesrelating theinternal andexternal gridpointnumbers. GotoDMAPNo.163andprintErrorMessage No.3ifthereisnoGridPointDefinition Table. PLTTRAN modifies special scalargridpointsinthe8GPDTandSILtables. GP2generates Element Connection Tablewithinternal indices. GotoDMAPNo.18iftherearenostructure plotrequests. PLTSETtransforms userinputintoaformusedtodrivethestructure plotter. PRTMSGprintserrormessages associated withthestructure plotter. GotoDMAPNo.18ifnoundeformed structure plotsarerequested. PLOTgenerates allrequested undeformed structure plots. PRTMSGprintsplotter dataandengineering dataforeachundeformed plotgenerated. GP3generates StaticLoadsTableandGridPointTemperature Table. TA1generates element tablesf-oruseinmatrixassembly andstressrecovery. GotoDMAPNo.159andprintErrorMessage No,1iftherearenostructural elements. EMGgenerates structural element stiffness andmassmatrixtablesanddictionaries forlater assembly bytheEMAmodule. GotoDMAPNo,29ifnostiffness matrixistobeassembled, EMAassembles stiffness matrix[Kg]andGridPointSingularity Table. GotoDMAPNo,32ifnomassmatrixistobeassembled. EMAassembles massmatrix[Mgg]. GotoDMAPNo.37ifnoweightandbalance information isrequested. GotoDMAPNo.165andprintErrorMessage No.4ifnomassmatrixexists. GPWGgenerates weightandbalance information. !3FPformats theweightandbalance information prepared byGPWGandplacesitonthesystem outputfileforprinting. Equivalence [Kg]to[Kgg]ifnogeneral elements exist. GotoDMAPNo.41ifnogeneral elements exist. SMA3addsgeneral elements to[K~g]toobtainstiffness matrix[Kgg]. CASEcopiesthefirstrecordofCASECCtoCASEXX. GP4generates flagsdefining members ofvarious displacement sets(USET), formsmultipoint constraint equations [Rg]tug}=Oandformsenforced displacement vector{Ys}. GotoDMAPNo.167andprintErrorMessage No.5ifnoindependent degrees offreedom are defined. 2.4-9(05/30/86)\n47. 48. 50. 52. 53. 54. 56. 57. 58. 59. 61. 62. 63. 65. 66. 67. 69.DISPLACEMENT RIGIDFORMATS GotoDMAPNo.49ifnofree-body supports aresupplied. GotoDMAPNo.161andprintErrorMessage No.2. GotoDMAPNo.55ifgeneral elements arepresent. GotoDMAPNo.55ifnopotential gridpointsingularities exist. GPSPgenerates atableofpotential gridpointsingularities. 13FPformats thetableofpotential gridpointsingularities prepared byGPSPandplacesit onthesystemoutputfileforprinting. Equivalence [Kgg]to[Knn]ifnomultipoint constraints exist, GotoDMAPNo.60ifnomultipoint constraints exist. MCE1partitions multipoint constraint equations [Rg]=[RmRn]andsolvesfor multipoint constraint transformation matrix[Gm]=-[Rm]-l[Rn]. MCE2partitions stiffness matrix [1KIK [Kgg]=n+ ‘mn1‘mm andperforms matrixreduction [Knn]=[nn]+[G][Kmn] +[Knl[Gml +[G~l[Kmml[Gml. Equivalence [Knn]to[Kff]ifnosingle-point cOnstt’’aintS eXiSt. GotoDMAPNo.64ifnosingle-point constraints exist. SCE1partitions outsingle-point constraints Equivalence [Kffl GotoDMAPNo.68[1‘ff1‘fs[Knn]= –+— . KsfIKss to[Kaa]ifnoomitted coordinates exist. ifnoomitted coordinates exist. SMP1partitions constrained stiffness matrix [1iiIK [Kffl=:~K= ‘ oa00 solvesfortransformation matrix[Go]=-[Kool-l[Koal andperforms matrixreduction [Kaa]=[aa]+[Ka][Go] . RMBG2decomposes constrained stiffness matrix[Kaa]=[LLI][ULL]. 2.4-10 (05/30/86)\nSTATICANALYSIS WITHDIFFERENTIAL STIFFNESS 70.SSG1generates staticloadvectors {Pg}. 71.Equivalence {Pg}to{Pi}ifnoconstraints areapplied. 72.GotoDMAPNo.74ifnoconstraints areapplied. 73.SSG2applies constraints tostaticloadvectors Hi{pg}.—n– , Pm II;’ {Pn}❑ ;f– , s II{pf}.+_and o 75.SSG3solves fordisplacements {Uk}{Pn}={n}+[G]{Pm} , {Pf}={f}-[Kfs]{Y5} s {PL}={Pa}+[G:]{PO}. ofindependent coordinates =[Kaa]-l{PL} ,‘ solvesfordisplacements ofomitted coordinates {u:}=[KOO]-l{PO} , calculates residual vector (RULV) andresidual vector error ratioforindependent coordinates {15Pt}={Pg}-[Kaa]{uJ , {uj{fsPR} ‘L= {P}{ug} andcalculates residual vector(RU@V)andresidual vectorerrorratioforomitted coordinates {ISPO}={Po}-[KooI{u~} , {U:}(6PO} ‘o=— ‘ {P:}{u:} 76.GotoDMAPNo.79ifresidual vectors arenottobeprinted. 77.MATGPRprintstheresidual vectorforindependent coordinates (RULV). 78.MATGPRprintstheresidual vectorforomitted coordinates (RUOV). 2.4-11(05/30/86)\n80. 81. 82. 83. 84. 85. 86. 87. 89. 90. 95. 96. 98. 99. 100.-.–..–..-.,-UISPLALMILNI SDR1recovers dependent displacements {uo}=[GO]{UL} +{u:}, 11‘a——={Uf}, U.RIGIDFORMATS H‘f—.={Unl, Ys u {um}❑ [Gm]{un} \u003e Hn={Ug}—. ‘m andrecovers single-point forcesofconstraint {qs}=-{ps}+[K~~l{uf} +[Kssl{ys}. SDR2calculates element forces(OEFl)andstresses (OES1)andprepares loadvectors (OpGl), displacement vectors (k3UGVl) andsingle-point forcesofconstraint (!JQG1)foroutputand translation components ofthedisplacement vector(PUGV1) forthestaticsolution. OFPformats thetablesprepared bySDR2andplacesthemonthesystemoutputfilefor printing. SCANexamines theelement stresses andforcescalculated bySDR2andgenerates scanned outputthatmeetsthespecifications setbytheuser. @FPformats thescanned outputtableprepared bySCANandplacesitonthesystemoutput fileforprinting. GotoDMAPNo.88ifnodeformed staticsolution structure plotsarerequested. PLOTgenerates allrequested staticsolution deformed structure andcontour plots. PRTMSGprintsplotter data,engineering data,andcontour dataforeachdeformed static solution plotgenerated. TA1generates element tablesforuseindifferential stiffness matrixassembly. DSMG1generates differential stiffness matrix[Kg]. Beginning ofouter(stiffness adjustment) loopfordifferential stiffness iteration. Equivalence {Pg}to{Pgl}ifnoenforced displacements arespecified. Equivalence [Kg]to[K~n]ifnomultipoint constraints exist. GotoDMAPNo.101ifnomultipoint constraints exist. MCE2partitions differential stiffness matrix [1idIl(d[Kjg]=J“+m ~dIKd mnmm andperforms matrixreductionI 2.4-12 (05/30/86)"},"title":"User's Manual P5"},"/docs/users/users_manual_006/":{"data":{"":"STATICANALYSIS WITHDIFFERENTIAL STIFFNESS 102. 103. 104. 106, 107. 108. 110. 111. 112. 113, 1140 115. 116. 117. 118. 119. 121. 122. 124. 125. 126.[Kn]=[~n]+[G][Kn] +[K\u0026][Gm] +[G~][Km][Gm]. Equivalence [Kn]to[Kf]ifnosingle-point constraints exist. GotoDMAPNo.105ifnosingle-point constraints exist. SCE1partitions outsingle-point constraints r 1 HK$flK:s [Kin]= –+– . Kdid SfSs Equivalence [Kf]to[Ka]ifnoomitted coordinates exist. GotoDMAPNo.109ifnoomitted coordinates exist. SMP2partitions constrained differential stiffness matrix [1id1Kd [Kf]=Qa+w . KdIKd oa00 andperforms matrixreduction [Ka]=[iia]+[Ka]TIGo] +[Go]TIKa]+[Go]TIKo][Go], ADD[Kaa]and[Ka]toform[KL]. ADD[Kf~]and[Ks]toform[Ks]. ADD[Kss]and[Ks]toform[Ks]. GotoDMAPNo.123ifnoenforced displacements arespecified. MPYADmultiplies [Ks]and{Ys}toform{Pss}. MYPADmultiplies [Ks]and{Ys}toform{Pfs}. UMERGEcombines {Pfs}and{P~~}toform{Pn}. Equivalence {Pn}to{P~}ifnomultipoint constraints exist. GotoDMAPNo.120ifnomultipoint constraints exist. UMERGEexpands {Pn}toform{P;}. ADD-{P~}and{Pg}toform{Pgg}. Equivalence {Pgg}to{Pgl}. ADD{Pgllandnothing tocreate{Pgo}. RBMG2decomposes thecombined differential stiffness matrixandelastic stiffness matrix PRTPARM printsthescaledvalueofthedeterminant matrixandelastic stiffness matrix. 2.4-13(05/30/86)ofthecombined dfferential stiffness\nDISPLACEMENT RIGIDFORMATS 127.PRTPARM printsthescalefactor (poweroften)ofthedeterminant ofthecombined differential stiffness matrixandelastic stiffness matrix. 128.Beginning ofinner(loadcorrection) loopfordifferential stiffness iteration. 130,SSG2applies constraints tostaticloadvectors {Pf}={+}-[K$s]{Ys} , 131.SSG3solvesfordisplacements ofindependent coordinates forcurrent differential stiffness loadvector {u!}=[K8]-l{P} , andcalculates residual vector (RBULV) andresidual vectorerrorratioforcurrent differential stiffness loadvector b_{u;}T{\u0026P;} ‘1- 132.GotoDMAPNo.134iftheresidual vectorforcurrent differential stiffness solution isnot tobeprinted. 133,MATGPRprintstheresidual vectorforcurrent differential stiffness solution. 135.SDR1recovers dependent displacements forthecurrent differential stiffness solution [1b ‘k{u~}=[Go]{U)+{U;b} , —–={Uf}, Ub o 2.4-14(05/30/86)\nSTATICANALYSIS WITHDIFFERENTIAL STIFFNESS 136. 137. 138. 139. 140. 141. 142. 143. 144. 146. 147. 148. 149. 150. 152.Iiu: ={u:}, {u;}=[Gm]{U:},—— Yb s IIUb n={u;}—— “b m andrecovers single:point forces ofconstraint forthecurrent different solutionalstiffness {q!}=-{P:}+[Kf]{u} +[K:fl{Y:} . ADD-{U~}and{Ug}toform{U~}. DSMG1generates differential stiffness matrix[Kg]. MYPADformstheloadvectorforinnerloopiteration {P}911=[6K;9]{U:}+{Pgo}. DSCHKperforms differential stiffness convergence checks. GotoDMAPNo.151ifdifferential stiffness iteration iscomplete. GotoDMAPNo.145ifadditional differential stiffness matrixchanges arenecessary for further iteration. Breaktheprevious equivalence of{Pg}to{Pgl}and{Pgl}to{PgIl} andestablish equivalence of{P911}to{Pgl}. GotoDMAPNo.128foranadditional innerloopdifferential stiffness iteration. TABPTtableprintsvectors {PgIl},{Pgl},and{Pg}. ADD-[6Kg] and[Kg]toform[I$gll. Equivalence {Ulto{Ug}and[Kgll to[Kgl. Breaktheprevious equivalence of[Kglto[Kgll ancl{Ug)to{U}. GotoOMAPNo.95foranadditional outerloopdifferential stiffness iteratic:l. TA8PTtableprints[Kgl], [Kg],and{Ug}. SDR2calculates element forces (OEFB1) andstresses (9ESB1) andprepares displacement vectors (@uBGVl) andsingle-point forcesofconstraint (0Q8Gl) foroutputandtranslation components ofthedisplacement vector(PU8GV1) forthedifferential stiffness solution. 2.4-15(05/30/86)\nDISPLACEMENT RIGIDFORMATS 153. 154. 1550 156. 158. 160. 162. 164. 166. 168.@FPformats thetablesprepared bySDR2andplacesthemonthesystemoutputfilefor printing. GotoDMAPNo.157ifnodifferential stiffness solution deformed plotsarerequested, PLflTgenerates allrequested differential stiffness solution deformed structure andcontour plots. PRTMSGprintsplotter data,engineering data,andcontour dataforeachdifferential stiffness solution deformed plotgenerated. GotoDMAPNo.169andmakenormalexit. PrintErrorMessage No.1andterminate execution. PrintErrorMessage No.2andterminate execution. PrintErrorMessage No.3andterminate execution. PrintErrorMessage No.4andterminate execution. PrintErrorMessage No.5andterminate execution. 2.4-16(05/30/86)\nSTATICANALYSIS WITHDIFFERENTIAL STIFFNESS 2.4.3OutputforStaticAnalysis withDifferential Stiffness Thevalueofthedeterminant ofthesumoftheelastic stiffness andthedifferential stiffness isautomatically printed foreachdifferential stiffness loading condition. Iterative differential Iteration termination reasons havethefollowing meanings: 1. 2. 3. 4. 5. Parameter 1. 2. 3.REASONOmeansthestiffness computations areterminated foroneoffivereasons. areautomatically printed inaninformation message. Thesereasons iteration procedure wasincomplete atthetimeofexit.Thisis causedbyeitheranunexpected interruption oftheiteration procedure (i.e.,system abort)ortermination isnotscheduled (fortheotherfourreasons) atthecompletion of thecurrent iteration. REASON1meanstheiteration procedure converged totheEPSIOvaluesupplied bytheuser onaPARAMbulkdatacard.(Thedefault valueofEPSI@is1.0E-5.) REASON2meanstheiteration procedure isdiverging fromtheEPSIOvaluesupplied bythe useronaPARAMbulkdatacard.(Thedefault valueofEPS19is1.OE-5.) REASON3meansinsufficient timeremaining toachieve convergence totheEPSIOvalue supplied bytheuseronaPARAMbulkdatacard.(Thedefault valueofEPSIOis1.OE-5.) REASON4meansthenumberofiterations supplied bytheuseronaPARAMbulkdatacard hasbeenmet.(Thedefault numberofiterations is10.) tallyoutputasfollows: valuesatthetimeofexitareautomat Parameter DflNE:-1isnormal; toachieve convergence. Parameter SHIFT: +1indicates indicates areturntotopof iteration.+Nistheestimate ofthenumberofiterations required areturntothetopoftheinnerloopwasscheduled; theouterloopwasscheduled following thecurrent-1 Parameter DSEPSI: thevalueoftheratioofenergyerrortototalenergyatthetimeof exit. Thefollowing outputmayberequested: 1.Nonzero Components oftheapplied staticloadforthelinearsolution atselected grid points. 2.Displacements andnonzero components ofthesingle-point forcesofconstraint, withand without differential stiffness, atselected gridpoints. 3.Forcesandstresses inselected elements, withandwithout different’ alstiffness. e 2.4-17 (05/30/86)\nThefollowing itemsrelatetosubcase definition anddataselection Differential Stiffness: 1.TheCaseControl Deckmustcontain twosubcases. 2.Astaticloading condition mustbedefined abovethesubcase TEMPERATURE (LOAD), orDEFORMselection, unlessallloading is displacements onSPCcards.I 4. The 1. 2.DISPLACEMENT RIGIDFORMATS Scanned outputofforcesandelements inselected elements, following plotter outputmayberequested: Undeformed anddeformed plotsofthestructural model. Contour plotsofstresses anddisplacements. 2,4.4CaseControl DeckforStaticAnalysis withDifferential Stiffness forStaticAnalysis with levelwithaLOAD, specified bygridpoint 3.AnSPCsetmustbeselected abovethesubcase levelunlessallconstraints arespecified onGRIDcards. 4.Outputrequests thatapplyonlytothelinearsolution mustappearinthefirstsubcase. 5.Outputrequests thatapplyonlytothesolution withdifferential stiffness mustbe placedinthesecondsubcase. 6.Outputrequests thatapplytobothsolutions, withandwithout differential stiffness, ● maybeplacedabovethesubcase level. 2.4.5 Parameters forStaticAnalysis withDifferential Stiffness The 1.following parameters areusedinStaticAnalysis withDifferential Stiffness: ASET!ilUT -optional. Apositive integer valueofthisparameter causestheASEToutput datablocktobegenerated bytheGP4module. Anegative integer valueorOsuppresses thegeneration ofthisoutputdatablock. Thedefault valueisO. 2.AUTOSPC -reserved forfutureoptional use.Thedefault valueis-1. 3.BETAD-optional. Theinteger valueofthisparameter isthenumberofiterations allowed forcomputing theloadcorrection intheinner(load)loopbeforeshifting to theouter(stiffness) loop,whichadjusts thedifferential stiffness. Thedefault value is4iterations. 4.COUPMASS -CPBAR,CPROD,CPQUAD1, CPQUAD2, CPTRIA1, CPTRIA2, CPTUBE, CPQDPLT, CPTRPLT, 2.4-18(05/30/86)\n5. 6. 7. 8. 9. 10. .,11STATICANALYSIS WITHDIFFERENTIAL STIFFNESS CPTRBSC -optional. Theseparameters causethegeneration ofcoupled massmatrices ratherthanlumpedmassmatrices forallbarelements, rodelements, andplateelements thatinclude bending stiffness. EPSIfl-optional. Therealvalueofthisparameter isusedtotesttheconvergence of -5theiterated differential stiffness. Thedefault valueis10. GRDPNT-optional. Apositive integer valueofthisparameter causestheGridPoint WeightGenerator tobeexecuted andtheresulting weightandbalance information tobe printed. \u003c IRES-optional. Apositive integer valueofthisparameter causestheprinting ofthe residual vectors following theexecution oftheSSG3module. NT-optional. Theinteger valueofthisparameter limitsthecumulative numberof— iterations inbothloops, Thedefault valueis10iterations. SURFACE -optional. Thecomputations oftheexternal surface areasforthe two-dimensional andthree-dimensional elements areactivated bythisparameter whenthey aregenerated intheEMGmodule. Theresults aremultiplied bytherealvalueofthis parameter. Seethedescription underthePARAMbulkdatacardfordetails. VOLUME-optional. Thevolumecomputations forthetwo-dimensional and three-dimensional elements areactivated bythisparameter whentheyaregenerated in theEMGmodule. Theresults aremultiplied bytherealvalueofthisparameter, See thedescription underthePARAMbulkdatacardfordetails. ,.WTMASS-optional. Thetermsofthemassmatrixaremultiplied bytherealvalueof thisparameter whentheyaregenerated intheEMAmodule. 2.4.6RigidtormatErrorMessages fromStaticAnalysis withDifferential Stiffness Thefollowing fatalerrorsaredetected bytheDMAPstatements intheStaticAnalysis with Differential Stiffness rigidformat. Thetextforeacherrormessage isgivenbelowincapital letters andisfollowed byadditional explanatory material, including suggestions forremedial action. STATICANALYSIS WITHDIFFERENTIAL STIFFNESS ERR@RMESSAGE NO.1-NfISTRUCTURAL ELEMENTS HAVEBEEN DEFINED. Nostructural elements havebeendefined withConnection cards. STATICANALYSIS WITHDIFFERENTIAL STIFFNESS ERRfiRMESSAGE No.2-FREEBODYSUPPORTS NOTALL9WED. Freebodiesarenotallowed inStaticAnalysis withDifferential Stiffness. TheSUPORTcardsmust beremoved fromtheBulkDataDeckandotherconstraints applied ifrequired forstability. 2.4-19(05/30/86)\nDISPLACEMENT RIGIDFORMATS STATICANALYSIS WITHDIFFERENTIAL STIFFNESS ERRORMESSAGE No.3-NoGRIDP@INTDATAISSPECIFIED. Nopointshavebeendefined withGRIDorSPOINTcards. STATICANALYSIS WITHDIFFERENTIAL STIFFNESS ERR@RMESSAGE NO.4-MASSMATRIXREQUIRED F13RWEIGHT ANDBALANCE CALCULATIONS. Themassmatrixisnullbecause eithernoelements weredefined withConnection cards, nonstructural masswasnotdefined onaProperty card,orthedensity wasnotdefined onaMaterial card. STATICANALYSIS WITHDIFFERENTIAL STIFFNESS ERRORMESSAGE NO.5-NOINDEPENDENT DEGREES @FFREEDOM HAVEBEENDEFINED. Eithernodegrees offreedom havebeendefined onGRID,SP131NTorScalarConnection cards,orall defined degrees offreedom havebeenconstrained bySPC,MPC,OMITorGRDSETcards,orgrounded on ScalarConnection cards. 2.4-20 (05/30/86)\nDISPLACEMENT RIGIDFORMATS 2.5BUCKLING ANALYSIS 2.5.1DMAPSequence forBuckling Analysis RIGIDFORMAT OMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT5 LEVEL2.0NASTRAN DHAPCOMPILER -SOURCELISTING OPTIONS INEFFECT GO ERR=2 LIST NOOECK NO!iEF NOOSCAR\n1BEGIN 2PRECHK 3FILE 4PARAll 5GP1 6PLTTRAN 7GP2 8PARAML 9PURGE 10COND 11PLTSET 12PRTMSG 13PARAM 14PARAII 15COND 16PLOT 17PRTMSG 18LABEL 19GP3 20PARAM 21TA1DISP05-BUCKLING ANALYSIS -APR.1986$ ALL$ LAMA=APPEND/PHIA=APPEND $ //HPY/CARONO/O/O $ GEOMl,GEOM2,/GPL,EQEXIN,GPDT, CSTM,BGPDT,SIL/S,N,LUSET/ NOGPDT/MINUSIF=-l $ BGPDT,SIL/BGPDP,SIP/LUSET/S,N, LUSEP$ GEom2,EQExlN/EcT $ PCDB//fiPRES*////JUMPPLOT $ PLTSETX,PLTPAR,GPSETS,ELSETS/JUMPPLOl $ P1,JUMPPLOT $ PCDB,EQEXIN,ECT/PLTSETX,PLTPAR,GPSETS, ELSETS/S,N,NSIL/ S,N,JUMPPLOT $ PLTSETX//’ $ //*MPYf/PLTFLG/l/l $ //MPY/PFILE/O/O $ P1,JUMPPLOT $ PLTPAR,GPSETS, ELSETS,CASECC, BGPDT,EQEXIN,SI L,,ECT,,/PLOTXl/ NSIL/LUSET/S,N,JUMPPLOT/S,N, PLTFLG/S,N,PFILE $ ‘PLOTX1// $ P1$ GEOM3,EQEXlN,GEOM2/SLT,GPTT/S ,N,NOGRAV $ //~~ANDI/NOMGG/NOGRAV/V,Y,GRDPNT=-l $ ECT,E?T,BGPDT,SIL,GPTT,CSTM/EST,GE l,GPECT,,/ LUSET/S,N,NOSIMP/l/S,N,NOGENL/S,N ,GENEL$ 2.5-1(05/30/86)\nDISPLACEMENT RIGIDFORMATS RIGIDFORMAT DHAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 5 LEVEL2.0NASTRAN DMAPCOMPILER -SoURCE LlsTING 22COND 23PURGE 24PARAM 25EMG 26PURGE 27COND 28EMA 29LABEL 30COND 31EMA 32LABEL 33COND 34COND 35GPWG 36OFP 37LABEL 38EQUIV 39COND 40SMA3 41LABEL 42PARAM 43GP4 44CONDERROR1,NOSIMP $ OGPST/GENEL $ //ADD/NoKGGx/I/o $ EST,CSTM,MPT,DlT,GEOM2,/KELM, KDICT,MELM,/lDICT,,,/S,N,NOKGGX/ S,N,NOMGG////C,Y,COUPMAC,Y,,Y, CPBAR/ c,Y,cPRoo/c,Y,cPQuADl/c,Y,cPQuAD2/c,Y,cPTR lA1/c,Y,cPTRlA2/ C,Y,CPTUBE/C,Y ,CPQDPLT/C,Y,CPTRPLT/C ,Y,CPTRBSC/ V,Y,VOLUME/V,Y,SURFACE $ KGGX,GPST/NOKGGX/tIGG/NOMGG $ JMPKGG,NOKGGX $ G?ECT,KCIICT,KELM/KGGX,GPST $ JMPKGG $ JMPMGG,NOMGG $ GPECT,MOICT,MELM/MGG,/-l/C,Y,WTMASS=l .0$ JMPMGG $ LBL1,GRDPNT $ ERROR5,NOMGG $ BGPDP,CSTM,EQEXlN,MGG/OGPWG/V,Y,GROPNT/C,Y,WTMASS $ OGPWG,,,,,//S,N,CARONO $ LBL1$ KGGX,KGG/NOGENL $ LBL1l,NOGENL $ GEl,KGGX/KGG/LUSET/NOGENL/NOS IMP$ LBL1l$ \\*fipYf61NsKlpjolo $ CASECC,GEOM4,EQEXlN,GPDT,BGPOT,CSTM,GPST/RG,YS ,USET,ASET/ LUSET/S,N,MPCFl/S,N,MPCF2/S,N,S lNGLE/S,N,OMIT/S,N,REACT/ S,N,NSKIP/S,N,REPEAT/S,N,NOSET/S ,N,NOL/S,N,NOA/C,Y,ASETOUT/’ S,Y,AUTOSPC $ ERROR6,NOL $ 2.5-2(05/30/86)\nBUCKLING ANALYSIS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 5 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 45PARAM 46PURGE 47COND 48JUMP 49LABEL 50COND 51PARAH 52COND 53GPSP 54OFP 55LABEL 56EQUIV 57COND 58MCE1 59MCE2 60LABEL 61EQUIV 62COND 63SCE1 6kLABEL 65EQUIV 66COND 67SMP1 68LABEL 6gRBMG2 70SSG1//AND/NOSR/SINGLE/REACT $ GM/MPCFl/GO,KOO, LOO,PO,UOOV,RUOV/OMIT/PS,KFS, KSS,KDFS/SINGLE/ QG/NOSR $~ LBL4D,REACT $ ERROR2 $ LBL4D$ LBL4,GENEL $ //EQ/GPSPFLG/AUTOSPC/O $ LBL4,GPSPFLG $ GPL,GPST,USET,SIL/OGPST/S,N,NOGPST $ OGPST,,,,,//S,N,CARDNO $ LBL4$ KG6,KNN/MPCFl $ LBL2,MPCF1 $ USET,RG/GM $ USET,GM,KGG,,,/KNN,,, $ LBL2$ KNN,KFF/SINGLE $ LBL3,SINGLE $ USET,KNN ,,,/KFF,KFS,KSS,,, $ LBL3$ KFF,KAA/OMIT $ LBL5,0MIT $ USET,I(FF ,,,/GO,KAA,KOO,LOO,,,., $ LBL5$ KAA/LLL $ SLT,BGPDT, CSTM,SI L,EST,MPT,GPTT,EDT,MGG ,CASECC,DIT,/ PG,,,,/LUSET/l $ 2.5-3(05/30/86)\nDISPLACEMENT RIGIDFORMATS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIOFORMAT 5 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 71EQUIV 72COND 73SSG2 74LABEL 75SSG3 76COND 77MATGPR 78MATGPR 79LABEL 80SDR1 81SOR2 82OFP 83SCAN 84OFP 85COND 86PLOT 87PRTMSG 88LABEL 89TA1 90DSMG1 91EQUIV 92COND 93MCE2 94LABELPG,PL/NOSET $ LBL1O,NOSET $ USET,GM,YS,KFS,GO,,PG/,PO, PS,PL$ LBL1O$ LLL,KAA,PL,LOO,KOO,PO/ULV, UOOV,RULV,RUOV/OMIT/V,Y, lRES=-1/ l/S,N,EPSl $ LBL9,1RES $ GPL,USET,SIL,RULV//L $ GPL,USET,SIL,RUOV//O $ LBL9$ USET,PG,ULV,UOOV,YS,GO,GM, PS,KFS,KSS,/UGV,PGG,QG/l/ ABKLo* $ CASECC, CSTM,MPT,DIT,EQEX IN,SIL,GPTT,EDT,BGPDP, .QG,UGV,EST,,PGG/ OPG1,OQG1,OUGV1,OES1,OEF l,PUGV1/fBKLO\u003e: $ OUGVl,OPGl,OQGl,OEFl,OESl,//S ,N,CARONO $ cASECC,OESl,OEF1/OESFl/*RFt $ OESFl,,,,,//S,N,CARDNO $ P2,JUMPPLOT $ PLTPAR,GPSETS, ELSETS,CASECC, BGPOT,EQEXIN,S IP,PUGV1, ,GPECT, OES1/ PLOTX2/NSlL/LUSEP/JUMPPLOT/PLTF LG/S,N,PFILE $ PLoTx2// $ P2$’ ECT,EPT,BGPDT,SIL,GPTT,CSTM/Xl ,X2,X3,ECPT,GPCT/LUSET/ NOSIMP/O/NOGENL/GENEL $ CASECC,GPTT,S IL,EDT,UGV, CSTM,MPT,ECPT,GPCT,DIT/KDGG/ DSCOSET $ KOGG,KDNN/MPCFl $ LBL2D,MPCF1 $ USET,GM,KOGG,,,/KDNN ,,,$ LBL2D$ 2.5-4(05/30/86)\nBUCKLING ANALYSIS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 5 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 95 96 97 98 99 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119EQUIV COND SCE1 LABEL EQUIV SNP2 LABEL ADD DPD COND PARAM READ OFP COND SDR1 SDR2 OFP COND PLOT .PRTMSG LABEL JUMP LABEL PRTPARFIKDNN,KOFF/SINGLE $ LBL3D,SINGLE $ uSET,KDNN,,,/KDFF,KDFS, ,,,$ LBL3D$ KDFF,KDAA/OMIT $ USET,GO,KDFF/KDAA $ LBL5D$ KDAA,/KDAAM/(-l.0,0.0)/(0.0,0.0) $ DYNAMICS,GPL,SIL,USET/GPLD, SILD,USETD, ,,,,,,EED,EQDYN/ LUSET/LUSETD/NOTFL/NODLT/NOPSDL/NOFRL/ NONLFT/NOTRL/S,N,NOEED//NOUE $ ERROR3,NOEED $ //MPY/NEIGV/l/-l $ KAA,KOAAM, ,,EEO,USET,CASECC/LAMA,PHIA, ,OEIGS/BUCKLING/ s,N,NEIGv/2 $ DEIGS,LAMA,,,,//s,N,cARDNO $ ERROR~,NEIGV $ USET,,PHIA,,,Go,GM,,KFS,,/PHIG,,BQG/l/BKLl $ cASECC,CSTM,MPT,OIT,EQEXI N,SIL,,,BGPDP,LAMA,BQG,PH lG,EsT,,/ ,OBQG1,OPHIG,OBES1,OBEF1,PPH lG/BKLl $ OPHIG,OBQGl,OBEFl,OBESl,,//S ,N,CARDNO $ P3,JUMPPLOT $ PLTPAR,GPSETS, ELSETS,CASECC,BGPDT, EQEXIN,SI P,,PPHIG,GPECT, 0BESl/PLDTX3/NS lL/LUSEP/JUMPPLOT/PLTFLG/ S,N,PFILE $ PLoTx3// $ P3$ FINIS$ ERROR1 $ //-1/~~BUCKLING* $ 2.5-5(05/30/86)\nDISPLACEMENT RIGIDFORMATS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 5 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 120 121 122 123 124 I25 126 127 128 129 130 131 132LABEL pRTpARM LABEL PRTPARH LABEL PRTPARM LABEL PRTPARM LABEL PRTPARM LABEL PURGE ENDERROR2 $ //-2/aucKLING $ ERROR3 $ //-3/BucKLING $ ERROR4 $ //-4/BucKLING $ ERROR5 $ //-5/BucKLING $ ERROR6 $ //-6/BUCKLING $ FINIS$ DUMMY/MINUSl $ $ 2.5-6(05/30/86)\n2.5.2 5. 6. 7. 10. 11. 12. 15. 16. 17. 19. 21. 22. 25. 27. 28. 30. 31. 33. 34. 35. 36. 38. 39. 40. 43. 44. 47. 48.BUCKLING ANALYSIS Description ofImportant DMAPOperations forBuckling Analysis GP1generates coordinate system transformation matrices, tables ofgridpointlocations and tables relating theinternal andexternal gridpointnumbers. PLTTRAN modifies special scalargridpointsintheBGPDTandS11tables. GP2generates Element Connection Tablewithinternal indices. GotoDMAPNo.18iftherearenostructure plotrequests. PLTSETtransforms userinputintoaformusedtodrivethestructure plotter, PRTMSGprintserrormessages associated withthestructure plotter. GotoDMAPNo.18ifnoundeformed structure plotsarerequested. PLOTgenerates allrequested undeformed structure plots. PRTMSGprintsplotter dataandengineering dataforeachundeformed plotgenerated. GP3generates StaticLoadsTableandGridPointTemperature Table. TA1generates element tablesforuseinmatrixassembly andstress recovery. GotoDMAPNo.118andprintErrorMessage No,1ifnostructural elements havebeen defined. EMGgenerates structural element stiffness andmassmatrixtablesanddictionaries forlater assembly bytheEMAmodule. GotoDMAPNo.29ifnostiffness matrixistobeassembled. EMAassembles stiffness matrix [Kg]andGridPointSingularity Table. GotoDMAPNo.32ifnomassmatrix istobeassembled. EMAassembles massmatrix [Mgg]. GotoDMAPNo.37ifnoweight andbalance information isrequested. GOtoDMAPNo.126andprintErrorMessage No.5ifnomassmatrix exists. GPWGgenerates weight andbalance information. 13FPformats theweight andbalance information prepared byGPWGandplacesitonthesystem outputfileforprinting. Equivalence [Kg]to[Kgg]iftherearenogeneral elements. GotoDMAPNo.41iftherearenogeneral elements. SMA3addsgeneral elements to[K\u0026]toobtainstiffness matrix[Kgg]. GP4generates flagsdefining members ofvarious displacement sets(USET), formsmultipoint constraint equations [Rgl{ug}=Oandformsenforced displacement vector{Ys}. GotoDMAPNo.128andprintErrorMessage No.6ifnoindependent degrees offreedom are defined. GotoDMAPNo.49iftherearenofree-body supports. GotoDMAPNo.120andprintErrorMessage No.2. 2,5-7(05/30/86)\n50. 52. 53. 54. 56. 57. 58, 59. 61. 62. 63. 65. 66. 67. 69. 70. 71.DISPLACEMENT RIGIDFORMATS GotoDMAPNo.55ifgeneral elements arepresent. GotoDMAPNo.55ifnopotential gridpointsingularities exist. GPSPgenerates atableofpotential gridpointsingularities. OFPformats thetableofpotential gridpointsingularities prepared byGPSPandplacesit onthesystemoutputfileforprinting. Equivalence [Kgg]to[Knn]iftherearenomultipoint constraints. GotoDMAPNo.60iftherearenomultipoint constraints. MCE1partitions multipoint constraint equations [Rg]=[RmRn] andsolvesfor multipoint constraint transformation matrix[Gm]=-[Rml-l[Rnl. MCE2partitions stiffness matrix [Kgg]= [1\u003e+mnmm andperforms matrix reduction [Knn]=[knn]+[G;][Kmn] Equivalence [Knnlto[Kff]ifnosin91e-Point+[Kn][Gm] +[G~][Kmm][Gm]. constraints exist. GotoDMAPNo.64ifnosingle-point constraints exist. SCE1partitions outsingle-point constraints [1‘ff‘‘fs[Knn]=~~K— . SfSs Equivalence [Kff]to[Kaalifnoomitted coordinates exist. GotoDMAPNo.68ifnoomitted coordinates exist. SMP1partitions constrained stiffness matrix r- 1 IIKIK [Kff]=:K 3 oa00L -1 solves fortransformation matrix [Go]=-[KGol-l[Koal andperforms matrixreduction [Kaa]=[aa]+[Ka][Go] . RMBG2decomposes constrained stiffness matrix[Kaa]=[LLLIIULLI. SSG1generates staticloadvectors {Pg}. Equivalence {Pg}to{PL}ifnoconstraints areapplied. 2.5-8(05/30/86)\nBUCKLING ANALYSIS 72.GotoDMAPNo,74ifnoconstraints areapplied. 73.SSG2applies constraints tostaticloadvectors HPn {Pg}=—–, Pm{Pn}={Fn}+[G;l{Pm} s Hif{Pn}=—-, {Pf}={f}-[Kfsl{ys} P 11Pa and{Pf}=—- and {Pi}={Pa}+[G;]{po? . P. 75.SSG3solvesfordisplacements ofindependent coordinates {uk}=[KLL]-l{PL} , solvesfordisplacements ofomitted coordinates {u;]=[KOOI-l{PO} , calculates residual vector (RULV) andresidual vector error ratioforindependent coordinates {\u0026Pi} ‘k andcalculates residual vector coordinates {6PO} ‘o={PI]-[K~k]{ut} , {u:}{\u0026PL} . {P]}{ut} (RUOV) andresidual vector errorratioforomitted ={Po}-[KOOI{I.$ , {U:}{6PO} = . ~pT}{uol 00 76.GotoDMAPNo.79ifresidual vectors 77.MATGPRprintstheresidual vectorfor 78.MATGPRprintstheresidual vectorforarenottobeprinted. independent coordinates (RULV). omitted coordinates (RUOV). 2.5-9(05/30/86)\nDISPLACEMENT RIGIDFORMATS 80.SDR1recovers dependent displacements {uo}=[GO]{UL} +{us}, HUa ——={Uf}, U.II‘f_.{Un}, Ts {urn}=[Gm]{un} ,‘u IIn={Ug}—— ‘m andrecovers single-point forcesofconstraint {qs}=-{PS}+[K;sl{uf} +[KSSI{YS}. 81.SDR2calculates element forces(OEFl) andstresses (OESl)andprepares loadvectors (@pGl), displacement vectors (!3UGV1) andsingle-point forcesofconstraint (9QG1)foroutPutand translation components ofthedisplacement vector(PUGV1) forthestaticsolution. 82.!2FPformats thetablesprepared bySDR2andplacesthemonthesystemoutputfilefor printing. 83.SCANexamines theelement stresses andforces calculated bySDR2andgenerates scanned output thatmeetsthespecifications setbytheuser. 84.OFPformats thescanned outputtableprepared bySCANandplacesitonthesystemoutput fileforDrintina.. 85.GotoDMAPNo.88ifnostaticsolution deformed structure plotsarerequested. 86.PLOTgenerates allrequested staticsolution deformed structure andcontour plots.— 87.PRTMSG prints plotter data,engineering data,andcontour dataforeachstatic solution deformed plotgenerated. 89.TA1generates element tablesforuseindifferential stiffness matrixassembly. 90.DSMG1generates differential stiffness matrix [Kg]. 91.Equivalence [Kg]to[Kn]ifnomultipaint constraints exist. 92.GotoDMAPNo.94ifnomultipoint constraints 93.MCE2partitions differential stiffness matrixexist. andperforms matrixreduction [Kn]=[;n]+[G:][K#n] +[K\u0026][Gm] 95.Equivalence [Kn] 96.GOtoDMAPNo,98to[K~f]ifnosingle-point constraints ifnosingle-point constraints exist. 2.5-10(05/30/86)+[G;][K;M][GM]. exist.\nBUCKLING ANALYSIS 97.SCE1partitions outsingle-point constraints r 1 K:fIK;s [K;n]=–+– . KdIKd SfSs 99.Equivalence [K$flto[Kalifnooitted cordinates exist, 100.GotoDMAPNo,102ifnoomitted coordinates exist. 101.SMP2partitions constrained differential stiffness matrix [K:f] andperforms matrix reduction [Ka]=[~a]+[1‘dKaaIKd .–+ . KdIKd oa00 [Ka]TIGo] +[Go]TIKa] +[Go]TIKol[Gol. 103,ADD-[Ka]andnothing tocreate[Kfll. 104.DPDextracts Eigenvalue Extraction DatafromDynamics datablock. 105.GotoDMAPNo.122andprintErrorMessage No.3ifthereisnoEigenvalue Extraction Data. 107.READextracts realeigenvalues andeigenvectors fromtheequation [Kaa+A\u0026]{ua} =O andnormalizes eigenvectors according tooneo“ 1Unitvalueofaselected component ;Unitvalueofthelargest component.thefollowing userrequests: 108.flFPformats theeigenvalues (LAMA)andsumary ofeigenvalue extraction information (OEIGS) prepared byREADandplacesthemonthesystemoutputfileforprinting. 109.GotoDMAPNo.124andprintErrorMessage No.4ifnoeigenvalues werefound. 110.SDR1recovers dependent components oftheeigenvectors {+.}=[Go]{@a}\u003e‘$a H={Of}!—— ‘$0 II‘+n——={$g} @m 2.5-11 (05/30/86j\nandrecovers single-poDISPLACEMENT RIGIDFORMATS ntforcesofconstraint {qs}=[K~s]{Of}. 111.SDRZcalculates element forces(OBEFl) andstresses (OBES1) andprepares eigenvectorso (@PHIG)andsingle-point forcesofconstraint (@BQGl)foroutputandtranslation components oftheeigenvectors (PPHIG) forthebuckling solution. 112.@FPformats thetablesprepared bySDR2andplacesthemonthesystemoutputfilefor printing. 113.GotoDMAPNo.116ifnobuckling solution deformed structure plotsarerequested. 114.PLOTgenerates allrequested buckling solution deformed structure andcontour plots. 115.PRTMSGprintsplotter data,engineering data,andcontour dataforeachbuckling solution deformed plotgenerated. 117.Goto 119.Print 121.Print 123.Print 125.Print 127.Print 129.PrintDMAPNo.130andmakenormalexit. ErrorMessage No.1andterminate execution. ErrorMessage No.2andterminate execution. ErrorMessage No.3andterminate execution. ErrorMessage No.4andterminate execution. ErrorMessage No.5andterminate execution. ErrorMessage No.6andterminate execution. 2.5-12 (05/30/86)"},"title":"User's Manual P6"},"/docs/users/users_manual_007/":{"data":{"":"BUCKLING ANALYSIS 2.5.3OutputforBuckling Analysis Thesummary oftheeigenvalues associated withthebuckling modesandthesummary ofthe eigenvalue analysis performed, asdescribed intheNormalModeAnalysis rigidformat(seeSection 2.3.3), areautomatically printed. The 1. 2. 3. 4. The 1. 2.following outputmayberequested: Displacements andnonzero components ofthestaticloadsandsingle-point forcesof constraint atselected gridpointsforthestaticanalysis. Forcesandstresses inselected elements forthestaticloading condition. Modeshapesandnonzero components ofthesingle-point forcesofconstraint atselected gridpointsforselected modes. Scanned outputofforcesandelements inselected elements. following plotter outputmayberequested: Undeformed plotofthestructural modelandmodeshapesforselected buckling modes. Contour plotsofstresses anddisplacements forselected buckling modes. 2.5.4CaseControl DeckforBuckling Analysis Thefollowing itemsrelatetosubcase definition anddataselection forBuckling Analysis: 1.TheCaseControl Deckmustcontain atleasttwosubcases. Subcases beyondthesecond areusedonlyforoutputselection. 2.METHODmustappearinthesecondsubcase toselectanEIGBcardfromtheBulkDataDeck. 3.Astaticloading condition mustbedefined inthefirstsubcase witha1.f9AD,TEMPERATURE (LOAD), orDEFORMselection, unlessallloading isspecified bygridpointdisplacements onSPCcards. 4.AnSPCsetmustbeselected abovethesubcase level,unlessallconstraints are specified onGRIDcards. 5.Outputrequests thatapplyonlytothesolution understaticloadmustbep“ firstsubcase. 6.Outputrequests thatapplytothebuckling solution onlymustbeplacedinacedinthe thesecond andsucceeding subcases. Ifonlytwosubcases exist,theoutputrequests inthesecond subcase willbehonored forallbuckling modes. 7.Outputrequests thatapplytoboththestaticsolution andthebuckling modesmaybe placedabovethesubcase level. 2.5-13(05/30/86)\nDISPLACEMENT RIGIDFORMAIS 2.5.5Parameters forBuckling Analysis Thefollowing parameters areusedinBuckling Analysis: 1. 2. 3. 4, ~ 6, 7. 8.ASETIINJT -optional. Apositive integer valueofthisparameter causestheASEToutput datablocktobegenerated bytheGP4module. Anegative integer valueorOsuppresses thegeneration ofthisoutputdatablock. Thedefault valueisO. AUT@SPC -reserved forfutureoptional use.Thedefault valueis-1. C@UPMASS -CPBAR,CPR@D,CPQUAD1, CPQUAD2, CPTRIA1, CPTRIA2, CPTUBE, CPQDPLT, CPTRPLT, CPTRBSC -optional. Theseparameters causethegeneration ofcoupled massmatrices ratherthanlumpedmassmatrices forallbarelements, rodelements, andplateelements thatinclude bending stiffness. GRDPNT-optional. WeightGenerator to printed. IRES-optional. A residual vectors fo’ SURFACE -optional two-dimensional and aregenerated inth parameter, SeetheApositive integer valueofthisparameter causestheGridPoint beexecuted andtheresulting weightandbalance information tobe positive integer valueofthisparameter causestheprinting ofthe lowingtheexecution oftheSSG3module. Thecomputations oftheexternal surface areasforthe three-dimensional elements areactivated bythisparameter whenthey EMGmodule. Theresults aremultiplied bytherealvalueofthis ●description underthePARAMbulkdatacardfordetails. VOLUME -optional. Thevolume computations forthetwo-dimensional and three-dimensional elements areactivated bythisparameter whentheyaregenerated In theEMGmodule. Theresults aremultiplied bytherealvalueofthisparameter. See thedescription underthePARAMbulkdatacardfordetails. WTMA~-optional. Thetermsofthemassmatrixaremultiplied bytherealvalueof thisparameter whentheyaregenerated intheEMAmodule. 2.5.6Optional Diagnostic OutputforFEER Special detailed information obtained byrequesting DIAG16intheExecutive Control Deckis thesameasthatdescribed underNormaModesAnalysis (seeSection 2.3.6). 2.5-14(05/30/86)\nBUCKLING ANALYSIS 2.5.7RigidFormatErrorMessages fromBuckling Analysis ●Thefollowing fatalerrors aredetected bytheDMAPstatements intheBuckling Analysis rigidformat. Thetextforeacherrormessage isgivenbelowincapital letters andisfollowed by additional explanatory material, including suggestions forremedial .action. BUCKLING ANALYSIS ERRORMESSAGE NO.1-NOSTRUCTURAL ELEMENTS HAVEBEENDEFINED. Nostructural elements havebeendefined withConnection cards. BUCKLING ANALYSIS ERRORMESSAGE NO.2- Freebodiesarenotallowed inBuckling DataDeckandotherconstraints applied BUCKLING ANALYSIS ERR@RMESSAGE N@.3- ANALYSIS.FREEBODYSUPPORTS N@TALLOWED. Analysis. TheSUPORTcardsmustberemoved fromtheBulk ifrequired forstability. EIGENVALUE EXTRACTION DATAREQUIRED FORREALEIGENVALUE Eigenvalue extraction datamustbesupplied onanEIGBcardintheBulkDataDeckandMETHODinthe CaseControl DeckmustselectanEIGBset. BUCKLING ANALYSIS ERRORMESSAGE NO.4-Nf!EIGENVALUES FOUND. Nobuckling modesexistintherangespecified bytheuser. BUCKLING ANALYSIS ERRORMESSAGE N135-MASSMATRIXREQUIRED FORWEIGHTANDBALANCE CALCULATI13NS. aThemassmatrixisnullbecause eithernoelements weredefined withConnection cards, nonstructural masswasnotdefined onaProperty cardorthedensity wasnotdefined onaMaterial card. BUCKLING ANALYSIS ERRORMESSAGE N!d.6-NOINDEPENDENT DEGREES OFFREEDOMHAVE BEENDEFINED. Either nodegrees offreedom havebeendefined onGRID,SPOINTorScalarConnection cards, orall defined degrees offreedom Scalar Connection cards.havebeenconstrained bySPC,MPC,klMITorGRDSETcards, orgrounded on 2.5-15(05/30/86)\nDISPLACEMENT RIGIDFORMATS 2.5-16(05/30/86)\nDISPLACEMENT RIGIDFORMATS 2.6PIECEWISE LINEARSTATICANALYSIS ●2.6,1DMAPSequence forPiecewise LinearStaticAnalysis RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 6 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING OPTIONS INEFFECT GO ERR=2 LIST NODECK NOREF NOOSCAR\n1BEGIN 2PRECHK 3FILE 4PARAM 5GP1 6PLTTRAN 7GP2 8PARAHL 9PURGE 10COIJD 11PLTSET 12PRTMSG 13PARAM lbPARA!I 15CONO 16PLOT 1?PRTmsG 18LABEL 19GP3 20PARAN 21TA1DISP06-PIECEWISE LINEARSTATICANALYSIS -APR.1986$ ALL$ QGl=APPEND/UGVl=APPEND/KGGSUM=SAVE/PGVl=APPEND $ //tipY/CARDNO/O/O $ GEOMl,GEOM2,/GPL,EQEXIN,GPDT, CSTM,BGPDT,SIL/S,N,LUSET/ NOGPOT/MINUSl=-l $ BGPDT,SIL/BGPOP,SIP/LUSET/S,N, LUSEP$ GEoM2,EQExlN/EcT $ PCDB//PRES////JUMPPLOT $ PLTSETX,PLTPAR,GPSETS,ELSETS/JUMPPLOT $“ PI,JUMPPLOT $ PCOB,EQEXIN,ECT/PLTSETX,PLTPAR,GPSETS, ELSETS/S,N,NSIL/ S,N,JUMPPLOT $ PLTSETX// $ //fOIPYf~/PLTFLG/l/l $ //HPYfc/PFILE/O/O $ P1,JUMPPLOT $ PLTPAR,GPSETS, ELSETS,CASECC, BGPDT,EQEXIN,SIL, ,ECT,,/PLOTXl/ NSIL/LUSET/S,N,JUMPPLOT/S,N,PLTFLG/s ,N,PFILE $ PLOTX1// $ P1$ GEOM3,EQEXlN,GEOM2/SLT,GPTT/S,N,NOGRAV $ //f~AND/SKPMGG/NOGRAV/V,Y,GRDPNT $ ECT,EPT,BGPDT,SI L,GPTT,CSTM/EST,GEl ,GPECT,ECPT,GPCT/ LusET/s,N,NoslMP/2/s,N,NoGENL/s,N,GENEL $ 2.6-1(05/30/86)I\nDISPLACEMENT RIGIDFORMATS RIGIDFORMAT OMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 6 LEVEL2.0NASTRAN OMAPCOMPILER -SOURCE LISTING 22 23. 2k 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41PARAM COND PURGE COND PARAH PARAN EMG PURGE COND EMA LABEL COND iEHA LABEL COND COND GPWG OFP LABEL PLA1 CON(I PURGE PARAM//AND/NOELMT/NOGENL/NOS IMP ERROR4,NOELMT $ KGGX,GPST/NOSl MP/OGPST/GENEL LBL1,NOSIMP $ //ADD/NOKGGX/l/O $ //AoD/NoIItGG/l/0 $$ $ EST,CSTM,MPT,DlT,GEOM2,/KELM, KDICT,MELM,MDICT,,,/S,N,NOKGGX/ S,N,NOMGG////C,Y,COUPMAC,Y,CPBARBC,Y,,Y, CPROD/ c,Y,cPQuAD1/c,Y,cPQuAD2/c,Y, cPTRIA1/c,Y,cPTRlA2/c,Y9cPTuBE/ C,Y,CPQDPLT/C,Y,CTRPLT/C,Y, CPTRBSC/ V,Y,VOLUME/V,Y,SURFACE $ KGGX,GPST/NOKGGX/MGG/NOt4GG $ JMPKGG,NOKGGX $ GPECT,KDlCT,KELM/KGGX,GP5T $ JMPKGG $ JMPMGG,NOMGG $ GPEC~,MDICT,MELM/MGG,/-l/C,Y ,WTMASS=l.O $ JHPHGG $ LBL1,GRDPNT $ ERROR3,NOMGG $ BGPDP,CSTM,EQEXIN,MGG/OGPWG/V,Y,GROPNT=- l/V,Y,WTMASS $ OGPWG,,,,,//s,N.CARDNO $ LBL1$ CSTM,MPT,ECPT,GPCT,DIT,CASECC, EST/KGGXL,ECPTNL,ESTL,ESTNL/S ,N, KGGLPG/S,N,NPLAL lM/S,N,ECPTNLPG/S,N,PLSETNO/S,N,NONLSTR/S,N, PLFACT $ ERROR1,ECPTNLPG $ ONLES,ESTNLl/NONLSTR $ //*ADD$~/ALWAYS/-l/O $ 2.6-2(05/30/86)\nPIECEWISE LINEARSTATICANALYSIS eRIGIDFORMAT DNAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 6 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 45 46 47 48 49 50 51 52 53 54, 55 56 57 58 59 60 61 62 63 64 65 66 67 68PARAH EQUIV CONO SMA3 SMA3 LABEL PARAM GP4 PARAM PURGE SSG1 EQUIV COND PARAM CONO GPSP OFP LABEL PARAM EQUIV COND MCE1 LABEL EQUIV//ADD/NEVER/l/O $ KGGX,KGG/NOGENL/KGGXL,KGGL/NOGENL $ LBL1l,NOGENL $ GEl,KGGX/KGG/LUSET/NOGENL/NOS IMP$ GEl,KGGXL/KGGL/LUSET/NOGENL/KGGLPG $ LBLII$ //MPY/NSKIP/O/O $ CASECC,GEOM4,EQEXlN,GPDT,BGPOT,CSTM,GPST/RG,YS, USET,ASET/ LUSET/S,N,MPCFI/S,N,MPCF2/S,N,S lNGLE/S,N,OMIT/S,N,REACT/ S,N,NSKlP/S,N,REPEAT/S,N,NOSET/S,N,NOL/S,N,NOA/C,Y,ASETOUT/ S,Y,AUTOSPC $ //AND/NOSR/S INGLE/REACT $ KRR,KLR,QR,DM/REACT/Gt4/MPCF l/GO,KOO,LOO,PO, UOOV,RUOV/OMIT/PS, KFS,KSS/SINGLE/QG/NOSR $ SLT,BGPDT,CSTM,SIL,EST,MPT, ,,MGG,CASECC,OIT,/PGl,,, ,/ LUSET/1 $ PGl,PL/NOSET $ LBL4,GENEL $ //EQ/GPSPFLG/AUTOSPC/O $ LBL4,GPSPFLG $ GPL,GPST,USET,SIL/OGPST/S,N,NOGPST $ OGPST,,,,,//S,N,CARDNO $ LBL4s //AOD/PLACOUNT/l/O $ KGG,KNN/MpCFl $ LBL2,MPCF1 $ USET,RG/GM $ LOOPBGN $ KGG,KNN.h’4PCFl $ 2.6-3(05/30/86)\nDISPLACEMENT RIGIDFORMATS RIGIDFORMAT OMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 6 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 69CONO 70MCE2 71LABEL 72EQUIV 73CONO 74SCE1 75LA8EL 76EQUIV 77COND 78SMP1 79LABEL 80EQUIV 81COND 82RBMGI 83LABEL 84OECOMP 85CONO 86CONO 87RBMG3 88LABEL 89ADO 90CONO 91SSG2 92LABEL 93SSG3LBL2,MPCF1 $ USET,GM,KGG ,,,/KNN,,, $ LBL2$ KNN,KFF/SINGLE $ LBL3,SINGLE $ USET,KNN ,,,/KFF,KFS,KSS,,, $ LBL3$ KFF,KAA/OMIT $ LBL5,0MIT $ USET,KFF ,,,/GG,KAA,KOO,LOO,,,,, $ LBL5s KAA,KLL/REACT $ LBL6,REACT $ USET,KAA,/KLL,KLR,KRR,,, $ LBL6$ KLL/LLL,/l/O/MINDIAGK/OETKLLXX/ lDETKLLX/ S,N,SINGKLLX $ PLALBL4,SINGKLLX $ LBL7,REACT $ LLL,KLR,KRR/OM $ LBL7$ PGl,/PG/PLFACT $ LBLIO’,NOSET $ USET,GM,YS,KFS,GO,OM,PG/QR, PO,PS,PL $ LBL1O $ LLL,KLL,PL,LOO,KOO,PO/ULV,UOOV,RULV,RUOV/OMl T/V,Y,lRES=-l/ PLACOUNT/S,N,EPSl $ 2.6-4(05/30/86) 9\nPIECEWISE LINEARSTATICANALYSIS ,0RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 6 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 94COND 95MATGPR 96MATGPR 97LABEL 98SDR1 99PLA2 100EQUIV 101COND 102PLA3 103OFP 104LABEL 105PARAM 106COND 107PLA4 106EQUIV 109COND 110ADD 111LABEL !12EQUIV 113REPT 114JUMP 115LABEL 116PRTPARM 117LABELLBL9,1RES $ GPL,USET,SIL,RULV//L $ GPL,USET,SIL,RUOV//O $ LBL9$ USET,PG,ULV,UOOV,YS,GO,GM,PS,KFS,KSS,QR/DELTAUGV, OELTAPG, OELTAQG/1/STATICS $ DELTAUGV,DELTAPG,DELTAQG/UGVl ,PGVl,QGl/S,N,PLACOUNT $ ESTNL,ESTNLl/NEVER/ECPTNL,ECPTNL l/NEVER $ PLALBL2A,NONLSTR $ CSTM,MPT,DIT,DELTAUGV, ESTNL,CASECC/ONLES, ESTNLl/PLACOUNT/ PLSETNO $ ONLES,,,,,//S,N,CARDNO $ PLALBL2A $ //SUB/DIFF/NPLALIM/PLACOUNT $ PLALBL5,DIFF $ CSTM,MPT, ECPTNL,GPCT,D lT,DELTAUGV/KGGNL, ECPTNLl/S,N,PLACOUNT/S, N,PLSETNO/S,N,PLFACT $ KGGNL,KGGSUM/KGGLPG $ PLALBL3,KGGLPG $ KGGNL,KGGL/KGGSUM $ PLALBL3 $ ESTNLl,ESTNL/ALWAYS/ECPTNL l,ECPTNL/ALWAYS/KGGSUM,KGG/ALWAYS LDOPBGN,360 $ ERROR2 $ PLALBL4 $ //-5/?tPLA9f s PLALBL5 $s I 2.6-5(05/30/86)\nDISPLACEMENT RIGIDFORMATS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIOFORMAT 6 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 118SDR2 119OFP 120SCAN 121OFP 122COND 123PLOT 124PRTMSG 125LABEL 126JUMP 127LABEL 128PRTPARM 129LABEL 130PRTPARM 131LABEL 132PRTPARM 133LABEL 134PRTPARM 135LABEL 136PURGE 137‘ENDCASECC,CSTM,MPT,DIT, EQEXIN, SIL,GPTT, EDT,BGPDP, ,QG1,UGV1 ,ESTL,, PGVl/OPGl,OQGl,OUGVl,OESl,OEF l,PUGV1/PLA $ OUGVl,OPGl,OQGl,OEFl,OESl,//S,N, CARDNO $ CASECC,OESl,OEF1/OESFl/RF $ OESF1,,,,,//S,N,CARDNO $ P2,JUMPPLOT $ PLTPAR,GPSETS, ELSETS,CASECC, BGPDT,EQEXIN,SIP,PUGVl,,ECPT,OESl/ PLOTX2/NSlL/LUSEP/JUMPPLOT/PLTFLG/S,N,PF ILE$ PLoTx2// $ P2$ FINIS$ ERROR1 $ //-1/pLA $ ERROR2 $ //-2/PLA $ ERROR3 $ //-3/FJLA $ ERROR4 $ //-4/PLA $ FINIS$ OUMMY/MINUSl $ $ 2.6-6(05/30/86)\n2.6.2 @5. 6. 7. 10. 11. 12. 15. 16. 17. 19. 21. 23. 25. 28. 30. 031. 33. 34. 36. 37. 38. 39. 41. 42. 46. 47. 48.PIECEWISE LINEARSTATICANALYSIS Description ofImportant DMAPOperations forPiecewlse LinearStaticAnalysis GP1generates coordinate systemtransformation matrices, tablesofgridpointlocations, and tablesrelating theinternal andexternal gridpointnumbers. PLTTRAN modifies special scalargridpointsintheBGPDTandSILtables. GP2generates Element Connection Tablewithinternal indices. GotoDMAPNo,18iftherearenostructure plotrequests. PLTSETtransforms userintputintoaformusedtodrivethestructure plotter. PRTMSGprintserrormessages associated withthestructure plotter. GotoDMAPNo.18ifnoundeformed structure plotsarerequested. PLOTgenerates allrequested undeformed structure plots. pRTMSGprintsplotter dataandengineering dataforeachundeformed plotgenerated. GP3generates StaticLoadsTableandGridPointTemperature Table. TA1generates element tablesforuseinmatrixassembly andstressrecovery. GotoDMAPNo.133andprintErrorMessage No.4ifnoelements havebeendefined. GotoOMAPNo.40iftherearenostructural elements. EMGgenerates structural element stiffness andmassmatrixtablesanddictionaries forlater assembly bytheEMAmodule. GotoDMAP No.32ifnostiffness matrixistobeassembled. EMAassembles stiffness matrix[Kg]andGridPointSingularity Table. GotoDMAPNo.35ifnomassmatrixistobeassembled. EMAassembles massmatrix[Mgg]. GotoDMAPNo.40ifnoweightandbalance information isrequested. GotoDMAPNo.131andprintErrorMessage No.3ifnomassmatrix exists. GPWGgenerates weightandbalance information. !dFPformats theweightandbalance information prepared byGPWGandplacesitonthesystem outputfileforprinting. PLA1extracts thelineartermsfrom[K\u0026]togive[K~~],extracts thenonlinear entries fromtheElement Connection andProperties TabletogiveECPTNL, andseparates thelinear andnonlinear entries intheElement Summary TabletogiveESTLandESTNL. GotoDMAPNo.127andprintErrorMessage No.1ifnoelements haveastress-dependent modulus ofelasticity. Equivalence [Kg] GotoDMAPNo.50 SMA3addsgeneralto[Kgg]and[K~~]to[K\u0026]iftherearenogeneral elements. iftherearenogeneral elements. elements to[K~g]toobtainstiffness matrix[Kgg]. 2.6-7(05/30/86)\n49. 52. 55. 56. 57. 59. 60. 61. 64. 65. 66. 67. 68. 69. 70. 72. 73, 74. 76. 77. 78.DISPLACEMENT RIGIDFORMATS SMA3addsgeneral elements to[K~~]toobtainstiffness matrixoflinearelements [K;’]. GP4generates flagsdefining members ofvarious displacement sets(USET)andforms multipoint constraint equations [Rg]{ug}=O. SSG1generates totalstaticloadvector{P:}. Equivalence {Pi}to{Pg}ifnoconstraints areapplied. GotoDMAPNo.62iggeneral elements arepresent. GotoDMAPNo.62ifnopotential gridpointsingularities exist. GPSPgenerates atableofpotential gridpointsingularities. OFPformats thetableofpotential gridpointsingularities prepared byGPSPandplacesit onthesystemoutputfileforprinting. Equivalence [Kgg]to[Knn]ifnomultipoint constraints exist. GotoDMAPNo.71ifnomultipoint constraints exist. MCE1partitions multipoint constraint equations [Rg]=[RmfRn]andsolvesfor multipoint constraint transformation matrix[Gm]=-[Rln]-l[Rn]. Beginning ofloopforadditional loadincrements. Equivalence [Kgg]to[Knn]ifnomultipoint constraints exist. GotoDMAPNo.71ifnomultipoint constraints exist. MCE2partitions stiffness matrix [1iIK [Kgg]=fK mnmm andperforms matrixreduction [Knn]=[inn]+[G;l[Kmnl +[K:nl[Gml +[G:l[Kmml[$J. Equivalence [Knn]to[Kff]ifnosingle-point constraints exist. GotoDMAPNo.75ifnosingle-point constraints exist. SCE1partitions outsingle-point constraints [1‘ff’‘fs[Knn]=~~K–. SfSs Equivalence [Kff] GotoDMAPNo.79to[Kaa]ifnoomitted coordinates exist. ifnoomitted coordinates exist. SMP1partitions constrained stiffness matrix 2.6-8(05/30/86)\nPIECEWISE LINEARSTATICANALYSIS [1KlKao [Kff]=~~K— , oa00 solvesfortransformation matrix [Go]=-[Kool-l[Koa] andperforms matrixreduction [Kaal=[aal+[Kal[Gol . 80.Equivalence [Kaa]to 81.GotoDMAPNo.83if 82.RBMG1partitions out[KLL]ifnofree-body nofree-body supports free-body supportssupports exist. exist. 84.DECOMPdecomposes constrained stiffness matrix 85.GotoDMAPNo.115andprintErrorMessage No. (i.e.,localplasticity).[Kit]=[LLJ[UJ. 5ifstiffness matrix[KLL]issingular 86.GotoDMAPNo.88ifnofree-body supports exist. 87.RBMG3formsrigidbodytransformation matrix [D]=-[Kiil-l[Kflrl, calculates rigidbodycheckmatrix [x]=[Krr]T+ [KJID1 andcalculates rigidbodyerrorratio E=x, TP-1-TKrr 89.ADOmultiplies totalloadvector{P~lbyfactor,PLFACT, andaddsittonothing toobtain applied loadvector{pg}forcurrent looP. 90.GotoDMAPNo.92ifnoconstraints areapplied. 91.SSG2applies constraints tostaticloadvectors forcurrent loop IIPn {Pg}=—– \u003e {Pn}={~n}+[G:]{pm}\u003e Pm Hif{Pn}=—– , Ps{Pf}={~f}-[Kfs]{ys} , 2.6-9(05/30/86)\nIIFj{Pf}=—– , P. andcalculates incrementalDISPLACEMENT RIGIDFORMATS . {Pa}={Pa}+[G~]{Po} , determinate forcesofreaction {Clr}=-{Pr}-[DT]{PL}, 93,SSG3solvesfordisplacements ofindependent coordinates {ul}=[KLL]-l{PL} , solves fordisplacements ofomitted coordinates {u~}=[KOOI-l{PO} , calculates residual vector (RULV)andresidual vector coordinatesforcurrent loop errorratioforindependent {\u0026PL}={Pk}-[KL,]{uLI , {u;}{\u0026Pt} ‘i= {P:}{UL} andcalculates residual vector(RUIBV)andresidual vectorerrorratioforomitted coordinates {bPo}={Pol-[KOO]{U:} , {U:}{6PO} and‘o= {P:}{u:} 94.GotoDMAPNo.97ifresidual vectors 95.MATGPRprintstheresidual vectorfor 96.MATGPRprintstheresidual vectorforarenottobeprinted. independent coordinates (RULV). omitted coordinates (RUOV). 2.J5-10(05/30/86)\n98. 99. 100. 101. 102. 103. 106. 107. 108. 109. 110. 112. 113.PIECEWISE LINEARSTATICANALYSIS SDR1recovers dependent displacements forcurrent loop N‘i—.={Ua} ‘r H‘a——={Uf}, ‘o {urn}=[Gm]{un} ,{uo}=[Go]{ua} +{u:}, MUf —.={Un}, Ys HUn ={Ugl —— urn andrecovers single-point forcesofconstraint forcurrent loop {dqs}=-{Ps}+[Ks]{uf}. PLA2addstheincremental displacement vectr(OELTAUGV) andtheincremental single-point forcesofconstraint vector(DELTAQG) forthecurrent looptotheaccumulated sumofthese vectors (DELTApG). {u9i+l1={6ug}+tug}and i i {q 9i+l1={Ciqg}+{qg}. i i Allocate separate filesforESTNLandESTNL1andforECPTNLandECPTNL1. GotoDMAPNo.104ifnostressoutputisrequested fornonlinear elements. PLA3calculates incremental stresses innonlinear elements (ONLES) forwhichanoutput request hasbeenmadeandupdates theaccumulated stresses (ESTNL1) intheseelements. !ilFPformats theaccumulated stresses innonlinear elements prepared byPLA3andplacesthem onthesystemoutputfileforprinting. GotoOMAPNo.117ifallloading increments havebeencompleted. PLA4generates stiffness matrixfornonlinear elements [Knf]andupdates stress information.YY- Equivalence [K~~]to[Kgg]ifallelements arenonlinear. GotoDMAPNo. 111 Addstiffness matr’ (KGGL)ifallelements arenonlinear. xfornonlinear elements (KGGNL) tostiffness matrixfor1nearelements Equivalence existing element tablestoupdated tablesandequivalence [K~~m] to[Kgg] fornextpassthrough loop. GotoOMAPNo.67ifadditional loadincrements needtobeprocessed. 2.6-11(05/30/86)\nDISPLACEMENT RIGIDFORMATS 114. 116. 118. 119. 120. 121. 122. 123. 124. 126. 128. 130. 132. 134.GotoDMAPNo.129andprintErrorMessage No.2asthenumberofloadincrements exceeds 360, PrintErrorMessage No.5andterminate execution. SDR2calculates element forces(OEFl)andstresses forlinearelements (!3ES1)andprepares loadvectors (OPGl), displacement vectors (!3UGV1) andsingle-point forcesofconstraint (OQGl)foroutputandtranslation components ofthedisplacement vector(PUGV1). @FPformats thetablesprepared bySDR2andplacesthemonthesystemoutputfilefor printing. SCANexamines theelement stresses andforcescalculated bySDR2andgenerates scanned outputthatmeetsthespecifications setbytheuser. 13FPformats thescanned outputtableprepared bySCANandplacesitonthesystemoutput fileforprinting. GotoDMAPNo.125ifnodeformed structure plotsarerequested. PL13Tgenerates allrequested deformed structure andcontour plots. PRTMSGprintsplotter data,engineering data,andcontour dataforeachdeformed plot generated. GotoDMAPNo.135andmakenormalexit. PrintErrorMessage No.1andterminate execution. PrintErrorMessage No.2andterminate execution. PrintErrorMessage No.3andterminate execution. PrintErrorMessage No.4andterminate execution. 2.6-12(05/30/86)\n2’.6.3 ● 2.6.4 Static 2.6.5PIECEWISE LINEARSTATICANALYSIS OutputforPiecewise LinearStaticAnalysis The 1. 2. 3. Ihe 1. 2.following outputmayberequested forPiecewise LinearStaticAnalysis: Accumulated sumsofdisplacements andnonzero components ofthestat single-point forcesofconstraint atselected gridpointsforeachloadcloadsand increment. Stresses inselected elements. Ifanelement iscomposed ofanonlinear material, the accumulated stresswillbeoutputforeachloadincrement. Stresses inlinearelements areonlycalculated forthetotalload. Scanned outputofforcesandelements inselected elements. following plotter outputmayberequested: Undeformed plotofthestructural modeland Contour plotsofstresses anddisplacementsdeformed plotsforeachloadincrement. foreachloadincrement. CaseControl DeckforPiecewise LinearStaticAnalysis Thefollowing itemsrelatetosubcase definition anddataselection forPiecewise Linear Analysis: 1.TheCaseControl Deckmustcontain oneandonlyonesubcase. 2.Astaticloading condition mustbedefined withaLOADselection. 3.AnSPCsetmustbeselected unlessallconstraints arespecified onGRIDcards. 4.PLC@EFFICIENT mustappeareithertoselectaPLFACTsetfromtheBulkDataDeckorto explicitly selectthedefault valueofunity. Parameters forPiecewise LinearStaticAnalysis Thefollowing parameters areusedinPiecewise LinearStaticAnalysis: 1.ASET!itlT -optional. Apositive integer valueofthisparameter causestheASEToutput datablocktobegenerated bytheGP4module. Anegative integer valueorOsuppresses thegeneration ofthisoutputdatablock. Thedefault valueisO. 2.AUT@SPC -reserved forfutureoptional use.Thedefault valueis-1. 3.COUPMASS -CPBAR,CPR@D,CPQUAD1, CPQUAD2, CPTRIA1, CPTRIA2, CPTUBE, CPQDPLT, CPTRPLT, CPTRBSC -optional. Theseparameters causethegeneration ofcoupled massmatrices ratherthanlumpedmassmatrices forallbarelements, rodelements, andplateelements thatinclude bending stiffness. 2.6-13(05/30/86)\n2.6.6 Static andisDISPLACEMENT RIGIDFORMATS 4.GRDPNT-optional. Apositive integer valueofthisparameter causestheGridPoint WeightGenerator tobeexecuted andtheresulting weightandbalance information tobe printed, 5.IRES-optional. Apositive integer valueofthisparameter causestheprinting ofthe residual vectors following theexecution oftheSSG3module. 6.SURFACE -optional. Thecomputations oftheexternal surface areasforthe two-dimensional andthree-dimensional elements areactivated bythisparameter whenthey aregenerated intheEMGmodule. Theresults aremultiplied bytherealvalueofthis parameter. Seethedescription underthePARAMbulkdatacardfordetails. 7.V13LUME -optional. Thevolume computations forthetwo-dimensional and three-dimensional elements areactivated bythisparameter whentheyaregenerated in theEMGmodule. Theresults aremultiplied bytherealvalueofthisparameter. See thedescription underthePARAMbulkdatacardfordetails. 8,WTMASS-optional. Thetermsofthemassmatrixaremultiplied bytherealvalueof thisparameter whentheyaregenerated intheEMAmodule. RigidFormatErrorMessages fromPiecewise LinearStaticAnalysis Thefollowing fatalerrorsaredetected bytheDMAPstatements inthePiecewise Linear Analysis rigidformat. Thetextforeacherrormessage isgivenbelowincapital letters followed byadditional explanatory material, including suggestions forremedial action. PIECEWISE LINEARSTATICANALYSIS ERRORMESSAGE No.1-NoN$3NLINEAR ELEMENTS HAVEBEENDEFINED. Apiecewise linearproblem hasnotbeenformulated because noneoftheelements hasastress dependent modulus ofelasticity defined onaMaterial card. PIECEWISE LINEARSTATICANALYSIS ERRORMESSAGE NO.2-ATTEMPT TOEXECUTE MORETHAN360LO@PS. Anattempt hasbeenmadetousemorethan360loadincrements. Thisnumbermaybeincreased by ALTERing theREPTinstruction preceding SDR2. PIECEWISE LINEARSTATICANALYSIS ERR13RMESSAGE No.3-MASSMATRIXREQUIRED FORWEIGHTANDBALANCE CALCULATIONS. Themassmatrixisnullbecause eithernoelements weredefined withConnection cards, nonstructural masswasnotdefined onaProperty card,orthedensity wasnotdefined onaMaterial card. 2,6-14(05/30/86)\nPIECEWISE LINEARSTATICANALYSIS PIECEWISE LINEARSTATICANALYSIS ERRORMESSAGE Nfl.4-NOELEMENTS HAVEBEENDEFINED ●Noelements havebeendefined witheitherConnection cardsorGENELcards. PIECEWISE LINEARSTATIC PLASTICITY. Thestiffness matrixis material plasticity.ANALYSIS ERRORMESSAGE NO.5-STIFFNESS MATRIXSINGULAR DUETOMATERIAL singular dueeithertooneormoregridpointsingularities orelement 2.6-15(05/30/86) I\nDISPLACEMENT RIGIDFORMATS 2.6-16(05/30/86)"},"title":"User's Manual P7"},"/docs/users/users_manual_008/":{"data":{"":"DISPLACEMENT RIGIDFORMATS 2.7DIRECTCOMPLEX EIGENVALUE ANALYSIS 2.7.1DMAPSequence forDirectComplex Eigenvalue Analysis RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIOFORMAT 7 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING OPTIONS INEFFECT GO ERR=2 LIST NODECK NOREF NOOSCAR\n1BEGIN 2PRECHK 3FILE bPARAM 5GP1 6PLTTRAN 7PURGE 8COND 9GP2 10PARAML 11PURGE 12COND 13PLTSET 14PRTMSG 15PARAH 16PARAM 17COND 18PLOT 19PRTMSG 20LABEL 21GP3DISP07-DIRECT COMPLEX EIGENVALUE” ANALYSIS -APR.1986$ ALL$ GOD=SAVE/GMD=SAVE $ //*MPY~~/CARONO/O/O $ GEOM1,GEOM2,/GPL,EQEXlN,GPDT, CSTM,BGPDT,SIL/S,N,LUSET/ S,N,NOGPDT/MINUSl=-l $ BGPDT,SIL/BGPDP,SIP/LUSET/S,N, LUSEP$ USET,GM,GO,KAA,BAA,MAA,KAAA, KFS,EST,ECT,PLTSETX,PLTPAR,GPSETS, ELSETS/NOGPDT $ LBL5,NOGPDT $ GEoM2,EQExlN/EcT $ PCDB//*PRES~~////JUMPPLOT $ PLTSETX,PLTPAR,GPSETS,ELSETS/JUMPPLOT $ P1,JUMPPLOT $ PCDB,EQEXIN,ECT/PLTSETX,PLTPAR,GPSETS, ELSETS/S,N,NSIL/ S,N,JUMPPLOT $ PLTSETX// $ //MPY/PLTFLG/l/l $ //MPY/PFILE/O/O $ P1,JUIIPPLOT $ PLTPAR,GPSETS,ELSETS,CASECC, BGPDT,EQEXIN,SIL,,ECT,,/PLOTXl/ NSIL/LUSET/JUMPPLOT/PLTFLG/S ,N,PFILE $ PLOTX1// $ P1$ GEoM3,EQEx1N,GEoM2/,GPTT/NoGRAv $ 2,7-1(05/30/86)\nDISPLACEMENT RIGIDFORMATS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIOFORMAT 7 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44TA1 PURGE COND PARAM PARAM PARAM PARAM EMG PURGE COND EMA LABEL COND EMA LABEL COND EHA LABEL COND EMA LABEL PURGE PURGEECT,EPT,BGPDT,SIL,GPTT,CSTM/EST,GE l,GPECT,,/ LUSET/S,N,NOSIMP=-l/l/S,N,NOGENL=-l/S,N,GENEL $ K4GG,GPST,0GPST,MGG,BGG,K4NN,K4FF ,K4AA,MNN,MFF,MAA,BNN,BFF,BAA, KGGX/NOSIMP /OGPST/GENEL $ LBL1,NOSIHP $ //ADD/NoKGGx/l/o $ //ADD/NoMGG/l/o $ //*ADDfi/NOBGG=-l/l/O $ //ADD/NoK4GG/I/o $ EST,CSTM,MPT,DlT,GEOM2,/KELM, KDICT,MELM,MOICT,BELM,BDICT,/S ,N, NOKGGX/S,N,NOMGG/S,N,NOBGG/S ,N,NOK4GG//C,Y,COUPMASS/ C,Y,CPBAR/C,Y,CPROD/C,Y,CPQUADl/C,Y,CPQUAD2/C,Y, CPTRIA1/ C,Y,CPTRlA2/C,Y,CPTUBE/C,Y,CPQOPLT/C,Y,CPTRPLT/C, Y,CPTRBSC/ V,Y,VOLUME/V,Y,SURFACE $ KGGX,GPST/NOKGGX/MGG/NOMGG $ LBLKGGX,NOKGGX $ GPECT,KDICT,KELM/KGGX,GPST $ LBLKGGX $ LBLMGG,NOMGG $ GPECT,MDICT,MELM/MGG,/-l/C,Y,WTMASS=l .0$ LBLMGG $ LBLBGG,NOBGG $ GPECT,BDICT,BELM/EGG, $ LBLBGG $ LBLK4GG,NOK4GG $ GPEcT,KDlcT,KELM/K4GG,/NoK4GG $ LBLK4GG $ MNN,MFF,MAA/NOMGG $ BNN,BFF,BAA/NOBGG $ 2.7-2(05/30/86)\nDIRECTCOMPLEX EIGENVALUE ANALYSIS RIGIDFORMAT OMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 7 LEVEL2.0NASTRAN OMAPCOMPILER -SOURCE LISTING k5 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69COND COND GPWG OFP LABEL EQUIV COND SMA3 LABEL PARAM GP4 PURGE COND COND PARAM COND GPSP OFP LABEL EQUIV COND MCE1 MCE2 LABEL EQUIVLBL1,GROPNT $ ERROR3,NOMGG”$ BGPDP,CSTM,EQEXlN,MGG/OGPWG/V,Y,GRDPNT/C,Y,WTMASS $ OGPWG,,,,,//S,N,CARDNO $ LBL1$ KGGX,KGG/NOGENL $ LBL1l,NOGENL $ GEl,KGGX/KGG/LUSET/NOGENL/NOS IMP$ LBL1l$ //HPY/NSKIP/O/O $ cASECC,GEOM4, EQEXIN,GPDT,BGPOT, CSTM,GPST/RG,,USET,ASET/ LuSET/S,N,MPCFl/S,N,MPCF2/S,N, SINGLE/S,N,OMIT/S,N,REACT/ S,N,NSKIP/S,N,REPEAT/S,N,NOSET/S,N,NOL/S,N,NOA/ C,Y,ASETOUT/S,Y,AUTOSPC $ GM,GMD/tlPCFl/GO,GOO/OMIT/KFS,QPC/S INGLE$ LBL4,GENEL $ LBL4,NOSIMP $ //EQ/GPSPFLG/AUTOSPC/O $ LBLk,GPSPFLG $ GPL,GPST,USET,SIL/OGPST/S,N,NOGPST $ OGPST,,,,,//S,N,CARDNO $ LBLh$ KGG,KNN/MPCFl/MGG,MNN/llPCFl/ BGG,BNN/MPcF1/K4GG,K4NN/fipcF I$ LBL2,MPCF1 $ USET,RG/GM $ USET,GM,KGG,MGG,BGG,K4GG/KNN,MNN,BNN, KLNN$ LBL2$ KNN,KFF/SINGLE/MNN,MFF/SINGLE/BNN, BFF/SINGLE/K4NN,K4FF/SINGLE $ 2.7-3(05/30/86)\nDISPLACEMENT RIGIDFORMATS r RIGIDFORMAT OMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 7 LEVEL2.0NASTRAN OMAPCOMPILER -SOURCE LISTING 70 71 72 73 711 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94CONO SCEI LABEL EQUIV COND SMP1 CONO SHP2 LABEL COND SMP2 LABEL CONO SMP2 LABEL DPD CONO EQUIV PARAM PARAM BMG PARAM PURGE CONO MTRXIN,LBL3,SINGLE $ usET,KNN,MNN,BNN,K4NN/KFF,KFs ,,MFF,BFF,K4FF $ LBL3$ KFF,KAA/OMIT/ MFF,MAA/OMIT/BFF,BAA/OMIT/K4FF ,K4AA/OMIT $ LBL5,0MIT $ USET,KFF ,,,/GO,KAA,KOO,LOO 9*9,,$ LBLM,NOMGG $ USET,GO,MFF/MAA $ LBLM$ LBLB,NOBGG $ USET,GO,BFF/BAA $ LBLB$ LBL5,NOK4GG $ usET,Go,K4FF/K4AA $ LBL5$ DYNAMICS,GPL,SIL,USET/GPLD ,SILD,USETO,TFPOOL, ,,,,,EED,EQDYN/ LUSET/S,N,LUSETO/NOTFL/NODLT/NOPSOL/NOFRL/ NONLFT/NDTRL/S,N,NOEEO/123/S,N ,NOUE$ ERROR1,NOEEO $ GO,GOO/NOUE/GM,GMD/NOUE $ //Aoo/NEvER/l/o $ //Mpy/REpEATE/l/-l $ MATPOOL,BGPOT,EQEXIN,CSTM/BDPOOL/S ,N,NOKBFL/S,N,NOABFL/ S,N,MFACT $ //*ANof,/NoFL/NoABFL/NoKBFL $ KBFL/NOKBFL/ ABFL/NOABFL $ LBL13,NOFL $ ,BOPOOL,EQOYN,,/ABFL,KBFL,/’LUSETO/S ,N,NOABFL/S,N,NOKBFL/ 0$ 2,7-4(05/30/86)●\nDIRECTCOMPLEX EIGENVALUE ANALYSIS ●RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 7 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 95LABEL g6PURGE 97CASE 98MTRXIN 99PARAM 100PARAM 101EQUIV 102CONO 1(J:AOD5 104COND 105TRNSP 106ADO 107LABEL 108PARAM 109PARAM 110PARAM 111PURGE 112EQUIV 113COND 114GKAO 115LABEL 116EQUIV 117CEAOLBL13$ PHID,CLAMA,OPHI O,OQPC1,OCPH IP,OESC1,OEFC1,CPHIP,QPC, K2PP,M2PP,B2PP,K2Do,M2DD,B2Do/NEvER $ CASECC,/CASEXX/CEIGN/S,N,REPEATE/S, N,NOLOOP $ cAsExx,MATPooL,EQDYN,,TFPooL/K2DPP,M2DPP, B2PP/LusETcl/s,N, NoK20PP/s,N,NoM2DPP/s,N,NoB2PP $ //\u003ekAND*/NoM2PP/NoABFL/NoM20PP $ //ANo/NoK2PP/NoFL /NoK20pP $ K2DPP,K2PP/NoFL/M20PP,M2PP/NoABFL LBLFL2,NOFL $ ABFL,KBFL,K20PP,,/K2PP/(-l.o,o.o) LBLFL2,NOABFL $ ABFL/ABFLT $ ABFLT,M20PP/M2PP/MFAcT $ LBLFL2 $ //*ANo)t/BDEBA/NouE/NoB2PP $ //f\u003cAND)t/MDEMA/NouE/NoM2PP $ //*ANo\u003e?/KDEK2/NOGENL/NOSIMP $$ $ K20D/NoK2PP/M2DD/NoM2PP/B20D/NoB2PP $ M2PP,M2DD/NoA/B2PP,B2DD/NoA/K2PF, K2DD/NoA/ MAA,MDD/MDEMA/BAA,BDD/BDEBA $ LBL18,NOGPDT $ uSET0,GM,G0,KAA,BAA,MAA,K4AA,K2PP,M2PP, B2PP/KOO,BOD,MDD,GMD, GoD,K2DD,M20D,B2DD/*CMPLEV$~/D lSP/?OIRECT’f/C,Y,G=O.O/ o.o/o.o/Nol(2PP/NoM2PP/NoB2PP/ MPcF1/slNGLE/oMIT/NouE/NoK4GG/NoBGG/ KoEK2/-l $ LBL18$ B2DD,BDD/NoBGG/ M200,MDD/NoslMP/ K20D,KDD/KoEK2 $ KOD,BDD,MOD,EEO,CASEXX/PHl D,CLAMA,OCEIGS,/S,N,EIGVS $ 2.7-5(05/30/86)\nDISPLACEMENT RIGIDFORMATS RIGIDFORMAT DMAPLISTING APRILlg86RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 7 LEVEL2,0NASTRAN OMAPCOMPILER -SOURCE LISTING 118OFP 119COND 120VDR 121CONO 122OFP 123LABEL 124CONO 125EQUIV 126COND 127SDR1 128LABEL 1295DR2 130OFP 131LABEL 132COND 133REPT 134PRTPARM 135JUMP 136LABELOCEIGS,CLAMA,,,,//S,N,CARDNO $ LBL16,EIGVS $ CASEXX,EQOYN,USETD,PHI D,CLAMA,,/OPHl D,/CEIGN/OIREcT/ O/S,N,NOO/S,N,NOP/O $ LBL15,NO0 $ OPHID,,,,,//S,N,CARDNO $ LBL15$ LBL16,NOP $ PHID,CPHIF’/NOA $ LBL17,NOA $ USETD,, PHID,,,GOD,GMD,,KFS,,/CPHIP,,QPC/l/OYW41 cS$ LBL17$ CASEXX,CSTM,MPT,DIT, EQDYN,SILO,,,,CLAMA,QPC,CPHlp, EST,s/cOQpCl, OCPHIP,OESCl,OEFCl,/~~CEIG* $ OCPHIP,OQPCl,OEFCl,OESCl,,//S,N, CARONO$ LBL16$ FINIS,REPEATE $ LBL13,1OO $ //-2/DIRcEAo $ FINIS$ ERROR1$ 137PRTPARM //-1/OIRcEAD $ 138LABEL ERROR3 $ 139PRTPARM //-3/olRcEAD $ 140LABEL FINIS$ lklPURGE OUMMY/MINUSl $ 142END $ 2.7-6(05/30/86)\n2.7.2 ●5. 6. 8. 9. 12. 13. 14. 17. 18. 19. 21. 22. 24. 29. 31. a32. 34. 35. 37. 38. 40. 41. 45. 46. 47. 48. 50. 51. 52,DIRECTCOMPLEX EIGENVALUE ANALYSIS Description ofImportant DMAPOperations forDirectComplex Eigenvalue Analysis GP1generates coordinate systemtransformation matrices, tablesofgridpointlocations, and tablesrelating theinternal andexternal gridpointnumbers. PLTTRAN modifies special scalargridpointsintheFIGPDTandSILtables. GotoDMAPNo,84ifthereisonlyDirectMatrixInput. GP2generates Element Connection Tablewithinternal indices. GotoDMAPNo.20iftherearenostructure plotrequests. PLTSETtransforms userinputintoaformusedtodrivethestructure plotter, PRTMSGprintserrormessages associated withthestructure plotter. GotoDMAPNo.20ifnoundeformed structure plotsarerequested. PL9Tgenerates allrequested undeformed structure plots. PRTMSGprintsplotter dataandengineering dataforeachundeformed plotgenerated. GP3generates GridPointTemperature Table. TA1generates element tablesforuseinmatrixassembly andstressrecovery. GotoDMAPNo.49iftherearenostructural elements. EMGgenerates structural element stiffness, massanddamping matrixtablesanddictionaris forlaterassembly bytheEMAmodule. GotoDMAPNo.33ifnostiffness matrixistobeassembled. EMAassembles stiffness matrix[Kg]andGridPointSingularity Table. GotoDMAPNo.36ifnomassmatrixistobeassembled. EMAassembles massmatrix [Mgg]. GotoDMAPNo.39ifnoviscous damping matrix istobeassembled. EMAassembles viscous damping matrix[Bgg]. GotoDMAPNo.42ifnostructural damping matrixistobeassembled, EMAassembles structural damping matrix[Kg]. GotoDMAPNo.49ifnoweightandbalance information isrequested. GotoDMAPNo.138andprintErrorMessage No.3ifnmassmatrixexists. GPWGgenerates weightandbalance information. OFPformats theweightandbalance information prepared byGPWGandplacesitonthesystem outputfileforprinting. Equivalence [Kg] GotoDMAPNo.53 SMA3addsgeneralto[Kgg]iftherearenogeneral elements. iftherearenogeneral elements. elements to[Kg]toobtainstiffness matrix[Kgg]. 2.7-7(05/30/86)\nDISPLACEMENT RIGIDFORMATS 55. 57. 58. 60. 61. 62, 64. 65. 66. 67, 69. 70.GP4generates flagsdefining members ofvarious displacement sets(USET)andforms multipoint constraint equations [Rg]{ug}=O, GotoDMAPNo.63ifgeneral elements arepresent. GotoDMAPNo.63iftherearenostructural elements. GotoDMAPNo.63ifnopotential gridpointsingularities exist. GPSPgenerates atableofpotential gridpointsingularities. @FPformats thetableofpotential gridpointsingularities prepared byGPSPandplacesit onthesystemoutputfileforprinting. Equivalence [Kgg]to[Knn],[Mgg]to[Mnn],[Bgg]to[Bnn]and[Kg]to [Kn]ifnomultipointconstraints exist. GotoDMAPNo.68ifnomultipoint constraints exist. MCE1partitions multipoint constraint equations [Rg]=[RmRn]andsolvesfor multipoint constraint transformation matrix[Gm]=-[Rm]-l[Rn] MCE2partitions stiffness, massanddamping matrices L [i [Bggl =Y. Bmnd~‘Mgg]‘k+;:[Kggj=Jn+ B 1[-4 nmKnn\\Km and Kg]= .—–+– BmmK$nIK4mm andperforms matrixreductions [Knn]=[Knn]+[G~][Kmn] +[Kn][Gm] +[G][Kmm’l[Gm] , [Mnn]=[;nn]+[G~][Mmn] +[M\u0026][Gm] +[G~][Mmm][Gm] , [Bnn]=[nn]+[G][Bmn] +[Bn][Gm] +[G][Bmm][Gm] , [Kin]=[n]+[G][Kn] +[Kn]T[Gm] +[G][Km][Gm] . Equivalence [Knn]to[Kff],[Mnnlto[Mff],[Bnnlto[Bffland[Knlto [K~f]ifnosingle-point constraints exist. GotoDMAPNo.72ifnosingle-point constraints exist. 2.7-8(05/30/86)\nDIRECTCOMPLEX EIGENVALUE ANALYSIS 71, 73. 74. 75. 76. 77. 79. 80.SCEIpartitions outsingle-point constraints ‘Knn]‘[w:]’ ‘Mnn]=kf:l’ Equivalence [Kff]to[Kaa], [Mfflto[Maal, [Bfflto[Baaland[Kff]4to [Ka]ifnoomitted coordinates exist. GotoDMAPNo.84ifnoomitted coordinates exist. SMP1partitions constrained stiffness matrix [Kff]= solvesfortransformation matrix. KoaIKoo, [Go]=-[’ool-l[’oal andperforms matrixreduction [Kaa]=[Kaa]+[Kao][Go] . GotoOMAPNo.78ifnomassmatrixexists. SMP2partitions constrained massmatrix [Mff]=MIMaa! MoaiMoo andperforms matrixreduction [Maa]=[Maa]+[Mao][Go] +[MaoGo]T +[G~JIMoo][Gol GotoDMAPNo.84ifnoviscous damping matrix exists. SMP2partitions constrained viscous damping matrix nBIBao [Bff]=\u0026~B— , oa00 andperforms matrixreduction 2.7-9(05/30/86)\nDISPLACEMENT RIGIDFORMATS 82. 83. 85. 86. 87. 90. 93. 94. 95. 97. 98. 101. 102. 103. 104. 105. 106.[Baa]=[iaa]+[Bao][Go] +[BaoGo]T +[G~][Bo_][Go] , GotoDMAPNo.84ifnostructural damping matrixexists. SMP2partitions constrained structural damping matrix [1i:a(Ko [K:f]=–+– j 4I4 oa00 andperforms matrixreduction [K:a]=[K:al+[K:OIIGOI +[K:OGOIT+lI@:ol[Gol DPDgenerates flagsdefining members ofvarious displacement setsusedindynamic analysis (USETD), tablesrelating theinternal andexternal gridpointnumbers (GPLD), including extrapointsintroduced fordynamic analysis (SILD), andprepares Transfer Function Pool (TFP@@L), andEigenvalue Extraction Data(EED). GotoDMAPNo,136andprintErrorMessage No.1ifthereisnoEigenvalue Extraction Data. Equivalence [Go]to[G:]and[Gm]to[G;]iftherearenoextrapointsintroduced ford,ynamic analysis. BMGgenerates DMIGcardimagesdescribing theinterconnection ofthefluidandthe structure. GotoDMAPNo.95ifnofluid-structure interface isdefined, MTRXINgenerates fluidboundary matrices [A,ft]and[Kb,fll. Thematrix[Kb,fk] is generated onlyforanonzero gravity inthefluid. Beginning ofloopforadditional setsofdirectinputmatrices. CASEextracts theappropriate recordfromCASECCcorresponding tothecurrent loopand copiesitintoCASEXX. MTRXINselects thedirectinputmatrices [K~~],[M~~]and[Bp]forthecurrent loop. Equivalence [Kp]to[K~~]ifnofluid-structure interface isdefined andequivalence [fp]to[$;1ifthereisno[Ab,fi]. GotoDMAPNo.107ifnofluid-structure interface isdefined. ADD5adds[Kbfi]and[1$1andsubtracts [Abfi]fromthemtoform[Kp]. 3 Y GotoDMAPNo.107ifthereisno[Ab,fL]. Transpose [Abfi]toobtain[Ab,ftlT.Y ADDassembles inputmatrix[Mp]=MFACT[AbfL]T+[M~~].9 2.7-10(05/30/86)I\nDIRECTCOMPLEX EIGENVALUE ANALYSIS 112. 1130 114. 116. 117. 118. 119. 120. 121. 122. 124. 125. 126.Equivalence [Mfplto[Md], [BpltfJ[Bid]and[Kplto[Kdlifnoconstraints areapplied, [Maalto[Mdd]iftherearenodirectinputmassmatrices andnoextra points, and[Baa]to[Bdd]ifthereare points. GotoDMAPNo.115ifon” GKADassembles stiffness Analysisnodirectinputdamping matrices andnoextra yextrapointsaredefined. massanddampng matrices foruseinDirectComplex Eigenvalue [fjd]=(1+i9)[Kd] +[K\u0026]+i[Kd] , [Mold]=[Mid]+[Md] and [Bald]=[B:d]+[\u0026]o Directinputmatrices maybecomplex. Equivalence [Kd]to[Kdd]ifallstiffness isDirectMatrixInput,[Mid]to[Mddl ifallmassisDirectMatrixInputand[B~d]to[Bald]isalldamping isDirectMatrix Input. CEADextracts complex eigenvalues andeigenvectors fromtheequation [Mddp2+Bddp+Kdd]{ud}=O andnormalizes eigenvectors according tooneofthefollowing userrequests: 1)Unitmagnitude ofaselected component 2)Unitmagnitude ofthelargest component. OFPformats thesummary ofcomplex eigenvalues (CLAMA) andsummary ofeigenvalue extraction information (OCEIGS) prepared byCEADandplacesthemonthesystemoutPutfilefor printing. GotoDMAPNo.131ifnoeigenvalues werefound. VDRprepares eigenvectors foroutput, usingonlytheindependent degrees offreedom. GotoDMAPNo. 123ifthereisnooutputrequest forindependent degrees offreedom. OFPformats theeigenvectors forindependent degrees offreedom prepared byVDRandplaces themonthesystemoutputfileforprinting. GotoDMAPNo.131ifthereisnooutputrequest involving dependent degrees offreedom or forcesandstresses Equivalence {@d}to GotoDMAPNo.128{@p}ifnoconstraints areapplied. fnoconstraints areapplied. 2.7-11 (05/30/86)\n127. 129. 130. 132. 133. 134. 135. 137. 139.DISPLACEMENT RIGIDFORMATS SDR1recovers dependent components ofeigenvectors ‘$~ {$.}❑ [G~]{$dl , II={@f+@e} —. $0 {$m}=[G:]{on+I+e}, H,$n +$e —— ={$p} ‘$M andrecovers single-point forcesofconstraint {qs}=[K~~]{+f}. SDR2calculates element forces (9EFC1) andstresses (OESCl) andprepares eigenvectors (OCpHIp) andsingle-point forcesofconstraint (OQpCl) foroutput. OFPformats thetablesprepared bySDR2andplacesthemonthesystemoutputfilefor printing. Goto Goto Print Goto Print PrintDMAPNo.140ifnoadditional setsofdirectinputmatrices needtobeprocessed, DMAPNo.95ifadditional setsofdirectinputmatrices needtobeprocessed. ErrorMessage No.2andterminate execution. DMAPNo,140andmakenormalexit, ErrorMessage No.1andterminate execution. ErrorMessage No.3andterminate execution. 2.7-12 (05/30/86)\nDIRECTCOMPLEX EIGENVALUE ANALYSIS 2,7.3OutputforDirectComplex Eigenvalue Analysis Eachcomplex eigenvalue isidentified witharootnumberdetermined bysorting thecomplex eigenvalues according tothemagnitude oftheimaginary part,withpositive valuesconsidered asa groupaheadofallnegative values. Thefollowing summary ofthecomplex eigenvalues extracted is automatically printed foreachsetofdirectinputmatrices: 1.RootNumber 2.Extraction Order 3.RealandImaginary PartsoftheEigenvalue 4.Thecoefficients fj(frequency) andgj(damping coefficient) inthefollowing representation oftheeigenvalue Pj=2~fj(i-~gj) Thefollowing summary oftheeigenvalue analysis performed, usingtheDeterminant method, is automatically printed foreachsetofdirectinputmatrices: 1.I 2.I 3.I 4.I 5.I 6.I 7.I 8.I 9, The isautomat 1. 2. 3. 4.Numberofeigenvalues extracted Numberofpassesthrough starting points. Numberofcriteria changes. Numberofstarting pointmoves. Numberoftriangular decompositions. Numberoffailures toiterate toaroot. Numberofpredictions outside region. Reasonfortermination: (1) (2) (3) (4)Thenumberofrootsdesired havebeenfound. Allpredictions foreigenvalues areoutside theregions specified. Insufficient timetofindanother root. Matrixissingular atfirstthreestarting points. Sweptdeterminant functions foreachstarting point. following summary oftheeigenvalue analysis performed, usingtheInverse Powermethod, tallyprinted foreachregionspecified: Numberofeigenvalues extracted. Numberofstarting pointsused. Numberofstarting pointmoves. Numberoftriangular decompositions. 2.7-13(05/30/86)\n5. 6.DISPLACEMENT RIGIDFORMATS Numberofvectoriterations. Reasonfortermination. (1)Twoconsecutive singularities encountered whileperforming tr (2 (3 (4 (5iangular decomposition. Fourstarting pointmoveswhiletracking asingleroot. Alleigenvalues foundintheregionspecified, Threetimesthenumberofrootsestimated intheregionhavebeenextracted. Alleigenvalues thatexistintheproblem havebeenfound. (6)Thenumberofrootsdesired havebeenfound. (7)Oneormoreeigenvalues havebeenfoundoutside theregionspec (8)Insufficient timetofindanother root. (9)Unabletoconverge.fied. Thefollowing summary oftheeigenvalue analysis performed, usingthecomplex Tridiagonal Reduction 1. 2. 3. 4. 5. 6.(FEER)method, isautomatically printed: Numberofeigenvalues extracted. Numberofstarting pointsused. Thiscorresponds tothetotalnumberofrandomstarting andrestart vectors usedbythe complex FEERprocess forallneighborhoods. Numberofstarting pointmoves. NotusedinFEER(setequaltozero). Numberoftriangular decompositions. Alwaysequaltothenumberofpointsofinterest (neighborhoods) inthecomplex plane processed byFEER,sinceordinarily onlyonetriangular decomposition isrequired by FEERforeachpointofinterest, unlessthedynamic matrixissingular atagivenpoint ofinterest, inwhichcaseanadditional decomposition isrequired (obtained bymoving thepointofinterest slightly). Totalnumberofvectoriterations. Thetotalnumberofreorthogonal izations ofallthetrialvectors employed. Reasonfortermination. (0)All,ormoresolutions (normal termination).thanthenumberrequested bytheuser,havebeendetermined 2.7-14(05/30/86)\nDIRECTCOMPLEX EIGENVALUE ANALYSIS (1)Allneighborhoods havebeenprocessed, butFEERhasnotobtained thedesired number ofrootsineachneighborhood, possibly because theyhavealready beenfoundin otherneighborhoods. (2)Abnormal termination -eithernorootsfoundornonepassestheFEERerrortest. Thefollowing printed output, sortedbycomplex eigenvalue rootnumber(SORTl), maybe requested foranycomplex eigenvalue extracted, aseitherrealandimaginary partsormagnitude and phaseangle(0°-360°lead): 1.Theeigenvector fora introduced fordynamic thedynamic equation). 2.Nonzero components of points. 3.Stresses andforcesinlistofPHYSICAL points(gridpointsandextrascalarpoints analysis) orSOLUTION points(points usedintheformulation of thesingle-point forcesofconstraint foralistofPHYSICAL selected elements. Inadd 2.7.4tion,anundeformed plotofthestructural modelmayberequested. CaseControl DeckforOirectComplex Eigenvalue Analysis Thefollowing itemsrelatetosubcase definition anddataselection forOirectComplex eEigenvalue Analysis: 10Atleastonesubcase mustbedefined foreachuniquesetofdirectinputmatrices (K2PP, M2PP,B2PP). 2.Multiple subcases foreachsetofdirectinputmatrices areusedonlytocontrol output requests. Asinglesubcase foreachsetofdirectinputmatrices issufficient ifthe sameoutputisdesired forallmodes. Ifconsecutive multiple subcases arepresent for asinglesetofdirectinputmatrices, theoutputrequests willbehonored insuccession forincreasing modenumbers. MODESmaybeusedtorepeatsubcases inordertomakethe sameoutputrequest forseveral consecutive modes. 3.CMETHOO mustbeusedtoselectanEIGCcardfromtheBulkOataDeckforeachsetof directinputmatrices. 4.Onrestart following anunscheduled exitduetoinsufficient time,thesubcase structure mustbechanged toreflect thesetsofdirectinputmatrices thatwerecompleted, and eitherCMETH!ilD mustbechanged toselectanEIGCcardthatreflects anycomplex eigenvalues foundintheprevious execution orEIGPcardsmustbeusedtoinsertpoles 2.7-15(05/30/86)\nDISPLACEMENT RIGIDFORMATS forpreviously foundeigenvalues. Otherwise, thepreviously foundeigenvalues willbe extracted again. e 5.Constraints mustbedefined abovethesubcase level. 2.7.5Parameters forDirectComplex Eigenvalue Analysis Thefollowing parameters areusedinDirectComplex Eigenvalue Analysis: 1. 2, 3. ,L, 5. 6. 7. 8.ASETOUT -optional. Apositive integer valueofthisparameter causestheASEToutput datablocktobegenerated bytheGP4module. Anegative integer valueorOsuppresses thegeneration ofthisoutputdatablock. Thedefault valueisO. AUT13SPC -reserved forfutureoptional use.Thedefault valueis-1. COUPMASS -CPBAR,CPR@D,CPQUAD1 CPQUAD2 CPTRIA1 CPIRIA2 CPTUBE, CPQDPLT, CPTRPLTe.~._… .—-…-?–——.-…2……….—.—–..—.—.—…——.—3.. CPTRBSC -optional. Theseparameters causethegeneration ofcoupled massmatrices ratherthanlumpedmassmatrices forallbarelements, rodelements, andplateelements thatinclude bending stiffness. -optional. Therealvalueofthisparanlete isusedasauniform structural damping coefficient inthedirectformulation ofdynamics problems (seeSection 9.3.3ofthe Theoretical Manual). Notrecommended foruseinhydroelastic problems. GRDPNT-optional. Apositive integer valueofthisparameter causestheGridPoinI WeightGenerator tobeexecuted andtheresulting weightandbalance information tobe o printed. Allfluidrelated massesareignored. SURFACE -optional. Thecomputations oftheexternal surface areasforthe two-dimensional andthree-dimensional elements areactivated bythisparameter whenthey aregenerated intheEMCimodule, Theresults aremultiplied bytherealvalueofthis parameter. Seethedescription underthePARAMbulkdatacardfordetails. VOLUME -optional. Thevolume computations forthetwo-dimensional and three-dimensional elements areactivated bythisparameter whentheyaregenerated in theEMGmodule. Theresults aremultiplied bytherealvalueofthisparameter. See thedescription underthePARAMbulkdatacardfordetails. WTMASS-optional. Thetermsofthestructural massmatrixaremultiplied bythereal valueofthisparameter whentheyaregenerated intheEMAmodule. Notrecommended for useinhydroelastic problems. 2.7-16(05/30/86)\nDIRECTCOMPLEX EIGENVALUE ANALYSIS 2,7.6RigidFormatErrorMessages fromDirectComplex Eigenvalue Analysis mThefollowing fatalerrorsaredetected bytheDMAPstatements intheDirectComplex Eigenvalue Analysis rigidformat. Thetextforeacherrormessage isgivenbelowincapital letters andisfollowed byadditional explanatory material, including suggestions forremedial action. DIRECT COMPLEX EIGENVALUE ANALYSIS ERRk7JRMESSAGE NO.1 COMPLEX EIGENVALUE ANALYSIS. Eigenvalue extraction datamustbesupplied onanEIGC theCaseControl DeckmustselectanEIGCset, DIRECTCOMPLEX EIGENVALUE ANALYSIS ERRORMESSAGE No.2-EIGENVALUE EXTRACTION DATAREQUIRED FOR cardintheBulkDataDeckandCMETH!dD in -ATTEMPT TOEXECUTE MORETHAN100LOOPS. Anattempt hasbeenmadetousemorethan100setsofdirectinputmatrices. Thisnumbermaybe increased byALTERing theREPTinstruction following SDR2. DIRECTC@lPLEX EIGENVALUE ANALYSIS ERRORMESSAGE NO.3-MASSMATRIXREQUIRED FORWEIGHTAND BALANCE CALCULATIONS. Ihemassmatrixisnullbecause eithernoelements weredefined onConnection cards,nonstructural masswasnotdefined onaProperty card,orthedensity wasnotdefined onaMaterial card. 2.1-17(05/30/86)\nDISPLACEMENT RIGIDFORMATS 2.7-18(05/30/86)\nDISPLACEMENT RIGIDFORMATS 2.8DIRECTFREQUENCY ANDRANDOM RESPONSE ●2.8.1 DMAPSequence forDirect Frequency andRandom Response RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 8 LEVEL2.0NASTRAN OMAPCOMPILER -SOURCE LISTING OPTIONS INEFFECT GO ERR-2 LIST NOOECK NOREF NOOSCAR\n1BEGIN 2PRECHK 3FILE 4PARAM 5GP1 6PLTTRAN 7PURGE 8COND 9GP2 10PARAML 11PURGE 12CONO 13PLTSET 14PRTMSG 15PARAM 16PARAM 17CONO 18PLOT 19PRTMSG 20LABEL 21GP3DISP08-DIRECT FREQUENCY/RANDOM RESPONSE ANALYSIS-APR. 1986$ ALL$ KGGX=TAPE/KGG=TAPE/GOD=SAVE/GMD=SAVE/MOD-SAVE/BDO=SAVE $ //MpY/CARDNl)/O/o $ GEOMl,GEOM2,/GPL,EQEXIN,GPDT,CSTM,BGPDT,S lL/S,N,LUSET/ S,N,NOGPOT/ALWAYS=-l $ BGPDT,SIL/BGPOP,SIP/LUSET/S,N, LUSEP$ USET,GM,GO,KAA,BAA,MAA,KkAA,KFS,PSF ,QPC,EST,ECT,PLTSETX,PLTPAR, GPSETS,ELSETS/NOGPDT $ LBL5,NOGPOT $ GEoM2,EQExlN/EcT $ PCDB//PRES////JUMPPLOT $ PLTSETX,PLTPAR,GPSETS,ELSETS/JUMPPLOT $ P1,JUMPPLOT $ PCDB,EQEXIN,ECT/PLTSETX,PLTPAR,GPSETS, ELSETS/S,N,NSIL/ S,N,JUMPPLOT $ PLTSETX// $ //MPY/PLTFLG/l/l $ //MPY/PFILE/O/O $ P1,JUMPPLOT $ PLTPAR,GPSETS,ELSETS,CASECC,BGPOT, EQEXIN,SIL, ,ECT,,/PLOTXl/ NSIL/LUSET/S,N,JUMPPLOT/S,N,PLTFLG/S,N, PFILE$ PLOTX1//$ P1$ GEOM3,EQEXlN,GEOM2/,GPTT/NOGRAV $ 2.8-1(05/30/86)\nDISPLACEMENT RIGIDFORMATS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 8 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCELISTING 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44TA1 PURGE COND PARAM PARAM PARAM PARAM EMG PURGE CONO EMA LABEL COND EMA LABEL CONO EMA LABEL CONO EMA LABEL PURGE PURGEECT,EPT,BGPOT,SIL,GPTT,CSTM/EST, GEl,GPECT,,/ LUSET/S,N,NOSIMP/l/S,N,NOGENL/S ,N,GENEL $ K4GG,GPST,0GPST,MGG,BGG, K4NN,K4FF,K4AA,MNN,MFF,MAA,BNN, BFF,BAA, KGGX/NOSIMP/OGPST/GENEL $ LBL1,NOSIMP $ //f(ADD*/NoKGGX/l/O $ //*AoD,?/NoMGG/l/o $ //*AOD\u003e~/NOBGG=-l/l/O $ //*ADDf(/NoKIIGG/l/D $ EST,CSTM,MPT,DlT,GEOM2,/KELM, KDICT,MELM,MDI CT,BELM,BOICT, / S,N,NOKGGX/S,N,NOMGG/S,N,NOBGG/S ,N,NOK4GG//C,Y9COUPMASS/ C,Y,CPBAR/C,Y,CPROO/C,Y,CPQUADl/C,Y ,CPQUA02/C,Y,CPTRIAl/ C,Y,CPTRlA2/C,Y,CPTUBE/C,Y ,CPQDPLT/C,Y,CPTRPLT/C,Y,CPTRBSC/ V,Y,VOLUME/V,Y,SURFACE $ GPST/NOKGGX/MGG/NOMGG $ LBLKGGX,NOKGGX $ GPECT,KDICT,KELM/KGGX,GPST $ LBLKGGX $ LBLMGG,NOMGG $ GPECT,MDICT,MELM/MGG,/-l/C,Y,WTMASS=l .0$ LBLMGG $ LBLBGG,NOBGG $ GPECT,BDICT,BELM/BGG, $ LBLBGG $ LBLK4GG,NOK4GG $ GPEcT,KDlcT,KELM/K4GG,/NoK4GG $ LBLK4GG $ MNN,MFF,MAA/NOMGG $ BNN,BFF,BAA/NOBGG $ 2.8-2(05/30/86)"},"title":"User's Manual P8"},"/docs/users/users_manual_009/":{"data":{"":"","options-ineffect-go-err2-list-nodeck-noref-nooscar#DISPLACEMENT RIGIDFORMATS\n2.9DIRECTTRANSIENT RESPONSE\n2.9.1DMAPSequence forDirectTransient Response\nRIGIDFORMAT DMAPLISTING\nAPRIL1986RELEASE\nDISPLACEMENT APPROACH, RIGIDFORMAT 9\nLEVEL2.0NASTRAN OMAPCOMPILER -SOURCE LISTING\nOPTIONS INEFFECT GO ERR=2 LIST NODECK NOREF NOOSCAR":"DIRECTFREQUENCY ANDRANDOM RESPONSE RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 8 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING kCOND 46COND k7GPWG 48OFP 49LABEL 50EQUIV 51COND 52S14A3 53LABEL 54PARAM 55GPk 56PURGE 57COND 58COND 59PARAM 60COND 61GPSP 62OFP 63LABEL 64EQUIV 65rCOND 66MCEI 67MCE2 68LABEL 69EQUIVLBL1,GRDPNT $ ERROR4,NOMGG $ BGPDP,CSTM,EQEXIN,MGG/OGPWG/V,Y ,GRDPNT=-1/C,Y,WTMASS $ OGPWG,,,,,//S,N,CARDNO $ LBL1$ KGGX,KGG/NOGENL $ LBL1l,NOGENL $ GEl,KGGX/KGG/LUSET/NOGENL/NOS IMP$ LBL1l$ //MpY/NsKlp/o/o $ CASECC,GEOM4,EQEXIN,GPDT,BGPDT, CSTM,GPST/RG,,USET,ASET/ LUSET/S,N,MPCFl/S,N,MPCF2/S,N, SINGLE/S,N,OMIT/S,N,REACT/ S,N,NSKIP/S,N,REPEAT/S,N,NOSET/S ,N,NOL/S,N,NOA/C,Y,ASETOUT/ S,Y,AUTOSPC $ GM,GMD/MPCFl/GO,GOD/OMIT/KFS ,PSF,QPC/SINGLE $ LBL4,GENEL $ LBL4,NOSIMP $ //fEQ*/GPSPFLG/AUTOSPC/O $ LBL4,GPSPFLG $ GPL,GPST,USET,SIL/OGPST/S,N,NOGPST $ OGPST,,,,,//S,N,cARDNO $ LBL4$ KGG,KNN/MPCFl/MGG,MNN/MPCFl/ BGG,BNN/MpCFl/K4GG,KbNN/MpcF 1$ LBL2,MPCF1 $ USET,RG/GM $ USET,GM,KGG,MGG,BGG,KkGG/KNN,MNN ,BNN,K4NN $ LBL2$ KNN,KFF/SINGLE/MNN,MFF/SINGLE/BNN, BFF/51NGLE/K4NN,K4FF/slNGLE $ 2,8-3(05/30/86)\nDISPLACEMENT RIGIDFORMATS RIGIDFORMAT OMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIOFORMAT 8 LEVEL2.0NASTRAN OMAPCOMPILER -SOURCE LISTING 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94COND SCE1 LABEL EQUIV EQUIV EQUIV EQUIV CONO SMP1 COND SMP2 LABEL CONO SMP2 LABEL CONO SMP2 LABEL DPD EQUIV PARAM PARAM BMG PARAM PURGELBL3,SINGLE $ usET,KNN,MNN,BNN,K4NN/KFF,KFs, ,MFF,BFF,K4FF $ LBL3$ KFF,KAA/OMIT $ MFF,MAA/OMIT $ BFF,BAA/OMIT $ K4FF,K4AA/oMIT $ LBL5,0MIT $. USET,KFF,,,/GO,KAA,KOO, LOO,,,,,$ LBLM,NOMGG $ USET,GO,MFF/MAA $ LBLM$ LBLB,NOBGG $ USET,GO,BFF/BAA $ LBLB$ LBL5,NOK4GG $ usET,Go,K4FF/K4AA $ LBL5$ DYNAMICS,GPL,SIL,USET/GPLD, SILD,USETO,TFPOOL,DLT,PSOL, FRL,,,, EQDYN/LUSET/S,N,LUSETO/NOTFL/S,N,NOOLT/S,N,NOPSOL/S ,N, NOFRL/NONLFT/NOTRL/NOEECl//S ,N,NOUE $ GO,GOD/NOUE/GM,GMD/NOUE $ //ADD/NEVER/l/O $ //MPY/REPEATF/- l/l$ MATPOOL,BGPDT,EQEXlN,CSTM/BDPOOL/S,N,NOKBFL/S,N,NOABFL/ S,N,MFACT $ //AND/NOFL/NOABFL/NOKBFL $ KBFL/NOKBFL/ ABFL/NOABFL $ 2.8-4(05/30/86)\nDIRECT FREQUENCY ANDRANDOM RESPONSE ●RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 8 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 95COND LBL13,NOFL $ 96MTRXIN, ,BDPOOL,EQDYN,,/ABFL,KBFL,/LUSETD/S,N,NOABFL/S,N,NOKBFL/ 0$ 97LABEL 98PURGELBL13$ 0UDVC1,0UOVC2,XYPLTFA,0PPC1 ,OQPC1,OUPVC1,OESC1 ,0EFC1,0PPC2, 0QPC2,0UPVC2,0ESC2,0EFC2,XYPLTF ,PSDF,AUTO,XYPLTR, K2PP,M2PP,B2PP,K2DD,M2Do,B2DD/NEvER $ 99CASE 100MTRXIN 101PARAM 102PARAM 103EQUIVCASECC,PSDL/CASEXX/FREQ/S,N,REPEATF/S,N,NOLOOP $ CASEXX,MATPOOL,EQDYN, ,TFPOOL/K2DPP,M2DPP,B2PP/LUSETD/S,N, NoK2DPP/s,N,NoM2DPP/s,N,NoB2PP $ //AND/NoM2PP/NoABFl./NoM2DPP $ //$(AND*/NOK2PP/NOFL /NOK2DPP $ K2DPP,K2PP/NoFL/M2DPP,M2PP/NoABFL $ 106 107 108 109 110 111 112 113 114COND ADD5 COND TRNSP ADD LABEL PARAM PARAM PARAM PURGE EQUIV 115COND 116GKADLBLFL2,NOFL $ ABFL,KBFL,K2DPP,,/K2PP/(-l.o,o.o) $ LBLFL2,NOABFL $ ABFL/ABFLT $ ABFLT,M2DPP/M2PP/MFAcT $ LBLFL2 $ //AND/BoEBA/NouE/NoB2PP $ //AND/KDEK2/NoGENL/NoslMP $ //AND/MOEMA/NOUE/NOM2PP $ K2DD/NoK2PP/M2DD/NoM2PP/B2DD/NoB2PP $ M2PP,M20D/NoA/B2PP, B2DD/NoA/K2PP,K2DD/NoA/ MAA,MDD/MDEMA/BAA,BDD/BDEBA $ LBL18,NOGPDT $ USETD,GM,GO,KAA, BAA,MAA, K4AA,K2PP,M2PP,B2PP/KDD,BDD,MDD,GMO, GoD,K2DD,M2DD,B2D0/FREQRESP/Dl SP/*DIRECT~~/C,Y,G=O.O/ o.o/o.o/NoK2PP/NoM2PP/NoB2PP/ MPcF1/slNGLE/oMIT/NouE/NoK4GG/NoBGG/ KDEK2/-l $ 2.8-5(05/30/86)\nDISPLACEMENT RIGIDFORMATS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 8 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 117 118 119 120 121 122 123 124 I25 126 127 128 129 130 131 132 133 134 135 136 137 138 139LABEL EQUIV COND COND FRRD EQUIV VDR COND CONO SDR3 OFP XYTRAN XYPLOT JUMP LABEL OFP LABEL COND EQUIV CONO SDR1 LABEL SDR2LBL18$ B2DD,BDD/NoBGG/ M2DD,MoD/NoslMP/ K2DD,KDD/KoEK2 $ ERROR1,NOFRL $ ERROR2,NODLT $ CASEXX,USETD,DLT,FRL,GMD,GOD,KDD, BDD,MDD,,DIT/UDVF,PSF,PDF,PPF/ DISP/DIRECT~t/LUSETD/MPCF l/SINGLE/OMIT/ NONCUP/FRQSET $ PPF,PDF/NOSET $ CASEXX,EQDYN,USETD,UDVF ,PPF,XYCDB,/OUDVCl ,/FREQRESP/ DIRECT/S,N,NOSORT2/S,N ,NOD/S,NsNOP/o $ LBL15,NOD $ LBL15A,NosoRT2 $ OUDVC1,,,,,/0UDVC2,,,,, $ 0UDVC2, ,,,,//S,N,CARONO $ XYCDB,0UOVC2 ,,,,/XYPLTFA/FREQ/~DSET/S,N, PFILE/ S,N,CARDNO $ XYPLTFA// $ LBL15$ LBL15A $ OUDVC1,,,,,//S,N,CARONO $ LBL15$ LBL20,NOP $ UDVF,UPVC/NOA $ LBL19,NOA $ USETD,,UDVF,,,GOD,GMD,PSF, KFS,,/UPVC,,QPC/l/*DYNAMICS~~ $ LBL19$ CASEXX,CSTM,MPT,D IT,EQOYN, SILD,,,BGPDP,PPF,QPC,UPVC, EST,XYCDB, PPF/OPPCl,OQPCl ,OUPVC1,OESC1,OEFC1 ,PUPVC1/FREQRESP/ S,N,NOSORT2 $ 2.8-6(05/30/86)\nDIRECTFREQUENCY ANDRANDOM RESPONSE ●RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 8 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTIN6 140COND lklSDR3 142OFP 143XYTRAN 144XYPLOT 145COND 146RANDOM 147COND 148XYTRAN a149 150 151 152 153 154 I55 156 157XYPLOT JUMP LABEL PURGE OFP LABEL PURGE COND PLOT 158PRTMSG 159LABEL 160COND 161REPTLBL17,NOSORT2 $ OPPC1,OQPC1,OUPVC1 ,0ESCl,0EFCl,/OPPC2,0QPC2,0UPVC2,0ESC2, 0EFC2* $ 0PPC2,0QPC2,0UPVC2,0EFC2,0ESC2 ,//S,N,CARDNO $ xYcoB,oPPc2,oQPc2,ouPvc2,oEsc2,oEFc2/xYPLTF/*FREQ$~/PsET/ S,N,PFILE/S,N,CARDNO $ XYPLTF// $ LBL16,NOPSDL $ XYCDB,DIT,PSDL ,0UPVC2,0PPC2,0QPC2,0ESC2,0EFC2, CASEXX/PSDF,AUTO/ S,N,NORD $ LBL16,NORD $ XYCDB,PSDF,AUTO ,,,/XYPLTR/RAND/PSET/S,N,PF lLE/ S,N,CARDNO $ XYPLTR// $ LBL16$ LBL17$ PsDF/NosoRT2 $ OUPVC1,OPPC1,OQPC1,OEFC1,OESC1 ,//S,N,CARDNO $ LBL16$ PSDF/NOPSDL $ LBL20,JUMPPLOT $ PLTPAR,GPSETS, ELSETS,CASEXX,BGPDT, EQEXIN,S IP,,PUPVC1, GPECT,0ESCl/PLOTX2/NS lL/LUSEP/JUMPPLOT/PLTFLG/ S,N,PFILE $ PLoTx2// $ LBL20$ FINIS,REPEATF $ LBL13,1OO $ 162PRTPARM //-3/DIRFRRD $ 2.8-7(05/30/86)\nDISPLACEMENT RIGIDFORMATS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIOFORMAT 8 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 163JUMP 164LABEL 165PRTPARM 166LABEL 167PRTPARM 168LABEL 169PRTPARM 170LABEL 171PURGE 172ENDFINIS$ ERROR2 $ //-2/DIRFRRD $ ERROR1 $ //-1/DIRFRRD $ ERROR4 $ //-4/*DIRFRRDff $ FINIS$ DUMMY/ALWAYS $ $ 2.8-8(05/30/86)\n2.8.2 5. 6. 8. 9. 12. 13. 14. 17. 18. 19. 21. 22. 24. 29. 31. 32. 34. 35. 37. 38. 40. 41. 45. 46. 47. 48. 50. 51. 52.DIRECTFREQUENCY ANDRANDOMRESPONSE Description ofImportant DMAPoperations forOirectFrequency andRandomResponse GP1generates coordinate systemtransformation matrices, tablesofgridpointlocations, and tablesrelating theinternal andexternal gridpointnumbers, PLTTRAN modifies special scalargridpointsintheBGPDTandSILtables. GotoOMAPNo.87ifthereisonlyDirectMatrixInput. GP2generates Element Connection Tablewithinternal indices GotoDMAPNo.20iftherearenostructure plotrequests. PLTSETtransforms userinputintoaformusedtodrivethes“ructure plotter. PRTMSGprintserrormessages associated withthestructure plotter. GotoDMAPNo.20ifnoundeformed structure plotsarerequested. PLOTgenerates allrequested undeformed structure plots. PRTMSGprintsplotter dataandengineering dataforeachundeformed plotgenerated. GP3generates GridPointTemperature Table. TA1generates element tablesforuseinmatrixassembly andstressrecovery. GotoDMAPNo.49iftherearenostructural elements. EMGgenerates structural element stiffness, forlaterassembly bytheEMAmodule. GotoDMAPNo.33ifnostiffness matrixis EMAassembles stiffness matrix[Kg]andGrmassanddamping matrixtablesanddictionaries tobeassembled. dPointSingularity Table. GotoDMAP No.36ifnomassmatrixistobeassembled. EMAassembles massmatrix[Mgg]. GotoOMAPNo.39ifnoviscous damping matrixistobeassembled. EMAassembles viscous damping matrix[699]. GotoDMAPNo.42ifnostructural damping matrixistobeassembled. EMAassembles structural dampingamatrix [Kg]. GotoDMAPNo.49ifnoweightandbalance information isrequested. GotoDMAPNo.168andprintErrorMessage No.4ifnomassmatrixexists. GPWGgenerates weightandbalance information. OFPformats theweightandbalance information prepared byGPWGandplacesitonthesystem outputfileforprinting. Equivalence [Kg]to[Kgg]iftherearenogeneral elements. GotoDMAPNo.53iftherearenogeneral elements. SMA3addsgeneral elements to[Kg]toobtainstiffness matrix[Kgg]. 2.8-9(05/30/86)\nDISPLACEMENT RIGIDFORMATS 55. 57. 58. 60. 61. 62. 64. 65. 66. 67. 69. 70.GP4generates flagsdefining members ofvarious displacement sets(USET)andforms multipoint constraint equations [Rg]{ug}=O. GotoDMAPNo.63ifgeneral elements arepresent. GotoDMAPNo.63iftherearenostructural elements. GotoDMAPNo.63ifnopotential gridpointsingularities exist. GPSPgenerates atableofpotential gridpointsingularities. 13FPformats thetableofpotential gridpointsingularities prepared byGPSPandplacesit onthesystemoutputfileforprinting. Equivalence [Kgg]to[Knn],[Mgg]to[Mnn],[Bgg]to[Bnn]and[Kg]to [Kn]ifnomultipointconstraints exist, GotoDMAPNo.68ifnomultipoint constraints exist, MCE1partitions multipoint constraint equations [Rg]=[RmRn]andsolvesfor multipoint constraint transformation matrix[Gm]=-[Rm]-l[Rn], MCE2partitions stiffness, massanddamping matrices I‘nnI‘nm[Bgg]= “+– 1Bmn]Bmm [1ii:n1K:m and [Kjg]= –+– K:nIK;m andperforms matrixreductions — [Knn]=[Knn]+[G][Kmn] +[Kn][Gm] +[G][Kmm][Gm] , [Mnn]=[inn]+[G~][Mmn] +[Mn][Gm] +[G][Mmm][Gm] , [Bnn]=[;nn]+[G~][Bmn] +[Bn][Gm] +[G][Bm][Gm] , [K:nl=[:nl+[Gj[K;nl +[K:nlTIGml +[G:l[K:ml[Gml . Equivalence [Knn]to[Kff],[Mnn]to [Kf]ifnosingle-point constraints GotoDMAPNo.72ifnosingle-point[Mff]s[Bnnlto[Bffland[Knn14to exist. constraints exist, 2.8-10 (05/30/86)\n71.SCE1partDIRECTFREQUENCY ANDRANDOMRESPONSE tionsoutsngle-point constraints [Knn]= [1‘ff‘‘fs [1‘ff’‘fs—+— , [Mnn]=TM– , KsfIKss sf:;;] [K:n]=[~~] [Bnnl=‘f_and 73.Equivalence [Kff]to[Kaalifnoomitted coordinates exist. 74.Equivalence [Mff]to[Maa]ifnoomitted coordinates exist. 75.Equivalence [Bfflto[Baalifnoomitted coordinates exist. 76.Equivalence [Kf]to[Kalifnoomitted coordinates exist. 77.GotoDMAPNo.87ifnoomitted coordinates exist. 78,SMP1partitions constrained stiffness matrix [1iilK [Kff]=:-kK , oa00 solvesfortransformation matrix[Gol=-[Kool-l[Koal andperforms matrixreduction [Kaa]=[~aa]+[Kao][Go] . 79.GotoDMAPNo.81ifnomassmatrixexists. 80.SMP2partitions constrained massmatrix [1MlMao [Mffl=:~M– ‘ oa00 andperforms matrixreduction [Maa]❑ [aa]+[Maol[Gol +[MaoGolT +[G:IIMOOIIGOI 82.GotoDMAPNo.84ifnoviscous damping matrixexists. 83.SMP2partitions constrained viscous damping matrix [1IB [Bff]=;+= * OaIBOO 2,8-11(05/30/86)\n85. 86. 88. 89. 92. 95. 96. 97. 99. 100. 103. 104. 105. 106. 107. 108.DISPLACEMENT andperforms matrixreduction [Baa]=[Baal+[Baol[Gol + GotoDMAPNo.87ifnostructural dampingRIGIDFORMATS [BaoGOIT +[Gl[Bool[Gol matrixexists. SMP2partitions constrained structural damping matrix andperforms[K:f] matrix reduction[14,4 .a+3 K4I4 oa00 [Ko][Go] +[KoGo]T +[G][Ko][Go] . DPDgenerates flagsdefining members ofvarious displacement setsusedindynamic analysis (USETD), tablesrelating theinternal andexternal gridpointnumbers, including extra pointsintroduced fordynamic analysis, andprepares Transfer Function Pool,Dynamics Load Table,PowerSpectral Density ListandFrequency Response List. Equivalence [Go]to[G:]and[Gm]to[Gjif fordynamic analysis. BMGgenerates DMIGcardimages describing structure.therearenoextrapointsintroduced theinterconnection ofthefluidandthe GotoDMAPNo.97ifnofluid-structure interface isdefined. MTRXINgenerates fluidboundary matrices [Ab,fL] and[Kb,fk]. Thematrix[Kb,fk] is generated onlyforanonzero gravity inthefluid. Beginning ofloopforadditional setsofdirect inputmatrices. CASEextracts theappropriate record fromCASECC corresponding tothecurrent copies itintoCASEXX. MTRXIN selects thedirect inputmatrices [K~~], [M~~]and[Bpjforthecurrent Equivalence [Kp]to[K~~]ifnofluid-structure interface isdefined andequiva’ [Mplto[Mlifthereisno[Ab,fL]. GotoDMAPNo.1D9ifnofluid-structure interface isdefined. ADD5adds[Kbfk]and[Kl* GotoDMAPNo.109ifthere Transpose [Ab,fg] toobtainandsubtracts [Ab,f]fromthemtoform[Kpl. isno[Ab,fk]. [Ab,fL]T. ADDassembles inputmatrix[Mp]=MFACT[AbfL]T+[M~~].9 2.8-12 (05/30/86)loopand Oop, ence\nDIRECTFREQUENCY ANDRANDOMRESPONSE @114.Equivalence [Mp]to[M\u0026l, [Bp1to[Bdland[Kplto[Kd]ifnoconstraints areapplied, [Maa]to[Mdd]iftherearenodirect inputmassmatrices andnoextra points, and[Baa]to[Bdd]iftherearenodirect inputdamping matrices andnoextra points. 115.GotoDMAPNo.117ifonlyextrapoints aredefined. 116.GKADassembles stiffness, massanddamping matrices foruseinDirectFrequency Response: [Kddl=(1+‘ig)[K;d] +[Kjd] +i[K:d] , [Mddl=[Mdl+[MdJ and [Bald]❑ [\u0026]+[B;dlo Directinputmatrices maybecomplex. 118,Equivalence [Kid]to[Kdd]ifallstiffness isDirectMatrixInput,[Md]to[Mold] ifallmassisDirectMatrixInputand[B~dlto[Bald]isalldamping isDirectMatrix Input. 119,GotoDMAPNo.166andprintErrorMessage No.1ifthereisnoFrequency Response List. 120,GotoDMAPNo.164andprintErrorMessage No.2ifthereisnoDynamics LoadTable. o121.FRRDformsthedynamic loadvectors {Pd}andsolvesforthedisplacements usingthe following equation [-MddU2+iBddu+Kdd]{ud}={Pd}. 122. 123. 124. 125. 126. 127. 128, 129. 130.Equivalence {Pplto{Pd}ifnoconstraints areapplied. VDRprepares solution setdisplacements, sorted byfrequency, foroutput. GotoOMAPNo.133ifthereisnooutputrequest forthesolution set. GotoDMAPNo.131ifthereisnooutputrequest forsolution setdisplacements sortedby pointnumber. SDR3sortsthesolution setdisplacements bypointnumber. OFPformats therequested solution setdisplacements, sortedbypointnumber, prepared by SDR3andplacesthemonthesystemoutputfileforprinting. XYTRANprepares theinputforrequested X-Yplotsofthesolution setdisplacements vs. frequency. XYPLOTprepares therequested X-Yplotsofthesolution setdisplacements vs.frequency. GotoDMAPNo.133. 2.8-13(05/30/86)\n132. 134. 135. 136. 137. 139. 140. 141. 142. 143. 144. 145. 146. 147. 148. 149. 150. 153. 156.DISPLACEMENT RIGIDFORMATS OFPformats therequested solution setdisplacements, sortedbyfrequency, prepared byVDR andplacesthemonthesystemoutputfileforprinting. GotoDMAPNo.159ifthereisnooutputrequest involving dependent degrees offreedom or forcesandstresses. Equivalence {ud}to{up}ifnoconstraints areapplied. GotoDMAPNo.138ifnoconstraints areapplied. SDR1recovers dependent components ofdisplacements {Uo}=[G~]{Ud} , 11Uf+Ue ———={Un+Ue} , ‘s H+U‘ne—.— ={up} ‘m11‘d—-.{Uf+Ue) Y uo {Urn}=[G;]{uf +ue} , andrecovers single-point forcesofconstraint {qs}=-{Ps. SDR2calculates element forces(OEFCl) andstresses (k3ESCl+[K{s]{Uf}. andt)reuares loadvectors (!3PPC1), displacement vectors (OUPVCl) andsingle-poirit forcesof’constraint (~QpCl) for outputandtranslation components ofthedisplacement vector(PUGVC1), sortedbyfrequency, GotoDMAPNo.151iftherearenooutputrequests sortedbypointnumberorelement number. SDR3prepares requested outputsortedbypointnumberorelement number. 9FPformats thetablesprepared bySDR3sortedbypointnumberorelement number, andplaces themonthesystemoutputfileforprinting. XYTRANprepares theinputforrequested X-Yplots. XYPLOTprepares therequested X-Yplotsofdisplacements, forces, stresses, loadsand single-point forcesofconstraint vs.frequency, GotoDMAPNo.154ifthereisnoPowerSpectral Density List. RANDOMcalculates powerspectral density functions (PSDF)andautocorrelation functions (AUTO)usingthepreviously calculated frequency response. GotoDMAPNo.154ifnoRANDOMcalculations arerequested. XYTRANprepares theinputforrequested X-YplotsoftheRANDOMoutput. XYPLOTprepares therequested X-Yplotsofautocorrelation functions andpowerspectral density functions. GotoDMAPNo.154. OFPformats thefrequency response outputrequests prepared bySCR2,sortedbyfrequency, andplacesthemonthesystemoutputfileforprinting. GotoDMAPNo.159ifnodeformed structure plotsarerequested. 2.8-14 (05/30/86I\nDIRECTFREQUENCY ANDRANDOMRESPONSE 157.PLOTprepares allrequested deformed structure andcontour plots, ●158.PRTMSGprintsplotter data,engineering ciataandcontour dataforeachdeformed plot generated. 160.GotoDMAPNo,170ifnoadditional setsofdirectinputmatrices needtobeprocessed. 161.GotoDMAPNo.97ifadditional setsofdirectinputmatrices needtobeprocessed. 162,PrintErrorMessage No.3andterminate execution. 163.GotoDMAPNo.170andmakenormalexit. 165.PrintErrorMessage No.2andterminate execution. 167,PrintErrorMessage No.1andterminate execution. 169.PrintErrorMessage No.4andterminate execution. 2.8-15(05/30/86)\nDISPLACEMENT RIGIDFORMATS 2.8.3OutputforDirectFrequency andRandomResponse Thefollowing printed output, sortedbyfrequency (S@RTl) orbypointnumberorelement number(S0RT2), isavailable, eitherasrealandimaginary partsormagnitude andphaseangle(0°-●360°lead),forthelistoffrequencies specified by(FREQUENCY: 1.Displacements, velocities andaccelerations foralistofPHYSICAL points (gridpoints andextrascalar points introduced fordynamic analysis) orS0LUTI!3N points(points used intheformulation ofthedynamic equation). 2.Nonzero components oftheapplied loadvectorandsingle-point forcesof alistofPHYSICAL points. 3.Stresses andforcesinselected elements (ALLavailable onlyforS@RTl). Thefollowing plotter outputisavailable forFrequency Response calculations: 1.Undeformed plotofthestructural model. 2,Deformed shapesofthestructural modelforselected frequencies. 3.Contour plotsofstresses anddisplacements for,selected frequencies. 4,X-Yplotofanycomponent ofdisplacement, velocity oracceleration ofa orS@LUTION point. 5.X-Yplotofanycomponent oftheapplied loadvectororsingle-point constraint. 6,X-Yplotofanystressorforcecomponent foranelement. Thefollowing plotter outputisavailable forRandomResponse calculations:constraint for PHYSICAL point forceof 1.X-Yplotofthepowerspectral density versusfrequency fortheresponse ofselected components forpointsorelements. 2.X-Yplotoftheautocorrelation versustimelagfortheresponse ofselected components forpointsorelements. Thedatausedforpreparing theX-Yplotsmaybepunched orprinted intabular form(seeSection 4.3).Thisistheonlyformofprinted outputthatisavailable forRandomResponse. Also,a printed summary isprepared foreachX-Yplotwhichincludes themaximum andminimum valuesofthe plotted function. 2.8,4CaseControl OeckforDirectFrequency andRandomResponse Thefollowing itemsrelatetosubcase definition anddataselection forDirectFrequency and RandomResponse: 2.8-16(05/30/86)\n1. 2. 3. 4. 5. 6. 7. 8.DIRECTFREQUENCY ANDRANDOMRESPONSE Atleastonesubcase mustbedefined foreachuniquesetofdirectinputmatrices (K2PP, M2PP,B2PP)orfrequencies. Consecutive subcases foreach definetheloading conditionssetofdirectinputmatrices orfrequencies areusedto onesubcase foreachdynamic loading condition. Constraints mustbedefined abovethesubcase level. DL@ADmustbeusedtodefineafrequency-dependent loading condition foreachsubcase. FREQUENCY mustbeusedtoselectone,andonlyone,FREQ,FREQ1, orFREQ2cardfromthe BulkDataDeckforeachunique setofdirect inputmatrices. Onrestart following anunscheduled exitduetoinsufficient time,thesubcase structure mustbechanged toreflect thesetsofdirectinputmatrices thatwerecompleted, and FREQUENCY mustbechanged toselectaFREQ,FREQ1,orFREQ2cardthatreflects any frequencies forwhichtheresponse hasalready beendetermined, Otherwise, theprevious calculations willberepeated. flFREQUENCY maybeusedabovethesubcase levelorwithineachsubcase toselectasubset ofthesolution frequencies foroutputrequests. Thedefault istouseallsolution frequencies. IfRandomResponse calculations aredesired, RANDOMmustbeusedtoselectRANDPSand RANDTicardsfromtheBulkDataDeck.OnlyoneOFREQUENCY andFREQUENCY cardcanbe usedforeachsetofdirectinputmatrices. 2.8.5 Parameters forDirectFrequency andRandomResponse Thefollowing parameters areusedinDirectFrequency 1, 2. 3. 4.ASETllJT -optional. Apositive integer valueofandRandomResponse: thisparameter causestheASEToutput datablocktobegenerated bytheGP4module. Anegative integer valueorO“suppresses thegeneration ofthisoutputdatablock. Thedefault valueisO. AUT@SPC -reserved forfutureoptional use.Thedefault valueis-1. COUPMASS -CPBAR,CPROD,CPQUAD1, CPQUAD2, CPTRIA1, CPTRIA2, CPTUBE, CPQDPLT, CPTRPLT, — CPTRBSC ,-optional. Theseparameters causethegeneration ofcoupled massmatrices ratherthanlumpedmassmatrices forallbarelements, rodelements, andplateelements thatinclude bending stiffness. ~-optional, Therealvalueofthisparameter isusedasauniform structural damping coefficient inthedirectformulation ofdynamics problems (seeSection 9.3.3ofthe Theoretical Manual). Notrecommended foruseinhyclroelastic problems. 2.8-17(05/30j86)\n5, 6. 7. 8.DISPLACEMENT RIGIDFORMATS GRDPNT-optional. Apositive integer valueofthisparameter causestheGridPoint WeightGenerator tobeexecuted andtheresulting weightandbalance information tobe ● printed. Allfluidrelated massesareignored. SURFACE -optional. Thecomputations oftheexternal surface areasforthe two-dimensional andthree-dimensional elements areactivated bythisparameter whenthey aregenerated intheEMGmodule. Theresults aremultiplied bytherealvalueofthis parameter. Seethedescription underthePARAMbulkdatacardfordetails. VOLUME -optional, Thevolume computations forthetwo-dimensional and three-dimensional elements areactivated bythisparameter whentheyaregenerated in theEMGmodule. Theresults aremultiplied bytherealvalueofthisparameter. See thedescription underthePARAMbulkdatacardfordetails. WTMASS-optional. Thetermsofthestructural massmatrixaremultiplied bythereal valueofthisparameter whentheyaregenerated intheEMAmodule. Notrecommended for useinhydroelastic problems. 2.8,6Automatic ALTERsforAutomated Multi-stage Substructuring Thefollowing linesoftheDirectFrequency andRandomResponse, RigidFormat8,areALTERed inautomated substructure analyses. e Phase1:4,56,88-120, 121-162 Phase2:4,5-5,10-20,23-24,43-53,111-112, 118-118, 135-158 Phase3:87,90-136, 138,160-162 IfAPPDISP,SUBSisused,theusermayalsospecify ALTERs. However, thesemustnot interfere withtheautomatically generated DMAPstatement ALTERslistedabove. SeeVolumeI, Section 5.9foradescription andlisting oftheALTERswhichareautomatically generated for substructuring. 2.8.7 RigidFormat ErrorMessages fromDirect Frequency andRandom Response Thefollowing fatalerrorsaredetected RandomReponse rigidformat. Thetextforeach isfollowed byadditional explanatory material,bytheDMAPstatements intheDirectFrequency and errormessage isgivenbelowincapital letters and including suggestions forremedial action. DIRECTFREQUENCY ANDRAND~MRESPONSE ERRORMESSAGE N@.1-FREQUENCY RESPONSE LISTREQUIRED FOR FREQUENCY RESP13NSE CALCULATIONS. Frequencies tobeusedinthesolution offrequency response problems mustbesupplied onaFREQ, 2.8-18(05/30/86) ●\nDIRECTFREQUENCY ANDRANDOMRESPONSE FREQ1,orFREQ2cardintheBulkDataDeckandFREQintheCaseContro’ frequency response set.Deckmustselecta DIRECTFREQUENCY ANDRANDL3MRESPONSE ERR@RMESSAGE N@.2-DYNAMIC LOADSTABLEREQUIRED FOR FREQUENCY RESPONSE CALCULATI!dNS. Dynamic loadstobeusedinthesolution offrequency response problems mustbespecified onan RLOADlorRL!3AD2cardintheBulkDataDeckandDL13ADintheCaseControl Deckmustselecta dynamic loadset. DIRECTFREQUENCY ANDRAND@MRESPONSE ERR!ZIRMESSAGE NO.3-ATTEMPT ToEXECUTE Mk3RETHAN100LOOPS. Anattempt hasbeenmadetousemorethan100setsofdirectinputmatrices. Thisnumbermaybe increased byALTERing theREPTinstruction following thelastOFPinstruction. DIRECTFREQUENCY ANDRANDOMRESP@NSE ERR@RMESSAGE NO.4-MASSMATRIXREQUIRED FORWEIGHTAND BALANCE CALCULATIONS. Themassmatrixisnullbecause eithernoelements weredefined onConnection cards,nonstructural masswasnotdefined onaProperty card,orthedensity wasnotdefined onaMaterial card. 2.8-19(05/30/86)\nDISPLACEMENT RIGIDFORMATS 2.8-20(05/30/86)\nDISPLACEMENT RIGIDFORMATS 2.9DIRECTTRANSIENT RESPONSE 2.9.1DMAPSequence forDirectTransient Response RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 9 LEVEL2.0NASTRAN OMAPCOMPILER -SOURCE LISTING OPTIONS INEFFECT GO ERR=2 LIST NODECK NOREF NOOSCAR\r1BEGIN 2PRECHK 3FILE 4PARAM 5GP1 6PLTTRAN 7PURGE 8COND 9GP2 10PARAML 11PURGE 12COND 13PLTSET 14PRTMSG 15PARAN 16PARAH 17COND 18PLOT 19PRTMSG 20LABEL 21GP3DISP09-DIRECT TRANSIENT RESPONSE ANALYSIS -APR.1986$ ALL$ UDVT=APPEND/TOL=APPEND $ //t4PY/CARDNO/O/O $ GEOMl,GEOM2,/GPL,EQEXIN,GPOT,CSTM,BGPDT,S lL/S,N,LUSET/ S,N,NOGPDT/ALWAYS=-l $ BGPOT,SIL/BGPOP,SIP/LUSET/S,N, LUSEP$ USET,GM,G0,KAA,BAA,MAA,K4AA, PST,KFS,QP,EST,ECT,PLTSETX,PLTPAR, GPSETS,ELSETS/NOGPDT $ LBL5,NOGPDT $ GEom2,EQExlN/EcT s PcDB//PRES////JUMPPLOT $ PLTSETX,PLTPAR,GPSETS,ELSETS/JUMPPLOT $ P1,JLMPPLOT $ PCDB,EQEXIN,ECT/PLTSETX,PLTPAR,GPSETS, ELSETS/S,N,NSIL/ S,N,JUMPPLOT $ PLTSETX// $ //MPY/PLTFLG/l/l $ //MPY/PFILE/O/O $ P1,JUMPPLOT $ PLTPAR,GPSETS,ELSETS,CASECC, BGPDT,EQEXIN,SIL, ,ECT,,/PLOTXl/ NSIL/LUSET/S,N,JUMPPLOT/S,N,PLTFLG/S,N,PF ILE$ PLOTX;// $ PI$ GEoM3,EQEx1N,GEoM2/sLT,GPTT/NoGRAv $ 2.9-1(05/30/86)\nDISPLACEMENT RIGIDFORMAT\u003e RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 9 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 22 23 24 25 26 27 28 29 30 31 32 33 3b 35 36 37 38 39 40 41 42 43 44TA1 PURGE COND PARAM PARAM PARAM PARAM EMG PURGE COND EMA LABEL COND EMA LABEL COND EMA LABEL COND EMA LABEL PURGE PURGEECT,EPT,BGPDT,SIL,GPTT,CSTM/EST,GE l,GPECT,,/ LUSET/S,N,NOSIMP=-l/l/S,N,NOGENL=- l/S,N,GENEL $ K4GG,GPST,0GPST,MGG,BGG, K4NN,K4FF,K4AA,MNN,MFF ,MAA,BNN,BFF,BAA,KGGX/NOS lMP/ OGPST/GENEL $ LBL1,NOSIMP $ //ADD~~/NOKGGX/l/O $ //~~ADD/NOMGG/l/O $ //ADD/NOBGG=-l/l/O $ //ADD/NoK4GG/l/o $ EST,CSTM,MPT,DlT,GEOM2,/KELM,KD lCT,MELM,MDICT,BELM,BDICT,/ S,N,NOKGGX/S,N,NOMGG/S,N,NOBGG/S,N ,NOK4GG//C,Y,COUPMASS/ C,Y,CPBAR/C,Y,CPROD/C,Y,CPQUADl/C,Y, CPQUAD2/C,Y,CPTRIAl/ c,Y,CPTRlA2/C,Y,CPTUBE/C,Y, CPQDPLT/C,Y,CPTRPLT/C,Y,CPTRBSC/ V,Y,VOLUME/V,Y,SURFACE $ KGGX,GPST/NOKGGX/MGG/NOMGG $ LBLKGGX,NOKGGX $ GPECT,KDICT,KELM/KGGX,GPST $ LBLKGGX $ LBLMGG,NOMGG $ GPECT,MDICT,MELM/MGG,/-l/C,Y,WTMASS=l .0$ LBLMGG $ LBLBGG,NOBGG $ GPECT,BDICT,BELM/BGG, $ LBLBGG $ LBLK4GG,NOK4GG $ GPEcT,KDlcT,KELM/K4GG,/NoK4GG $ LBLK4GG $ MNN,MFF,MAA/NOMGG $ BNN,BFF,BAA/NOBGG $ 2.9-2(05/30/86)"},"title":"User's Manual P9"},"/docs/users/users_manual_010/":{"data":{"":"","options-ineffect-go-err2-list-nodeck-noref-nooscar#DISPLACEMENT RIGIDFORMATS\n2.10MODALCOMPLEX EIGENVALUE ANALYSIS\n●2.10,1 DMAPSequence forModalComplex Eigenvalu:_ Analysis\nRIGIDFORMAT DMAPLISTING\nAPRIL1986RELEASE\nDISPLACEMENT APPROACH, RIGIDFORMAT 10\nLEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING\nOPTIONS INEFFECT GO ERR=2 LIST NODECK NOREF NOOSCAR":"DIRECTTRANSIENT RESPONSE RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 9 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING k5 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69COND COND OFP LABEL EQUIV COND SMA3 LABEL PARAN GP4 PURGE COND COND PARAN COND GPSP OFP LABEL EQUIV COND MCE1 MCE2 LABEL EQUIVLBL1,GRDPNT $ ERROR3,NOMGG $ BGPDP,CSTM,EQEXlN,MGG/OGPWG/V,Y,GRDPNT=-l/C,Y,WMASS $ OGPWG,,,,,//S,N,CARDNO $ LBL1$ KGGX,KGG/NOGENL $ LBL1l,NOGENL $ GEl,KGGX/KGG/LUSET/NOGENL/NOSl HP$ LBLll$ //Mpy/NsKIp/o/o $ CASECC,GEOM4,EQEXIN,GPDT,BGPDT,CSTM,GPST/RG, ,USET,ASET/ LUSET/S,N,MPCFl/S,N,MPCF2/S,N,S lNGLE/S,N,OMIT/S,N,REACT/ S,N,NSKlP/S,N,REPEAT/S,N,NOSET/S,N,NOL/S,N,NOA/C,Y,ASETOUT/ S,Y,AUTOSPC $ GM,GMO/llPCFl/GO,GOD/OMIT/KFS,PST,QP/S INGLE$ LBL4,GENEL $ LBL4,NOSIMP $ //*EQit/Gp5pFLG/AIJTospC/O $ LBL4,GPSPFLG $ GPL,GPST,USET,SIL/OGPST/S,N,NOGPST $ OGPST,,,,,//S,N,CARONO $ LBL4s KGG,KNN/MPCFl/MGG,MNN/MPCFl/ BGG,BNN/MPCFl/K4GG,K4NN/MPCF 1$ LBL2,MPCF1 $ USET,RG/GM $ usET,GM,KGG,MGG,BGG,K4GG/KNN,MNN, BNN,K4NN $ LBL2$ KNN,KFF/SINGLE/MNN,MFF/SINGLE/BNN,BFF/S lNGLE/K4NN,K4FF/SlNGLE $ 2.9-3(05/30/86)\nDISPLACEMENT RIGIDFORMATS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 9 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 70CONO 71SCE1 72LABEL 73EQUIV 74EQUIV 75EQUIV 76EQUIV 77COND 78SMP1 79COND 80SMP2 81LABEL 82COND 83SMP2 84LABEL 85COND 86SMP2 87LABEL 88OPD 89COND 90PURGE 91EQUIV 92BMG 93PARAM 94PURGELBL3,SINGLE $ usET,KNN,MNN,BNN,K4NN/KFF,KFs, ,MFF,BFF,K4FF $ LBL3$ KFF,KAA/OMIT $ MFF,MAA/OMIT $ BFF,BAA/OMIT $ K4FF,K4AA/oMIT $ LBL5,0MIT $ USET,KFF ,,,/GO,KAA,KOO,LOO,,,,, $ LBLM,NOMGG $ USET,GO,MFF/MAA $ LBLM$ LBLB,NOBGG $ USET,GO,BFF/BAA $ LBLB$ LBL5,NOK4GG $ usET,Go,K4FF/K4AA $ LBL5$ DYNAMICS,GPL,SIL,USET/GPLO,S ILD,USETD,TFPOOL,DLT, ,,NLFT,TRL, , EQDYN/LUSET/S,N,LUSETD/NOTFL/S,N,NODLT/NOPSDL/ NoFRL/S,N,NONLFT/S,N,NOTRL/NOEED//S,N,NOUE $ ERROR1,NOTRL $ PNLD/NONLFT$ GO,GOD/NOUE/GM,GMD/NOUE $ MATPOOL,BGPDT,EQEXlN,CSTM/BDPOOL/S,N,NOKBFL/S,N,NOABFL/ S,N,MFACT $ //*AND~t/NOFL/NOABF L/N0K9FL $ KBFL/NOKBFL/ ABFL/NOABFL $ 2.9-4(05/30/86)\nDIRECTTRANSIENT RESPONSE RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 9 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 95COND 96MTRXIN, 97LABEL 98MTRXIN 99PARAM 100PARAM 101EQUIV 102COtJD 103AO05 104CONO 105TRNSP 106ADO 107LABEL 108PARAM 109PARAM 110PARAM 111PURGE 112EQUIV 113COND 114GKAD 115LABEL 116EQUIV 117PARAMLBLFL3,NOFL $ ,BDPOOL,EQDYN,,/ABFL,KBFL,/LUSETD/S,N,NOABFL/S,N,NOKBFL/ 0$ LBLFL3 $ cAsEcc,MATPooL,EQDYN,,TFPooL/K2DPP,M2DPP, B2PP/LusETo/s,N, NoK2DPP/s,N,NoM2DPP/s,N,NoB2PP $ //AND/NoM2PP/NoABFL/NoM20PP $ //ANOfi/NOK2PP/NOFL /NOK2DPP $ K20PP,K2PP/NoFL/M2DPP,M2PP/NoABFL LBLFL2,NOFL $ ABFL,KBFL,K2DPP,,/K2PP/(-l.o,o.o) LBLFL2,NOABFL $ ABFL/ABFLT $ ABFLT,M2DPP/M2PP/rlFAcT $ LBLFL2 $ //AND/KDEKA/NOUE/N0K2PP $ //ANo/MoEMA/NouE/NoM2pp $ //AND/KDEK2/NOGENL/NOSIMP $$ s K2DD/NoK2PP/M20D/NoM2PP/B2DD/NoB2PP $ M2PP,M200/NoA/B2PP,B20D/NoA/K2PP, K20D/NoA/MAA,MDD/MoEMA/ KAA,KDD/KOEKA $ LBL16,NOGPDT $ USET0,GM,G0,KAA,BAA,MAA,K4AA, K2PP,M2PP,B2PP/KDo,BDo,MDo,GMo, GOD,K2DD,t42DD,B2DD/~~TRANRESP\u003e~/7’KI lSP/*DIRECT~~/C,Y,G=O.O/ C,Y,W3=0.0/C,Y,W4=0.0/NOK2PP/NOM2PP/NOB2PP/ mPcF1/slNGLE/oMIT/NouE/NoK4GG/NoBGG/ KoEK2/-l $ LBL16$ M2DD,MDD/NoslMP/B2DD,Boo/NoGPDT/K2DD ,KDo/KDEK2 $ //Aoo/NEvER/l/o $ 2.9-5(05/30/86)\nDISPLACEMENT RIGIDFORMATS RIGIDFDRMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 9 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 118PARAM 119LABEL 120PURGE 121CASE 122PARAM 123TRLG 124EQUIV 125TRD 126VDR 127COND 128SOR3 129OFP 130XYTRAN 131XYPLOT 132LABEL 133PARAM 134COND 135EQUIV 136COND 137SDR1 138LABEL 139SOR2 140SOR3//MPY/REPEATT/l/-l $ LBL13$ PNLD,OUDV1,OPNL1 ,0UDV2,0PNL2,XYPLTTA,0PP1 ,OQP1,OUPV1,OES1 , oEFl,oPP2,oQP2,ouPv2,oEs2,oEF2,PLoTx2,xYPLTT/NEvER $ CASECC,/CASEXX/\u003e’TRAN$/S,N,REPEATT/S, N,NOLOOP $ //,MpY,!C/NCOL/O/l $ CASEXX,USETO,OLT,SLT,BGPOT, SIL,CSTM,TRL,DIT,GMD,GOO,, EST,MGG, MPT/PPT,PST,PDT,PD,,TOL/S,N ,NOSET/NCOL $ PPT,POT/NOSET $ CASEXX,TRL,NLFT,OIT,KOD ,BOO,MDO,PD/UOVT,PNLD/D lRECT/ NOUE/NONCUP/S,N,NCOL/C,Y,lSTART $ CASEXX, EQDYN,USETD, UDVT,TOL, XYCDB,PNLD/OUDVl,OPNLl/ fcTRANREsp/,’?DIREcTjc/o/s ,N,NoD/s,N,NoFI/o $ LBL15,NO0 $ OUOV1,OPNL1 ●,,,/ouDv2,0PNL2,,,, $ 0UOV2,0PNL2 ,,,,//S,N,CARONO $ XYCDB,0UOV2,0PNL2, ,,/xyPLTTA/~~TRANI/oDsET*/5,N, PFiLE/ S,N,CARDNO $ XYPLTTA// $ LBL15$ //*AND$t/PJubtp/NOP/JuMPPLOT $ LBL18,PJUMP $ UDVT,UPV/NOA $ LBL17,NOA $ USETD,,UDVT,,,GOD,GMD,PST,KFS,,/UPV,,QP/l/DYNAMl CS$ LBL17$ CASEXX,CSTM,MPT,OIT,EQOYN, SILD,,,BGPOP,TOL,QP, UPV,EST,XYCDB, PPT/OPPl,OQPl,OUPVl,OESl,OEF l,PUGV/$cTRANRESP$ $ OPPl,OQPl,OUPVl,OESl,OEFl,/ 0PP2,0QP2,0UPV2,0ES2,0EF2’, $ 2.9-6(05/30/86)\nDIRECTTRANSIENT RESPONSE RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 9 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 141OFP lh2SCAN 143OFP 144COND lb5PLOT 146PRTMSG 147LABEL 148XYTRAN 149XYPLOT 150LABEL 151COND 152REPT 153PRTPARM 154JUMP 155LABEL 156PRTPARM 157LABEL 158PRTPARM 159LABEL 160PURGE 161END0PP2,0QP2,0uPV2,0EF2,0ES2,//S ,N,CARDNO $ cAsEcc,oEs2,0EF2/oEsF2/RF $ 0ESF2,,,,,//S,N,CARONO $ P2,JUMPPLOT $ PLTPAR,GPSETS,ELSETS,CASEXX,BGPDT, EQEXIN,SIP,,PUGV,GPECT,OES1/ PLOTX2/NSlL/LUSEP/JUMPPLOT/PLTFLG/S ,N,PFILE $ PLoTx2// $ P2$ xYcDB,oPP2,oQP2,ouPv2,oEs2,oEF2/xYPLTT/’~TRAN/PsET/ S,N,PFILE/S,N,CARDNO $ XYPLTT// $ LBL18$ FINIS,REPEATT $ LBL13,1OO $ //-2/DIRTRD $ FINIS$ ERROR1 $ //-1/*DtRTRD\u003ek $ ERROR3 $ //-3/DIRTRD $ FINIS $ DUMMY/ALWAYS $ $ 2.9-7(05/30/86)\n2.9.2 5. 6. 8. 9. 12. 13. 14. 17. 18. 19. 21. 22. 24. 29. 31. 32. 34. 35. 37. 38. 40. 41. 45. 46. 47. 48. 50. 51. 52.DISPLACEMENT RIGIDFORMATS Description ofImportant DMAPOperations forDirectTransient Response GP1generates coordinate systemtransformation matrices, tablesofgridpointlocations, and tablesrelating theinternal andexternal gridpointnumbers. PLTTRAN modifies special scalargridpointsintheBGPDTandS11tables. GotoDMAPNo.87ifthereisonlyDirectMatrixInput. GP2generates Element Connection Tablewithinternal indices. GotoDMAPNo.20iftherearenostructure plotrequests. PLTSETtransforms userinputintoaformusedtodrivethestructure plotter. PRTMSGprintserrormessages associated withthestructure plotter. GotoDMAPNo.20ifnoundeformed structure plotsarerequested. PLOTgenerates allrequested undeformed structure plots. PRTMSGprintsplotter dataandengineering dataforeachundeformed plotgenerated. GP3generates GridPointTemperature Table. TA1generates element tablesforuseinmatrixassembly andstressrecovery. MtoDMAPNo.49iftherearenostructural elements. EMGgenerates structural element stiffness, mass,anddamping matrixtablesanddictionaries forlaterassembly bytheEMAmodule. GotoDMAPNo.33ifnostiffness matrixistobeassembled. EMAassembles stiffness matrix[Kg]andGridPointSingularity Table. GotoDMAPNo.36ifnomassmatrixistobeassembled. EMAassembles massmatrix[Mgg]. GotoDMAPNo.39ifnoviscous damping matrixistobeassembled. EMAassembles viscous damping matrix[Bgg]. GotoDMAPNo.42ifnostructural damping matrixistobeassembled. EMAassembles structural damping matrix[Kg]. GotoDMAPNo.49ifnoweightandbalance information isrequested, GotoDMAPNo.157andprintErrorMessage No.3ifnomassmatrixexists. GPWGgenerates weightandbalance information. giFPformats theweightandbalance information prepared byGPWGandplacesitonthesystem outputfileforprinting. Equivalence [Kg]to[Kgg]iftherearenogeneral elements. GotoDMAPNo.53iftherearenogeneral elements. SMA3addsgeneral elements to[Kg]toobtainstiffness 2.9-8(05/30/86)matrix[Kgg].\nDIRECTTRANSIENT RESPONSE 55, ●57, 58, 60. 61. 62. 64. 65. 66. 67.GP4generates flagsdefining members ofvarious displacement sets(USET)andforms multipoint constraint equations [Rg]{ugl=0. GotoDMAPNo.63ifgeneral elements arepresent. GotoDMAPNo.63iftherearenostructural elements. GotoDMAPNo,63ifnopotential gridpointsingularities exist. GPSPgenerates atableofpotential gridpointsingularities. !3FPformats thetableofpotential gridpointsingularities prepared byGPSPandplacesit onthesystemoutputfileforprinting. Equivalence [Kgg]to[Knn], [Mgg]to[Mnn], [Bgg]to[Bnn]and[Kg]to [Kn]ifnomultipointconstraints exist. GotoDMAPNo.68ifnomultipoint constraints exist. MCE1partitions multipoint constraint equations [Rg]=[Rm~Rnlandsolves for multipoint constraint transformation matrix [Gml=-[Rm]-l[Rnl. MCE2partitions stiffness, massanddamping matrices andperforms matrixreductions [Knn]=[nn]+[Gj[Kmnl +[nl[Gml +[Gj[\\ml[Gml , [Mnn]=[inn]+[G;l[Mmnl +[M;nl[Gml +[G;l[”mml[Gml , [Bnn]=[inn]+[G;][Bmnl +[B:nl[Gml +[G;l[Bl[Gm] , [K:n]=[i:n]+[G;][K:nl +[K:nlTIGml +[Gj[ml[Gml . 69.Equivalence [Knn]to[Kff],[Mnnlto[Mffls[Bnnlto[Bffland[Knl‘0 [Kf]ifnosingle-point constraints exist. 70.GotoDMAPNo.72ifnosingle-point constraints exist. 71.SCE1partitions outsingle-point constraints 2.9-9(05/30/86)\nDISPLACEMENT RIGIDFORMATS [‘ff[Knn]=- Sf [‘ff [Bnnl=__ BSf1‘fs [1%‘‘fs[Mnn]= –+– , K;‘ MsfIMss i’”’‘K’n’=[$a” 73.Equivalence [Kff]to[Kaalifnoomitted coordinates exist. 74.Equivalence [Mff]to[Maalifnoomitted coordinates exist. 75.Equivalence [Bff]to[Baalifnoomitted coordinates exist. 76.Equivalence [Kf]to[Ka]ifnoomitted coordinates exist. 77.GotoDMAPNo.87ifnoomitted coordinates exist. 78.SMP1partitions constrained stiffness matrix [1iIKao [Kff]=flK— , oa00 . solvesfortransformation matrix[Go]=-[Kool-i[Koal andperforms matrixreduction [K~a]=[Kaa]+[Kao][Go] , 79.GotoDMAPNo.81ifthereisnomassmatrix. 80.SMP2partitions constrained massmatrix [1MIMao LMff]=~M— , oa00 andperforms matrixreduction lM;a]=[Maal+[Maol[Gol 82.GotoDMAPNo.84ifthereisnoviscous+[MaoGo]T +[G][Moo][Go] . damping matrix. 83.SMP2partitions constrained viscous damping matrix [18lBao [Bff]=\u0026B- , oa00 andperforms matrixreduction 2.9-10(05/30/86)\n85. 86. 88. 89. 91. 92. 95. 96. 98. 1010 102. 103. 104. 105. 106. 112.DIRECTTRANSIENT RESPONSE [BaI=[Baa]+[Bao][Go] +[BaOGJT +[Gl[BOOl[GJ GotoDMAPNo.87ifthereisnostructural damping matrix. SMP2partitions constrained structural damping matrix. [K:f]= andperforms matrixreduction [K:,]=[Ka]+[Ko][Go] +[K:OGOIT +[G:IIK:OIIGOI DPDgenerates flagsdefining members ofvarious displacement setsusedindynamic analysis (USETD), tablesrelating theinternal andexternal gridpointnumbers (GPLD), including extrapointsintroduced fordynamic analysis (SILD), andprepares Transfer Function Pool (TFPflOL), Dynamics LoadTable(DLT),Nonlinear Function Table(NLFT), andTransient Response List(TRL). GotoDMAPNo.63ifnopotential gridpointsingularities exist. Equivalence [Go]to[G~]and[Gm]to[G~]iftherearenoextl fordynamic analysis. BMGgenerates DMIGcardimagesdescribing theinterconnect structure. GotoDMAPNo.97ifnofluid-structure interface isdefined.apointsintroduced onofthefluidandthe MTRXINgenerates fluidboundary matrices [Ab,fk]and[Kb,fg] ifafluid-structure interface isdefined. Thematrix[Kb,fg] isgenerated onlyforanonzero gravity inthe field. MTRXINselects thedirectinputmatrices [K~~],[M~~]and[Bp]. Equivalence [Kp]to[K~~]ifnofluid-structure interface isdefined andequivalence [Mplto[Mlifthereisno[Ab,ft]. GotoDMAPNo.107ifnofluid-structure interface isdefined. ,]and[K~~]andsubtracts [Ab,fg] fromthemtoform[Kpl. ADD5adds[Kbf GotoDMAPNo,107ifthereisno[Ab,fk]. T Transpose [Ab,fL] toobtain[Ab,fil ~ AODassembles inputmatrix [Mp]=MFACT[Abfk]‘+[M:;]. 9 Equivalence [Mplto[Mid],[Bp1to[Bd]and[Kplto[Kdlifnoconstraints 2.9-11(05/30/86)\nDISPLACEMENT RIGIDFORMATS 113. 114. 116. 119. 121. 123. 124.areapplied, [Maa]to[Mdd]iftherearenodirectinputmassmatrices andnoextra Points, and[KaaltO[Kdd]iftherearenodirectinpUtstiffness matrices andnoextra points. GotoDMAPNo.115ifonlyextrapointsaredefined. GKADassembles stiffness, mass,anddamping matrices foruseinDirectTransient Response: and where and[fkj]=[K:d]+[K:d], [Mold]=[M:d]+[M:d)\u003e [Bdd]=[B:dl+[B:d]+L[K;d]+;[K:d], ‘3 [1KIO ;+; =\u003e[K:d], [1MIO ;\u003c‘)[M;d], [1BIO a+—‘\u003e[B;d], 010 Allmatrices arereal. Equivalence [Bd]to[Bddlifalldamping isDirectMatrixInPUt, [Mid]to[Mold]if allmassisDirect Matrix Inputand[Kdlto[Kdd]isallstiffness Input. Beginning ofloopforadditional dynamic loadsets. CASEextracts theappropriate recordfromCASECCcorresponding to copiesitintoCASEXX. TRLGgenerates matrices ofloadsversustime.{pl,tpl,and{p~} onecolumnperoutputtimestep.{Pd}isgenerated withonecolumnisDirectMatrix thecurrent loopand aregenerated with persolution time step,andtheTransient OutputList(TOL)isalistofoutputtimesteps. Equivalence {Plto{Plifthedandpsetsarethesame. 2,9-12 (05/30/86)\nDIRECTTRANSIENT RESPONSE ●125. 126. 127. 128. 129. 130. 131. 134. 135. 136. 139. 140. 141. 142.TRDformsthelinear, {Pd},andnonlinear, {PL},dynamic loadvectors andintegrates theequations ofmotion (usingthestandard oralternate starting procedure) overspecified timeperiods tosolveforthedisplacements, velocities, andaccelerations, usingthe following equation [M@2+Bddp+Kdd]{Ud}={Pd}+{P~~}. VDRprepares displacements, velocities andaccelerations, sortedbytimestep,foroutput usingonlythesolution setdegrees offreedom. GotoDMAPNo.132ifthereisnooutputrequest forthesolution set. SDR3prepares therequested output ofthesolution setdisplacements, velocities, accelerations andnonlinear loadvectors sortedbypointnumberofelement number. OFPformats thetablesprepared bySDR3sortedbypointnumberorelement numberandplaces themonthesystemoutputfileforprinting. XYTRANprepares theinputforrequested X-Yplotsofthesolution setquantities. XYPLL3Tprepares therequested X-Yplotsofthesolution setdisplacements, velocities, accelerations andnonlinear loadvectors vs.time.. GotoDMAPNo.150ifnofurther outputisrequested. Equivalence {ud}to{up}ifnoconstraints areapplied. GotoDMAPNo.138ifnoconstraints areapplied. SDR1recovers dependent components ofdisplacements {Uo}=[@Ud} , M‘f+‘e——— ={Un+Ue}, ‘snUd ={Uf+uel ,—— U. {Um}=[G;]{uf+ue} , 11Un+Ue ———={up} ‘m andrecovers single-point forcesofconstraint {qs}❑ -{PSI+[K:s]{uf}. SDR2calculates element forces(!ilEFl)andstresses (OESl)andprepares loadvector (!3PP1), displacement, velocity andacceleration vectors(OWVl)andsingle-point forces of constraint (OQPl)foroutputandtranslation components ofthedisplacement vector(PUGV) sortedbytimestep. SDR3prepares requested outputsortedbypointnumberofelement number, 9FPformats thetablesprepared bySDR3foroutputsortedbypointnumberof element number andplacesthemonthesystemoutputfileforprinting. SCANexamines the outputthatmeetselement stresses andforcescalculated bySDR3andgenerates scanned thespecifications setbytheuser, 2.9-13(05/30/86)\nDISPLACEMENT RIGIDFORMATS 143. 144. 145. 146. 148. 149. 150. 152. 153. 154. 156. 158.OFpformats thescanned outputtableprepared bySCANandplacesitonthesystemoutput fileforprinting. GotoDMAPNo.147ifnodeformed structure plotsarerequested. PLOTprepares allrequested deformed structure andcontour plots. PRTMSGprintsplotter data,engineering data,andcontour dataforeachdeformed plot generated. XYTRANprepares theinputforrequested X-Yplots. XYPL@Tprepares therequested X-Yplotsofdisplacements, velocities, accelerations, forces, stresses, loadsandsingle-point forcesofconstraint versustime. GotoDMAPNo.159ifnoadditional dynamic loadsetsneedtobeprocessed. GotoDMAPNo.119ifadditional dynamic loadsetsneedtobeprocessed. PrintErrorMessage No.2andterminate execution. GotoDMAPNo.159andmakenormalexit. PrintErrorMessage No.1andterminate execution. PrintErrorMessage No.3andterminate execution. 2.9-14(05/30/86)\nDIRECTTRANSIENT RESPONSE 2.9.3OutputforDirectTransient Response— ●Thefollowing printed output, sortedbypointnumberorelement number(S0RT2), isavailable atselected multiples oftheintegration timestep: 1.. 2. 3. 4. 5.Displacements, velocities, andaccelerations fora,listofPHYSICAL points(gridpoints andextrascalarpointsintroduced fordynamic analysis) orSOLUTION points(points used intheformulation ofthedynamic equation). Nonzero components oftheapplied loadvectorandsingle-point forcesofconstraint for alistofPHYSICAL points. Nonlinear forcevectorforalistofS!JLUTI~N points. Stresses andforcesinselected elements (Allnotallowed). Scanned outputofforcesandelements inselected elements. Thefollowing plotter outputisavailable: 1.Undeformed plotofthestructural model. 2.Deformed shapesofthestructural modelforselected timeintervals. 3.Contour plotsofstresses anddisplacements forselected timeintervals. 4.X-Yplotofanycomponent ofdisplacement, velocity, oracceleration ofaPHYSICAL point oraSOLUTI@N point. 5.X-Yplotofanycomponent oftheapplied loadvector, nonlinear forcevector, or single-point forceofconstraint. 6.X-Yplotofanystressorforcecomponent foranelement. Thedatausedforpreapring theX-Yplotsmaybepunched orprinted intabular form(seeSection 4.3).Also,aprinted summary isprepared foreachX-Yplotwhichincludes valuesoftheplotted function. 2.9.4CaseControl DeckforDirectTransient Response Thefollowing itemsrelatetosubcase definition anddataselection Response: 1.Onesubcase mustbedefined foreachdynamic loading condition.themaximum andminimum forDirectTransient 2,DLOADand/orNONLINEAR mustbeusedtodefineatime-dependent loading condition for eachsubcase. 3.Allconstraints mustbedefined abovethesubcase level. 4.TSTEPmustbeusedtoselectthetime-step intervals tobeusedforintegration and outputineachsubcase. 2.9-15(05/30/86)\n2.9.5DISPLACEMENT RIGIDFORMATS 5.Ifnonzero initial conditions aredesired, ICmustbeusedtoselectaTICcardinthe BulkDataDeck. 6.Onrestart following anunscheduled exitduetoinsufficient time,thesubcase structure shouldbechanged toreflect anycompleted loading conditions. TheTSTEPselections mustbechanged ifitisdesired toresumetheintegration atthepointterminated. Parameters forDirectTransient Response Thefollowing parameters areusedinDirectTransient Response: 1. 2. 3. 4. 5. 6. 7. 8.ASET13UT -optional. Apositive integer valueofthisparameter causestheASEToutput datablocktobegenerated bytheGP4module. Anegative integer valueorOsuppresses thegeneration ofthisoutputdatablock. Thedefault valueisO. AUTOSPC -reserved forfutureoptional use.Thedefault valueis-1. COUPMASS -CPBAR,CPR@D,CPQUAD1, CPQUAD2, CPTRIA1, CPTRIA2, CPTUBE, CPQDPLT, CPTRPLT, CPTRBSC -optional. Theseparameters causethegeneration ofcoupled massmatrices ratherthanlumpedmassmatrices forallbarelements, rodelements, andplateelements thatinclude bending stiffness. G-optional. Therealvalueofthisparameter isusedasauniform structural damping— coefficient inthedirectformulation ofdynamics problems (seeSection 9.3.3ofthe Theoretical Manual). Notrecommended foruseinhydroelastic problems. GRDPNT-optional. WeightGenerator to printed. Allfluid ISTART-optional.Apositive integer valueofthisparameter causestheGridPoint beexecuted andtheresulting weightandbalance information tobe related massesareignored. Apositive valueofthisparameter causestheTRDmoduletousethe second(oralternate) starting method(seeSection 11.4oftheTheoretical Manual). The alternate starting methodisrecommended wheninitial accelerations aresignificant and whenthemassmatrixisnon-singular. Thedefault valueis-1andcausesthefirst starting methodtobeused. SURFACE -optional. Thecomputations oftheexternal surface areasforthe two-dimensional andthree-dimensional elements areactivated bythisparameter whenthey aregenerated intheEMGmodule. Theresults aremultiplied bytherealvalueofthis parameter. Seethedescription underthePARAMbulkdatacardfordetails. VOLUME -optional. Thevolume computations forthetwo-dimensional and three-dimensional elements areactivated bythisparameter whentheyaregenerated in 2.9-16(05/30/86)\nDIRECTTRANSIENT RESPONSE theEMGmodule. Theresults aremultiplied bytherealvalueofthisparameter. See thedescription underthePARAMbulkdatacardfordetails. 9.W3andW4-optional. Therealvalues(radians/unit time)oftheseparameters areused aspivotal frequencies foruniform structura? damping andelement structural damping, respectively (seeSection 9.3.3oftheTheoretical Manual). Parameter W3isrequired if uniform structural damping isdesired. Parameter W4isrequired ifstructural damping isdesired foranyofthestructural elements. Parameter W3shouldnotbeusedfor hydroelastic prbblems, 10.WTMASS-optional, Thetermsofthestructural massmatrixaremultiplied bythereal valueofthisparameter whentheyaregenerated intheEMAmodule. Notrecommended for useinhydroelastic problems. 2.9.6TheCONTINUL Feature Intransient analysis, equations beyondthelast(oritisfrequently necessary tocontinue theintegration ofthecoupled from~nyearlier intermediate) outputtimeforwhichthesolution was obtained inaprevious run.TheCON1-INUE feature (seeSection 11.4.2oftheTheoretical Manualfor details) makesitpossible todothiswithout re-executing theentireproblem. InordertousetheCONTINUE feature, theusershouldemploythefollowing steps: 1.Request acheckpoint ofacoupled transient analysis problem. 2.Checktoensurethatthesolution foratleastoneoutputtimeiscomputed inthisrun andthattheT13L(listofoutput times)andUDVT(displacement -velocity - acceleration) filesaresuccessfully checkpointed. 3.Restart theproblem bychanging anyoneormoreofseveral cardseitherintheCase Control Deck(DLOAD, NONLINEAR, TSTEPcards)and/orintheBulkDataDeck(TSTEP, OAREA, DLOAD,FORCE,etc.)thatdefineeither thedynamic loading and/orthetimestep selection. Ensurethatthefollowing conditions aresatisfied. a.Thestructural modelandtheconstraint datafortherestart mustbethesameas thatusedinthecheckpoint run. b.Thedynamic loading and/orthetimestepselection intherestart neednotbethe— sameasthatusedinthecheckpoint run. c.Iftheuserwishestocontinue theintegration fromanintermediate (rather than fromthelast)outputtimeofthecheckpoint run, theExecutive Control Decktoresettheparameter 2.9-17(05/30/86)aDMAPaltershouldbeemployed in NC13Ltotheappropriate valueby\nDISPLACEMENT RIGIDFORMATS meansofaPARAMstatement justbeforetheTRLGmoduleintheDMAPsequence. (See Section 11.4.2oftheTheoretical Manualfordetails). 4.Notethattheoutputoftherestart doesnotinclude thesolutions ofthecheckpoint●run,but~thosesolutions thatarecomputed bytherestart. Also,anyinitial conditions specified inthedatafortherestart areignored sincethesolution is continued byusingthedisplacements, velocities andaccelerations corresponding tothe specified outputtimeofthecheckpoint runasinitial conditions. 2.9.7Automatic ALTERsforAutomated Multi-stage Substructuring Thefollowing linesoftheDirectTransient Response, RigidFormat9,areALTERed in automated substructure analyses. Phase1:4,56,88-124, 125-153 Phase2:4,5-5,10-20,23-24,43-53,109-110, 116-116, 135-149 Phase3:87,92-136, 138,151-153 IfAPPDISP,SUBSisused,theusermayalsospecify ALTERs. However, interfere withtheautomatically generated DMAPstatement ALTERslistedabove.thesemustnot SeeVolumeI, Section 5.9foradescription andlisting oftheALTERswhichareautomatically generated for substructuring. a 2.9.8RigidFormatErrorMessages fromDirectTransient Response Thefollowing fatalerrorsaredetected bytheDMAPstatements intheDirectTransient Response rigidformat. Thetextforeacherrormessage isgivenbelowincapital letters andis followed byadditional explanatory material, including suggestions forremedial action. DIRECTTRANSIENT RESPONSE RESPONSE CALCULATIONS. Timestepintervals tobe selection mustbemadein DIRECTTRANSIENT RESPONSEERR@RMESSAGE NO.1-TRANSIENT RESP!3NSE LISTREQUIRED FORTRANSIENT usedmustbespecified onaTSTEPcardintheBulkDataDeckandaTSTEP theCaseControl Deck. ERRORMESSAGE NO.2-ATTEMPT T13EXECUTE M!3RETHAN100L!30PS. Anattempt hasbeenmadetousemorethan100dynamic loadsets.Thisnumbermaybeincreased by ALTERing theREPTinstruction following thelastXYPLOTinstruction. DIRECTTRANSIENT RESPONSE ERRORMESSAGE No.3-MASSMATRIXREQUIRED F(JRWEIGHTANDBALANCE CALCULATI!JNS. Themassmatrixisnullbecause eithernoelements weredefined withConnection cards, nonstructural masswasnotdefined onaProperty card,orthedensity wasnotdefined onaMaterial card. 2.9-18(05/30/86)\nDISPLACEMENT RIGIDFORMATS 2.10MODALCOMPLEX EIGENVALUE ANALYSIS ●2.10,1 DMAPSequence forModalComplex Eigenvalu:_ Analysis RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 10 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING OPTIONS INEFFECT GO ERR=2 LIST NODECK NOREF NOOSCAR\r1BEGIN 2PRECHK 3FILE kPARAM ~GP1 6PLTTRAN 7GP2 8PARAML 9PURGE 10COND 11PLTSET 12PRTMSG 13PARAM 14PARAM 15COND 16PLOT 17PRTMSG 18LABEL 19GP3 20TA1 21CONDDISP10-MODALCOMPLEX EIGENVALUE ANALYSIS -APR.1986$ ALL$ GOD=SAVE/GMD=SAVE/LAMA=APPEND/PH IA=APPENO $ //MPY/CARONO/O/O S GEOMl,GEOM2,/GPL,EQEX!N,GPDT,CSTM, BGPDT,SIL/S,N,LUSET/ NOGPOT/MINUSl=-l $ BGPOT,SIL/BGPDP,SIP/LUSET/S, N,LUSEP $ GEoM2,EQExlN/EcT $ PCDB//$~PRES*////JUNPPLOT $ PLTSETX,PLTPAR,GPSETS,ELSETS/JUMPPLOT $ P1,JUMPPLOT $ PCDB,EQEXIN,ECT/PLTSETX,PLTPAR,GPSETS, ELSETS/S,N,NSIL/ S,N,JUMPPLOT $ PLTSETX// $ //#,MpY,’i/pLTFLG/l/l .$ //9\u003cMpY*/pFILE/o/o $ P1,JUMPPLOT $ PLTPAR,GPSETS, ELSETS,CASECC, BGPDT,EQEXIN,SIL, ,ECT,,/PLOTXl/ NSIL/LUSET/JUMPPLOT/PLTFLG/S, N,PFILE $ PLOTX1// $ P1$ GEOM3,EQEXlN,GEOM2/,GPTT/NOGRAV $ ECT,EPT,BGPDT,S)L,GPTT,CSTM/EST,GE l,GPECT,,/ LUSET/S,N,NOSIMP/l/S,N,NOGENL/S,N ,GENEL $ ERROR5,NOSIMP $ 2.10-1 (05/30/86)\nDISPLACEMENT RIGIDFORMATS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 10 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 22PURGE 23PARAM 24PARAM 25EMG 26PURGE 27CONO 28E?lA 29LABEL 30COND 31EMA 32CONO 33GPWG 34OFP 35LABEL 36EQUIV 37COND 38SNA3 39LABEL 40PARAM 41GP~ 42PARAM 43PURGEOGPST/GENEL $ //ADO/NOKGGX/l/O $ //ADO/NOMGG/l/O $ EST,CSTM,MPT,01T,GEOM2,/KELM, KDICT,MELM,MDICT,,,/S,N,NOKGGX/ S,N,NOMGG////C,Y,COUPMAC,Y,,Y, CPBAR/ c,Y,cPRoo/c,Y,cPQuADl/c,Y,cPQuAD2/c,Y,cPTR lA1/c,Y,cPTRlA2/ C,Y,CPTUBE/C,Y,CPQDPLT/C,Y, CPTRPLT/C,Y,CPTRBSC/ V,Y,VOLUllE/V,Y,SURFACE $ KGGX,GPST/NOKGGX $ JMPKGGX,NOKGGX $ GPECT,KDICT,KELM/KGGX,GPST $ JMPKGGX $ ERROR1,NOMGG $ GPECT,MOICT,MELM/MGG,/-l/C,Y ,WTMASS=l.O $ LGPWG,GRDPNT $ BGPDP,CSTM,EQEXIN,MGG/OGPWG/V,Y,GRDPNT=- l/C,Y,WTMASS $ OGPWG,,s,,//S,N,CARDNO $ LGPWG$ KGGX,KGG/NOGENL $ LBL1l,NOGENL $ GEl,KGGX/KGG/LUSET/NOGENL/NOS IMP$ LBL1l$ //MPY/NSK IP/O/O$ CASECC,GEOM4, EQEXIN,GPDT,BGPDT, CSTM,GPST/RG,,USET,ASET/ LUSET/S,N,MPCFl/S,N,MPCF2/S,N ,SINGLE/S,N,OMIT/S,N,REACT/ S,N,NSKlP/S,N,REPEAT/S,N,NOSET/S,N,NOL/S,N,NOA/C,Y,ASETOUT/ S,Y,AUTOSPC $ //ffAND*/NOSR/REACT/SINGLE $ GM,GMO/MPCFl/GO,GOD/OMIT/KFS/S lNGLE/QPC/NOSR/KLR,KRR,MLR,MRR, OH,MR/REACT $ 2.10-2(05/30/86)\nMODALCOMPLEX EIGENVALUE ANALYSIS RIGIDFORMAT OMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 10 LEVEL2.0NASTRAN OMAPCOMPILER -SOURCE LISTING bkCOND k5PARAM b6CONO 47GPSP h8OFP 49LABEL 50EQUIV 51CONO 52MCEI 53MCE2 54LABEL 55EQUIV 56CONO 57SCEI 58LABEL 59EQUIV 60EQUIV 61CONO 62SMPI 63SIIP2 6kLABEL 65CONO 66RBMGI 67RBMG2 68RBMG3 69RBMG4LBL4,GENEL $ //EQ/GpSpFLG/AUToSpC/o $ LBL4,GPSPFLG $ GPL,GPST,USET,SIL/OGPST/S,N,NOGPST $ OGPST,,,,,//S,N,CARONO $ LBLk$ KGG,KNN/MPCFl/MGG,MNN/MPCFl $ LBL2,MPcFl $ USET,RG/GM $ USET,GM,KGG,MGG,,/KNN,MNN, ,$ LBL2$ KNN,KFF/SINGLE/MNN,MFF/SINGLE $ LBL3,SINGLE $ USET,KNN,MNN,,/KFF,KFS,,MFF ,,$ LBL3s KFF,KAA/OMIT $ MFF,HAA/OMIT $ LBL5,0MIT $ USET,KFF ,,,/GO,KAA,KOO,LOO,,,,, $ USET,GO,MFF/MAA $ LBL5$ LBL6,REACT $ USET,KAA,MAA/KLL,KLR,KRR,MLL,MLR,MRR $ KLL/LLL $ LLL,KLR,KRR/OM $ DM,MLL,MLR,MRR/MR $ 2.10-3(05/30/86)\nDISPLACEMENT RIGIDFORMATS RIGIDFORMAT OMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 10 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 70LABEL 71DPD 72COND 73EQUIV 74PARAM 75READ 76OFP 77COND 78OFP 79PARAM 80PARAH 81LABEL 82PURGE 83CASE 84MTRXIN 85PURGE 86EQUIV 87GKAD 88GKAM 89CEAD 90OFPLBL6$ OYNAMICS,GPL,SIL,USET/GPLD,S ILO,USETD,TFPOOL, ,,,,,EED,EQDYN/ LUSET/S,N,LUSETD/NOTFL/NODLT/NOPSDL/ NOFRL/NONLFT/NOTRL/S,N,NOEED//S,N,NOUE $ ERROR2,NOEED $ GO,GOD/NOUE/GM,GMD/NOUE $ //MpY/NEIGv/l/-l $ KAA,MAA,MR,DM,EED,USET,CASECC/LAMA, PHIA,Ml,OEIGS/MODES/S,N, NEIGV$ OEIGS,,,,,//S,N,CARDNO $ ERROR4,NEIGV $ LAMA,,,,,//S,N,CARDNO $ //ADD/NEVER/l/O $ //*/lPY~~/REPEATE/l/-l $ LBL13$ PHIH,CLAMA,OPHIH,CPHI D,CPHIP,QPC,OQPC1,OCPHIP,OESC1,OEFC1 , K2PP,M2PP,B2PP,K2DD,M20D,B2DD/NEvER $ CASECC,/CASEXX/CEIGN/S,N,REPEATE/S,N,NOLOOP $ CASEXX,MATPOOL, EQDYN,,TFPOOL/K2PP,M2PP, B2PP/LUSETD/S,N, NoK2PP/s,N,NoM2PP/s,N,NoB2PP $ K2DD/NoK2PP/M2DD/NoM2PP/B2Do/NoB2PP $ M2PP,m2DD/NosET/B2PP,B2DD/NosET/K2PP,K2DD/NosET $ USETD,GM,GO, ,,,,K2PP,M2PP,B2PP/,, ,GMD,GOD,K2DD, M2DD,B2DD/cMPLEv/DlsP/moDAL/o.o/ ooo/o.o/NoK2PP/NoM2PP/NoB2PP/ MPCF1/SINGLE/OMIT/NOUE/-l/- 1/ -1/-1$ USETD,PH IA,MI,LAMA,DIT,M2DD ,B2DD,K2DD,CASEXX/MHH,BHH,KHH ,PHIDH/ NOUE/C,Y,LMODES=O/C,Y,LFREQ=O.O/C ,Y,HFREQ=-1.O/ NOM2PP/NOB2PP/NOK2PP/S,N,NONCUP/S ,N,FMODE $ KHH,BHH,MHH,EED,CASEXX/PHIH, CLAMA,OCEIGS,/S,N,EIGVS $ OCEIGS,,,,,//S,N,CARDNO $ 2.10-4(05/30/86)"},"title":"User's Manual P10"},"/docs/users/users_manual_011/":{"data":{"":"MODALCOMPLEX EIGENVALUE ANALYSIS RIGIDFORMAT OMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 10 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 91COND 92OFP 93VDR 94COND 95OFP 96LABEL 97COND 9800R1 99EQUIV 100COND 101SDR1 102LABEL 103SOR2 104OFP 105LABEL 106COND 107REPT 108PRTPARM 109JUMP 110LABEL 111PRTPARM 112LABEL 113PRTPARM 114LABELLBL17,EIGVS $ CLAMA,,,,,//S,N,CARONO $ CASEXX,EQDYN, USETD,PH lH,CLAMA,,/OPHIH,/CE lGEN/W40DAL*/ NosoRT2/s,N,NoH/s,N,NoP/FmooE $ LBL16,NOH $ OPHIH,,,,,//S,N,CARDNO $ LBL16$ LBL17,NOP $ PHIH,PHIDH/CPHID $ CPHIO,CPHIP/NOA $ LBLNOA,NOA $ USETD,,CPHID, ,,GOO,GMD, ,KFS,,/cPHIP,,QPC/l/DYNAMICs $ LBLNOA $ CASEXX, CSTM,MPT,O IT,EQDYN,S ILD,,,,CLAMA,QPC,CPH IP,EST, ,/ ,OQPC1,OCPHIP,OESC1,OEFC1, /CEIGEN $ OCPHIP,OQPCl,OEFCl,OESCl,,//S,N ,CARDNO $ LBL17$ FINIS,REPEATE $ LBL13,1OO $ //-3/MDLcEAo $ FINIS$ ERROR2 $ //-2/MoLcEAo $ ERROR1 $ //-1/MDLCEAO $ ERROR4 $ 115PRTPARM //-4/MDLCEAD $ 2.10-5(05/30/86)\nDISPLACEMENT RIGIDFORMATS RIGIDFORMAT OMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 10 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 116LABEL ERROR5 $ 117PRTPARM //-5/MDLCEAO $ 118LABEL FINIS$ 119PURGE DUMMY/MINUSl $ 120END s 2.10-6(05/30/86)\nMODALCOMPLEX EIGENVALUE ANALYSIS 2.10.2 Descripton ofImportant DMAPOperations forModalComplex Eigenvalue Analysis 5. 6. 7. 10. 11. 12. 15. 16. 17. 19. 20. 21. 25. 27. 28. 30. 31. 32. 33. 34. 36. 37. 38. 41. 44. 46. 47. 48.GP1generates coordinate systemtransformation matrices, tablesofgridpointlocations, and tablesrelating theinternal andexternal gridpointnumbers, PLTTRAN modifies special scalargridpointsintheBGPDTandSILtables. GP2generates Element Connection Tablewithinternal indices. GotoDMAPNo.18iftherearenostructure plotrequests. PLTSETtransforms userinputintoaformusedtodrivethestructure plotter. PRTMSGprintserrormessages associated withthestructure plotter. GotoDMAPNo.18ifnoundeformed structure plotsarerequested. PLOTgenerates allrequested undeformed structure plots. PRTMSGprints GP3generates TA1generatesplotter dataandengineering dataforeachundeformed plotgenerated. GridPointTemperature Table. element tablesforuseinmatrixassembly andstressrecovery. GotoDMAPNo.116andprintErrorMessage No.5iftherearenostructural elements. EMGgenerates structural element stiffness andmassmatrixtablesanddictionaries forlater assembly bytheEMAmodule. GotoDMAPNo.29ifnostiffness matrixistobeassembled. EMAassembles stiffness matrix[Kg]andGridPointSingularity Table. GotoDMAPNo.112andprintErrorMessage No.1ifnomassmatrixistobeassembled. EMAassembles massmatrix[Mgg]. GotoDMAPNo.35ifnoweightandbalance information isrequested. GPWGgenerates weightandbalance information. OFPformats theweightandbalance information prepared byGPWGandplacesitonthesystem outputfileforprinting. Equivalence [K\u0026lto[Kgglifnogeneral elements exist. GotoDMAPNo.39ifnogeneral elements exist. SMA3addsgeneral elements to[K~g]toobtainstiffness matrix[Kgg]. GP4generates flagsdefining members ofvarious displacement sets(USET)andforms multipoint constraint equations [Rg]{ug}=O. GotoDMAPNo.49ifgeneral elements arepresent. GotoDMAPNo.49ifnopotential gridpointsingularities exist. GPSPgenerates atableofpotential gridpointsingularities. OFPformats thetableofpotential gridpointsingularities prepared byGPSPandplacesit onthesystemoutputfileforprinting. 2.10-7 (05/30/86)\n50.Equivalence [Kggl 51.GotoDMAPNo.54DISPLACEMENT RIGIDFORMATS to[Knn]and[Mgg]to[Mnn]ifnomultipoint constraints exist. ifnomultipoint constraints exist. 52.MCE1partitions multipoint constraint equations [Rgl=[RmRnlandsolvesfor multipoint constraint transformation matrix[Gm]=-[Rm]-l[Rn]. 53.MCE2partitions stiffness andmassmatrices [Kggl.[:+’]and[“,,]=[++::] andperforms matrixreductions [Knn]=[nn]+[GJ[\\nl +[Knl[Gml +[Gl[Kmml[Gml and [Mnn]=[inn]+[G;l[Mmnl +[M;nlLGml +[G;l[Mmml[Gml ● 55.Equivalence [Knnlto[Kffland[Mnn]to[Mff]ifnosin91e-Point constraints exist” 56.GotoDMAPNo.58ifnosingle-point constraints exist. 57.SCE1partitions outsingle-point constraints [1Kffyfs[Knn]=~~K–and [1‘ff‘‘fs[Mnn]=-EM– . SfSs SfSs 59.Equivalence [Kff]tol.Kaa]ifnoomitted coordinates exist. 60.Equivalence [Mfflto[Maa]ifnoomitted coordinates exist. 61.GotoDMAPNo.64ifnoomitted coordinates exist. 62.SMP1partitions constrained stiffness matrix [1iIK [Kffl=:aK= , oa00 solvesfortransformation matrix[Gol=-[Kool-l[Koal andperforms matrixreduction [Kaal=[iaal+[Kal[Gol . 63.SMP2partitions constrained massmatrix [1iiMao [MffJ= :aM— oa00 2.10-8 (05/30/86)\nMODALCOMPLEX EIGENVALUE ANALYSIS andperforms matrixreduction 65.Goto 66,RBMG1 67.RBMG2 68.RBMG3[Maa] DMAPNo.70if partitions out [Kaa]=.[aal+[M:a][Go] +[G:l[Moal +[G:IIMOOIIGOI . therearenofree-body supports. free-body supports [1KLlIK [1MkkIM K and [Maa]= —+ . rkrrMrkIMrr decomposes constrained stiffness matrix[Kik]=lLLL][ULL]. formsrigidbodytransformation matrix [D]=-[KLL]-l[Kkr], calculates rigidbodycheckmatrix [x]=[Krr]+[Kr][D] andcalculates rigidbodyerrorratio E. x THTKrr 69.RBMG4formsrigidbodymassmatrix a[mr]=[Mrr]+[Mr][D] +[DT][MLr] +[DT][MLL][D]. 71.DPDgenerates flagsdefining members ofvarious displacement setsusedindynamic analysis (USETD), tablesrelating theinternal andexternal gridpointnumbers (GPLD), including extrapointsintroduced fordynamic analysis (SILD), andprepares Transfer Function Pool (TFPOOL), andEigenvalue Extraction Data(EED). 72.GotoDMAPNo.110andprintErrorMessage No,2ifthereisnoEigenvalue Extraction Data. 73.Equivalence [Go]to[G:]and[Gm]to[G:]iftherearenoextrapointsintroduced for dynamic analysis. 75.READextracts realeigenvalues andeigenvectors fromtheequation [Kaa-AMaa]{ua} =O, calculates rigidbodymodesbyfinding asquare [mol=[oolhnrl[tj.ol isdiagonal andnormalized, computes rigidbody [1[Oaol =o , ‘$romatrix[$ro]suchthat eigenvectors 2.10-9 (05/30/86)\n76. 77. 78. 81. 83. 84. 86. 87. 88.DISPLACEMENT RIGIDFORMATS calculates modalmassmatrix [ml=[Ol[Maa][4al andnormalizes eigenvectors according tooneofthefollowing userrequests: 1)Unitvalueofaselected component 2)Unitvalueofthelargest component 3)Unitvalueofthegeneralized mass. @FPformats thesummary ofeigenvalue extraction information (OEIGS) prepared byREADand placesitonthesystemoutputfileforprinting. GotoDMAPNo.114andprintErrorMessage No.4ifnoeigenvalues werefound. OFPformats theeigenvalues (LAMA)prepared byREADandplacesthemonthesystemoutput fileforprinting. Beginning ofloopforadditional setsofdirectinputmatrices. CASEextracts theappropriate recordfromCASECCcorresponding tothecurrent loopand copiesitintoCASEXX. MTRXINselects thedirectinputmatrices forthecurrent loop,[Kfp],[Mp]and [8p]. Equivalence [Mplto[Mid],[8plto[Bd]and[Kplto[Kid]ifnoconstraints areapplied. GKADapplies constraints todirectinputmatrices [Kpl,[Mpland[Bpl,formin9 [Kd]$[kl\u0026]and[B$d]. GKAMassembles stiffness, massanddamping matrices inmodalcoordinates foruseinComplex Eigenvalue Analysis: e [Khh]=[k]+[\u0026j[K;d][$dh] s [Mhh] =[m]+[$~~][Md][$$dh] and [Bhh]=[b]+[$jh][Bd][$dh] , where andmi=modalmasses, bi=ml211fig(fi) ki.mT22 ii“ Directinputmatrices maybecomplex. 89.CEADextracts complex eigenvalues andeigenvectors fromtheequation [MhP2+Bhhp+Khh]{Uh}=O andnormalizes eigenvectors according tooneofthefollowing userrequests: 2.10-10 (05/30/86)\n90. 91. 92. 93. 94. 95. 97. 98. 99. 100. 101. 103. 104. 106. 107. 108.1)Unitmagnitude 2)Unitmagnitude OFPformats thesummary placesitonthesystemMODALCOMPLEX EIGENVALUE ANALYSIS ofaselected component ofthelargest component. ofeigenvalue extraction information (!3CEIGS) prepared byCEADand outputfileforprinting. GotoDMAPNo.105ifnocomplex eigenvalues werefound. 13FPformats thecomplex eigenvalues (CLAMA) prepared byCEADandplacesthemonthesystem outputfileforprinting. VDRprepares eigenvectors (!3PHIH) foroutput, usingonlytheextrapointsintroduced for dynamic analysis andmodalcoordinates. GotoDMAPNo.96if”there isnooutputrequest fortheextrapointsintroduced fordynamic analysis ormodalcoordinates. OFPformats thetableofeigenvectors forextrapointsintroduced fordynamic analysis and modalcoordinates prepared byVDRandplacesitonthesystemoutputfileforprinting. GotoDMP.PNo.105ifthereisnooutputrequest involving dependent degrees offreedom or forcesandstresses. DDR1transforms thecomplex eigenvectors frommodaltophysical coordinates Equivalence [$d]to[tplifnoconstraints areapplied. GotoDMAPNo.102ifnoconstraints areapplied. SDR1recovers dependent components ofeigenvectors M@f+$e —— ={$n++e} , +s{om}=[G:]{$n+I$e}, andrecovers single-point forcesofconstraint {qsl=[K~sl{+f}. SDRZcalculates element forces (@EFCl) andstresses (@ESCl) and (OCpHIp) andsingle-point forcesofconstraint (!JQpCl) foroutput.prepares eigenvectors OFPformats thetablesprepared bySDR2andplacesthemonthesystemoutputfilefor printing. GotoDMAPNo.118andmakenormalexitifnoadditional setsofdirectinputmatrices need tobeprocessed. GotoDMAPNo.81ifadditional setsofdirectinputmatrices needtobeprocessed. PrintErrorMessage No.3andterminate execution. 2.10-11 (05/30/86)\nDISPLACEMENT RIGIDFORMATS 109.GottoDMAPNo.118andmakenormalexit. 111.PrintErrorMessage No.2andterminate execution. 113.PrintErrorMessage No.1andterminate execution. 115.PrintErrorMessage No.4andterminate execution. 117.PrintErrorMessage No.5andterminate execution. 2.10-12 (05/30/86)\nMOOALCOMPLEX EIGENVALUE ANALYSIS 2.10.3 OutputforModalComplex Eigenvalue Analysis ●TherealEigenvalue Sunnnary TableandtherealEigenvalue Analysis Summary, asdescribed underNormalModesAnalysis (seeSection 2.3.3), areautomatically printed. Allrealeigenvalues extracted areincluded eventhoughnotallareusedinthemodalformulation. Thecomplex Eigenvalue Summary Tableandthecomplex Eigenvalue Analysis Summary, as described underDirectComplex Eigenvalue Analysis (seeSection 2.7.3), areautomatically printed foreachsetofdirectinputmatrices, Outputthatmayberequested isthesameasthatdescribed underDirectComplex Eigenvalue Analysis. OutputforSOLUTION pointswillhavethemodalcoordinates identified bythemodenumber determined inrealeigenvalue analysis. Theeigenvectors usedinthemodalformulation maybeobtained fortheSOLUTION pointsby usingtheALTERfeature toprintthematrixofeigenvectors following theexecution ofREAD.The eigenvectors forallpointsinthemodelmaybeobtained byrunning theproblem initially onthe NormalModesAnalysis RigidFormatorbymakingamodified restart usingtheNormalModesAnalysis rigidformat. 2.10.4 CaseControl DeckforModalComplex Eigenvalue Analysis ●Thefollowing itemsrelated tosubcase definition anddataselection mustbeconsidered in addition tothelistpresented withDirectComplex Eigenvalue Analysis: 1.METHOD mustappear abovethesubcase leveltoselectanEIGRcardthatexistsinthe BulkDataDeck, 2,Alloftheeigenvectors usedinthemodalformulation mustbedetermined inasingle execution. 3.AnSPCsetmustbeselected abovethesubcase levelunlessthemodelisafreebodyor allconstraints arespecified onGRIDcards,ScalarConnection cards Elements. 4.SDAMPING mustbeusedtoselectaTABDMP1 tableifstructural dampingorwithGeneral isdesired. 2.10.5 Parameters forModalComplex Eigenvalue Analysis Thefollowing parameters areusedinModalComplex Eigenvalue Analysis: 2.10-13 (05/30/86)\n1. 2. 3. 4. 5. 6. 7. 8. 9.DISPLACEMENT RIGIDFORMATS ASET13UT -optional. Apositive integer valueofthisparameter causes theASEToutput datablocktobegenerated bytheGP4module. Anegative integer valueorOsuppresses thegeneration ofthisoutput datablock. Thedefault valueisO. ●AUTOSPC -reserved forfutureoptional use.Thedefault valueis-1. CflUPMASS -CPBAR,CPR@D,CPQUAD1, CPQUAD2, CPTRIA1, CPTRIA2, CPTUBE, CPQDPLT, CPTRPLT, CPTRBSC -optional. Theseparameters causethegeneration ofcoupled massmatrices ratherthanlumpedmassmatrices forallbarelements, rodelements, andplateelements thatinclude bending stiffness. GRDPNT-optional. Apositive integer valueofthisparameter causestheGridPoint.— WeightGenerator tobeexecuted andtheresulting weightandbalance information tobe printed. Allfluidrelated massesareignored. LFREQandHFREQ-required, unlessparameter LMODESisused.Therealvaluesofthese parameters givethecyclicfrequency range(LFREQisthelowerlimitandHFREQisthe upperlimit)ofthemodestobeusedinthemodalformulation. Tousethisoption, parameter LMODESmustbesettoO. LMODES-required, unlessparameters LFREQandHFREQareused.Theinteger valueof thisparameter isthenumberoflowestmodestobeusedinthemodalformulation. SURFACE -optional. Thecomputations oftheexternal surface areasforthe two-dimensional andthree-dimensional elements areactivated bythisparameter whenthey●aregenerated intheEMGmodule. Theresults aremultiplied bytherealvalueofthis parameter. Seethedescription underthePARAMbulkdatacardfordetails, VOLUME -optional. Thevolume computations forthetwo-dimensional and three-dimensional elements areactivated bythisparameter whentheyaregenerated in theEMGmodule. Theresults aremultiplied bytherealvalueofthisparameter. See thedescription underthePARAMbulkdatacardfordetails. WTMASS-optional. Thetermsofthestructural massmatrixaremultiplied bythereal valueofthisparameter whentheyaregenerated intheEMAmodule. Notrecommended for useinhydroelastic problems. 2.10.6 Optional Diagnostic OutputforFEER Special detailed information obtained byrequesting DIAG16intheExecutive Control Deckis thesameasthatdescribed underNormalModesAnalysis (seeSection 2.3.6). 2.10-14 (05/30/86)\n( 2.10.7 TheAPPENDFeature TheAPPENDfeature canMODALCOMPLEX EIGENVALUE ANALYSIS beusedforrealeigenvalue extraction inModalComplex Eigenvalue Analysis. SeeSection 2.3.7fordetails. 2.10.8 RigidFormatErrorMessages fromModalComplex Eigenvalue Analysis Thefollowing fatalerrorsaredetected bytheDMAPstatements intheModalComplex Eigenvalue Analysis rigidformat. Thetextforeacherrormessage isgivenbelowincapital letters andisfollowed by‘additional explanatory material, including suggestions forremedial action. MODALCOMPLEX EIGENVALUE ANALYSIS ERRORMESSAGE NO.1-MASSMATRIXREQUIRED FORMODALF@RMULATI@N. Themassmatrixisnullbecause eithernostructural elements weredefined withConnection cards, ..-_—- nonstructural masswasnotdefined onaProperty card,orthedensity wasnot card. MODALCOMPLEX EIGENVALUE ANALYSIS ERRORMESSAGE No.2-EIGENVALUE REALEIGENVALUE ANALYSIS. Eigenvalue extraction datamustbesupplied onanEIGRcardinthe CaseControl DeckmustselectanEIGRset. MODALCOMPLEX EIGENVALUE ANALYSIS ERRORMESSAGE Nfl.3-ATTEMPT TOEXTRACTIONdefined onaMaterial DATAREQUIRED F@R BulkDataDeckandMETHODinthe EXECUTE MORETHAN100LO@PS. Anattempt hasbeenmadetousemorethan100different setsofdirectinputmatrices. Thisnumber canbeincreased byALTERing theREPTinstruction following thelastOFPinstruction. MODALCOMPLEX EIGENVALUE ANALYSIS ERRORMESSAGE NO.4-REALEIGENVALUES REQUIRED FORMODAL F@RMULATIfiiN. Norealeigenvalues werefoundinthefrequency rangespecified bytheuser. M(ilDALC@MPLEX EIGENVALUE ANALYSIS ERRORMESSAGE Nfl.5-NoSTRUCTURAL ELEMENTS HAVEBEENDEFINED. Nostructural elements havebeendefined withConnection cards. 2.10-15 (05/30/86)\nDISPLACEMENT RIGIDFORMATS ● 2.10-16 (05/30/86)\nI DISPLACEMENT RIGIDFORMATS 2.11MODALFREQUENCY ANDRANDOMRESPONSE e2.11.1 RIGID APRILDMAPSequence forModalFrequency andRandomResponse FORMAT DMAPLISTING 1986RELEASE DISPLACEMENT APPROACH, LEVEL2.0NASTRAN OPTIONS INEFFECT GO\n1BEGIN 2PRECHK 3FILE kPARAM 5GP1 6PLTTRAN 7GP2 e8PARAML 9PURGE 10COND 11PLTSET 12PRTMSG 13PARAM 14PARAM 15COND 16PLOT 17PRTMSG 18LABEL 19GP3 20TA1 21CONDDISP11- ALL$RIGIDFORMAT 11 DMAPCOMPILER -SOURCE LISTING ERR=2 LIST NODECK NOREF NOOSCAR MODALFREQUENCY/RANDOM RESPONSE ANALYSIS-APR. 1986$ GOD=SAVE/GMD=SAVE/LAMA=APPEND/PHl A=APPEND $ //ApY/CARDNO/o/o $ GEOMl,GEOM2,/GPL,EQEXIN,GPDT, CSTM,BGPDT,SIL/S,N,LUSET/ NOGPDT/MINUSl=-l $ BGPDT,SIL/BGPDP,SIP/LUSET/S,N, LUSEP$ GEoM2,EQExlN/EcT $ PCDB//PRES////JUMPPLOT $ PLTSETX,PLTPAR,GPSETS,ELSETS/JUMPPLOT $ P1,JUMPPLOT $ PCDB,EQEXlN,ECT/PLTSETX,PLTPAR,GPSETS,ELSETS/S,N,NS lL/ S,N,JUMPPLOT $ PLTSETX// $ //MpY/pLTFLG/I/l $ //MpY/pFILE/o/o $ P1,JUMPPLOT $ PLTPAR,GPSETS, ELSETS,CASECC,BGPDT, EQEXIN,SIL,,ECT,,/PLOTXl/ NSIL/LUSET/S,N,JUMPPLOT/S,N,PLTFLG/S,N,PF ILE$ PLOTX1// $ P1$ GEoM3,EQEx1N,GEom2/,GPTT/NoGRAv $ ECT,EPT,BGPDT,SIL,GPTT,CSTM/EST,GE l,GPECT,,/ LUSET/S,N,NOSIMP/’I/S,N,NOGENL/S,N,GENEL $ ERROR7,NOSIMP $ 2.11-1(05/30/86)\nDISPLACEMENT RIGIDFORMAIS RIGIDFORMAT OMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 11 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 22PURGE 23PARAM 24PARAM 25EMG 26PURGE 27CONO 28EMA 29LABEL 30CONO 31EMA 32COND 33GPWG 34OFP 35LABEL 36EQUIV 37CONO 38SNA3 39LABEL 40PARAM 41GP4 42PARAM 43PURGEOGPST/GENEL $ //AoD/NoKGGx/l/o $ //ADD/NoMGG/l/o $ EST,CSTM,MPT,01T,GEOM2,/KELM, KDICT,MELM,MDICT,,,/S,N,NOKGGX/ S,N,NOMGG////C,Y,COUPMAC,YC,Y ,CPBAR/ c,Y,cPRoo/c,Y,cPQuAol/c,Y,cPQuAD2/c, Y,cPTRIA1/c,Y,cPTRlA2/ C,Y,CPTUBE/C,Y,CPQDPLT/C,Y, CPTRPLT/C,Y,CPTRBSC/ V,Y,VOLUME/V,Y,SURFACE $ KGGX,GPST/NOKGGX $ JMPKGGX,NOKGGX $ GPECT,KDICT,KELM/KGGX,GPST $ JMPKGGX $ ERROR1,NOMGG $ GPECT,MOICT,MELM/MGG,/-l/C,Y,WTMASS=l .0$ LGPWG,GROPNT $ BGPDP,CSTM,EQEXIN,MGG/OGPWG/V,Y,GRDPNT=- l/C,Y,WTMASS $ OGPWG,,,,,//S,N,cARONO $ LGPWG$ KGGX,KGG/NOGENL $ LBL1l,NOGENL $ GEl,KGGX/KGG/LUSET/NOGENL/NOS IMP$ LBL1l$ //MpY/NsKIp/o/o $ CASECC,GEOM4, EQEXIN,GPOT,BGPDT, CSTM,GPST/RG,,USET,ASET/ LuSET/S,N,MPCFl/S,N,MPCF2/S,N, SINGLE/S,N,OMIT/S,N,REACT/ S,N,NSKIP/S,N,REPEAT/S,N,NOSET/S,N,NOL/S ,N,NOA/C,Y,ASETOUT/ S,Y,AUTOSPC $ //*AND~~/NOSR/REACT/SINGLE $ GM,GMO/MPCFl/GO,GOO/OMIT/KFS ,PSF/SINGLE/QPC/NOSR/KLR,KRR,MLR, MRR,DM,MR/REACT/MDD/MODACC $ 2.11-2(05/30/86)\nMODALFREQUENCY ANDRANDOMRESPONSE RIGIDFORMAT DHAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 11 LEVEL2.0NASTRAN OMAPCOMPILER -SOURCE LISTING 44CONO 45PARAM 46CONO 47GPSP 48OFP 49LABEL 50EQUIV 51COND 52MCEI 53MCE2 54LABEL 55EQUIV 56COND 57SCE1 58LABEL 59EQUIV 60EQUIV 61COND 62SMP1 63SMP2 64LABEL 65EQUIV 66CONO 67RBMG1 68JUMP 69LABELLBL4,GENEL $ //EQ/GpsPFLG/AuTospc/o $ LBL4,GPSPFLG $ GPL,GPST,USET,SIL/OGPST/S,N,NOGPST $ OGPST,,,,,//S,N,CARONO $ LBLk$ KGG,KNN/MPCFl/MGG,MNN/MPCFl $ LBL2,MPCF1 $ USET,RG/GM $ USET,GM,KGG,MGG,,/KNN,MNN,, $ LBL2$ KNN,KFF/SINGLE/MNN,MFF/SINGLE $ LBL3,SINGLE $ USET,KNN,MNN,,/KFF,KFS,,MFF ,,$ LBL3$ KFF,KAA/OMIT $ MFF,MAA/OMIT $ LBL5,0MIT $ USET,KFF ,,,/GO,KAA,KOO,LOO,,,,, $ USET,GO,MFF/MAA $ LBL5$ KAA,KLL/REACT $ LBL6,REACT $ USET,KAA,MAA/KLL,KLR,KRR,MLL,MLR,MRR $ LBL8$ LBL6$ 2,11-3(05/30/86)\nDISPLACEMENT RIGIDFORMATS RIGIDFORMAT DMAPLISTING APRILlg86RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 11 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 70 71 72 73 74 75 76 77 78 79 8G 81 82 83 8k 85 86 87 88 89 90 91COND LABEL RBMG2 COND RBMG3 RBMGk LABEL DPD COND PURGE EQUIV PARAM READ OFP COND OFP PARAM PARAM LABEL PURGE CASE MTRXINLBL7,MODACC $ LBL8s KLL/LLL $ LBL7,REACT $ LLL,KLR,KRR/DM $ OM,MLL,MLR,MRR/MR $ LBL7$ DYNAMICS,GPL,SIL,USET/GPLD, SILO,USETD,TFPOOL,DLT, pSDL,FRL)), EEO,EQOYN/LUSET/S,N,LUSETD/NOTFL/S, N,NOOLT/S,N,NOPSDL/ S,N,NOERL/NONLFT/NOTRL/S,N,NOEED//s ,N,NouE $ ERROR2,NOEED $ UEVF/NOUE $ GO,GOD/NOUE/GM,GMD/NOUE $ //MPY~~/NEIGV/l/-l $ KAA,MAA,MR,DM,EED,USET,CASECC/LAMA, PHIA,Ml,OEIGS/MOOES/S,N, NEIGV$ OEIGS,,,,,//S,N,CARDNO $ ERRORJt,NEIGV $ LAMA,,,,,//S,N,CARDNO $ //ftADD/NEVER/l/O $ //MPY/REPEATF/l/-l $ LBL13$ 0UHVC1,0L!HVC2, XYPLTFA,0PPC1 ,OQPC1,OUPVC1,OESC1 ,0EFCi,0PPC2, 0QPC2,0UPVC2,0ESC2,0EFC2, XYPLTF, P5DF,AUTOXYPLTR, K2PPM2PP* B2PP,K2DD,M2DD,B2DD,0PPCA, IQP1,IPHIP1, IES1,IEF1,OPPCB, IQP2, IPHIP2, 1ES2,1EF2,ZQPC2,ZUPVC2 ,ZESC2,ZEFC2,ZQPC1,ZUPVC1,ZESC 1, ZEFC1/NEVER $ CASECC,PSOL/CASEXX/f(FREQ)f/S ,N,REPEATF/S,N,NOLOOP $ CASEXX,MATPOOL,EQDYN,,TFPOOL/K2PP,M2PP, B2PP/LUSETD/S,N, NoK2PP/s,N,NoM2PP/s,N,NoB2PP $ 2.11-4(D5/30/86)\nMODALFREQUENCY ANDRANOOMRESPONSE eRIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 11 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 92PURGE 93PARAM 9kEQUIV 95GKAD 96GKAM 97COND 98COND 99FRRD 100EQUIV 101VDR 102COND 103COND 104SOR3 105OFP 106XYTRAN 107XYPLOT 108JUMP 109LABEL 110OFP 111LABEL 112CONDK200/NoK2PP/M2Do/NoM2PP/B200/NoB2PP $ //AND/fiDEMA/NouE/NoM2pp $ M2PP,M2DD/NoA/B2PP,B2DD/NoA/K2PP,K2oD/NoA/MAA,MDD/mDEMA $ USETD,GM,GO, ,,MAA,,K2PP,M2PP,B2PP/, ,MDD,GMD, GO0,K2DD,M2DD,B2DD/~~FREQRESP*/D lSP/MODAL/O.O/ o,o/o.o/NoK2PP/NoM2PP/NoB2PP/ MPCF1/SINGLE/OMIT/NOUE/-l/-l/ l/v.Y,MoDAcc =-1$ USETO,PHIA,MI, LAMA,DIT,M2DD, B2DD,K20D,CASEXX/MHH,BHH,KHH, PHIDH/ NOUE/C,Y,LMODES=O/C,Y,LFREQ=O .O/C,Y,HFREQ=-l.O/ NOM2PP/NOB2PP/NOK2PP/S,N,NONCUP/S,N ,FMOOE $ ERROR5,NOFRL $ ERROR6,NODLT $ CASEXX,USETO,DLT, FRL,GMD,GOD,KHH ,BHH,MHH,PHIDH,DIT/UHVF,PSF, PDF,PPF/DISP/MODAL/LUSETD/MPCF I/SINGLE/ OMIT/NONCUP/S,N,FRQSET $ PPF,PDF/NOSET $ CASEXX, EQDYN,USETD,UHVF,PPF ,XYCOB,/OUHVCl ,/FREQRESP/ MOOAL/S,N,NOSORT2/S,N,NOH/S ,N,NOP/FMODE $ LBL16,NOH $ LBL16A,NOSORT2 $ ouHvcl,,,,,/ouHvc2,,, ,,$ 0UHVC2,,,,,//s,N,CARDNO $ XYCDB,0UHVC2, ,,,/XYPLTFA/FREQ/fiHSET*/S,N,PF lLE/ S,N,CARDNO $ XYPLTFA //$ LBL16$ LBL16A $ OUHVC1,,,,,//S,N,CARONO $ LBL16$ LBL14,NOP $ 2.11-5(05/30/86)\nDISPLACEMENT RIGIDFORMATS RIGIDFORMAT OMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIOFORMAT 11 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 113 114 115 116 117 118 119 120 121 122 123 124 125 126 i27 128 129 130 131 132 133 134 135PARA/1 COND DOR1 00R2 EQUIV EQUIV COND SOR1 LABEL SDR2 CONO SOR3 JUMP LABEL SOR1 SDR2 SOR2 EQUIV COND SDR3 EQUIV DDRMM EQUIV//NoT/NoMoo/v,y,HoDAcc $ LBODRM,MODACC $ UHVF,PHIDH/UOVIF $ USETD,UDV1 F,PDF,K2DD,B2D0,MDD,PPF ,LLL,DM/uDv2F,uEvF,PAF/ FREQRESP/NOUE/REACT/FRQSET $ uov2F,uDvlF/NoMoD $ UOVIF,UPVC/NOA $ LBLNOA,NOA $ USETD,,UOVIF, ,,GOD,GMO,PSF,KFS,,/UPVC,,QPC/l/OYNAMl CS$ LBLNOA $ CASEXX,CSTM,MPT,DIT, EQDYN,S ILD,,,BGPOP,PPF,QPC,UPVC,EST, XYCDB,PPF/OPPCl ,OQPC1,OUPVC1,OESC1 ,OEFCl,PUGV/FREQ/ S,N,NOSORT2 $ LBL18,NOSORT2 $ OPPC1,OQPC1,OUPVC1 ,0ESCl,0EFCl,/OPPC2,0QPC2,0UPVC2;OESC2, OEFC2, $ P2A$ LBDDRM $ USETO,,PHIOH, ,,GOO,GMO,,KFS,,/PHIPH,,QPH/l/~~DYNAMl CS*$ CASEXX,CSTM,MPT,D IT,EQDYN,S ILO,,,,LAMA,QPH,PHIPH, EST,XYCOB, / ,lQPl,lPHIPl,lESl,lEFl,/WIMRE lG*/S,N,NOSORT2 $ CASEXX,,,,EQDYN,SI LD,,,,PPF, ,,,XYCDB, PPF/OPPCA,,,,,/FREQ $ OPPCA,OPPC1/MOOACC $ LBLSORT,NOSORT2 $ IQP1,IPHIP1, IES1,IEF1,OPPCA, /lQP2,1PHlP2,1ES2,1EF2,0PPCB, $ oPPcB,oPPc2/MooAcc $ CASEXX,UHVF,PPF, IPHIP2,1QP2 ,IES2,1EF2,XYCDB,EST,MPT,0 lT/ ZUPVC2,ZQPC2,ZESC2,ZEFC2, $ zuPvc2,0uPvc2/MoDAcc/zQPc2,0QPc2/moDAcc/zEsc2 ,oEsc2/MooAcc/ zEFc2,0EFc2/MoDAcc $ 2.11-6(05/30/86)\nMODALFREQUENCY ANDRANDOM RESPONSE RIGIDFDRMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 11 LEVEL2.0NASTRAN OMAPCOMPILER -SOURCE LISTING 136JUMP 137LABEL 138DORMM 139EQUIV 140JUMP 141LABEL lk2OFP 143XYTRAN 144XYPLOT 145COND 146PLOT 147PRTMSG ]48LABEL 149CONO 150RANOOM 151COND 152XYTRAN 153XYPLOT 154JUMP 155LABEL 156OFP 157LABEL 158CONDP2A$ LBLSORT $, CASEXX,UHVF,PPF, IPHIP1, IQP1,lESl,lEFl,,EST,MPT,OIT/ ZUPVC1,ZQPC1,ZESC1,ZEFC1, $ ZUPVCl,OUPVC1/MODACC/ZQPCl ,OQPCl/MOOACC/ZESCl ,OESC1/MODACC/ ZEFCl,OEFC1/MODACC $ LBL18$ P2A$ 0PPC2,0QPC2,0UPVC2,0EFC2,0ESC2,//S,N, EARDNo $ xYcDB,oPPc2,oQPc2,ouPvc2,oEsc2,oEFc2/xYPLTF/FREQ/PsET/ S,N,PFILE/S,N,CARONO $ XYPLTF// $ LBL21,JUMPPLOT $ PLTPAR,GPSETS, ELSETS,CASEXX, BGPDT,EQEXIN,Slp, ,puGv,)/ PLOTX2/NSlL/LUSEP/JUMPPLOT/PLTFLG/S,N, PFILE$ PLoTx2// $ LBL21$ LBL14,NOPSDL $ XYCDB,DlT,PSDL,OUPVC2,OPPC2,OQPC2,OESC2,OEFC2,CASEXX/PSOF ,AUTO/ S,N,NORD $ LBL14,NORD $ XYCOB,PSDF,AUTO, ,,/XYPLTR/RAND/PSET/S,N,PF lLE/ S,N,CARDNO $ XYPLTR// $ LBL14$ LBL18$ OUPVCl,OPPCl,OQPCl,OEFCl,OEScl ,//S,N,cARoNo $ LBL14$ FINIS,REPEATF $ 2.11-7(05/30/86)\nDISPLACEMENT RIGIDFORMATS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 11 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 17b 175 176REPT PRTPARM JUMP LABEL PRTPARM LABEL PRTPARM LABEL PRTPARM LABEL PRTPARM LABEL PRTPARM LABEL PRTPARM LABEL PURGE ENDLBL13,1OO $ //-3/MDLFRRD $ FINIS$ ERROR2 $ //-2/*MDLFRRDt~ $ ERROR1 $ //-1/MOLFRRD $ ERROR4 $ //-4/MDLFRRD $ ERROR5 $ //-5/MDLFRRD~ $ ERROR6 $ //-6/MDLFRRo $ ERROR7 $ //-7/MDLFRRo $ FINIS$ DUMMY/MINUSl $ $ 2.11-8 (05/30/86)"},"title":"User's Manual P11"},"/docs/users/users_manual_012/":{"data":{"":"2.11.2 @5. 6. 7. 10, 11. 12. 15. 16, 17. 19, 20. 21. 25. 27. 28. a30. 31. 32. 33. 34. 36. 37. 38. 41. 44. 46. 47. 48.MOOAL Description ofImportant DMAPFREQUENCY ANDRANDOM Operations forModalRESPONSE Frequency andRandomResponse GP1generates coordinate systemtransformation matrices, tablesofgridpointlocations, and tablesrelating theinternal andexternal gridpointnumbers. PLTTRAN modifies special scalargridpointsintheBGPDTandSILtables. GP2generates Element Connection Tablewithinternal indices. GotoDMAPNo.18iftherearenostructure plotrequests. PLTSETtransforms userinputintoaformusedtodrivethestructure plotter. PRTMSGprintserrormessages associated withthestructure plotter. GotoDMAPNo.18ifnoundeformed structure plotsarerequested. PLOTgenerates allrequested undeformed structure plots. PRTMSGprintsplotter dataandengineering dataforeachundeformed plotgenerated. GP3generates GridPointTemperature Table. TA1generates element tablesforuseinmatrixassembly andstressrecovery. GotoDMAPNo,172andprintErrorMessage No.7iftherearenostructural elements. EMGgenerates structural element stiffness andmassmatrixtablesanddictionaries forlater assembly bytheEMAmodule. GotoDMAPNo.29ifnostiffness matrixistobeassembled. EMAassembles stiffness matrix[Kg]andGridPointSingularity Table. GotoDMAPNo.164andprintErrorMessage No.1ifnomassmatrixistobeassembled. EMAassembles massmatrix[Mgg]. GotoDMAPNo.35ifnoweightandbalance information isrequested. GPWGgenerates weightandbalance information. OFPformats theweightandbalance information prepared byGPWGandplacesitonthesystem outputfileforprinting. Equivalence [Kg]to[Kgg]ifnogeneral elements exist. GotoDMAPNo.39ifnogeneral elements exist. SMA3addsgeneral elements to[K~g]toobtainstiffness matrix[Kgg]. GP4generates flagsdefining members ofvarious displacement sets(USET multipoint constraint equations [Rg]tug}=O. GotoDMAPNo.49ifgeneral elements arepresent. GotoDMAPNo.49ifnopotential gridpointsingularities exist. GPSPgenerates atableofpotential gridpointsingularities.andforms OFPformats thetableofpotential gridpointsingularities prepared byGPSP andplacesit onthesystemoutputfileforprinting. 2.11-9(05/30/86)\n50.Equivalence [Kgg] 51.GotoDMAPNo.54DISPLACEMENT RIGIOFORMATS to[Knn]and[Mgg]to[Mnn]ifnomultipoint constraints exist. ifnomultipoint constraints exist. 52.MCE1partitions multipoint constraint equations [Rg]=[Rm\\Rn] andsolvesfor multipoint constraint transformation matrixLGM]=-[Rm]-l[Rn]. 53.MCE2partitions stiffness andmassmatrices “99]‘[$tland‘Mgg]‘[+andperforms matrixreductions [Knnl=[nnl+[Gl[Kmnl +[nl[Gml +[Gl[Kmml[Gml and [Mnn]=[nnl+[Gj[Mmnl +LM;nl[Gml +[G;l[Mmml[Gml . 55.Equivalence [Knn]to[Kff]and[Mnn]to[Mff]ifnosingle-point constraints exist. 56.GotoDMAPNo.58ifnosingle-point constraints exist. 57.SCE1partitions outsingle-point constraints [Knn]= [1‘ff’‘fs~~K— and [Mnn]= [1‘ff’‘fs:M— . SfSs Sf55 59.Equivalence [Kfflto[Kaalifnoomitted coordinates exist. 60.Equivalence [Mff]to[Maa]ifnoomitted coordinates exist. 61.GotoDMAPNo.64ifnoomitted coordinates exist. 62.SMP1partitions constrained stiffness matrix [1KaaIKao rKffl=~~K—‘ oa00 . solvesfortransformation matrix[Go]=-[Koo]-l[Koa] andperforms matrixreduction [Kaa]=[aa]+[Ka][Go] . 63.SMP2partitions constrained massmatrix [Mff]= [1MIM ~a+ ‘oa‘Moo 2,11-10 (05/30/86)I I a ●\nMODALFREQUENCY ANDRANDOMRESPONSE andperforms matrixreduction [Maa]=[iaa]+[M;a][Go] +[G~][Moa] +[G~][Moo][Goj . 65.Equivalence [Kaa]to[KLg]ifnofree-body supports exist. 66.GotoDMAPNo.69ifnofree-body supports exist. 67.RBMG1 68.Goto 70.Goto 72.RBMG2 73.Goto 74.RBMCi3partitions outfree-body supports [1KIK [Kaa]=.L+and [[Maa]=+- Krk1Krrr$M 1Er.— M“rr DMAPNo.71. DMAPNo.76ifthereisnorequest formodeacceleration datarecovery. decomposes constrained stiffness matrix[Ktk]=[Ltt][llit]. DMAPNo.76ifnofree-body supports exist. formsrigidbodytransformation matrix [D]=-LKBi]-l[Kgr], calculates rigidbodycheckmatrix [X]=[Krr]+[Kr][D] andcalculates rigidbodyerrorratio E. l+%x. IKIrr 75.RBMG4formsrigidbodymassmatrix [mr]=[Mrr]+[Mr][D] +[DT]l-MLr] +[DT][MLg][D]. 77.DPDgenerates flagsdefining members ofvarious displacement setsusedindynamic analysis (USETD), tablesrelating theinternal andexterna”l gridpointnumbers (GPLD), including extrapointsintroduced fordynamic analysis (SILD), andprepares Transfer Function Pool (TFPOOL), Dynamic LoadsTable(DLT),PowerSpectral Density List(PSDL), Frequency Response List(FRL),andEigenvalue Extraction Data(EED). 78.GotoDMAP’No.162andprintErrorMessage No.2ifthereisnoEigenvalue Extraction Data, 80.Equivalence [Go]toLG~]and[Gm]to[G:]iftherearenoextrapointsintroduced fordynamic analysis. 82.READextracts realeigenvalues andeigenvectors fromtheequation [Kaa-AMaa]{ua} =O, calculates rigidbodymodesbyfinding asquarematrix[oro]such .2.11-11(05/30/86)that\n83. 84. 85. 88. 90. 91. 94. 95. 96.DISPLACEMENT RIGIO [mo]=[~~Ol[mrl[$rOl isdiagonal andnormaized, computes rigidbodyFORMATS eigenvectors [1[$ao] .32,@ro calculates modalmassmatrix [m]=[$l[Maal[@a] andnormalizes eigenvectors according tooneofthefollowing userrequests: 1)Unitvalueofaselected component 2)Unitvalueofthelargest component 3)Unitvalueofthegeneralized mass. gFpformats thesummary ofefgetlvalue .eXt.l”tiCtfOn information places itonthesystem output fileforprinting. GotoDMAPNo.166andprintErrorMessage No.4ifnoeigenva(JEIGS) prepared byREADand ueswerefound. !i!FPformats theeigenvalues (LAMA)prepared byREADandplacesthemonthesystemoutput fileforprinting. Beginning ofloopforadditional setsofdirectinputmatrices. CASEextracts theappropriate recordfromCASECCcorresponding tothecurrent loopand copiesitintoCASEXX. MTRXINselects thedirectinputmatrices forthecurrent loop,[Kpl, [Mpland [B;p]. 2]to[Bdland[Kpp Equivalence [Mp]to[Md]\u003e[Bpp2]to[Kid]ifnoconstraints areapplied, and[MaaltoLMdd]iftherearenodirectinputmassmatrices andnoextra pointsintroduced fordynamic analysis. GKADapplies constraints todirectinputmatrices [Kpl,[Mpland[Bpl,forming [K~d],[M;d]and[B;d]. GKAMassembles stiffness, massanddamping matrices inmodalcoordinates forusein Frequency Response: LKhh]=[k]+[$h][Kd][$dh] , [Mhh]=[m]+[$~h]LM$d][$dh] and [Bhh]=[b]+[@h][Bd][$dh] , where mi=modalmasses , bi=mi2Trfig(fi) 2.11-12 (05/30/86)\n97. 98. 99. 100. 101. 102. 103. 104. 105. 106. 107. 108. 110. 112. 114. 115. 116. 117, 118. 119.MODALFREQUENCY ANDRANDOMRESPONSE and ki=mi41r2f;. Directinputmatrices maybecoinplex. GotoDMAPNo.168andprintErrorMessage No.5ifthereisnoFrequency Response List. GotoDMAPNo.170andprintErrorMessage No.6ifthereisnoDynamic LoadsTable. FRRDformsthedynamic loadvectors {Ph}andsolvesforthedisplacements usingthe following equation [-Mhhu2+ iBhhu+Khh]{uh} ={Ph}. Equivalence {Pp}to{Pd}ifnoconstraints areapplied. VDRprepares displacements (OUHVCl), sortedbyfrequency, foroutputusingonlytheextra pointsintroduced fordynamic analysis andmodalcoordinates (solution points). GotoDMAPNo.111ifthereisnooutputrequest forsolution points. GotoDMAPNo.109ifthereisnooutputrequest forsolution pointssortedbyextrapoint ormodenumber. SDR3sortsthesolution pointdisplacements byextrapointormodenumber. OFpformats therequested solution pointdisplacements prepared bySDR3 andplacesthemon thesystemoutputfileforprinting. XYTRANprepares theinputforrequested X-Yplotsofthesolution pointdisplacements vs. frequency. XYPL13Tprepares therequested X-Yplotsofthesolution pointdisplacements vs.frequency. GotoDMAPNo.111. !Wformats therequested solution point thesystemoutputfileforprinting. GotoOMAPNo.157ifthereisnooutput forcesandstresses.displacements prepared byVDRandplacesthemon request involving dependent degrees offreedom or GotoDMAPNo,126ifthemodeacceleration technique isnotrequested. DDR1transforms thesolution vectorofdisplacements frommodaltophysical coordinates {Ud}=[$dh]{lj} . DDR2calculates animproved displacement vectorusingthemodeacceleration technique. Equivalence {ud}totheimproved displacement vector. (FlagN13M!IIDisnegative sincethe modeacceleration technique isrequested). Equivalence {ud}to{Up}ifnoconstraints areapplied. GotoDMAPNo.121ifnoconstraints areapplied. 2.11-13 (05/30/86)\n120. 122. 123. 124. 125. 127. 128. 129. 130. 131. 132.DISPLACEMENT RIGIDFORMATS SDR1recovers dependent components ofdisplacements {uOl=[G’j{ua} , 11‘f+‘e——— ={Un+Ue?, ‘sH‘d={Uf+ue} , —- “0 {um}=[G:]{uf +“e} , 11+U ‘ne———={up} Um andrecovers single-point forcesofconstraint {qs}=-{P~}+[K~s]{uf}. SOR2calculates element forces (OEFCl) andstresses (@ESCl) andprepares loadvectors (Oppcl), displacement vectors (OUPVCl) andsingle-point forcesofconstraint (!3QPC1) for outputandtranslation components ofthedisplacement vector(PUGV), sortedbyfrequency. GotoDMAPNo.155iftherearenorequests foroutputsortedbypointnumberorelement number. SDR3prepares therequested output GotoDMAPNo.141. SDR1recovers dependent components {+.}=[G:]{On} , 11@f+“e —— ={$n+ue} , +ssortedbypointnumberofelement number. ofeigenvectors on N={l$f+ue} ,—— 40 {Om}=[G:]{$n+“e}, H$n+ue _ —— -{$9+IJe}={$p} @m andrecovers single-point forcesofconstraint {qs}=[Kfs]T{$f}. SDR2calculates element forces(IEF1)andstresses (IES1)andprepares eigenvectors (IPHIP1) andsingle-point forcesofconstraint (IQP1)foroutputsortedbyfrequency, SDR2prepares loadvectors foroutput(flPPCA) sortedbyfrequency. Equivalence 13PPCAtoOPPC1. (FlagMODACC is isnotrequested). GotoDMAPNo.137iftherearenorequests number. SDR3prepares therequested output sorted bynegative sincethemodeacceleration technique foroutputsortedbypointnumberorelement pointnumberorelement number.I 2.11-14 (05/30/86)\n133. ●134. 135. 136. 138. 139. 140. 142. 143. 144. 145. 146. a147. 149. 150. 151. 152. 153. 154. 156. 158. 159. 160. 161.MOOALFREQUENCY ANDRANDOMRESPONSE Equivalence lJPPCBto0PPC2. (FlagMi3DACCisnegative sincethemodeacceleration technique isnotrequested). DDRMMprepares asubsetoftheelement forces(ZEFC2) andstresses (ZESC2), anddisplacement vectors (ZUPVC2) andsingle-point forcesofconstraint (ZQPC2) foroutputsortedbypoint numberorelement number. Equivalence ZUPVC2to!iLlPVC2, ZQPC2to0QPC2,ZESC2to13ESC2,andZEFC2to0EFC2. (Flag M9DACCisnegative sincethemodeacceleration technique isnotrequested). GotoDMAPNo.141. DDRMMprepares asubsetoftheelement forces(ZEFC1) andstresses (ZESC1), anddisplacement vectors (ZUPVC1) andsingle-point forcesofconstraint (ZQPC1) foroutputsortedby frequency. Equivalence ZUPVC1toOUPVCl, ZQPC1toOQPCl,ZESC1toklESCl, andZEFC1toOEFC1. (Flag MODACCisnegative sincethemodeacceleration technique isnotrequested). GotoOMAPNo.155. OFPformats therequested outputprepared bySDR3(withmodeacceleration) orDDRMM(nomode acceleration) andplacesitonthesystemoutputfileforprinting. XYTRANprepares theinputforrequested X-Yplots. XYPL13Tprepares therequested X-Yplotsofdisplacements, forces, stresses, loadsand single-point forcesofconstraint vs.frequency. GotoDMAPNo.148ifnodeformed structure plotsarerequested. PL!3Tgenerates allrequested deformed structure andcontour plots. PRTMSGprintsplotter data,engineering data,andcontour dataforeachdeformed plot generated. GotoDMAPNo.157ifnopowerspectral density functions orautocorrelation functions are requested. RANDOMcalculates powerspectral density functions (PSOF)andautocorrelation functions (AUT@)usingthepreviously calculated frequency response. GotoDMAPNo.157ifnoX-YplotsofRANDOMcalculations arerequested. XYTRANprepares theinputforrequested X-YplotsoftheRANDOMoutput. XYPL13Tprepares therequested X-Yplotsofautocorrelation functions andpowerspectral density functions. GotoDMAPNo.157. OFPformats thefrequency response outputrequests prepared bySDR2(withmodeacceleration) orDDRMM(nomodeacceleration) andplacesthemonthesystemoutputfileforprinting. Goto tobe Goto Print GotoDMAPNo.174andmakenormalexitifnoadditional setsofdirectinputmatrices need processed. DMAPNo.88ifadditional setsofdirectinputmatrices needtobeprocessed. ErrorMessage No.3andterminate execution. DMAPNo.174andmakenormalexit. 2.11-15 (05/30/86)\nDISPLACEMENT RIGIDFORMATS 163.PrintErrorMessage No.2andterminate execution. 165.PrintErrorMessage No.1andterminate execution. 167.PrintErrorMessage No.4andterminate execution, 169.PrintErrorMessage No.5andterminate execution. 171.PrintErrorMessage No.6andterminate execution. 173.PrintErrorMessage No.7andterminate execution. 2.11-16 (05/30/86)o\nMODALFREQUENCY ANDRANDOMRESPONSE 2.11.3 OutputforModalFrequency andRandomResponse TheEigenvalue Summary TableandtheEigenvalue Analysis Summary, asdescribed underNormal ModesAnalysis (seeSection 2.3.3), areautomatically printed. Allrealeigenvalues extracted are included eventhoughnotallareusedinthemodalformulation. Outputthatmayberequested isthesameasthatdescribed underDirectFrequency andRandom Response, OutputforS@LUTION pointswillhavethemodalcoordinates identified bythemodenumber determined inrealeigenvalue analysis. Theeigenvectors usedinthemodalformulation maybeobtained fortheS0LUTI13N pointsby usingtheALTERfeature toprintthematrixofeigenvectors following theexecution ofREAD.The eigenvectors forallpointsinthemodelmaybeobtained byrunning theproblem initially onthe NormalModesAnalysis rigidformatorbymakingamodified restart usingtheNormalModesAnalysis rigidformat. 2.11,4 CaseControl DeckforModalFrequency andRandomResponse Thefollowing itemsrelated tosubcase definition anddataselection mustbeconsidered in addition tothelistpresented withDirectFrequency andRandomResponse: 1,METHODmustappearabovethesubcase leveltoselectanEIGRcardthatexistsinthe BulkDataDeck. 2.Alloftheeigenvectors usedinthemodalformulation mustbedetermined inasingle execution. 3.AnSPCsetmustbeselected abovethesubcase levelunlessthemodel allconstraints arespecified onGRIDcards,ScalarConnection cards Elements. 4.SDAMPING mustbeusedtoselectaTABDMP1 tableifstructural damping 2.11.5 Parameters forModalFrequency andRandomResponse Thefollowing parameters areusedinModalFrequency andRandomResponse:isafreebodyor orwithGeneral isdesired. 1.ASETOUT -optional. Apositive integer valueofthisparameter causes datablocktobegenerated bytheGP4module. Anegative integer value thegeneration ofthisoutputdatablock. Thedefault valueisO. 2.AUT@SPC -reserved forfutureoptional use.Thedefault valueis-1.theASEToutput orOsuppresses 2,11-17 (05/30/86)\nDISPLACEMENT RIGIDFORMATS 3.CflJPMASS -CPBAR,CPROD,CPQUAD1, CPQUAD2, CPTRIA1, CPTRIA2, CPTUBE, CPQDPLT, CPTRPLT, CPTRBSC -optional. Theseparameters causethegeneration ofcoupled massmatrices ratherthanlumpedmassmatrices forallbarelements, rodelements, andplateelements thatinclude bending stiffness. 4,GRDPNT-optional. Apositive integer valueofthisparameter causestheGridPoint WeightGenerator tobeexecuted andtheresulting weightandbalance information tobe printed. Allfluidrelated massesareignored. 5.LFREQandHFREQ-required, unlessparameter LMODESisused,Therealvaluesofthese parameters givethecyclicfrequency range(LFREQisthelowerlimitandHFREQisthe upperlimit)ofthemodestobeusedinthemodalformulation. Tousethisoption, parameter LMODESmustbesettoO. 6.LM@DES-required, unlessparameters LFREQandHFREQareused.Theinteger valueof thisparameter’is thenumberoflowestmodestobeusedinthemodalformulation. 7,MODACC-optional. Apositive integer valueofthisparameter causestheDynamic Data Recovery moduletousethemodeacceleration method. Notrecommended forusein hydroelastic problems. 8.SURFACE -optional. Thecomputations oftheexternal surface areasforthe two-dimensional andthree-dimensional elements areactivated bythisparameter whenthey aregenerated intheEMGmodule. Theresults aremultiplied bytherealvalueofthis parameter. Seethedescription underthePARAMbulkdatacardfordetails. 9.VOLUME -optional. Thevolume computations forthetwo-dimensional and three-dimensional elements areactivated bythisparameter whentheyaregenerated in theEMGmodule. Theresults aremultiplied bytherealvalueofthisparameter. See thedescription underthePARAMbulkdatacardfordetails. 10.WTMASS-optional. Thetermsofthestructural massmatrixaremultiplied bythereal valueofthisparameter whentheyaregenerated intheEMAmodule. Notrecommended for useinhydroelastic problems. 2.11.6 Optional Diagnostic OutputforFEER Special detailed information obtained byrequesting DIAG16intheExecutive Control Deckis thesameasthatdescribed underNormalModesAnalysis (seeSection 2.3.6)i– 2.11-18 (05/30/86)\nMODALFREQUENCY ANDRANDOMRESPONSE 2.11.7 TheAPPENDFeature TheAPPENDfeature canbeusedforrealeigenvalue extraction inModalFrequency andRandom Response. SeeSection 2.3.7fordetails. 2.11.8 RigidFormatErrorMessages fromModalFrequency andRandomResponse Thefollowing fatalerrorsaredetected bytheModalFrequency andRandomResponse rigid format. Thetextforeacherrormessage isgivenbelowincapital letters andisfollowed by additional explanatory material, including suggestions forremedial action. MODALFREQUENCY ANDRANDOMRESPONSE ERRORMESSAGE NO.1-MASSMATRIXREQUIRED F9RMODAL FORMULATION. Themassmatrixisnullbecause eithernostructural elements weredefined withConnection cards, nonstructural masswasnotdefined onaProperty card,orthedensity wasnotdefined onaMaterial card. MODALFREQUENCY ANDRANDf4MRESPONSE ERR@RMESSAGE No.2-EIGENVALUE EXTRACTION DATAREQUIRED F@R REALEIGENVALUE ANALYSIS. Eigenvalue extraction datamustbesupplied onanEIGRcardintheBulkDataDeckandMETHODinthe CaseControl DeckmustselectanEIGRset. MODALFREQUENCY ANDRAND@MRESPONSE ERRORMESSAGE NO.3-ATTEMPT TOEXECUTE M@RETHAN100Lf@PS, Anattempt hasbeenmadetousemorethan100setsofdirectinputmatrices. Thisnumbercanbet increased byALTERing theREPTinstruction following thelast13FPinstruction. MODALFREQUENCY ANDRANDOMRESPONSE ERRORMESSAGE No.4-REALEIGENVALUES REQUIRED F9RMODAL FflRMULATI@N. Norealeigenvalues werefoundinthefrequency rangespecified bytheuser. MODALFREQUENCY ANDRANDOMRESPONSE ERRORMESSAGE Nfl.5-FREQUENCY RESP@NSE LISTREQUIRED FOR FREQUENCY RESP13NSE CALCULATIONS. Frequencies tobeusedinthesolution offrequency response problems mustbe”supplied onaFREQ, FREQ1orFREQ2cardintheBulkDataDeckandFREQintheCaseControl Deckmustselectafrequency response set. MODALFREQUENCY ANDRANDOMRESPONSE ERRfIRMESSAGE NO.6-DYNAMIC LOADSTABLEREQUIRED FOR FREQUENCY RESPONSE CALCULATIONS. Dynamic loadstobeusedinthesolution offrequency response problems mustbespecified onan RL@ADlorRL9AD2cardintheBulkDataDeckandDL@AllintheCaseControl Deckmustselecta dynamic loadset. MODALFREQUENCY ANDRAND@MRESPONSE ERRORMESSAGE No.7-NoSTRUCTURAL ELEMENTS HAVEBEENDEFINED, Nostructural elements havebeendefined withConnection cards. 2.1#19(05/30/86)\nDISPLACEMENT RIGIDFORMATS 2.11-20 (05/30/86)\nDISPLACEMENT RIGIDFORMATS 2.12MODALTRANSIENT RESPONSE o2,12.1 DMAPSequence forModalTransient Response RIGIDFORMAT OMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 12 LEVEL200NASTRAN OMAPCOMPILER -SOURCE LISTING OPTIONS INEFFECT GO ERR=2 LIST NODECK NOREF NOOSCAR\n1BEGIN 2PRECHK 3FILE 4PARAM 5GP1 6PLTTRAN GP2 8PARAML 9PURGE 10CONO 11PLTSET 12PRTMSG 13PARAM 14PARAM 15COND 16PLOT 17PRTMSG 18LABEL 19GP3 20TA1 21CONDOISP12-MODALTRANSIENT RESPONSE ANALYSIS -APR.1986$ ALL$ LAMA=APPEND/PHIA=APPEND/UHVT=APPEND/TOl–AF’pEND $ //MPY/CARONO/O/O $ GEOMl,GEOM2,/GPL,EQEXIN,GPDT, CSTM,BGPDT,SIL/S,N,LUSET NOGPOT/MINUSl=-l $ BGPOT,SIL/BGPDP,SIP/LUSET/S,N, LUSEF’$ GEoM2,EQExlN/EcT $ PCOB//PRES////JUMPPLOT $ PLTSETX,PLTPAR,GPSETS,ELSETS/JUMPPLOT $ P1,JUMPPLOT $ PCOB,EQEXIN,ECT/PLTSETX,PLTPAR,GPSETS, ELSETS/S,N,NSl L/ S,N,JUMPPLOT $ PLTSETX// $ //MPY/PLTFLG/l/l $ //MPY/PFILE/O/O $ P1,JUMPPLOT $ PLTPAR,GPSETS, ELSETS,CASECC,BGPDT, EQEXIN,SIL,,ECT,,/PLOTXl/ NSIL/LUSET/S,N,JUMPPLOT/S,N,PLTFLG/S,N,PF ILE$ PLOTX1// $ P1$ GEoM3,EQEx1N,GEoM2/sLT,GpTT/NoGRAv $ ECT,EPT,BGPOT,SIL,GPTT,CSTH/EST,GE l,GPECT,,/ LUSET/S,N,NOSIMP/l/S,N,NOGENL/s ,N,GENEL $ ERROR6,NOSIMP $ 2.12-1(05/30/86)\nDISPLACEMENT RIGIDFORMATS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 12 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 22 23 24 25 26 27 28 29 30 31 32 33 3b 35 36 37 38 39 40 41 42 lk3PURGE PARAM PARAM EMG PURGE CONO EMA LABEL COND EMA CONO GPWG OFP LABEL EQUIV CONO SMA3 LABEL PARAH GP4 PARAM PURGEOGPST/GENEL $ //ADD/NOKGGX/l/O $ //AOD/NOMGG/l/O $ EST,CSTM,HPT,DlT,GEOM2,/KELM, KDICT,MELM,MDICT,,,/S,N,NOKGGX/ S,N,NOMGG////C,Y,COUPMAC,Y,CPBARBAR/ c,Y,cPRoolc,Y,cPQuAD1/c,Y,cPQuAD2/c,YscPTRl A1/c,Y,cPTRlA2/ C,Y,CPTUBE/C,Y,CPQDPLT/C,Y,CPTRPLT/C,Y, CPTRBSC/ V,Y,VOLUME/V,Y,SURFACE $ KGGX,GPST/NOKGGX $ JMPKGGX,NOKGGX $ GPECT,KDICT,KELM/KGGX,GPST $ JMPKGGX $ ERROR1,NOMGG $ GPECT,MDICT,MELM/MGG,/-l/C,Y,WTMASS=l .0$ LGPWG,GRDPNT $ BGPDP,CSTM,EQEXlN,MGG/OGPWG/V,Y,GRDPNT=-l/C,Y,~MASS $ OGPWG,,,,,//S,N,CARONO $ LGPWG$ KGGX,KGG/NOGENL $ LBL1l,NOGENL $ GEl,KGGX/KGG/LUSET/NOGENL/NOS IMP$ LBL1l$ //MPY/NSKIP/O/O $ CASECC,GEOM4,EQEXIN,GPOT,BGPOT, CSTM,GPST/RG,,USET,ASET/ LUSET/S,N,MPCFl/S,N,MPCF2/S,N,S lNGLE/S,N,OMIT/S,N,REACT/ S,N,NSKlP/S,N,REPEAT/S,N,NOSET/S,N,NOL/S,N,NOA/C,Y,ASETOUT/ S,Y,AUTOSPC $ //ANO/NOSR/REACT/SINGLE $ GM,GMO/MPCFl/GO,GOO/OMIT/KFS, PST/SINGLE/QP/NOSR/KLR,KRR,MLR,MR, MRR,OM/REACT $ 2.12-2(05/30/86)\nMODALTRANSIENT RESPONSE eRIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 12 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING J+4 45 46 k7 b8 49 50 51 52 53 54COND PARAM COND GPSP OFP LABEL EQUIV COND MCE1 MCE2 LABEL ●55EQUIV 56coNo 57SCE1 58LABEL 59EQUIV 60EQUIV 61COND 62SMP1 63SMP2 64LABEL 65EQUIV 66COND 67RBMG1 68JUMP 6gLABELLBL4,GENEL $ //*EQ~~/GPSPFLG/AUTOSPC/O $ LBL4,GPSPFLG $ GPL,GPST,USET,SIL/OGPST/S,N,NOGPST $ OGPST,,,,,//S,N,CARoNO $ LBL4$ KGG,KNN/MPCFl/MGG,MNN/MPCFl $ LBL2,MPCF1 $ USET,RG/GM $ uSET,GM,KGG,HGG,,/KNN,MNNS )$ LBL2$ KNN,KFF/SINGLE/MNN,MFF/SINGLE $ LBL3,SINGLE $ uSET,KNN,MNN,,/KFF,KFS,,HFF ,.$ LBL3$ KFF,KAA/OMIT $ MFF,MAA/OMIT $ LBL5,0MIT $ uSET,KFF,,,/GO,KAA,KOO,LOO, ,,,,$ USET,GO,MFF/MAA $ LBL5s KAA,KLL/REACT $ LBL6,REACT $ USET,KAA,MAA/KLL,KLR,KRR,MLL,MLR,MRR $ LBL8$ LBL6$ 2.12-3(05/30/86)\nDISPLACEMENT RIGIDFORMATS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 12 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90COND LABEL RBMG2 COND RBHG3 RBHGh LABEL DPD COND PURGE EQUIV PARA14 READ OFP COND OFP MTRXIN PURGE PARAH EQUIV GKADLBL7*MODACC $ LBL8$ KLL/LLL $ LBL7,REACT $ LLL,KLR,KRR/DM $ DM,MLL,MLR,MRR/MR $ LBL7$ DYNAMICS,GPL,SIL,USET/GPLD, SILD,USETD,TFPOOL,DLT, ,,NLFT,TRL, EED,EQDYN/LUSET/S,N,LUSETD/NOTFL/S,N,NODLT/NOPSDL/ NOFRL/S,N,NONLFT/S,N,NOTRL/S,N,NOEED//S ,N,NOUE $ ERROR2,NOEED $ UEVT/NOUE/PNLH/NONLFT $ GO,GOO/NDUE/GM,GMD/NOUE $ //MPY/NEIGV/l/-l $ KAA,MAA,MR,OM,EED,USET,CASECC/LAMA, PHIA,Ml,OEIGS/MODES/S,N, NEIGV$ OEIGS,,,,,//S,N,CARDNO $ ERROR4,NEIGV $ LAMA,,,,,//S,N,CARONO $ CASECC,MATPOOL,EQDYN, ,TFPOOL/K2PP,M2PP,B2PP/LUSETD/S,N, NoK2PP/s,N,NoM2PP/s,N,NoB2PP $ K20D/NoK2PP/M2DD/NoM2PP/B2DD/NoB2PP $ //AND/flDEMA/NOUE/NOM2PP $ M2PP,M2DD/NOA/B2PP,B2DD/NOA/K2PP,K2DD/NOA/MAA,MDO/MOEMA $ USETD,GM,GO,, ,MAA,,K2PP,M2PP,B2PP/,,MDD ,GMD, GOD,K2DD,M2DD ,B2DD/*TRANRESP~c/D lSP/*MOOAL~~/O .0/ o,o/o,o/NoK2PP/NoM2PP/NoB2PP/ MPCF1/SINGLE/OMIT/NOUE/-l/- 1/ l/V,Y,MODACC =-1$ 2.12-4(05/30/86)\nMODALTRANSIENT RESPONSE ●RIGIDFORMATDMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGI’DFORMAT12 LEVEL2,0NASTRAN OMAPCOMPILER -SOURCELISTING 91GKAll 92coNo 93PARAM gkPARAM 95LABEL 96PURGE 97CASE 98PARAM 99TRLG 100EQUIV 101TRD 102VOR 103COND 104SDR3 105OFP 106XYTRAN 107XYPLOT 108LABEL 109PARAM 110COND 111PARAM 112PARAMUSETO,PHIA,MI, LAMA,DIT,M2D0, B2D0,K200,CASECC/MHH,BHH,KHH,PHl DH/ NOUE/C,Y,LMODES=O/C,Y,LFREQ=O.O/C,Y,HFREQ=-l .0/ NOM2PP/NOB2PP/NOK2PP/S,N,NONCUP/S,N, FMOOE$ ERROR5,NOTRL $ //~~ADO*/NEVER/l/O $ //MPY/REPEATT/l/-l $ LBL13$ PNLH,OUHV1,OPNL1 ,0UHV2,0PNL2,XYPLTTA,0PP1 ,OQP1,OUPV1,OES1,OEF1 , 0PP2,0QP2,0UPV2,0ES2,0EF2,PLOTX2 ,XYPLTT,OPPA, IQP1,IPHIP1, IES1, IEF1,OPPB, IQP2,1PHIP2,1ES2,1 EF2,zQP2,zuPv2,zEs2,zEF2/NEvER $ CASECC,/CASEXX/TRAN/S,N,REPEATT/S,N,NOLOOp $ //MpY/NcoL/o/I $ CASEXX,USETD,OLT,SLT,BGPDT,S IL,CSTM,TRL,OIT,GMO,GOD,PH IDH, EST,MGG,/PPT,PST,POT,PD,PH,TOL/S,N,NOSET/NCOL $ PPT,POT/NOSET $ CASEXX,TRL,NLFT,DIT,KHH,BHH,MHH, PH/UHVT,PNLH/MOOAL/ NOUE/NONCUP/S,N,NCOL/C,Y,lSTART $ CASEXX, EQDYN,USETD,UHVT,TOL, XYCDB,PNLH/OUHVl ,OPNL1/ $fTRANRESP*/%MODAL*/O/S,N,NOH/S,N ,NOP/FMODE $ LBL16,NOH $ OUHV1,OPNL1 ,,**/ouHv2,0PNL2,,,, $ 0UHV2,0PNL2 ,,,,//S,N,CARONO $ XYCOB,0UHV2,0PNL2 ,,,/XYPLTTA/TRAN/HSET/S,N,PF lLE/ S,N,CARDNO $ XYPLTTA// $ LBL16$ //)tAND*/PJuMP/Nop/JuMppLOT $ LBL15,PJUMP $ //NoT/NoMocI/v, y,MocIAcc $ //ANo/MPJUMP/V,Y,MOOACC/JUMPPLOT $ 2,12-5(05/30/86)\nDISPLACEMENT RIGIDFORMATS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 12 LEVEL2.0NASTRAN OMAPCOMPILER -SOURCE LISTING 113COND 114DDR1 115CONO 116DDR2 117EQUIV 118LABEL 119EQUIV 120COND 121SOR1 122LABEL 123sDR2 124SDR3 125JUMp 126LABEL 127SDR1 128SDR2 129SDR2 130SDR3 131EQUIV 132DORMM 133EQUIV 134LABEL 135OFPLBDDRM,MPJUMP $ UHVT,PHIDH/UDVIT $ LBLMOD,MODACC $ USETD,UDV1T,PDT,K20D,B2DD,MOD, ,LLL,DM/uDv2T,uEvT,PAF/ TRANREsP/NouE/REAcT/o $ uDv2T,uDvlT/Not40D $ LBLMOD $ UDVIT,UPV/NOA $ LBL14,NOA $ USETO,,UOVIT, ,,GOD,GMD,PST,KFS,,/UPV,,QP/l/OYNAMl CS$ LBL14$ CASEXX,CSTM,MPT,DIT, EQDYN,S ILD,,,BGPDP,TOL,QP,UPV,EST,XYCDB, PPT/OPPl,OQPl,OUPVl,OESl,OEF l,PUGV/TRANRESP $ OPP1,OQP1,OUPV1,OES1,OEF1 ,/OPP2,0QP2,0UPV2,0ES2,0EF2, $ P2A$ LBDDRM $ USETO,,PHIDH, ,,GOD,GMO,,KFS,,/PHIPH,,QPH/l/”DYNAMl CS$ CASEXX,CSTM,MPT,DIT,EQDYN,S ILD,,,, LAMA,QPH,PHIPH,EST,XYCDB,/ *lQPl,lPHIPl,lESl,lEFl,/MMRE IG$ CASEXX, ,,,EQOYN,SILD, ,,,TOL,,,,XYCDB,PPT/OPPA, ,,,,/ TRANREsP $ OPPA,IQP1,IPHIP1, IES1,IEF1,/0PPB,lQP2,1PHlP2,1ES2,1EF2, $ oPPB,oPP2/MoDAcc $ CASEXX,UHVT,TOL, IPHIP2,1QP2,1ES2, lEF2,,EST,MPT,DlT/ ZUPV2,ZQP2,ZES2,ZEF2, $ zuPv2,0uPv2/MoDAcc/zQP2,0QP2/MoDAcc/zEF2, oEF2/MoDAcc/zEs2,0Es2/ MODACC $ P2A$ 0UPV2,0PP2,0QP2,0EF2,0ES2,//S ,N,CARDNO $ 2.12-6(05/30/86)\nMODALTRANSIENT RESPONSE ●RIGIDFORMAT DflAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 12 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 136SCAN cAsEcc,oEs2,0EF2/oEsF2/RF $ 137OFP 0ESF2,,,,,//S,N,CARONO $ 138CONLI P2,JUMPPLOT $ 139PLOT PLTPAR,GPSETS, ELSETS,CASEXX,BGPDT, EQEXIN,SIP, ,PUGV,,/PLOTX2/ NSlL/LUSEP/JUt4PPLOT/PLTFLG/S,N, PFILE$ lhOPRTMSG PLoTx2// $ 141LABEL P2$ 142XYTRAN XYCDB,0PP2,0QP2,0UPV2,0ES2 ,oEF2/xYPLTT/TRAN/PsET/ S,N,PFILE/S,N,CARDNO $ 143XYPLOT XYPLTT// $ 144LABEL LBL15$ 145COND FINIS,REPEATT $ 0146REPT LBL13,1OO $ 147PRTPARM //-3/MDLTRD $ 148 149 150 151 152 153 154 155 156 157 158 159 160 161JUMP LABEL PRTPARM LABEL PRTPARH LABEL PRTPARM LABEL PRTPARM LABEL PRTPARM LABEL PURGE ENOFINIS$ ERROR2 $ //-2/MDLTRD $ ERROR1 $ //-1/MDLTRD $ ERROR4 $ //-b/MDLTRO $ ERROR5 $ //-5/MDLTRD $ ERROR6 $ //-6/MDLTRD $ FINIS$ DU/lMY/MINUSl $ $ 2.12-7(05/30/86)\n2.12.2 5. 6. 7. 10. 11. 12. 15. 16. 17. 19. 20. 21. 25. 27. 28. 30. 31. 32. 33. 34. 36, 37. 38. 41, 44. 46. 47. 48.DISPLACEMENT RIGIDFORMATS Description ofImportant DMAPOperations forModalIransient Response GP1generates coordinate systemtransformation matrices, tablesofgridpointlocations, and tablesrelating theinternal andexternal gridpointnumbers. PLTTRAN modifies special scalargridpointsintheBGPDTandS11tables. GP2generates Element Connection Tablewithinternal indices. GotoDMAPNo.18iftherearenostructure plotrequests. PLTSETtransforms userinputintoaformusedtodrivethestructure plotter. PRTMSGprintserrormessages associated withthestructure plotter. GotoDMAPNo.18ifnoundeformed structure plotsarerequested. PLOTgenerates allrequested undeformed structure plots. PRTMSGprintsplotter dataandengineering dataforeachundeformed plotgenerated. GP3generates GridPointTemperature Table. TA1generates element tablesforuseinmatrix GotoDMAPNo.157andprintErrorMessage No. EMGgenerates structural element stiffness and assembly bytheEMAmodule. GotoDMAPNo.29ifnostiffness matrixistoassembly andstressrecovery. 6iftherearenostructural elements. massmatrixtablesanddictionaries forlater beassembled. EMAassembles stiffness matrix[Kg]andGridPointSingularity Table. GotoDMAPNo.151andprintErrorMessage No,1ifnomassmatrixistobeassembled. EMAassembles massmatrix[Mgg]. GotoDMAPNo.35ifnoweightandbalance information isrequested. GPWGgenerates weightandbalance information, @FPformats theweightandbalance information prepared byGPWGandplacesitonthesystem outputfileforprinting. Equivalence [Kg]to[Kgg]ifnogeneral elements exist. GotoDMAPNo.39ifnogeneral elements exist. SMA3addsgeneral elements to[K~g]toobtainstiffness matrix[Kgg]. GP4generates flagsdefining members ofvarious displacement sets(USET)andforms multipoint constraint equations [Rg]{ug)=o. GotoDMAPNo.49ifgeneral elements arepresent. GotoDMAPNo.49ifnopotential gridpointsingularities exist. GPSPgenerates atableofpotential gridpointsingularities. OFPformats thetableofDotential gridmintsingularities prepared byGpsI’andplacesit onthesystemoutputfile”forprinti;g. 2.12.8 (05/30/86)"},"title":"User's Manual P12"},"/docs/users/users_manual_013/":{"data":{"":"50.Equivalence [Kgg]MODALTRANSIENT RESPONSE to[Knn]and[Mgg]to[Mnn]ifnomultipoint constraints exist. ●51.GotoDMAPNo.54ifnomultipoint constraints exist. 52.MCE1partitions multipoint constraint equations [Rg]=[RmRn] andsolvesfor multipoint constraint transformation matrix[Gm]=-[RM]-l[Rn]. 53.MCE2partitions stiffness andmassmatrices r- 7 1]KIK [Kgg]=K and [Mgg]= mnmmiIM “1Jn+ MmnIMmm andperforms matrixreductions [Knn]=[nnj+[G][Kmn] +[Kn][Gm] +[G~][Kmm][Gm] and [Mnn]=[iinn]+[G:][Mmn] +[M;n][Gml +[G;IIMJIGJ . 55.Equivalence [Knn]to[Kff]and[Mnn]to[Mff]ifnosingle-point constraints exist. 56.GotoDMAPNo.58ifnosingle-point constraints exist. 57.SCE1partitions outsingle-point constraints [1‘ffi‘fs[Knn]=K— and [1‘ff‘‘fs [“nn]=~TM—“ ●SfSs SfSs 59.Equivalence [Kff]to[Kaalifnoomitted coordinates exist. 60.Equivalence [Mff]to[Maa]ifnoomitted coordinates exist. 61.GotoDMAPNo.64ifnoomitted coordinates exist. 62.SMP1partitions constrained stiffness matrix [1itK [Kff]=%K= , oa00 solvesfortransformation matrix [Gol=-[Kool-l[Koal andperforms matrixreduction I.Kaa]=[aa]+[Ka][Go] . 63.SMP2partitions constrained massmatrix [1iIM [Mff]=;-tM= oa00 2.12-9 (05/30/86)\nDISPLACEMENT RIGIDFORMATS andperforms matrixreduction 65. 66. 67. 68. 70. 72. 73. 74. ?5. 77. 78. 80. 82,[Maa]=[aa]+LMa][Go] + Equivalence [Kaa]to[Kit]ifnofree-body Goto RBMG1 Goto Goto RBMG2 Goto RBMG3DMAPNo.69ifnofree-body supports partitions outfree-body supports[G~][Moa] +[G~][Moo][Go] . supports exist. exist. [1KIK [Kaa]=~~Kfl and [Maa]=- r!rr rfiM\u0026r.—. Mrr DMAPNo.710 DMAPNo.76ifthereisnorequest formodeacceleration datarecovery. decomposes constrained stiffness matrix[Ktk]=[LLL][ULL]. DMAPNo.76ifnofree-body supports exist. formsrigidbodytransformation matrix [D]=-[KLL]-l[Kkr], calculates rigidbodycheckmatrix [X]=[Krr]+[K:r][D] andcalculates rigidbodyerrorratio E= llKrl[-1111 RBMG4formsrigidbodymassmatrix [mr]=[Mrr]+[M~r][Dl +[DTIIMJ +[DTIIMLLIIDI. DPDgenerates flagsdefining members ofvarious displacement setsusedindynamic analysis (USETD), tablesrelating theinternal andexternal gridpointnumbers (GPLD), including extrapointsintroduced fordynamic analysis (SILD), andprepares Transfer Function Pool (TFPliX3L), Dynamic LoadsTable(DLT),Nonlinear Function Table(NLFT), Transient Response List(TRL). GotoDMAPNc.149andprintErrorMessage No.2ifthereisnoEigenvalue Extraction Data. Equivalence [Go]to[G:]and[Gm]to[G:]iftherearenoextrapointsintroduced fordynamic analysis. READextracts realeigenvalues andeigenvectors fromtheequation [Kaa-aMaa]{ua} =O, calculates rigidbodymodesbyfinding asquarematrix[$ro]such 2.12-10 (05/30/86)that\nMODALTRANSIENT RESPONSE 83. 84. 85. 86. 89. 0 90. 91. 92.[mol=[$ol[mrl[$rol isdiagonal andnormalized, computes rigidbodyeigenvectors [1DO [$aol=– , 4ro calculates modalmassmatrix [ml❑ [$][Maal[aJ andnormalizes eigenvectors according tooneofthefollowing userrequests: 1)Unitvalueofaselected component 2)Unitvalueofthelargest component 3)Unitvalueofthegeneralized mass. f3FPformats thesummary ofeigenvalue extraction information placesitonthesystemoutputfileforprinting. GotoDMAPNo.153andprintErrorMessage No,4ifnoeigenva’OEIGS)prepared by ueswerefound. 9FPformats theeigenvalues (LAMA)prepared byREADandplacesthemonthesystem fileforprinting. MTRXINselects thedirectinputmatrices [Kp],[Mp]and[Bp]. Equivalence [Mp]to[Md],[Bp]to[Bd]and[Kp]to[Kd]ifnoconstraints areapplied, andLMaa]to[Mdd]iftherearenodirectinputmassmatrices andno pointsintroduced fordynamic analysis. GKADapplies constraints todirectinputmatrices [K#P],[MP]and[B~D],forming [K:d]s[\u0026]and[Bf\u0026]. GKAMassembles stiffness, massanddamping matrices Transient Response: [Khh]=[k]+[$J:#K:#$dh] [Mhh]=[m]+[$@’\u0026][$dhl and [Bhh]=[b]+[$j#\u0026][’$dh] where m.1=modalmasses, bi=mi2mfig(fi) and Allmatrices arereal. GotoDMAPNo.155andki=mi41T2fiz. printErrorMessage No.5ifinmodalcoordinates s 9foruseinREADand output extra thereisnoTransient Response List. 2,12-11 (05/30/86)\n95. 97. 99. 100. 101. 102. 103. 104. 105. 106. 107. 110. 113. 114. 115. 116. 117. 119. 120.DISPLACEMENT RIGIDFORMATS Beginning ofloopforadditional dynamic loadsets. CASEextracts theappropriate recordfromCASECCcorresponding tothecurrent loopand copiesitintoCASEXX. TRLGgenerates matrices ofloadsversustime.{P;},{P~}and{P:}aregenerated with onecolumnperoutputtimestep.{pal}and{ph}aregenerated withonecolumnper solution timestep,andtheTransient OutputList(TEIL)isalistofoutput timesteps. Equivalence {P:}to{P;}ifthedandpsetsarethesame. ntTRDformsthelinear, {Pd},andnonlinear, {Pd1,dynamic load theequations ofmotionoverspecified timeperiods tosolve velocities andaccelerations, usingthefollowing equationvectors andintegrates forthedisplacements, [$@2+‘hhp+‘hh]{lj} ={Ph}+{P~L}. VDRprepares displacements, velocities andaccelerations, sortedbytimestep,foroutput usingonlytheextrapointsintroduced fordynamic analysis andmodalcoordinates (solution points). GotoDMAPNo.108ifthereisnooutputrequest forthesolution points. SDR3sortsthesolution pointdisplacements, velocities, accelerations andnonlinear load vectors byextrapointormodenumber. ~FPformats therequested solution pointdisplacements, velocities, accelerations and nonlinear loadvectors prepared bySDR3andplacesthemonthesystemoutputfilefor printing. XYTRANprepares theinputforX-Yplotting ofthesolution pointdisplacements, velocities, accelerations andnonlinear loadvectors vs.time. XYPLOTprepares therequested X-Yplotsofthesolution pointdisplacements, velocities, accelerations andnonlinear loadvectors vs.time. GotoDMAPNo.144ifthereisnooutputrequest involving dependent degrees offreedom, forcesandstresses, ordeformed structure plots. GotoDMAPNo.126ifthemodeacceleration technique isnotrequested andifthereareno requests fordeformed structure plots. DOR1transforms thesolution vectordisplacements frommodaltophysical coordinates {Udl=[$dhl{uh} . GotoDMAPNo.118 DDR2calculates anifthemodeacceleration technique isnotrequested. improved displacement vectorusingthemodeacceleration technique Equivalence {ud}totheimproved displacement VeCtOr. (FlagNOMODisnegative sincethe modeacceleration technique isrequested), Equivalence {ud}to{up}ifnoconstraints areapplied. GotoDMAPNo,122ifnoconstraints areapplied. 2.12-12 (05/30/86)\n121. ● 123. 124. 125. 127. 128. 129. 130. 131. 132.MODALTRANSIENT RESPONSE SDR1recovers dependent components ofdisplacements {Uo} 11‘f+‘e——— ‘s IIun+ue——— um andrecovers s=[G~]{ud} , ={Un+Ue},II‘d—-={Uf+ue} , U. {urn}=[G#]{uf+ue} , ={up} ngle-point forcesofconstraint {qs}=-{ps}+[Ks]{Uf}o SDR2calculates element forces(OEFl)andstresses (i3ESl)andprepares loadvectors (@ppl), displacement, velocity andacceleration vectors (OUPVl) andsingle-point forces of constraint (OQPl)foroutputandtranslation components ofthedisplacement vector(PUGV), sortedbytimestep. SDR3prepares requested outputsortedbypointnumberorelement number. GotoOMAPNo.134. SDR1recovers dependent components ofeigenvectors {$.]=[G:]{$In} , H$f+Ue —— ={$n+oe} , ‘$s II$n+“e —— .{@g+ue} ={$p} OM andrecovers single-point forcesof‘$ II={$f+ue} , —— $0 {@m}=[G:]{On‘Ue} , constraint {qs}=[Kfs]T{$f}. SDR2calculates element forces(IEF1)andstresses (lESl)andprepares eigenvectors (IPHIP1) andsingle-point forcesofconstraint (IQP1)foroutputsortedbytimestep. SOR2prepares loadvectors foroutput(OPPA)sortedbytimestep. SDR3prepares therequested outputsortedbypointnumberorelement number. Equivalence OPPBto9PP2.(FlagMf3DACCisnegative sincethemode notrequested). DDRMMprepares asubsetoftheelement forces(ZEF2)andstresses vectors (ZUPV2) andsingle-point forcesofconstraint (ZQP2)for numberorelement number.acceleration technique is (ZES2), anddisplacement outputsortedbypoint 2.12-13 (05/30/86)\nDISPLACEMENT RIGIDFORMATS 133,Equivalence ZUPV2toflUPV2,ZQP2to0QP2,ZES2to@ES2andZEF2to0EF2.(FlagMODACCis negative sincethemodeacceleration technique isnotrequested). 135.!3FPformats therequested outputprepared bySDR3(withmodeacceleration) orDDRMM(nomode● acceleration) andplacesitonthesystemoutputfileforprinting. 136,SCANexamines theelement stresses andforcescalculated bySDR3orDDRMMandgenerates scanned outputthatmeetsthespecifications setbytheuser. 137.@FPformats thescanned outputtableprepared bySCANandplacesitonthesystemoutput fileforprinting, 138.GotoDMAPNo.141ifnodeformed structure plotsarerequested. 139,PLOTprepares allrequested deformed structure andcontour plots. 140.PRTMSGprintsplotter data,engineering data,andcontour dataforeachdeformed plot generated. 142.XYTRANprepares theinputforrequested X-Yplots. 143.XYPLflTprepares therequested X-Yplotsofdisplacements, velocities, accelerations, forces, stresses, loadsandsingle-point forcesofconstraint vs.time. 145.GotoDMAPNo.159andmakenormalexitifnoadditional dynamic loadsetsneedtobe processed. 146.GotoDMAPNo.95ifadditional dynamic loadsetsneedtobeprocessed. 147.PrintErrorMessage No.3andterminate execution. 148.GotoDMAPNo.159andmakenormalexit. 150.PrintErrorMessage No.2andterminate execution. 152.PrintErrorMessage No.1andterminate execution. 154.PrintErrorMessage No.4andterminate execution. 156.PrintErrorMessage No.5andterminate execution. 158.PrintErrorMessage No.6andterminate execution. 2.12-14 (05/30/86)\nMODALTRANSIENT RESPONSE 2.12.3 OutputforModalTransient Response TheEigenvalue Summary TableandtheEigenvalue Analysis Sunrnary, asdescribed underNormal ModesAnalysis (seeSection 2.3.3), areautomatically printed.Allrealeigenvalues extracted are included eventhoughnotallareusedinthemodalformulation. Outputthatmayberequested isthesameasthatdescribed underDirectTransient Response. OutputforS0LUTI13N pointswillhavethemodalcoordinates identified bythemodenumberdetermined inrealeigenvalue analysis. Theeigenvectors usedinthemodalformulation maybeobtained fortheS@LUTI13N pointsby usingtheALTERfeature toprintthematrixofeigenvectors following theexecution ofREAD.The eigenvectors forallpointsinthemodelmaybeobtained byrunning theproblem initially onthe NormalModesAnalysis rigidformatorbymakingamodified restart usingtheNormalModesAnalysis rigidformat. 2.12.4 CaseControl DeckforModalTransient Response Thefollowing itemsrelated tosubcase definition anddataselection mustbeconsidered in addition tothelistpresented withDirectTransient Response: 1. 2. 3. 4.METH@Dmustappearabovethesubcase leveltoselectanEIGRcardthatexistsinthe BulkDataDeck. Alloftheeigenvectors usedinthemodalformulation mustbedetermined inasingle execution. AnSPCsetmustbeselected abovethesubcase levelunlessthemodelisafreebodyor allconstraints arespecified onGRIDcards,ScalarConnection cardsorwithGeneral Elements. SCIAMPING mustbeusedtoselectaTABDMP1 tableifstructural damping isdesired. 2.12.5 Parameters forModalTransient Response Thefollowing parameters areusedinModalTransient Response: 1.ASETOUT -optional, Apositive integer valueofthisparameter causestheASEToutput datablocktobegenerated bytheGP4module. Anegative integer valueorOsuppresses thegeneration ofthisoutputdatablock. Thedefault valueis0, 2.AUT9SPC -reserved forfutureoptional use.Thedefault valueis-1. 2.12-15 (05/30/86)\n3. 4. 5. 6. 7. 8. 9. 10. 11.DISPLACEMENT RIGIDFORMATS C@UPMASS -CPBAR,CPRf!D,CPQUAD1, CPQUAD2, CPTRIA1, CPTRIA2, CPTUBE, CPQDPLT, CPTRPLT.——J CPTRBSC -optional. Theseparameters causethegeneration ofcoupled massmatrices ratherthanlumpedmassmatrices forallbarelements, rodelements, andplateelements thatinclude bending stiffness. GRDPNT-optional. WeightGenerator to printed. Allfluid ISTART-optional.Apositive integer valueofthisparameter causestheGridPoint beexecuted andtheresulting weightandbalance information tobe related massesareignored. Apositive valueofthisparameter causestheTRDmoduletousethe second(oralternate) starting method(seeSection 11.4oftheTheoretical Manual). The alternate starting methodisrecommended wheninitial accelerations aresignificant and whenthemassmatrixisnon-singular. Thedefault valueis-1andcausesthefirst starting method LFREQandHFREQ parameters give upperlimit)oftobeused. required, unlessparameter LMODESisused.Therealvaluesofthese thecyclicfrequency range(LFREQisthelowerlimitandHFREQisthe themodestobeusedinthemodalformulation. Tousethisoption, parameter LMODESmustbesettoO. LMflDES-required, unlessparameters LFREQandHFREQareused.Theinteger valueof thisparameter isthenumberoflowestmodestobeusedinthemodalformulation. Mf)DACC-optional. Apositive integer valueofthisparameter causestheDynamic Oata Recovery moduletousethemodeacceleration method. Notrecommended forusein hydroelastic problems. SURFACE -optional. Thecomputations oftheexternal surface areasforthe two-dimensional andthree-dimensional elements areactivated bythisparameter whenthey aregenerated intheEMGmodule. Theresults aremultiplied bytherealvalueofthis parameter. Seethedescription underthePARAMbulkdatacardfordetails. V@LUME-optional. Thevolumecomputations forthetwo-dimensional and three-dimensional elements areactivated bythisparameter whentheyaregenerated in theEMGmodule. Theresults aremultiplied bytherealvalueofthisparameter. See thedescription underthePARAMbulkdatacardfordetails. WTMASS-optional. Thetermsofthestructural massmatrixaremultiplied bythereal valueofthisparameter whentheyaregenerated intheEMAmodule. Notrecommended for useinhydroelastic problems. 2.12-16 (05/30/86)\n\\ MODALTRANSIENT RESPONSE 2.12.6 Optional Diagnostic OutputforFEER ●Special detailed information obtained byrequesting DIAG16intheExecutive Control Deckis thesameasthatdescribed underNormalModesAnalysis (seeSection 2.3.6). 2.12.7 TheAPPENDFeature TheAPPENDfeature canbeusedforrealeigenvalue extraction inModalTransient Response. SeeSection 2.3.7fordetails. 2,12.8 TheCONTINUE Feature TheCONTINUE feature canbeusedforcoupled transient analysis inModalTransient Response. SeeSection 2,9.6fordetails. 2.12.9 RigidFormatErrorMessages fromModalTransient Resyonse Thefollowing fatalerrorsaredetected bytheDMAPstatements intheModalTransient Response rigidformat. Thetextforeacherrormessage isgivenbelowincapital letters andis followed byadditional explanatory material, including suggestions forremedial action. ●MODALTRANSIENT RESPONSE ERRORMESSAGE No.1-MASSMATRIXREQUIRED FORM@DALFORMULATION. Themassmatrixisnullbecause eithernostructural elements weredefined withConnection cards, nonstructural masswasnotdefined onaProperty card,orthedensity wasnotdefined onaMaterial card. M@DALTRANSIENT RESP13NSE ERRORMESSAGE NO.2-EIGENVALUE EXTRACTION DATAREQUIRED Ff3RREAL EIGENVALUE ANALYSIS, Eigenvalue extraction datamustbesupplied onanEIGRcardintheBulkDataDeckandMETHODinthe CaseControl DeckmustselectanEIGRset. MODALTRANSIENT RESP@NSE ERRORMESSAGE N@.3-ATTEMPT ToEXECUTE MORETHAN100L09PS. Anattempt hasbeenmadetousemorethan100dynamic loadsets.Thisnumbercanbeincreased by ALTERing theREPTinstruction following thelastXYPLOTinstruction. M@DALTRANSIENT RESPONSE Norealeigenvalues were MODALTRANSIENT RESP@NSE RESPONSE CALCULATI!3NS.ERRflRMESSAGE N@.4-REALEIGENVALUES REQUIRED FORMODALFORMULATION. foundinthefrequency rangespecified bytheuser. ERRORMESSAGE NO,5-TRANSIENT RESPONSE LISTREQUIRED FORTRANSIENT Timestepintervals tobeusedmustbespecified onaTSTEP selection mustbemadeintheCaseControl Deck.cardintheBulkDataDeckandaTSTEP 2.12-17 (05/30/86)\nDISPLACEMENT RIGIDFORMATS MODALTRANSIENT RESPONSE ERR!2RMESSAGE N@.6-NOSTRUCTURAL ELEMENTS HAVEBEENDEFINED. Nostructural elements havebeendefined withConnection cards. 2.12-18 (05/30/86) ,\nDISPLACEMENT RIGIDFORMATS 2.13NORMALMODESWITHDIFFERENTIAL STIFFNESS ●2.13.1 DMAPSequence forNormalModesWithDifferential Stiffness RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 13 LEVEL2,0NASTRAN DMAPCOMPILER -SOURCE LISTING OPTIONS INEFFECT GO ERR=2 LIST NODECK NOREF NOOSCAR ——– .——– 1BEGIN 2PRECHK 3FILE kPARAH 5GP1 6PLTTRAN ~GP2 8PARAML 9PURGE 10COND 11PLTSET 12PRTMSG 13PARAM 14PARAM 15COND 16PLOT 17PRTA4SG 18LABEL 19GP3 20TA1 21CONDDISP13-NORMAL MODESWITHDIFFERENTIAL STIFFNESS-APR. 1986$ ALL$ LAMA=APPENO/PHIAL=APPEND $ //MPY/CARONO/O/O $ GEOMl,GEOM2,/GPL,EQEXIN,GPDT, CSTM,BGPDT,SIL/S,N,LUSET/ NOGPDT/MINUSl=-l $ BGPDT,SIL/BGPDP,SIP/LUSET/S,N, LUSEP$ GEoM2,EQExlN/EcT $ PCDB//PRES////JUMPPLOT $ PLTSETX,PLTPAR,GPSETS,ELSETS/JUMPPLOT $ P1,JUMPPLOT $ PCOB,EQEXlN,ECT/PLTSETX,PLTPAR,GPSETS,ELSETS/S,N,NS lL/ S,N,JUMPPLOT $ PLTSETX// $ //MPY/PLTFLG/l/l $ //W4PY*/PFILE/O/O $ P1,JUMPPLOT $ PLTPAR,GPSETS,ELSETS,CASECC,BGPDT,EQEXI N,SIL,,ECT,,/PLOTXl/ NSIL/LUSET/S,N,JUMPPLOT/S,N,PLTFLG/S,N,PF ILE$ PLOTX1// $ P1$ GEOM3,EQEXlN,GEOM2/SLT,GPTT/NOGRAV $ ECT,EPT,BGPOT,SIL,GPTT,CSTM/EST,GE I,GPECT LuSET/S,N,NOSIPIP/l/S,N,NOGENL/S,N,GENEL $ ERROR1,NOSIMP $ 2.13-1 (05/30/86,/\nDISPLACEMENT RIGIDFORMAIS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 13 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 22PURGE 23PARAM 24PARAM 25EMG 26 27 28 29 30 31 32 33 31k 35 36 37 38 39 40 41PURGE COND EMA LABEL COND EMA COND GPWG OFP LABEL EQUIV COND SMA3 LABEL PARAM GP4 42COND 43PARAMOGPST/GENEL $ //ADD/NoKGGx/l/o $ //ADD/NOMGG/l/O $ EST,CSTM,MPT,DlT,GEOM2,/KELN, KDICT,MELM,MDICT,,,/S,N,NOKGGX/ S,N,NOMGG////C,Y,COUPMAC,Y,CPBARBAR/ c,Y,cPRoD/c,Y,cPQuADl/c,Y,cPQuAD2/c ,Y,cPTRIA1/c,Y,cPTRlA2/ C,Y,CPTUBE/C,Y,CPQDPLT/C,Y, CPTRPLT/C,Y,CPTRBSC/ V,Y,VOLUME/V,Y,SURFACE $ KGGX,GPST/NOKGGX $ JMPKGG,NOKGGX $ GPECT,KDl,CT,KELM/KGGX,GPST $ JMPKGG $ ERROR5,NOMGG $ GPECT,MDICT,MELM/MGG,/-l/C,Y,WTMASS=l .0$ LBL1,GRDPNT $ BGPDP,CSTM,EQEXlN,MGG/OGPWG/V,Y,GRDPNT/C,Y,WTMASS $ OGPWG,,,,,//S,N,CARDNO $ LBL1$ KGGX,KGG/NOGENL $ LBLII,NOGENL $ GEl,KGGX/KGG/LUSET/NOGENL/NOS IMP$ LBL1l$ //Mpy/NsKlp/o/o $ CASECC,GEOM4,EQEXIN,GPDT,BGPDT, CSTM,GPST/RG,YS,USET,ASET/ LUSET/S,N,MPCFl/S,N,MPCF2/S,N,S lNGLE/S,N,OMIT/S,N,REACT/ S,N,NSKlP/S,N,REPEAT/S,N,NOSET/S,N,NOL/S,N,NOA/C,Y ,ASETOUT/ S,Y,AUTOSPC $ ERROR6,NOL $ //AND/NosR/sINGLE/REAcT $@ 2.13-2(05/30/86)\nNORMALMODESWITHDIFFERENTIAL STIFFNESS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIOFORMAT 13 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 45COND 46JUMP 47LABEL 48COND 49PARAM 50COND 51GPSP 52OFP 53LABEL ●5kEQUIV 55COND 56MCE1 57MCE2 58LABEL 59EQUIV 60COND 61SCE1 62LABEL 63EQUIV 64COND 65SMPI 66LABEL 67RBMG2 68SSG1GM/MPCFl/GO,KOO,LOO,PO,UOOV,RUOV/OMlT/PS,KFS,KSS/Sl NGLE/ QG/NOSR $ LBL4D,REACT $ ERROR2 $ LBL4D$ LBL4,GENEL $ //EQ/GPSPFLG/AUTOSPC/O $ LBL4,GPSPFLG $ GPL,GPST,USET,SIL/OGPST/S,N,NOGPST $ OGPST,,,,,//S,N,CARDNO $ LBL4$ KGG,KNN/MPCFl $ LBL2,1’IPCF1 $ USET,RG/GM $ USET,GM,KGG ,,,/KNN,,, $ LBL2$ KNN,KFF/SINGLE $ LBL3,SINGLE $ USET,KNN,,,/KFF,KFS,KSS, ,,$ LBL3$ KFF,KAA/OMIT $ LBL5,0MIT $ USET,KFF ,,,/GO,KAA,KOO,LOO,,,,, $ LBL5$ KAA/LLL $ SLT,BGPDT,CSTM,SI L,EST,MPT,GPTT, EDT,MGG,CASECc,DIT,/PG,, ,,/ LUSET/~ $ 2.13-3(05/30/86)\nDISPLACEMENT RIGIDFORMATS RIGIDFORMAT OMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 13 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 69EQUIV 70COND 71SSG2 72LABEL 73SSG3 74COND 75HATGPR 76MATGPR 77LABEL 78SDR1 79SDR2 80OFP 81SCAN 82OFP 83COND 84PLOT 85PRTMSG 86LABEL 87TA1 88DSMG1 8gEQUIV 90COND 91MCE2PG,PL/NOSET $ LBL1O,NOSET $ USET,GM,YS,KFS,GO,,PG/,PO,PS, PL$ LBL1O$ LLL,KAA,PL,LOO,KOO,PO/ULV,UOOV,RULV,RUOV/OMlT/V,Y, lRES=-1/ l/S,N,EPSl $ LBL9,1RES $ GPL,uSET,SIL,RULV//L $ GPL,USET,SIL,RUOV//O $ LBL9$ USET,PG,ULV,UOOV,YS,GO,GM,PS, KFS,KSS,/UGV,PGG,QG/l/ *BKLo~ $ CASECC,CSTM,MPT,D IT,EQEXIN,S IL,GPTT,EDT,BGPDP, ,QG,UGV,EST, ,PGG/ OPGl,OQGl,OUGVl,OESl,OEFl,PUGV1/BKLO $ OUGVl,OPGl,OQGl,OEFl,OESl,//S,N, CARDNO $ CASECC,OESl,OEF1/OESFl/C,N,RF $ OESF1,,,,,//S,N,CARDNO $ P2,JUMPPLOT $ PLTPAR,GPSETS,ELSETS,CASECC,BGPDT,EQEXIN, SIP,PUGVl,,GPECT,OES1/ PLoTX2/NSIL/LUSEP/JUMPPLOT/PLTFLG/S,N, PFILE$ PLoTx2// $ P2$ ECT,EPT,BGPDT,SI L,GPTT,CSTM/Xl,X2,X3, ECPT,GPCT/LUSET/ NOSltlP/O/NOGENL/GENEL $ CASECC,GPTT,SlL,EDT,UGV,CSTM,MPT,ECPT,GPCT,DlT/KDGG/ S,N,DSCOSET $ KDGG,KDNN/MPcF2 /MGG,MNN/MPcF2 $ LBL2D,MPCF2 $ USET,GM,KDGG,MGG,,/KDNN,MNN, ,$ 2.13-4(05/30/86)\nNORMALMODESWITHDIFFERENTIAL STIFFNESS @RIGIDFORMAT DMAPLISTING APRILlg86RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 13 LEVEL2.0NASTRAN DHAPCOMPILER -SOURCE LISTING 92LABEL 93EQUIV 94CONO 95SCEI 96LABEL 97EQUIV 98CONO 99SMP2 100SMP2 101LABEL 102PARAM e103EQUIV 10kPARAM 1050SMG2 106RBMG2 107PRTPARM 108PRTPARM 109SSG3 110CONO 111MATGPR 112LABEL 113SOR1 114SOR2LBL20$ KONN,KOFF/SINGLE /MNN\u003eMFF/SINGLE $ LBL3D,SINGLE $ USET,KONN,ilNN,,/KDFF,KOFS, KDSS,MFF,, $ LBL30$ KDFF,KDAA/OMIT /MFF,MAA/OMIT $ LBL5D,0MIT $ USET,GO,KDFF/KOAA USET,GO,MFF/MAA $ LBL5D$ //AOO/OSCOSET/-l/O $ PL,PBL/DSCOSET/PS ,PBS/DSCOSET/YS, YBS/OSCOSET/UOOV,UBOOV/ DSCOSET $ //MPY/NDSKIP/O/O $ MPT,KAA,KDAA,KFS,KDFS,KSS,KDSS,PL,PS,YS,UOOV/KBLL,KBFS,KBSS, PBL,PBS,YBS,UBOOV/S,N,NDSKIP/S,N,REPEATD/DSCOSET $ KBLL/LBLL/S,N,POWER/S,N,DET $ //O/OET $ //O/POWER $ LBLL,KBLL,PBL, ,,/UBLV,,RUBLV,/-l/V,Y, lRES/NOSKIP/ S,N,EPSI $ LBL9D,IRES$ GPL,USET,SIL,RUBLv//L $ LBL9D$ USET,,UBLV,UBOOV,YBS,GO,GM,PBS,KBFS,KBSS ,/UBGV,,QBG/NDSKIP/ OS1$ CASECC,CSTM,MPT,D IT,EQEXIN,S IL,GPTT,EDT,BGPDP, ,QBG,UBGV, EST,,/, OQBGl,OUBGVl,OESBl,OEFBl,PUBGV1/DSl $ 2.13-5(05/30/86)\nDISPLACEMENT RIGIDFORMATS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 13 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 }37OFP DPD COND PARAII READ OFP COND OFP SDR1 CASE SDR2 OFP COND PLOT PRTMSG LABEL JUMP LABEL PRTPARM LABEL PRTPARM LABEL PRTPARMOQBGl,OUBGVl,OESBl,OEFBl,,//S, N,CARDNO $ DYNAMICS,GPL,SIL,USET/GPLD, SILD,USETD,,,,,,,EED,EQDYN/ LUSET/LUSETD/NOTFL/NODLT/NOPSDl./NOFRL/ NONLFT/NOTRL/S,N,NOEED//NOUE $ ERROR3,NOEED $ //Mpy/NEIGv/l/-l $ KBLL,MAA, ,,EED,USET,CASECC/LAMA,PHIA,Ml ,OEIGS/~~MODES*/ s,N,NEIGv/3 $ OEIGS,,,,,IIS,N,CARDNO $ ERROR4,NEIGV $ LAMA,,,,,//S,N,cARONO $ USET,,PHIA,,,GO,GM,,KDFS,,/PHIG,,BQG/l/RE IG$ cAsEcc,/cAsExx/TRANREsP/KEPEAT=3/LooP $ CASEXX,CSTM,MPT,DIT, EQEXIN, SIL,,,BGPOP,LAMA,BQG,PHIG,EST,,/, OBQG1,OPHIG,OBES1,OBEF1,PPHI G/REIG $ OPHIG,OBQGl,OBEFl,OBESl,,//S ,N,CARONO $ P3,JUMPPLOT $ PLTPAR,GPSETS,ELSETS,CASECC, BGPDT,EQEXIN,SIP, ,PPHIG,GPECT, oBEsl/PLoTx3/NslL/LusEP/JuMPPLoT/PLTFLG/ S,N,PFILE $ PLoTx3// $ P3!$ FINIS$ ERROR1 $ //-1/~tNMDS* $ ERROR2 $ //-21NMD5 $ ERROR3 $ //-3/NflDS $ 2.13-6(05/30/86)\nNORMALMODESWITHDIFFERENTIAL STIFFNESS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 13 LEVEL2.0NASTRAN OMAPCOMPILER -SOURCE LISTING 138 139 140 141 142 143 144 1b5 146LABEL PRTPARM LABEL PRTPARM LABEL PRTPARM LABEL PURGE ENOERROR4$ //-k/NMos $ ERROR5$ //-5/NMOS $ ERROR6$ //-6/NMos s FINIS$ DUMMY/MINUSl $ $ 2.13-7(05/30/86)\n2.13.2 5. 6. 7. 10. 11. 12. 15. 16. 17. 19. 20. 21. 25. 27. 28. 30. 31. 32. 33. 34. 36. 37. 38. 41. 42. 45. 46. 48.DISPLACEMENT RIGIDFORMATS Description ofImportant DMAPOperations forNormalModeswithDifferential Stiffness GP1generates coordinate systemtransformation matrices, tablesofgridpointlocations, and tablesrelating theinternal andexternal gridpointnumbers. e PLTTRAN modifies special scalargridpointsintheBGPDTandSILtables. GP2generates Element Connection Tablewithinternal indices, GotoDMAPNo.18iftherearenostructure plotrequests. PLTSETtransforms userinputintoaformusedtodrivethestructure PRTMSGprintserrormessages associated withthestructure plotter. GotoDMAPNo.18ifnoundeformed structure plotsarerequested. PLOTgenerates allrequested undeformed structure plots.plotter. PRTMSGprintsplotter dataandengineering dataforeachundeformed plotgenerated. GP3generates StaticLoadsTableandGridPointTemperature Table. TA1generates element tablesforuseinmatrixassembly andstressrecovery. GotoDMAPNo.132andprintErrorMessage No.1ifnostructural elements havebeen defined. EMGgenerates structural element stiffness andmassmatrixtablesanddictionaries forlater assembly bytheEMAmodule. GotoDMAPNo.29ifnostiffness matrixistobeassembled. EMAassembles stiffness matrix[Kg]andGridPointSingularity Table. GotoDMAPNo.140andprintErrorMessage No.5ifnomassmatrixistobeassembled. EMAassembles massmatrix[Mgg]. GotoDMAPNo.35ifnoweightandbalance information isrequested. GPWGgenerates weightandbalance information. OFPformats theweightandbalance information prepared byGPWGandplacesitonthesystem outputfileforprinting. Equivalence [Kg] GotoDMAPNo.39 SMA3addsgeneralto[Kgg]iftherearenogeneral elements, iftherearenogeneral elements. elements to[K~g]toobtainstiffness matrix[Kgg]. GP4generates flagsdefining members ofvarious displacement sets(USET), formsmultipoint constraint equations [Rg]{ug}=Oandformsenforced displacement vector{Ys}. GotoDMAPNo.142andprintErrorMessage No.6ifnoindependent degrees offreedom are defined. GotoDMAPNo.47iftherearenosupport cards. GotoDMAPNo.134andprintErrorMessage No.2. GotoDMAPNo.53ifgeneral elements arepresent. 2.13-8 (05/30/86)\n50. 51. 52. 54. 55. 56. 57. 59. 60. 61. 63. 64. 65. 67. 68. 69. 70.NORMALMOUESWITHDIFFERENTIAL STIFFNESS GotoDMAPNo.53ifnopotential gridpointsingularities exist. GPSPgenerates atableofpotential gridpointsingularities. OFPformats thetableofpotential gridpointsingularities prepared byGPSPandplacesit onthesystemoutputfileforprinting. Equivalence [Kgg]to[Knn]ifnomultipoint constraints exist. GotoDMAPNo.58ifnomultipoint constraints exist. MCE1partitions multipoint constraint equations [Rg]=[Rm~Rn] andsolvesfor multipoint constraint transformation matrix[Gml=-[Rml-l[Rnl. MCE2partitions stiffness matrix [1iIK [Kgg]=~~Kw mnmm andperforms matrixreduction [Knn]=[nn]+[G:JLKmnl +[nl[Gml +[Gj[$J[GmJ. Equivalence [Knn]to[Kff]ifnosin91e-Point constraints exist” GotoDMAPNo.62ifnosingle-point constraints exist. SCE1partitions outsingle-point [Knn]= Equivalence [Kff]to[Kaalifnoconstraints [1Kff;‘fs. KsfIKs omitted coordinates exist. GotoDMAPNo.66ifnoomitted coordinates exist. SMP1partitions constrained stiffness matrix r- 1 IIKIKao [Kffl=:\u0026 ‘ oa00L J solves fortransformation matrix[Gol=-[Kool-l[Koal andperforms matrixreduction [Kaa]=[Kaal+[Kal[Gol . RBMG2decomposes constrained stiffness matrix[Kaal=[LLLIIU1lI. SSG1generates staticloadvectors {Pg}. Equivalence {Pg}to{Pi}ifnoconstraints areapplied. GotoDMAPNo.72ifnoconstraints areapplied. 2.13-9(05/30/86)\nDISPLACEMENT RIGID 71.SSG2applies constraints tostatic loadvectorsFORMATS HPn {Pg}=—- , Pm{Pn}={;n}+[G~]{Pm} , H‘f{Pn}=—–, {Pf}={f}-[Kfs]{ys} , Ps HPa {Pf}=—–and {pg}={pa}+[G]{Po} . P. 73.SSG3solvesfordisplacements ofindependent coordinates {ug}=[Kti]-l{PL} , solves fordisplacements ofomitted coordinates {us}=[KOOI-l{PO} , calculates residual vector (RULV) andresidual vector error ratioforindependent coordinates {ISPL}={PL}-[Klk]{uL} , andcalculates residual vector (RU@V) andresidual vector errorratioforomitted coordinates {dPO}={Po}-[Koo]{u:} , {U~]{6po} . ‘o. ~pTl{uo} 00 74.GotoDMAPNo.77ifresidual vectors arenottobeprinted. 75.MATGPRprintstheresidual vectorforindependent coordinates (RULV). 76.MATGPRprintstheresidual vectorforomitted coordinates (RU13V). 2.13-10 (05/30/86)"},"title":"User's Manual P13"},"/docs/users/users_manual_014/":{"data":{"upo#STATICANALYSIS USINGCYCLICSYMMETRY\n74.Equivalence {Pg}to{Pk}ifnoconstraints areapplied.\n●75.GotoDMAPNo.81ifnoconstraints areapplied.\n76.SSG2applies constraints tostaticloadvectors\nHin{Pg}= —– ,\nPm{Pn}={~n}+[G:]{i1m’\nIIif{Pn}= —– ,\nPs\n{Pf}=\nHFa——P.{Pf}={\u003cdel\u003efl-[Kfs]{ys} ,\n{Pa}={\u003cdel\u003ea}+[G:]{PO},\nNPk\n{Pa}=\nTr–\nandcalculates determinate forcesofreaction {qr}❑ -{Pr}-[DT]{PE}.\n77.GotoDMAPNo.81ifnoomitted coordinates exist.\n●78.SSG3solvesfordisplacements ofomitted coordinates (thesearenottransformed)\n{u\u003c/del\u003e}=[KOO]-l{ PO}\nandcalculates residual vector (RU!3V)andresidual vectorerrorratioforomitted\ncoordinates\n{\u0026amp;Po}={Pol-[Koo]{u\u003c/del\u003e} ,\n{u;}{\u0026amp;po}":"78. 79. 80. 81. 82. 83. 84. 85. 87. 88. 89. 90. 91. 93.NORMALMODESWITHDIFFERENTIAL STIFFNESS SDR1recovers dependent displacements {uo}=[GO]{UL} +{u:}, H‘a——={Uf}, ‘o {um}=[Gm]{un} ,N‘f——={Un}, Ys HUn ——={Ug} Um andrecovers single-point forces ofconstraint {qs}=-{PS}+[K;s]{uf} +[Kssl{ys} . SDR2calculates element forces (OEFl)andstresses (9ES1)andprepares loadvectors(OpGl)~ displacement vectors (!dUGVl) andsingle-point forcesofconstraint (OQGl)foroutPutand translation components ofthedisplacement vector (PUGV1) forthestatic solution. @FPformats thetables prepared bySDR2andplaces themonthesystem output filefor printing. SCANexamines theelement stresses output thatmeetsthespecifications @FPformats thescanned output table fileforprinting.andforcescalculated bySDR2andgenerates scanned setbytheuser. prepared bySCANandplacesitonthesystemoutput GotoDMAPNo.86ifnostaticsolution deformed structure plotsarerequested. PL!3Tgenerates allrequested staticsolution deformed structure andcontour plots. PRTMSGprintsplotter data,engineering data,andcontour dataforeachstaticsolution deformed plotgenerated. TA1generates element tablesforuseindifferential stiffness matrixassembly. DSMG1generates differential stiffness matrix[Kg]. Equivalence [Kg]to[Kn]and[Mgg]to[Mnn]ifnomultipoint constraints exist. GotoDMAPNo.92ifnomultipoint constraints MCE2partitions differential stiffness matrix [Kjg]= andperforms matrixreduction [K:n]=[:nlexist. [G:][K;n] +[K:nl[Gml +[Gj[ml[Gml. Equivalence [Knlto[K~f]and[Mnn]to[Mff]ifnosingle-point constraints exist. 2.13-11 (05/30/86)\n-.,.-,”,…………. 94. 95. 97. 98, 99. 100. 103. 105.IJIJPLHLLMLNI KltilU GotoDMAPNo.96ifnosingle-point constraints SCE1partitions outsingle-point constraints 1-FORMATS exist. MK$fI\u0026 [Kn]= –+– and[Mnn]= K;f[KdSsMffIMfs –+– MsftMss Equivalence [Kff]to[Ka]and[Mff]to[Maa]ifnoomitted coordinates exist. GotoDMAPNo.10lifnoomitted coordinates exist. SMP2partitions constrained differential stiffness matrix [1~~a1Ko [Kf]= –+– KaIKo andperforms matrixreduction [Ka]=[~~a]+[Ko][Go] . SMP2partitions constrained massmatrix [1.-MlMao rMffJ=f-+M— ‘ oa00 andperforms matrixreduction [Maa]=[aa]+[Ma][Go] +[G~][Moa] +[G~][Moo][Go] Equivalence {PL}to{P!},{Ps}to{P;},{Y~}to{Y!}and{u~}to scalefactorisnotspecified onaDSFACTcard. DSMG2addspartitions ofstiffness matrixtosimilar partitions matrixuoblifa o ofdifferential stiffness [K:t]=[Kaa]+6[K:a] , [Ksl=[Kfsl+BIK$l and [K;s]=[Kss]+6[Ks] andmultiplies partitions ofloadvectors anddisplacement vectors bythevalueofthe differential stiffness scalefactor(8) {P;}=B{Pi} , {Y)=8{YS} and{P:}=i3{Ps},e 2.13-12 (05/30/86)\n106. 107.NORMALMODESWITHDIFFERENTIAL RBMG2decomposes thecombined differential stiffness [K:gl=[L:J[U;J .STIFFNESS matrixandelastic stiffness matrix PRTPARM printsthescaledvalueofthedeterminant ofthecombined differential stiffness matrixandelastic stiffness matrix. 108. 109. 110. 111. 113.PRTPARM printsthescalefactor (poweroften)ofthedeterminant ofthecombined differential stiffness matrixandtheelastic stiffness matrix. SSG3solvesfordisplacements ofindependent coordinates forthevalueofdifferential stiffness scalefactor(S) {u!}=[K:g]-l{P~} andcalculates residual vector (RBULV) andresidual vectorerrorratioforcurrent differential stiffness loadvector GotoDMAPNo.112iftheresidual vectorforcurrent differential stiffness loadfactoris nottobeprinted. MATGPRprintstheresidual vectorfor SDR1recovers dependent displacements +~uob},tub}=[Go]{u!} o0 u: I={u:}, b- S ;b n I={u:] ;b- mcurrent differential stiffness loadfactor. forthecurrent different b II‘i={u:},—— Ub 0 {u:}=[Gm]{+,alstiffness scalefactor andrecovers single-point forcesofconstraint forthecurrent differential stiffness scalefactor {q:]=-{P:}+[K:fltu:? +[K:f]{y: s 2.13-13 (05/30/86)\n114. 115. 116. 117. 119. 120. 121. 122. 123.DISPLACEMENT RIGIDFORMATS SDR2calculates element forces(OEFBl) andstresses (klESBl) andprepares displacement vectors (@JBGVl) andsingle-point forces ofconstraint (OQBGl) foroutputandtranslation components ofthedisplacement vector(PUBGV1) forthedifferential stiffness solution. OFPformats thetablesprepared bySDR2andplacesthemonthesystemoutputfilefor@ printing. DPDextracts Eigenvalue Extraction DatafromDynamics datablock. GotoDMAPNo.136andprintErrorMessage No.3ifthereisnoEigenvalue Extraction Data. READextracts realeigenvalues andeigenvectors fromtheequation [Kfl-AMaa]{ual =O, calculates rigidbodymodesbyfinding asquare [mol=[Jol[mr][$rol isdiagonal andnormalized, computes rigidbody [1[f$aol=fl$ , ‘$ro calculates modalmassmatrix’ [m]=[@~][Maa][@a] andnormalizes eigenvectors according tooneofmatrix[oro]suchthat eigenvectors thefollowing userrequests: 11Unitvalueofaselected component 2Unitvalueofthelargest component 3)Unitvalueofthegeneralized mass. 13FPformats thesummary ofeigenvalue extraction information (f?JEIGS) prepared byREADand placesitonthesystemoutputfileforprinting. GotoDMAPNo.138andprintErrorMessage No,4ifnoeigenvalues werefound. ~FPformats theeigenvalues (LAMA)prepared byREADandplacesthemonthesystemoutput fileforprinting. SDR1recovers dependent components ofthe,eigenvectors {$.}=[Go]{$a},@a H={$f} , —— ‘$0 {@m}=[Gm]{on}s H$n——=tog} ‘$m 2.13-14 (05/30/86)\n●124. 125. 126. 127. 128. 129. 131. 133. 135. 137. 139. 141. 143.NORMALMOOESWITHDIFFERENTIAL STIFFNESS andrecovers single-point forces ofconstraint {qs!=[KfSIT{@f}” CASEcopiestherecordcorresponding tothethirdsubcase fromCASECCintoCASEXX. SDR2calculates element forces (OBEFl) andstresses (OBESl) andprepares eigenvectors (OPHIG) andsingle-point forcesofconstraint (k3BQGl) foroutputandtranslation components oftheeigenvectors (PPHIG) forthenormalmodesolution. OFpformats thetablesprepared bySDR2andplacesthemonthesystemoutputfilefor printing. GotoDMAPNo.130ifnorealeigenvalue solution deformed structure plotsarerequested.’ PLOTgenerates allrequested realeigenvalue solution deformed structure andcontour plots. PRTMSGprintsplotter data,engineering data,andcontour dataforeachdeformed plot generated. GotoDMAPNo.144andmakenormalexit. PrintErrorMessage No.1andterminate execution. PrintErrorMessage No,2andterminate execution. PrintErrorMessage No.3andterminate execution. PrintErrorMessage No.4andterminate execution. PrintErrorMessage No.5andterminate execution. PrintErrorMessage No.6andterminate execution. 2.13-15 (05/30/86)\nDISPLACEMENT RIGIDFORMATS 2.13.3 OutputforNormalModeswithDifferential Stiffness TheEigenvalue Summary TableandtheEigenvalue Analysis ModesAnalysis (seeSection 2.3.3), areautomatically printed. Thevalueofthedeterminant ofthesumoftheelastic stiffness isalsoautomatically printed. The 1. 2* 3. 4. The 1. 2. TheI 1. 2. 3. 4. 5.Summary, asdescribed underNormal stiffness andthedifferential following outputmayberequested: Nonzero components oftheapplied staticloadforthelinearsolution atselected grid points. Displacement andnonzero components ofthesingle-point forcesofconstraint, withand without differential stiffness, atselected gridpoints. Forcesandstresses inselected elements, withandwithout differential stiffness. Scanned outputofforcesandelements inselected elements. following plotter outputmayberequested: Deformed andundeformed plotswithandwithout differential stiffness. Contour plotsofstresses anddisplacements withandwithout differential stiffness. following outputmayberequested fortheeigenvector solution subcase: Eigenvectors alongwiththeassociated eigenvalue foreachmode. Nonzero components of selected gridpoints. Forcesandstresses in Undeformed plotofthethesingle-point selected elementsforcesofconstraint forselected modes forselected modes. structural modelandmodeshapesforselected modes. Contour plotsofstresses anddisplacements forselected modes, 2.13.4 CaseControl DeckforNormalModeswithDifferential Stiffness Thefollowing itemsrelatetosubcase definition anddataselection forNormalModes Differential Stiffness: 1.TheCaseControl Deckmustcontain threesubcases. Outputselections maybemade thesubcase levelandwithintheindividual subcases.at with above 2.Thelinearsolution isoutputfromthefirstsubcase. Thestaticdifferential stiffness solution isoutputfromthesecondsubcase. Theeigenvector solution isoutputfromthe thirdsubcase. 3.AnSPCsetmustbeselected abovethesubcase levelunlessallconstraints arespecified onGRIDcards. 2.13-16 (05/30/86)\nNORMALMODESWITHDIFFERENTIAL STIFFNESS 2.13.54.Astatic loading condition mustbedefined inthefirstsubcase withaLOAD, TEMPERATURE(LOAD), orDEFORMselection, unlessallloading isspecified bygridpoint displacements onSPCcards. 5.DSC@EFFICIENT mustappearinthesecondsubcase, eithertoselectaDSFACTsetfromthe BulkDataDeck,ortoexplicitly selecttheDEFAULT valueofunity. 6.METH@Dmustappearinthethirdsubcase toselectanEIGRbulkdatacard. Parameters forNormalModeswithDifferential Stiffness Thefollowing parameters areusedinNormalModeswithDifferential Stiffness: 1, 2. 3. 4. 5. 6. 7.ASETf3UT -optional. Apositive integer valueofthisparameter causestheASEToutput datablocktobegenerated bytheGP4module. Anegative integer valueorOsuppresses thegeneration ofthisoutputdatablock. Thedefault valueisO. AUTft3PC -reserved forfutureoptional use.Thedefault valueis-1. C@UPMASS -CPBAR,CPR@D,CPQUAD1, CPQUAD2, CPTRIA1, CPTRIA2, CPTUBE, CPQDPLT, CPTRPLT, CPTRBSC -optional. Theseparameters causethegeneration ofcoupled massmatrices ratherthanlumpedmassmatrices forallbarelements, rodelements, andplateelements thatinclude bending stiffness. GRDPNT-optional. Apositive integer valueofthisparameter causestheGridPoint WeightGenerator tobeexecuted andtheresulting weightandbalance information tobe printed. Allfluidrelated masses areignored. SURFACE -optional. Thecomputations oftheexternal surface areasforthe two-dimensional andthree-dimensional elements areactivated bythisparameter whenthey aregenerated intheEMGmodule. Theresults aremultiplied bytherealvalueofthis parameter. Seethedescription underthePARAMbulkdatacardfordetails. VOLUME -optional. Thevolume computations forthetwo-dimensional and three-dimensional elements areactivated bythisparameter whentheyaregenerated in theEMGmodule, Theresults aremultiplied bytherealvalueofthisparameter. See thedescription underthePARAMbulkdatacardfordetails. WTMASS-optional. Thetermsofthestructural massmatrixaremultiplied bythereal valueofthisparameter whentheyaregenerated intheEMAmodule. Notrecommended for useinhydroelastic problems.I 2.13-17 (05/30/86)\n2.13.6Dlbt’LALtMkNl K1tilLlFUKMAIS Optional Diagnostic Output forFEER Special detailed information obtained byrequesting DIAG16intheExecutive Control Deckis thesameasthatdescribed 2.13.7 TheAPPENDFeature TheAPPENDfeatureunderNormal canbeusedModesAnalysis (seeSection 2.3.6). forrealeigenvalue extraction inNormalModeswith Differential Stiffness. SeeSection 2.3.7fordetails. 2.13.8 RigidFormatErrorMessages fromNormalModeswithDifferential Stiffness Thefollowing fatalerrorsaredetected by Differential Stiffness rigidformat. Thetextfor letters andisfollowed byadditional explanatory action. NORMALMODESWITHDIFFERENTIAL STIFFNESS DEFINED. Nostructural elements havebeendefined NORMALMODESWITHDIFFERENTIAL STIFFNESStheDMAPstatements eacherrormessage material, includingintheNormalModeswith isgivenbelowincapital suggestions forremedial ERRORMESSAGE N@.1-N@STRUCTURAL ELEMENTS HAVEBEEN withConnection cards. ERR@RMESSAGE N@.2-FREEB@DYSUPPf3RTS Nf3TALLOWED. Freebodiesarenotallowed inNormalModeswithDifferential Stiffness. TheSUP@RTcardsmustbe removed fromtheBulkDataDeckandotherconstraints applied ifrequired forstability. NORMALMODESWITHDIFFERENTIAL STIFFNESS ERRORMESSAGE N@.3-EIGENVALUE EXTRACTION DATAREQUIRED FORREALEIGENVALUE ANALYSIS. Eigenvalue extraction datamustbesupplied onanEIGRcardintheBulkDataDeckandMETHODinthe CaseControl DeckmustselectanEIGR’\u003cet, N@RMALMODESWITHDIFFERENTIAL STIFFNESS ERRORMESSAGE NO.4-NOEIGENVALUE FOUND, Noeigenvalues werefoundinthefrequency rangespecified bytheuser. NORMALMODESWITHDIFFERENTIAL STIFFNESS ERRORMESSAGE NO.5-MASSMATRIXREQUIRED EIGENVALUE ANALYSIS.FORREAL Themassmatrixisnullbecause eithernostructural elements weredefined withConnection cards, nonstructural masswasnotdefined onaProperty cardorthedensity wasnotdefined onaMaterial card. N@RMALMODESWITHDIFFERENTIAL STIFFNESS ERRORMESSAGE N~.6-NOINDEPENDENT DEGREES OFFREEDOM HAVEBEENDEFINED. Eithernodegrees offreedom havebeendefined onGRID,SPOINTorScalarConnection cards,orall defined degrees offreedom havebeenconstrained bySPC,MPC,SUP@RT, OMITorGRDSE”Tcards,or grounded onScalarConnection cards. 2.13-18 (05/30/86)\nDISPLACEMENT RIGIDFORMATS 2.14STATIC ANALYSIS USINGCYCLIC SYMMETRY ●2.14.1 RIGID APRILDMAPSequence forStatic Analysis UsingCyclic Symmetry FORMAT DMAPLISTING 1986RELEASE DISPLACEMENT APPROACH, LEVEL200NASTRAN OPTIONS INEFFECT GO ——–.— .—-RIGIDFORMAT 14 OMAPCOMPILER -SOURCE LISTING ERR=2 LIST NODECK NOREF NOOSCAR 1BEGIN 2PRECHK 3FILE 4FILE ~PARAM 6PARAM 1GP1 ●8PLTTRAN 9GP2 10PARAML 11PURGE 12COND 13PLTSET 14PRTMSG 15PARAM 16PARAM 17CONO 18PLOT 19PRTMSG 20LABEL 21GP3OISP14-STATIC ANALYSIS WITHCYCLIC SYMMETRY -APR.1986$ ALL$ KKK=SAVE/PK-SAVE $ UXV=APPEND $ //fipY#(/cARDNo/o/o $ //~~NOP/V,Y,CYCIO=l $ GEOMl,GEOM2,/GPL,EQEXlN,GPDT, CSTM,BGPDT,SIL/S,N,LUSET/ NOGPDT/MINUSl=-l $ BGPOT,SIL/BGPDP,SIP/LUSET/S,N, LUSEP$ GEoM2,EQExlN/EcT $ PCDB//PRES////JUMPPLOT $ PLTSETX,PLTPAR,GPSETS,ELSETS/JUMPPLOT $ P1,JUMPPLOT $ PCOB,EQEXIN,ECT/PLTSETX,PLTPAR,GPSETS, ELSETS/S,N,NSIL/ S,N,JIJMPPLOT $ PLTSETX// $ //MPY/PLTFLG/l/l $ //MPY/PFILE/O/O $ P1,JUMPPLOT $ PLTPAR,GPSETS,ELSETS,CASECC, BGPDT,EQEXIN,SIL,,ECT,,/PLOTXl/ NSIL/LUSET/S,N,JUMPPLOT/S,N,PLTFLG/S,N, PFILE $ PLOTX1// $ P1s GEoM3,EQExIN,GEoM2/sLT,GPTT/s,N,NoGRAv $ 2014-1 (05/30/86)\nDISPLACEMENT RIGIDFORMATS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 14 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 22 23 2h 25 26 27 28 29 30 31 32 33 311 35 36 37 38 39 40 41 42 43 Ak 45PARAM TA1 PARAM CONO PURGE COND PARAM EMG PURGE COND EMA LABEL COND EMA LABEL COND CONO GPWG OFP LABEL EQUIV CONO SMA3 LABEL//AND/NOMGG/NOGRAV/V,y,GRDpNT=- 1$ ECT,EPT,BGPDT,SIL,GPTT,CSTM/EST,GE l,GPECT,,/ LUSET/S,N,NOSIMP/l/S,N,NOGENL/S,N,GENEL $ //ANO/NOELtiT/NOGENL/N051MP $ ERROR4,NOELMT $ GPST/NOSIMP/OGPST/GENEL $ LBL1,NOSIMP $ //ADO/NOKGGX/l/O $ EST,CSTM,MPT,DlT,GEOM2,/KELM,KD lCT,MELM,MDICT,,,/S,N,NOKGGX/ S,N,NOMGG////C, Y,COUPMASS/C,Y, CPBAR/ c,Y,cPRoD/c,Y,cPQuAol/c,Y,cPQuAo2/c,Y, cPTRIA1/c,Y,cPTRlA2/ C,Y,CPTUBE/C,Y,CPQDPLT/C,Y,CPTRPLT/C,Y, CPTRBSC/ V,Y,VOLUME/V,Y,SURFACE $ KGGX,GPST/NOKGGX/MGG/NOMGG $ JMPKGG,NOKGGX $ GPECT,KDICT,KELM/KGGX,GPST $ JMPKGG $ JMPMGG,NOMGG $ GPECT,MDICT,MELM/MGG,/-l/C,Y,WTMASS=l .0$ JMPMGG $ LBL1,GROPNT $ ERROR2,NOMGG $ BGPDP,CSTM,EQEXlN,MGG/OGPWG/V,Y,GRDPNT/C,Y,WTMASS $ OGPWG,,,,,//S,N,CARONO $ LBL1$ KGGX,KGG/NOGENL $ LBL1lA,NOGENL $ GEl,KGGX/KGG/LUSET/NOGENL/NOS IMP$ LBLIIA $ 2.14-2 (05/30/86)\nSTATICANALYSIS USINGCYCLICSYMMETRYI ●RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 14 LEVEL2.0NASTRAN OMAPCOMPILER -SOURCE LISTING k6 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70PARAM GP4 COND PARAII COND PURGE GPCYC CONO CONO PARAM COND GPSP OFP LABEL EQUIV CONO MCE1 MCE2 LABEL EQUIV COND SCE1 LABEL EQUIV CONO//HpY/NsKlp/o/o $ CASECC,GEOM4,EQEXIN,GPOT,BGPOT, CSTM,GPST/RG,YS,USET,ASET/ LuSET/S,N,MPCFl/S,N,MPCF2/S ,N,SINGLE/S,N,OMIT/S,N,REACT/ S,N,NSKlP/S,N,REPEAT/S,N,NOSET/S,N,NOL/S,N,NOA/C,Y,ASETOUT/ S,Y,AUTOSPC $ ERROR3,NOL $ //NOT/REACDATA/REACT $ ERROR6,REACDATA $ GM/MPCFl/GO,KOO,LOO,PO,UOOV,RUOV/OMIT/PS, KFS,KSS,QG/SINGLE $ GEOM4,EQEXlN,USET/CYCO/V,Y,CTYPE/S, N,NOGO $ ERROR7,NOG0 $ LBL4,GENEL $ //EQ/GpspFLG/AuTospc/o $ LBL4,GPSPFLG $ GPL,GPST,USET,SIL/OGPST/S,N, NOGPST $ OGPST,,,,,//S.N,CARDNO $ LBL4$ KGG,KNN/MPCFl $ LBL2,MPCF1 $ USET,RG/GM $ USET,GM,KGG ,,,/KNN,,, $ LBL2$ KNN,KFF/SINGLE $ LBL3,SINGLE $ USET,KNN ,,,/KFF,KFS,KSS,,, $ LBL3$ KFF,KAA/OMIT $ LBL5,0MIT $ 2.14-3 (05/30/86)\nDISPLACEMENT RIGIDFORMATS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 14 LEVEL2.0NASTRAN OMAPCOMPILER -SOURCE LISTING 71SMP1 72LABEL 73SSG1 74EQUIV 75~ONO 76SSG2 77COND 78SSG3 79COND 80MATGPR 81LABEL 82EQUIV 83COND 84”’CYCT1 85LABEL 86COND 87PARAH 88LABEL 89CYCT2 90COND 91RBMG2 92ssG3 93CYCT2 94CONDUSET,KFF,,,/GO,KAA,KOO, LOO,,t,,$ LBL5$ SLT,BGPDT,CSTM,SI L,EST,MPT,GPTT, EDT,MGG,CASECC,DIT,/PG,,,,/ LUSET/NSKIP $ PGpPL/NOSET $ LBL9,NOSET $ USET,GM,YS,KFS,GO,,PG/,PO,PS,PL $ LBL9,0MIT $ LOO,KOO,PO,,,/UOOV,,RUOV,/-l/v,Y, IRES=-1 $ LBL9,1RES $ GPL,USET,SIL,RUOV//O $ LBL9s PL,PX/CYCIO $ LBL1O,CYCIO $ PL/PX,GCYCF/V,Y,CTYPE/FORE/V,Y,NSEGS=-l/S,Y,KMAX=-l/V,Y, NLOAO=l/S,N,NOGO $ LBL1O$ ERROR7,NOG0 $ //ADD/KINDEX/O/O $ LBL1l$ CYCDPKAA,,PX,,/KKK, ,PK,,/FORE/V,Y,NSEGS/KINDEX/V,Y, CYCSEQ=-1/V,Y,NLOAO/S,N,NOGO $ ERROR7,NOG0 $ KKK/LKK $ LKK,KKK,PK, ,,/UKV,,RUKV,/-l/V,Y,lRES $ CYCD,,,UKV,RUKV,/,,UXV,RUXV,/BACK/V,Y,NSEGS/Ki NDEX/ V,Y,CYCSEQ/V,Y,NLOAD/S,N,NOGO $ ERROR7,NOG0 $ 2.14-4 (05/30/86)\nSTATICANALYSIS USINGCYCLIC SYMMETRY RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIOFORMAT lb LEVEL2.0NASTRAN DMAPCOMPILER 95COND 96MATGPR 97LABEL 98PARAM 99PARAH 100CONO 101REPT 102JUMP 103LABEL 104EQUIV 105CONO 106CYCT1 107CONO 108LABEL 109SOR1 110CONO 111EQMCK 112OFP 113LABEL llkSDR2 115OFP 116SCAN 117OFP 118CONOLBLlh,lRES$ GPL,USET,SIL,RUXV//A LBL14$-SOURCE LISTING $ //AOO/KINOEX/KINDEX/l $ //suB/ooNE/V,Y,KMAX/KINOEX $ LBL15,00NE $ LBL1l,360$ ERROR1 $ LBL15$ UXV,ULV/CYCIO $ LBL16,CYCI0 $ UXV/ULV,GCYCB/V,Y,CTYPE/~~BACK*/V,Y,NSEGS/V,Y, KMAX/V,Y,NLOAO/ S,N,NOGO $ ERROR7,NOG0 $ LBL16$ USET,PG,ULV,UOOV,YS,GO,GM, PS,KFS,KSS,/UGV,PGG,QG/NSK lP/ STATlcS $ NOMPCF,GROEQ $ CASECC, EQEXIN,GPL,BGPOT,SI L,USET,KGG,GM,UGV,PGG,QG,CSTM/ OQM1/V,Y,OPT=O/V,Y,GROEQ/NSK 1P$ OQMl,,,,,//S,N,CARONO $ NOMPCF $ cASECC,CSTM,MPT,OIT,EQEXIN,S lL,GPTT,EOT,BGPOP, ,QG,uGV, EsT,,pGG/ oPGl,OQGl,OUGVl,OESl,OEFl,PuGvl/STATl cS$ OUGVl,OPGl,OQGl,OEFl,OESl,//s,N, CARONO $ CASECC,OESl,OEF1/OESFl/RF $ OESFl,,,,,//S,N,cARoNo $ P2,JUMPPLOT $ 2.14-5 (05/30/86)\nDISPLACEMENT RIGIDFORMATS RIGIDFORMAT OMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 14 LEVEL2.0NASTRAN OMAPCOMPILER -SOURCE LISTING 119PLOT 120PRTMSG 121LABEL 122JUMP 123LABEL 124PRTPARM 125LABEL 126PRTPARM 127LABEL 128PRTPARM 129LABEL 130PRTPARM 131LABEL 132PRTPARM 133LABEL 134PRTPARM 135LABEL 136PURGE 137ENDPLTPAR,GPSETS,ELSETS,CASECC,BGPOT, EQEXIN,SI P,PUGV1, ,GPECT,OES 1/ PLOTX2/NSlL/LUSEP/JUMPPLOT/PLTFLG/S,N,PF ILE$ PLoTx2// $ P2$ FINIS$ ERROR1 $ //-1/CYCSTATICS $ ERROR2 $ //-2/cYcsTATlcs $ ERROR3 $ //-3/CYCSTATICS $ ERROR4 $ //-4/cYcSTATIC5 $ ERROR6 $ //-6/cyc5TATIcS $ ERROR7 $ //-7/cyc5TATIcS $ FINIS$ CWMMY/HINUSl $ $ 2.14-6 (05/30/86)I\nSTATICANALYSIS USINGCYCLICSYMMETRY 2.14.2 Description ofImportant DMAPOperations forStatic Analysis UsingCyclic Symmetry e7. 8. 9. 12. 13. 14. 17. 18. 19. 21. 23. 25. 27. 29. 31. @32. 34. 35. 37. 38. 39. 40. 42. 43. 44. 47. 48. 50.GP1generates coordinate system transformation matrices, tables ofgridpointlocations, and tables relating theinternal andexternal gridpointnumbers. PLTTRAN modifies special scalar gridpoints intheBGPDTandSILtables. GP2generates Element Connection Tablewithinternal indices. GotoDMAPNo.20iftherearenostructure plotrequests. PLTSETtransforms userinputintoaformusedtodrivethestructure plotter. PRTMSGprintserrormessages associated withthestructure plotter. GotoDMAPNo.20ifnoundeformed structure plotsarerequested. PLPTgenerates allrequested undeformed structure plots. PRTMSG prints plotter dataandengineering dataforeachundeformed plotgenerated. GP3generates Static LoadsTableandGridPointTemperature Table. TA1generates element tables foruseinmatrix assembly andstress recovery. GotoDMAPNo.129andprintErrorMessage No.4ifnoelements havebeendefined. GotoDMAPNo.41ifthere EMGgenerates structural e’ assembly bytheEMAmodule GotoDMAPNo.33ifnost’arenostructural elements. ementstiffness andmassmatrixtablesanddictionaries forlater ffnessmatrixistobeassembled. EMAassembles stiffness matrix[K\u0026]andGridPointSingularity Table. GotoDMAPNo.36ifnomassmatrixistobeassembled. EMAassembles massmatrix[Mgg]. GotoDt4APNo.41ifnoweightandbalance information isrequested. GotoDMAPNo.125andprintErrorMessage No.2ifnomassmatrix exists. GPWGgenerates weightandbalance information. !3FPformats theweightandbalance information prepared byGPWGandplacesitonthesystem outputfileforprinting. Equivalence [Kg]to[Kgg]iftherearenogeneral elements. GotoDMAPNo.45iftherearenogeneral elements. SMA3addsgeneral elements to[Kg]toobtainstiffness matrix[Kgg]. GP4generates flagsdefining members ofvarious displacement sets(USET), formsmultipoint constraint equations [Rg]{ug}=Oandformsenforced displacement vector{yS}. GotoDMAPNo.127andprintErrorMessage No.3ifnoindependent degrees offreedom are defined. GotoDMAPNo.131andprintErrorMessage No.6iffree-body supports arepresent. 2.14-7(05/30/86)I\nDISPLACEMENT RIGIDFORMATS 52. 53. 54. 56. 57. 58. 60. 61.GPCYCprepares segment boundary table(CYCO). GotoDMAPNo.133andprintErrorMessage No.7ifCYJklINdataisinconsistent. GotoDMAPNo.59ifgeneral elements arepresent. GotoDMAPNo,59ifnopotential gridpointsingularities exist. GPSPgenerates atableofpotential gridpointsingularities. 13FPformats thetableofpotential gridpointsingularities prepared byGPSPandplacesit onthesystemoutputfileforprinting. Equivalence [Kgg]to[Knn]ifnomultipoint constraints exist. GotoDMAPNo.64ifnomultipoint constraints exist. 62.MCE1partitions mu’ multipoint constra 63.MCE2partitions st’tipoint constraint equations [Rg]=[Rm~Rn]andsolvesfor nttransformation matrix[Gm]=-[Rm]-l[Rn]. ffnessmatrix-1 andperforms matrixreduction – [Knn]=[~nn]+[G:][Kmnl +[K:JIGMI+[(j[Kmml[Gml. 65.Equivalence [Knn]to[Kff]ifnosingle-point constraints exist. 66.GotoDMAPNo.68ifnosingle-point constraints exist. 67.SCE1partitions outsingle-point constraints [1‘ff‘‘fs[Knn]=;~K–. Sf55 69.Equivalence [Kfflto[Kaalifnoomitted coordinates exist. 70.GotoDMAPNo.72ifnoomitted coordinates exist. 71.SMP1partitions constrained stiffness matrix r- 7 IIKIK [Kff]=~a+= , ,KoalKoo L J solvesfortransformation matrix[Go]=-[Kool-l[Koal andperforms matrixreduction [Kaal 73.SSG1generates staticloadvectors 2=[iaal+[K:a][Go] . Pg}. 14-8(05/30/86)e\nSTATICANALYSIS USINGCYCLICSYMMETRY 74.Equivalence {Pg}to{Pk}ifnoconstraints areapplied. ●75.GotoDMAPNo.81ifnoconstraints areapplied. 76.SSG2applies constraints tostaticloadvectors Hin{Pg}= —– , Pm{Pn}={~n}+[G:]{i1m’ IIif{Pn}= —– , Ps {Pf}= HFa——P.{Pf}={fl-[Kfs]{ys} , {Pa}={a}+[G:]{PO}, NPk {Pa}= Tr– andcalculates determinate forcesofreaction {qr}❑ -{Pr}-[DT]{PE}. 77.GotoDMAPNo.81ifnoomitted coordinates exist. ●78.SSG3solvesfordisplacements ofomitted coordinates (thesearenottransformed) {u}=[KOO]-l{ PO} andcalculates residual vector (RU!3V)andresidual vectorerrorratioforomitted coordinates {\u0026Po}={Pol-[Koo]{u} , {u;}{\u0026po}‘o. ~pT1{uo} 00 79.GotoDMAPNo,81ifresidual vectors arenottobeprinted. 80.MATGPRprintstheresidual vectorforomitted coordinates (RUOV). 82.Equivalence {Pi}to{Px}ifsynmetric components ofloadshavebeeninput. 83.GotoDMAPNo.85ifsynwnetric components ofloadshavebeeninput. 84.CYCT1transforms loadsonanalysis pointstosymmetric components bytheequation {Px}=[G]{Pk} . 2.14-9 (05130/86)\nDISPLACEMENT RIGIDFORMATS 86.GotoDMAPNo.133andprintErrorMessage No.7ifaCYCT1errorwasfound. 88.Beginning ofloopforcyclicindex(KINDEX) values. 89.CYCT2transforms matrices andloadsfromsymmetric components tosolution setbythe equations [Kkk]❑ [G~][Kaal[G1l +[41[Kaa[G21 , whereG1=Gc(cosine) andG2=Gs(sine)forrotational symmetry, and‘1=GS(Syrrunetric {Pk}=[G\u0026’Pc} +andG2=GA(Antisymmetric) fordihedral syimletry, [G~]{Ps} forrotational symmetry, {P;}=[G~]{PcS} +[G~]{PsA} , and{Pl=[G]tPcA} +[G~]{PsS} fordihedral synxnetry. 90.GotoDMAPNo.133andprintErrorMessage No.7ifaCYCT2errorwasfound, 91.RBMG2decomposes constrained stiffness matrix [Kkkl=[Lkk][Ukk] 92.SSG3solvesfordisplacements ofsolution set {uk}=[Kkk]-l{Pk}forsolution set coordinates andcalculates residual vector(RUKV)andresidual vectorerrorratioforsolution set coordinates {\u0026Pk}={Pk?- [Kk,]{ukl , {u:}{6Pk} ~k= . {P[}{uk} 93. 94. 95. 96. 100. 101. 102. 104. 105,CYCT2findssymmetric components ofdisplacement fromsolution setdataandappends to outputforeachKINDEX. GotoDMAPNo.133andprintErrorMessage No.7ifaCYCT2errorwasfound. GotoDMAPNo.97ifresidual vectors arenottobeprinted. MATGPRprintstheresidual vectorforsolution setcoordinates (RUXV). GotoDMAPNo.103ifallcyclicindex(KINDEX) valuesarecomplete. GotoDMAPNo,88ifadditional cyclicindexvaluesareneeded. GotoDMAPNo.123andprintErrorMessage No.1ifnumberofloopsexceeds 360. Equivalence {ux}to{uL}ifoutputofsynunetric components wasrequested, GotoDMAPNo.108ifoutputofsymmetric components wasrequested, 2.14-10 (05/30/86)\n“-m ..-.,. …..,,-.,. ,,,. ..,- ….-, .- -i,…..–@… 106. ●107. 109. 110. 1110 112. 114. 116. 117. 118. 119. 120. 122. 124. 126. 128. 130. 132. 134.\u003eIAIIL ANALY\u003el\u003e USINtiLYLLIL SYMMLIKY CYCT1transforms displacements fromsynwnetric components tophysical components. GotoDMAPNo.131andprintErrorMessage No.7ifaCYCT1errorwasfound. SDR1recovers dependent displacements {uo}=[Go]{ual +{U:}, 11‘a——={uf] , ‘o 11‘f={Un}, —— Ys {urn}= [Gm]tun} , IIUn ——={Ug} ‘m andrecovers single-point forcesofconstraint {qs}=-{PSI+[Kjsl{uf} +[Kssl{ysl . GotoDMAPNo.113ifnomultipoint constraint forcebalance isrequested. EQMCKcalculates theforceandmomentequilibrium checkandprepares themultipoint constraint forcebalance (OQMl)foroutput. OFPformats thetableprepared byEQMCKandplacesitonthesystemoutputfilefor printing. SDR2calculates element forces(fIEFl)andstresses (OESl)andprepares loadvectors (t3PGl), displacement vectors (@UGVl) andsingle-point forcesofconstraint (!3QG1)foroutputand translation components ofthedisplacement vector(PUGV1). OFPformats thetablesprepared bySDR2andplacesthemonthesystemoutputfilefor printing. SCANexamines theelement stresses andforcescalculated bySDR2andgenerates scanned outputthatmeetsthespecifications setbytheuser. OFPformats thescanned outputtableprepared bySCANandplacesitonthesystemoutput fileforprinting. GotoDMAPNo.121ifnodeformed structure plotsarerequested. PLOTgenerates allrequested deformed structure andcontour plots. PRTMSGprintsplotter data,engineering data,andcontour dataforeachdeformed plot generated. GotoDMAPNo.135andmakenormalexit. PrintErrorMessage No.1andterminate execution. PrintErrorMessage No.2andterminate execution. PrintErrorMessage No.3andterminate execution. PrintErrorMessage No.4andterminate execution. PrintErrorMessage No.6andterminate execution. PrintErrorMessage No.7andterminate execution, 2.14-11 (05/30/86)\nDISPLACEMENT RIGIDFORMATS 2.14.3 OutputforStaticAnalysis UsingCyclicSymmetry The index,may 1. 2. 3. The 1. 2. 3. 4.following printed output, foreachloading condition andeachsymmetric segment or berequested forStaticAnalysis UsingCyclicSymmetry: Displacements andcomponents ofstaticloadsandsingle-point forcesofconstraint at selected gridpointsorscalarpoints. Forcesandstreses inselected elements. Scanned outputofforcesandelements inselected elements. following plotter outputmayberequested: Undeformed anddeformed plotsofthestructural model(1segment). Contour plotsofstresses anddisplacements (1segment). X-Yplotofanycomponent ofdisplacement, staticload,orsingle-point forceof constraint foragridpointorscalarpoint. X-Yplotofanystressorforcecomponent foranelement. 2.14.4 CaseControl DeckforStaticAnalysis UsingCyclicSymmetry Thefollowing itemsrelatetosubcase definition anddataselection forStaticAnalysis UsingCyclicSymmetry: 1,Aseparate groupofsubcases mustbedefined foreachsymmetric segment. Fordihedral symmetry, aseparate groupOFsubcases mustbedefined foreachhalf.Theremaybeup to360subcases corresponding to1°segments. 2.Thedifferent loading conditions aredefined withineachgroupofsubcases. Theloads oneachsymmetric segment andtheselected outputrequests maybeindependent. The numberofloading casesisspecified onthePARAMcardNL(IAD. 3.TheSPCandMPCrequest mustappearabovethesubcase levelandmaynotbechanged. 4.Analternate loading methodistodefineaseparate groupofsubcases foreachharmonic index,k.Theparameter CYCI@isincluded andtheloadcomponents foreachindexare defined directly withineachgroupforthevarious loading conditions. 2.14.5 Parameters forStaticAnalysis UsingCyclicSymmetry Thefollowing parameters areusedinStaticAnalysis UsingCyclicSymmetry: 1.ASETf3UT -optional. Apositive integer valueofthisparameter causestheASEToutput datablocktobegenerated bytheGP4module. Anegative integer valueorOsuppresses thegeneration ofthisoutputdatablock. Thedefault valueisO. 2.14-12 (05/30/86)"},"title":"User's Manual P14"},"/docs/users/users_manual_015/":{"data":{"":"2. 3. 4. 5. 6. 7. 8. 9. 10. 11. 12.STATICANALYSIS USINGCYCLICSYMMETRY AUT@SPC -reserved forfutureoptional use.Thedefault valueis-1. c!iluPMAss -CPBAR, CPR@D, CPQUAD1, CPQUAD2, CPTRIA1, CPTRIA2, CPTUBE, CPQDPLT, CPTRPLT, CPTRBSC -optional. Theseparameters causethegeneration ofcoupled massmatrices ratherthanlumpedmassmatrices forallbarelements, rodelements, andplateelements thatinclude bending stiffness. CTYPE-required. TheBCDvalueofthisparameter defines thetypeofcyclicsynumetry asfollows: (1)ROT-rotational symmetry (2)DRL-dihedral symmetry, usingrightandlefth~.lves (3)DSA-dihedral symmetry, usingsymmetric andantisymmetric components cYcIk3-optional. Theinteger valueofthisparameter specifies theformoftheinput andoutputdata.Avalueof+1isusedtospecify physical segment representation, and avalueof-1forcyclictransform representation. Thedefault valueis+1. CYCSEQ-optional. Theinteger valueofthisparameter specifies theprocedure for sequencing theequations inthesolution set.Avalueof+1specifies thatallcosine termsshouldbesequenced beforeallsineterms,andavalueof-1specifies alternating cosineandsineterms. Thedefault valueis-1. GRDEQ-optional. Apositive integer valueofthisparameter selects thegridpoint aboutwhichequilibrium willbechecked fortheCaseControl outputrequest, MPCF@RCE. Iftheinteger valueiszero,thebasicoriginisused.Thedefault valueis-1. GRDPNT-optional, Apositive integer valueofthisparameter causestheGridPoint WeightGenerator tobeexecuted andtheresulting weightandbalance information tobe printed. Allfluidrelated massesareignored. IRES-optional. Apositive integer valueofthisparameter causestheprinting ofthe residual vectors following theexecution oftheSSG3module. KMAX-optional. Theinteger valueofthisparameter specifies themaximum valueofthe harmonic index. Thedefault valueisALLwhichimplies NSEGS/2 forNSEGSevenand (NSEGS -1)/2forNSEGSodd. NL@AD-optional. Theinteger conditions. Thedefault value NSEGS-required. Theintegervalueofthisparameter is1. valueofthisparameteristhenumberofstaticloading isthenumberofidentical segments inthestructural model. 2.14-13 (05/30/86)\nDISPLACEMENT RIGIDFORMATS 13. 14. 15. 16.OPT-optional, Apositive integer valueofthisparameter causesbothequilibrium and multipoint constraint forcestobecalculated fortheCaseControl outputrequest, MPCF!llRCE. Anegative integer valueofthisparameter causesonlytheequilibrium force balance tobecalculated fortheoutputrequest. Thedefault valueisOwhichcauses onlythemultipoint constraint forces SURFACE -optional. Thecomputations two-dimensional andthree-dimensional aregenerated intheEMGmodule. The parameter. Seethedescription undertobecalculated fortheoutputrequest. oftheexternal surface areasforthe elements areactivated bythisparameter whenthey results aremultiplied bytherealvalueofthis thePARAMbulkdatacardfordetails. VOLUME-optional. Thevolumecomputations forthetwo-dimensional and three-dimensional elements areactivated bythisparameter whentheyaregenerated in theEMGmodule, Theresults aremultiplied bytherealvalueofthisparameter. See thedescription underthePARAMbulkdatacardfordetails. WTMASS-optional. Thetermsofthemassmatrixaremultiplied bytherealvalueof thisparameter whentheyaregenerated intheEMAmodule. 2.14.6 RigidFormatErrorMessages fromStaticAnalysis UsingCyclicSymmetry Thefollowing fatalerrorsaredetected bytheDMAPstatements intheStaticAnalysis Using CyclicSymmetry rigidformat. Thetextforeacherrormessage isgivenbelowincapital letters andisfollowed byadditional explanatory material, including suggestions forremedial action. STATICS WITHCYCLICSYMMETRY ERRORMESSAGE NO.1-ATTEMPT T~EXECUTE MORETHAN360L013PS. Anattempt hasbeenmadetousemorethan360cyclicindex(KINDEX) values. Thisnumbermaybe increased byALTERing theREPTinstruction intheDMAP. STATICS WITHCYCLICSYMMETRY ERRf9RMESSAGE NO.2-MASSMATRIXREQUIRED FORWEIGHTANDBALANCE CALCULATI(INS. Themassmatrixisnullbecause eithernoelements weredefined withConnection cards, nonstructural masswasnotdefined onaProperty cardorthedensity wasnotdefined onaMaterial card. STATICS WITHCYCLICSYMMETRY ERRORMESSAGE No.3-NoINDEPENDENT DEGREES OFFREED13M HAVEBEEN DEFINED. Eithernodegrees offreedom havebeendefined onGRID,SPOINTorScalarConnection cards,orall defined degrees offreedom havebeenconstrained bySPC,MPC,SUPORT, 9MITorGRDSETcards,or grounded onScalarConnection cards. 2.14-14 (05/30/86)\nSTATICANALYSIS USINGCYCLICSYMMETRY STATICS WITHCYCLICSYMMETRY ERR(3RMESSAGE NO.4-NOELEMENTS HAVEBEENDEFINED. ●Noelements havebeendefined witheitherConnection cardsorGENELcards. STATICS WITHCYCLICSYMMETRY ERRORMESSAGE NO.6-FREEBODYSUPP13RTS N@TALLOWED. Freebodiesarenotallowed inStaticAnalysis UsingCyclicSymmetry. TheSUP@RTcardsmustbe removed fromtheBulkDataDeckandotherconstraints applied ifrequired forstability. STATICS WITHCYCLICSYMMETRY ERRORMESSAGE NO.7-CYCLICTRANSFORMATI@N DATAERROR, SeeSection 1.12forpropermodeling techniques andcorresponding PARAMcardrequirements. 2.14-15 (05/30/86)\nDISPLACEMENT RIGIDFORMATS 2.14-16 (05/30/86)\nDISPLACEMENT RIGIDFORMATS 2.15NORMALMODESANALYSIS USINGCYCLICSYMMETRY ●2.15.1 DMAPSequence forNormalModesAnalysis UsingCyclicSynwnetry RIGIDFORMAT OMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, LEVEL2.0NASTRAN OPTIONS INEFFECT GO .——- ——– -RIGIDFORMAT 15 DMAPCOMPILER -SOURCE LISTING ERR=2 LIST NODECK NOREF NOOSCAR 1BEGIN DISP15NORMAL MODES 2PRECHK ALL$ 3PARAM //APY~~/CARDNO/O/O $ANALYSIS WITHcycLlc syMHETRY-APR. 1986$ 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21GP1 PLTTRAN GP2 PARAML PURGE COND PLTSET PRT!tSG PARAM PARAM COND PLOT PRTNSG LABEL GP3 TA1 COND PURGEGEOMl,GEOM2,/GPL,EQEXIN,GPOT, CSTM,BGPDT,SIL/S,N,LUSET/ NOGPDT/MINUSl=-l $ BGPDT,SIL/BGPOP,SIP/LUSET/S,N, LUSEP$ GEoM2,EQExlN/EcT $ PCDB//PRES////JUMPPLOT $ PLTSETX,PLTPAR,GPSETS,ELSETS/JUMPPLOT $ P1,JUMPPLOT $ PCDB,EQEXlN,ECT/PLTSETX,PLTPAR,GPSETS,ELSETS/S,N,NS lL/ S,N,JUMPPLOT $ PLTSETX// $ //W4PY/PLTFLG/l/l $ //MpY/pFILE/o/o $ P1,JUMPPLOT $ PLTPAR,GPSETS,ELSETS,CASECC,BGPDT, EQEXIN,SIL,,ECT,,/PLOTXl/ NSIL/LUSET/S,N,JUMPPLOT/S,N,PLTFLG/S,N, PFILE $ PLOTX1//$ P1$ GEOM3,EQEXIN,GEOm2/,GPTT/NOGRAV $ ECT,EPT,BGPDT,SIL,GPTT,CSTM/EST,GE l,GPECT,,/ LUSET/S,N,NOSIMP/l/S,N,NOGENL/S,N ,GENEL $ ERROR6,NOSIMP $ OGPST/GENEL $ 2.15-1(05/30/86)\nDISPLACEMENT RIGIDFORMAIS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT15 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 22 23 24 25 26 27 28 29 30 31 32 33 2“b 35 36 37 38 39 40 41 b2 43 44PARAM PARAM EMG PURGE CONO EMA LABEL COND EMA CONO GPWG OFP LABEL EQUIV COND SF4A3 LABEL PARAH GPb CDND PARAM COND PURGE//*ADOfI/NOKGGX/l/O $ //AOO/NOMGG/l/O $ EST,CSTM,MPT,DlT,GEOM2,/KELM, KOICT,MELM,MOICT, ,,/S,N,NOKGGX/ S,N,NOMGG////C,Y,COUPMAC,Y,,Y, CPBAR/C,Y,CPROD/ c,Y,cPQuAD1/c,Y,cPQuAD2/c,Y, cPTRIA1/c,Y,cPTRlA2/c,Y,cPTuBE/ C,Y,CPQOPLT/C,Y,CPTRPLT/C,Y, CPTRBSC/ v,Y,VOLUME/V,Y,SURFACE $ KGGX,GPST/NOKGGX $ JMPKGG,NOKGGX $ GPECT,KDICT,KELM/KGGX,GPST $ JMPKGG $ ERROR1,NOMGG $ GPECT,MOICT,MELM/MGG,/-l/C,Y,WTMASS=l .0$ LGPWG,GRDPNT $ BGPDP,CSTM,EQEXlN,MGG/OGPWG/V,Y,GRDPNT=-l/C,Y,~MASS $ OGPWG,,,,,//S,N,CARDNO $ LGPWG$ KGGX,KGG/NOGENL $ LBL1l,NOGENL $ GEl,KGGX/KGG/LUSET/NOGENL/NOS IMP$ LBL1l$ //MPY/NSKIP/O/O $ CASECC,GEOMk,EQEXIN,GPDT,BGPDT, CSTM,GPST/RG,,USET,ASET/ LUSET/S,N,MPCFl/S,N,MPCF2/S,N,S lNGLE/S,N,OMIT/S,N,REACT/ S,N,NSKIP/S,N,REPEAT/S,N,NOSET/S ,N,NOL/S,N,NOA/C,Y,ASETOUT/ S,Y,AUTOSPC $ ERROR3,NOL $ //NOT/REACDATA/REACT $ ERROR4,REACOATA $ GM/tlPCFl/GO/OMIT/KFS,QG/SINGLE $ 2,15-2 (05/30/86)\nNORMALMODESANALYSIS USINGCYCLICSYMMETRY ●RIGIDFORMAT OMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, LEVEL2.0NASTRANRIGIDFORMAT 15 DHAPCOMPILER -SOURCELISTING 45 46 47 48 49 50 51 52 53 54 55ERROR5,NOG0 $GPCYC GEom4,EQExlN,usET/cYcD/v,Y,cTYPE/s,N,NoGo $ COND COND PARAM CONO GPSP OFP LABEL EQUIV COND MCE1 ●56MCE2 57LABEL 58EQUIV 59COND 60SCE1 61LABEL 62EQUIV 63EQUIV 64COND 65SMP1 66SMP2 67LABEL 68DPD 69CONOLBL4,GENEL $ //EQ/GPSPFLG/AUTOSPC/O $ LBL4,GPSPFLG $ GPL,GPST,USET,SIL/OGPST/S,N,NOGPST $ OGpST,,,,,//S,N,CARDNO $ LBL4$ KGG,KNN/MPCFl/MGG,/lNN/MPCFl $ LBL2,MPCF1 $ USET,RG/GM $ USET,GM,KGG,MGG,,/KNN,MNN, ,$ LBL2$ KNN,KFF/SINGLE/MNN,t4FF/SINGLE $ LBL3,SINGLE $ USET,KNN,MNN,,/KFF,KFS,,MFF ,,$ LBL3$ KFF,KAA/OMIT $ MFF,MAA/OMIT $ LBL5,0MIT $ USET,KFF,,,/GO,KAA,KOO,LOO, ,,,,$ USET,GO,MFF/MAA $ LBL5s DYNAMICS,GPL,SIL,USET/GPLD,S lLD,USETD,,,,,,,EED,EQDYN/ LUSET/LUSETD/NOTFL/NODLT/NOPSDL/NOFRL/ NONLFT/NOTRL/S,N,NOEEO//NOUE $ ERROR2,NOEED $ 2.15-3(05/30/86)\nDISPLACEMENT RIGIDFORMATS RIGIDFORMAT DMAPLISTING APRILlg86RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 15 LEVEL2.0NASTRAN OMAPCOMPILER -SOURCE LISTING 70CYCT2 71COND 72READ 73OFP 74COND 75OFP 76CYCT2 77CONO 78SDR1 79COND 80EQMCK 81OFP 82LABEL 83SDR2 8LOFP 85SCAN 86OFP 87COND 88PLOT 89PRTMSG 90LABEL 91JUMP 92LABELCYCD,KAA,MAA,,,/KKK,MKK,,, /FORE/V,Y,NSEGS=-l/V,Y,KINDEX=- 1/ v,Y,cYcSEQ=-1/l/S,N,NOGO $ ERROR5,NOG0 $ KKK,MKK, ,,EED,,CASECC/LAMK,PHIK,Ml,OE lGS/MODES~(/S,N,NEIGV $ OEIGS,,,,,//S,N,CARDNO $ FINIS,NEIGV $ LAMK,,,,,//s,N,cARDNO $ CYCD,,,,PHIK,LAMK/,,,PHIA,LAMA/BACKj~/V,Y,NSEGS/V,Y, KINDEX/ V,Y,CYCSEQ/l/S,N,NOGO $ ERROR5JNOG0 $ USET,,PHIA,,,GO,GM,,KFS, ,/PHIG,,QG/l/~:REIG $ NOMPCF,GRDEQ $ CASECC, EQEXIN,GPL,BGPDT,SI L,USET,KGG,GM,PH IG,LAMA,QG ,CSTM/ OQMl/V,Y,OPT=O/v,Y,GRDEQ/-l $ OQMl,,,,,//S,N,CARDNO $ NOMPCF $ CASECC,CSTM,MPT,DIT,EQEX IN,SIL, ,,BGPDP,LAMA,QG, pHIG,EST,,/, OQGl,OPHIG,OESl,OEFl,PPHIG/$~RE IG$ OPHIG,OQGl,OEFl,OESl,,//S,N, CARONO $ CASECC,OESl,OEF1/OESFl/RF $ OESF1,,,,,//S,N,CARDNO $ P2,JUMPPLOT $ PLTPAR,GPSETS,ELSETS,CASECC, BGPOT,EQEX IN,SIP, ,PPHIG,GPECT, OES1/ PLOTX2/NSlL/LUSEP/JUMPPLOT/PLTFLG/S ,N,PFILE $ PLoTx2// $ P2$ FINIS$ ERROR1 $ 93PRTPARM //-1/~~CYCMODES* $ 2.15-4(05/30/86)\nNORMALMODESANALYSIS USINGCYCLIC SYMMETRY ●RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 15 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 94LABEL ERROR2 $ 95PRTPARM //-2/CYCMODES $ 96LABEL ERROR3 $ 97pRTpARfi //-3/cYCHODES $ 98LABEL ERROR4 $ 99PRTPARH //-4/cYcMODES $ 100LABEL ERROR5 $ 101PRTPARM //-5/CYCMOOES $ 102LABEL ERROR6 $ 103PRTPARM //-6/CYCMODES $ 104LABEL FINIS$ e105PURGE DUMMY/MINUSl $ 106END $ 2.15-5(05/30/86\nDISPLACEMENT RIGIDFORMATS 2.15.2 Description ofImportant DMAPOperations forNormalModesAnalysis UsingCyclicSymmetry 4. 5. 6. 9. 10. 11. 14. 15. 16. 18. 19. 20. 24. 26. 27. 29. 30. 31. 32. 33. 35. 36. 37. 40. 41. 43. 45. 46.GP1generates coordinate systemtransformation matrices, tablesofgridpointlocations, and tablesrelating theinternal andexternal gridpointnumbers. PLTTRAN modifies special scalargridpointsintheBGPDTandSILtables. GP2generates Element Connection Tablewithinternal indices. GotoDMAPNo.17iftherearenostructure plotrequests. PLTSETtransforms userinputintoaformusedtodrivethestructure plotter. PRTMSGprintserrormessages associated withthestructure plotter. GotoDMAPNo.17ifnoundeformed structure plotsarerequested. PLOTgenerates allrequested undeformed structure plots. PRTMSGprintsplotter dataandengineering dataforeachundeformed plotgenerated. GP3generates StaticLoadsTableandGridPointTemperature Table. TA1generates element tablesforuseinmatrixassembly andstressrecovery. GotoDMAPNo.102andprintErrorMessage No.6ifnostructural elements havebeen defined. EMGgenerates structural element stiffness andmassmatrixtablesanddictionaries forlater assembly bytheEMAmodule. GotoDMAPNo.28ifnostiffness matrixistobeassembled. EMAassembles stiffness matrix[Kg]andGridPointSingularity Table. GotoDMAPNo.92andprintErrorMessage No.1ifnomassmatrixistobeassembled. EMAassembles massmatrix[Mgg]. GotoDMAPNo.34ifnoweightandbalance information isrequested. GPWGgenerates weightandbalance information, OFPformats theweightandbalance information prepared byGPWGandplacesitonthesystem outputfileforprinting. Equivalence [Kg]to[Kgg]iftherearenogeneral elements. GotoDMAPNo.38iftherearenogeneral elements. SMA3addsgeneral elements to[K~g]toobtainstiffness matrix[Kgg]. GP4generates flagsdefining members ofvarious displacement sets(USET), formsmultipoint constraint equations [Rg]{ug}=Oandformsenforced displacement vector{Ys}. GotoDMAPNo.96andprintErrorMessage No.3ifnoindependent degrees offreedom are defined. GotoDMAPNo.98andprintErrorMessage No.4iffree-body supports arepresent. GPCYCprepares segment boundary table(CYCD). GotoDMAPNo.lOOandprintErrorMessage No.5ifCYJ@INdatais 2.15-6 (05/30/86)nconsistent.\nNORMALMODESANALYSIS USINGCYCLICSYMMETRY 47.GotoDMAPNo.52ifgeneral elements arepresent. 49.GotoDMAPNo.52ifnopotential gridpointsingularities exist. 50.GPSPgenerates atableofpotential gridpointsingularities. 51.OFPformats thetableofpotential gridpointsingularities prepared byGPSPandplaces it onthesystem output fileforprinting. 53.Equivalence [Kgg]to[Knn]and[Mgg]to[Mnn]ifnomultipoint constraints exist. 54,GotoDMAPNo.57ifnomultipoint constraints exist. 55.MCE1partitions multipoint constraint equations [Rg]❑ [RmRn] andsolves for multipoint constraint transformation matrix [Gm]=-[Rm]-l[Rn]. 56.MCE2partitions stiffness matrix [1iiIK [Kgg]=:K mnmm andperforms matrixreduction [Knnl=[inn]+[Gl[Kmnl +[nl[Gml +[G][Kmm][Gm] . 58.Equivalence [Knn]to[Kff]and[Mnnlto[Mff]ifnosin91e-Point constraints exist. 59.GotoDMAPNo.61ifnosingle-point constraints exist. 60.SCE1partitions outsingle-point constraints [1‘ff’‘fs [1‘ff’‘fs[Knn]=–+–and [Mnn]=;~M–. KSfIKSSSfSs 62.Equivalence [Kff]to[Kaalifnoomitted coordinates exist” 63.Equivalence [Mff]to[Maalifnoomitted coordinates exist” 64.GotoDMAPNo.67ifnoomitted coordinates exist. 65.SMP1partitions constrained stiffness matrix [1iiIKao [Kffl=:~K— ‘ oa00 solvesfortransformation matrix[Go]=-[Kool-l[Koal andperforms matrixreduction [Kaa]=[aa]+[Ka][Go] . 2.15-7(05/30/86)\nDISPLACEMENT RIGIDFORMATS 66. 68. 69, 70. 71. 72. 73. 74. 75. 76. 77.SMP2partitions constrained massmatrix NMIMao [Mffl=::M— ‘ oa00 andperforms matrix reduction [Maa]=[;aa]+[M;a][Go] +[G~][Moa] +[G;][MOO][GO] . DPDextracts Eigenvalue Extraction DatafromDynamics datablock. GotoDMAPNo.94andprintErrorMessage No.2ifthereisnoEigenvalue Extraction Data. CYCT2transforms matrices fromsymmetric components tosolution setbytheequations [Kkkl =[G@aa][Gl] +[@aa[G21 , and [Mkk] =[Gl[Maal[GJ +[G;l[Maa[G21 , whereGI=Gc(cosine) andG2=Gs(sine)forrotational symmetry, and‘1=G(Synnnetric) andG2=GA(Antisyrrrmetric) fordihedral symmetry, GotoDMAPNo.lOOandprintErrorMessage No.5ifaCYCT2errorwasfound. READextracts realeigenvalues andeigenvectors fromtheequation [Kk~-kMkk]{uk} =O, calculates modalmassmatrix [d=[$][Mk][@k] andnormalizes eigenvectors according tooneofthefollowing userrequests: 1)Unitvalueofaselected component 2)Unitvalueofthelargest component 3)Unitvalueofthegeneralized mass. OFPformats thesummary ofeigenvalue extraction information (9EIGS)prepared byREADand placesitonthesystemoutputfileforprinting. GotoDMAPNo.104andmakenormalexitifnoeigenvalues werefound. 13FPformats theeigenvalues (LAMK)prepared byREADandplacesthemonthesystemoutput fileforprinting. CYCT2findssymmetric components ofeigenvectors fromsolution seteigenvectors. GotoDMAPNo.lOOandprintErrorMessage No.5ifaCYCT2errorwasfound. 2,15-8(05/30/86)\nNORMALMODESANALYSIS USINGCYCLICSYMMETRY 78.SDR1recovers dependent components oftheeigenvectors H%{4.}=[Go]{I#a}, ={@f} , —— ‘+0 H4f ——={On} , ‘+{@m}=[Gm]{f.}., H‘+n——={$} om andrecovers single-point forces ofconstraint {qs}=[Kfs]T$f}. 79,GotoDMAPNo.82ifnomultipoint constraint forcebalance isrequested. 80,EQMCKcalculates theforceandmoment equilibrium checkandprepares themultipoint constraint forcebalance (OQMl)foroutput. 81.!ilFPformats thetableprepared byEQMCKandplacesitonthesystemoutputfilefor printing. 83.SDR2calculates element forces(OEFl)andstresses (OE.Sl)andPrepareseiwwectors (OpHIG) andsingle-point forcesofconstraint (OQGl)foroutputandtranslation components ofthe eigenvectors (PPHIG). ●84.@FPformats thetablesprepared bySDR2andplacesthemonthesystemoutputfilefor printing. 85,SCANexamines theelement stresses andforcescalculated bySDR2andgenerates scanned outputthatmeetsthespecifications setbytheuser. 86.OFPformats thescanned outputtableprepared bySCANandplacesitonthesystemoutput fileforprinting. 87.GotoDMAPNo.90ifnodeformed structure plotsarerequested. 88,PLOTgenerates allrequested deformed structure andcontour plots. 89.PRTMSGprintsplotter data,engineering data,andcontour dataforeachdeformed plot generated. 91.GotoDMAPNo.104andmakenormalexit. 93.PrintErrorMessage No.1andterminate execution. 95.PrintErrorMessage No.2andterminate execution. 97.PrintErrorMessage No.3andterminate execution. 99.PrintErrorMessage No.4andterminate execution. 101.PrintErrorMessage No.5andterminate execution. 103.PrintErrorMessage No.6andterminate execution. 2.15-9(05/30/86)\nDISPLACEMENT RIGIDFORMATS 2.15.3 OutputforNormalModesAnalysis UsingCyclicSymmetry TheEigenvalue Summary TableandtheEigenvalue Analysis Summary, asdescribed underNormal ModesAnalysis (seeSection 2.3.3), areautomatically printed. EachNASTRAN runcalculates modesforonlyonesymmetry index,k,Thefollowing outputmay berequested: 1.Eigenvectors alongwiththeassociated eigenvalue foreachmode. 2.Nonzero components ofthesingle-point forcesofconstraint forselected m~desat selected gridpoints. 3.Forcesandstresses inselected elements forselected modes. 4.Scanned outputofforcesandelements inselected elements. Thefollowing plotter outputmayberequested: 1.Undeformed plotofthestructural modeland 2.Contour plotsofstresses anddisplacementsmodeshapesforselected modes. forselected modes. 2.15.4 CaseControl DeckforNormalModesAnalysis UsingCyclicSymmetry Thefollowing itemsrelatetosubcase definition anddataselection forNormalModes Analysis UsingCyclicSymmetry: 1.METHODmustbeusedtoselectanEIGRcardthatexistsintheBulkDataDeck. 2.AnSPCsetmustbeselected unlessthemodelisafreebodyorallconstraints specified onGRIDcards,ScalarConnection cardsorwithGeneral Elements. 3.Multiple subcases areusedonlytocontrol outputrequests. Asinglesubcaseare is sufficient ifthesameoutputisdesired forallmodes. If’multiple subcases are present, theoutputrequests willbehonored insuccession forincreasing modenumbers. M@DESmaybeusedtorepeatsubcases inordertomakethesameoutputrequest for several consecutive modes. 2.15.5 Parameters forNormalModesAnalysis UsingCyclicSynwnetry Thefollowing parameters areusedinNormalModesAnalysis UsingCyclicSymmetry: 1.ASET@.lT -optional. Apositive integer valueofthisparameter causestheASEToutput datablocktobegenerated bytheGP4module. Anegative integer valueorOsuppresses thegeneration ofthisoutputdatablock. Thedefault valueis0. 2.AUT@SPC -reserved forfuture optional use.Thedefault valueis-1. 2.15-10 (05/30/86)\nNORMALMODESANALYSIS USINGCYCLICSYMMETRY 3. 4. 5. 6. 7. 0 8. 9. 10. 11.CfiIUPMASS -CPBAR,CPROD,CPQUAD1, CPQUAD2, CPTRIA1, CPTRIA2, CPTUBE, CPQDPLT, CPTRPLT, CPTRBSC -optional. Theseparameters causethegeneration ofcoupled massmatrices ratherthanlumpedmassmatrices forallbarelements, rodelements, andplateelements thatinclude bending stiffness. CTYPE-required. TheBCDvalueofthisparameter defines thetypeofcyclicsynunetry asfollows: (1)ROT-rotational symnetry (2)DRL-dihedral symmetry, usingrightandlefthalves (3)DSA-dihedral sytmnetry, usingsymmetric andantisymmetric components =-oPtional .Theinteger valueofthisparameter specifies theprocedure for sequencing theequations inthesolution set.Avalueof+1specifies thatallcosine termsshouldbesequenced beforeallsineterms,andavalueof-1specifies alternating cosineandsineterms. Thedefault valueis-1. GRDEQ-optiondl. Apositive integer valueofthisparameter selects thegridpoint aboutwhichequilibrium willbechecked fortheCaseControl outputrequest, MPCFORCE. Iftheinteger valueiszero,thebasicoriginisused.Thedefault valueis-1. GRDPNT-optional. Apositive integer valueofthisparameter causestheGridPoint WeightGenerator tobeexecuted andtheresulting weightandbalance information tobe printed. Allfluidrelated massesareignored. KINDEX-required. Theinteger valueofthisparameter specifies asinglevalueofthe harmonic index. NSEGS-required. Theinteger valueofthisparameter isthenumberofidentical segments inthestructural model. OPT-optjonal. Apositive integer valueofthisparameter causesbothequilibrium and— multipoint constraint forcestobecalculated fortheCaseControl outputrequest, MPCFflRCE. Anegative integer valueofthisparameter causesonlytheequilibrium force balance tobecalculated fortheoutputrequest. Thedefault valueisOwhichcauses onlythemultipoint constraint forcestobecalculated fortheoutputrequest. SURFACE -optional. Thecomputations oftheexternal surface areasforthe two-dimensional andthree-dimensional elements areactivated bythisparameter whenthey aregenerated intheEMGmodule. Theresults aremultiplied bytherealvalueofthis parameter. Seethedescription underthePARAMbulkdatacardfordetails. 2.15-11 (05/30/86)\n12. 13.DISPLACEMENT RIGIDFORMATS V@LUME-optional. Thevolumecomputations forthetwo-dimensional and three-dimensional elements areactivated bythisparameter whentheyaregenerated i theEMGmodule. Theresults aremultiplied bytherealvalueofthisparameter. Se thedescription underthePARAMbulkdatacardfordetails. WTMASS -optional. Thetermsofthestructural massmatrixaremultiplied bytherea” valueofthisparameter whentheyaregenerated intheEMAmodule. Notrecommended ff useinhydroelastic problems, 2.15.6 Optional Diagnostic OutputforFEER Special detailed information obtained byrequesting DIAG16intheExecutive Control Deck thesameasthatdescribed underNormalModesAnalysis (seeSection 2.3.6). 2.15.7 Cyclic 2.15.8TheAPPENDFeature TheAPPENDfeature canbeused,forrealeigenvalue extraction inNormalModesAnalysis Us Symmetry. SeeSection 2.3.7fordetails, RigidFormatErrorMessages fromNormalModesAnalysis UsingCyclicSymmetry Thefollowing fatalerrorsaredetected bytheDMAPstatements intheNormalModesAnalys UsingCyclicSynnnetry rigidformat. Thetextforeacherrormessage isgivenbelowincapital letters andisfollowed byadditional explanatory material, including suggestions forremedial action. N@RMAL MODESWITHCYCLICSYMMETRY ERR13RMESSAGE NO.1- ANALYSIS. Themassmatrixisnullbecause eithernoelements wereMASSMATRIXREQUIRED F@RREALEIGENVALUE defined withConnection cards, nonstructural masswasnotdefined onaProperty card,orthedensity wasnotdefined-on aMateri card. NORMALMODESWITHCYCLICSYMMETRY ERRORMESSAGE No.2-EIGENVALUE EXTRACTION DATAREQUIRED FOR REALEIGENVALUE ANALYSIS. Eigenvalue extraction datamustbesupplied onanEIGRcardintheBulkDataDeck CaseControl DeckmustselectanEIGRset. NORMALMODESWITHCYCLICSYMMETRY ERR13RMESSAGE N@.3-N@INDEPENDENT DEGREES OF DEFINED.andMETHODint FREED@M HAVEBE Eithernodegrees offreedom havebeendefined onGRID,SPOINT, orScalarConnection cards,oral defined degrees offreedom havebeenconstrained bySPC,MPC,SUP!3RT, OMITorGRDSETcards,or grounded onScalarConnection cards. 2.15-12 (05/30/86)\nNORMALMODESANALYSIS USINGCYCLICSYMMETRY NORMALMODESWITHCYCLICSYMMETRY ERRORMESSAGE NO.4-FREEBODYSUPPORTS NOTALLOWED. ●Freebodiesarenotallowed inNormalModesAnalysis UsingCyclicSymmetry. TheSUPORTcardsmust beremoved fromtheBulkDataDeckandotherconstraints applied ifrequired forstability. N@RMALMODESWITHCYCLICSYMMETRY ERR@RMESSAGE NO.5-CYCLICTRANSF!3RMAT10N DATAERR(JR. SeeSection 1.12forpropermodeling techniques andcorresponding PARAMcardrequirements. NORMALMODESWITHCYCLICSYMMETRY ERRORMESSAGE NO.6-NflSTRUCTURAL ELEMENTS HAVEBEENDEFINED. Nostructural elements havebeendefined withConnection cards. 2.15-13 (05/30/86)\nDISPLACEMENT RIGIDFORMATS 2.15-14 (05/30/86)\nDISPLACEMENT RIGIDFORMATS 2.16STATICAEROTHERMOELASTIC DESIGN/ANALYSIS OFAXIAL-FLOW COMPRESSORS 2.16.1 DMAPSequence forStaticAerothermoelastic Design/Analysis ofAxial-Flow Compressors RIGIDFORMATDMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT16 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCELISTING OPTIONS INEFFECT GO ERR=2 LIST NODECK NOREF NOOSCAR\n1BEGIN 2PRECHK 3PARAM 4GP1 5CONO 6PLTTRAN 7GP2 8PARAML 9PARAMR 10PURGE 11COND 12PLTSET 13PRTMSG 14PARAH 15PARAM 16COND 17PLOT 18PRTMSG 19LABEL 20GP3 21PARAMOISP16-STATIC AEROTHERMOELASTIC DESIGN/ANALYSIS-APR. 1986$ ALL$ //MPY/CARONO/O/O $ GEOH1,GEOM2,/GPL,EQEXIN,GPDT, CSTM,BGPDT,SIL/S,N,LusET/s ,N, NOGPDT/MINUSl=-l $ ERROR3,NOGPDT $ BGPDT,SIL/BGPDP,SIP/LUSET/S,N, LUSEP$ GEoM2,EQExlN/EcT $ PCDB//*PRES~~////JUMPPLOT $ //COMPLEX//V,Y,SlGN/O.O/CSlGN $ PLTSETX,PLTPAR,GPSETS,ELSETS/JUMPPLOT $ PI,JUMPPLOT $ PCUB,EQEXIN,ECT/PLTSETX,PLTPAR,GPSETS ,ELSETs/s,N,NslL/sSN, JUMPPLOT $ PLTSETX// $ //MPY/PLTFLG/l/l $ //fipy/PFILE/O/O $ P1,JUMPPLOT $ PLTPAR,GPSETS,ELSETS,CASECc,BGpDT, EQExlN,SIL,S~I/pLoTxl/ NSIL/LUSET/S,N,JUMPPLOT/S,N,PLTFLG/S,N,pF ILE$ PLOTX1// $ P1$ GEOM3,EQEXlN,GEOM2/SLT,GPTT/S ,N,NOGRAV $ //AND/NOMGG/NOGRAV/V,Y,GRDPNT–l $ 2.16-1 (05/30/86)I\nDISPLACEMENT RIGIDFORMATS RIGIDFORMAT OMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIOFORMAT 16 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43TA1 COND PURGE PARAII EMG COND EMA LABEL COND EMA LABEL COND CONO GPWG OFP LABEL EQUIV COND SltA3 LABEL PARAM GP4 CONDECT,EPT,BGPOT,SIL,GPTT,CSTM/EST,GE l,GPECT,,/LUSET/S,N, NOSIMP/1/S,N,NOGENL/S,N,GENEL $ ERROR1,NOSIMP $ OGPST/GENEL $ //Aoo/NoKGGx/l/o $ E5T,C5TM,MPT,01T,GEOM2,/KELM,KO lCT,MELM,MDICT,,,/S,N,NOKGGX/ S,N,NOMGG////C,Y,COUPMAC,Y,,Y, CPBAR/C,Y,CPROO/C,Y, cPQuAol/c,Y,cPQuAo2/c,Y,cPTRl A1/c,Y,cPTRlA2/c,Y,cPTuBE/c,Y, CPQOPLT/C,Y,CPTRPLT/C,Y,CPTRBSC $ JMPKGG,NOKGGX $ GPECT,KOICT,KELM/KGGX,GPST $ JMPKGG $ JMPMGG,NOMGG $ GPECT,MOICT,flELM/MGG,/-l/C,Y,WTMASS=l .0$ JMPIIGG $ LBL1,GRDPNT $ ERROR4,NOMGG $ BGPDP,CSTM,EQEXlN,MGG/OGPWG/V,Y,GROPNT/C,Y,WTMASS $ OGPWG,,,,,//S,N,CARDNO LBL1S KGGX,KGG/NOGENL $ LBL1l,NOGENL $ GEl,KGGX/KGG/LUSET/NOGENL/NOS IMP$ LBL1l$ //mPY/NsKIp/0/o $ CASECC,GEOM4,EQEXIN,GPDT,BGPOT, CSTM,/RG,YS,USET,ASET/ LUSET/S,N,MPCFl/S,N,MPCF2/S,N,S lNGLE/S,N,OMIT/S,N,REACT/S,N, NSKIP/S,N,REPEAT/S,N,NOSET/S ,N,NOL/S,N,NOA/C,Y,ASETOUT/S,Y , AUTOSPC $ ERROR5,NOL $ 2.16-2(05/30/86)"},"title":"User's Manual P15"},"/docs/users/users_manual_016/":{"data":{"":"STATICAEROTHERMOELASTIC DESIGN/ANALYSIS OFAXIAL-FLOW COMPRESSORS RIGIDFORMATDMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT16 LEVEL2.0NASTRAN OMAPCOMPILER -SOURCELISTING 45PURGE 46CONO 47JUMP 48LABEL 49COND 50PARAH 51COND 52GpSP 53OFP 5kLABEL 55EQUIV 56COND 57MCE1 58MCE2 59LABEL 60EQUIV 6?COND 62SCEI 63LABEL 64EQUIV 65COND 66SMP1 67LABEL 68RBMG2 69SSG1GM/MPCFl/GO,KOO, LOO,PO,UOOV,RUOV/OMIT/PS,KFS, KSS,QG/SINGLE/ PBS,KBFS,KBSS,KDFS,KDSS/SINGLE $ LBL4D,REACT $ ERROR2 $ LBL4D$ LBL4,GENEL $ //EQ/GPSPFLG/AUTOSPC/O $ LBL4,GPSPFLG $ GPL,GPST,USET,SIL/OGPST/S,N,NOGPST $ OGPST,,,,,//S,N,CARDNO $ LBL4$ l(GG,KNN/MPCFl $ LBL2,MPCF2 $ USET,RG/GM $ USET,GM,KGG ,,,/KNN,,, $ LBL2$ KNN,KFF/SINGLE $ LBL3,SINGLE $ USET,KNN ,,,/KFF,KFS,KSS,,, $ LBL3$ KFF,KAA/OMiT $ LBL5,0MIT $ USET,KFF ,,,/GO,KAA,KOO,LOO,,,,, $ LBL5$ KAA/LLL $ SLT,BGPDT,CSTM,SIL,EST,MPT,GPTT, EDT,HGG,CASECC,DIT,/PGNA, ,,,/ LUSET/1 $ 2.16-3(05/30/86)\nDISPLACEMENT RIGIDFORMATS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 16 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 70PARAM 71CONO 72ALG 73COND ~kPARAM 75CDND 76GP3 77SSG1 78AOD 79LABEL 80EQUIV 81EQUIV 82COND 83SSG2 84LABEL 85SSG3 86COND 87MATGPR 88MATGPR 8gLABEL 90SDR1 91SDR2 92OFP 93CONO//AND/ALoAo/v,y,ApREss/v,y,ATENp $ NOAL,ALOAD $ CASECC, ,EQEXIN, ,ALGDB,,/CASECCAl,GEOM3Al/S, Y,APRESS/S,Y, ATEMP/-l/-V,Y,lPRTClCS,N,l,l FAIL$ FINIS,IFAIL$ //AND/ALoAD/v,Y,ApREss/v,y,ATEMp $ NDAL,ALOAO $ GEOM3A1,EQEX1N,GEOM2/SLTA1,GPTTA1/NOGRAV $ SLTA1,BGPDT,CSTM,SIL,EST,MPT,GPTTA1 ,EDT,MGG,CASECCAl,DIT,/ PGA1,,,,/LUSET/l $ PGNA,PGA1/PG $ NOAL$ PGNA,PG/ALOAD $ PG,PL/NOSET $ LBL1O,NOSET $ USET,GM,YS,KFS,GO,,PG/,PO,PS,PL $ LBLIO$ LLL,KAA,PL,LOO,KOO,PO/ULV,UOOV,RULV,RUOV/OMlT/V,Y, lRES=-1/ l/S,N,EPSl $ LBL9,1RES $ GPL,USET,SIL,RULV//L $ GPL,USET,SIL,RUOV//O $ LBL9$ USET,,ULV,UOOV,YS,GO,GM,PS, KFS,KSS,/UGV,PGl,QG/l/DSO $ CASECC,CSTM,MPT OPGI,OQG1,OUGV1 OUGV1,OPG1,OQG1 P2,JUMPPLOT $DIT,EQEXIN,SI L,GPTT,EDT,BGPDP, ,QG,UGV,EST,,PG/ OESl,OEFl,PUGV1/OSO $ OEFl,OESl,//S,N,CARDNO $ 2.16-4(05/30/86)\nSTATICAEROTHERMOELASTIC DESIGN/ANALYSIS OFAXIAL-FLOW COMPRESSORS RIGID APRILFORMAT DMAPLISTING 1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 16 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 94PLOT 95PRTMSG g6LABEL 97TA1 98OSMG1 99COND 100EQUIV 101LABEL 102PARAM 103PARAM 104PARAt4R 105PARAML 106LABEL 107EQUIV 108PARAM 109EQUIV 110COND 111MCE2 112LABEL 113EQUIV 114COND 115SCE1 116LABEL 117EQUIV 118CONDPLTPAR,GPSETS,ELSETS,CASECC,BGPOT, EQEXIN,S IP,PUGVI, ,GPECT,OES 1/ PLOTX2/NSlL/LUSET/JUMPPLOT/PLTFLG/S,N,PF ILE$ PLoTx2// $ P2$ ECT,EPT,BGPDT,SIL,GPTT,CSTM/Xl ,X2,X3,ECPT,GPCT/LUSET/ NOSIMP/O/NOGENL/GENEL $ CASECC,GPTT,SI L,EOT,UGV,CSTM,HPT, ECPT,GPCT,DIT/KDGG/ DSCOSET$ NOALO,ALOAD $ PGNA,PG $ NOALO$ //ADD/sHIFT/-l/o $ //ADO/COUNT/ALWAYS=-l/NEVER=l $ //fADD*/DSEPSl/O.O/O.O $ YS//*NULLt////NOYS $ OUTLPTDP $ PG,PG1/NOYS $ //~~KLOCK*/TO $ KDGG,KDNN/MPcF2 $ LBL20,MPCF2 $ USET,GM,KDGG,,,/KDNN,,, $ LBL2D$ KDNN,KDFF/SINGLE $ LBL3D,SINGLE $ USET,KDNN ,,,/KOFF,KDFS,KDSS,,, $ LBL3D$ KDFF,KDAA/OMIT $ LBL5D,0MIT $ 2.16-5(05/30/86)\nDISPLACEMENT RIGIDFORMATS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 16 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 119SMP2 120LABEL 121AOO 122AOO 123Aoo 12kCONO 125ltPY’AD 126MPYAD 127UMERGE 128EQUIV 129COND 130UMERGE 131LABEL 132ADD 133EQUIV 134LABEL 135AOD 136COPY 137RBMG2 138PRTPARM 139PRTPARM lkOLABEL 141PARAM 142COND 143ALGUSET,GO,KDFF/KOAA $ LBL5D‘$ KAA,KDAA/KBLL/(1.0,0.0)/CSIGN $ KFS,KOFS/KBFS/(l.O,O.O)/CSIGN $ KSS,KDSS/KBSS/(1.0,0.0)/CSIGN $ PGOK,NOYS $ KBSS,YS,/PSS/O $ KBFS,YS,/PFS/O $ lJSET,PF~,PSS/PN/N/F/S $ PN,PGx/mPcF2 $ LBL60,MPCF2 $ USET,PN,/PGX/G/N/M LBL60$ PGX,PG/PGG/(-l.O,O.O) $ PGG,PG1/ALWAYS $ PGOK$ PGl,/PGO/ $ UGV/AUGV $ KBLL/LBLL/S,N,POWER/S,N,DET $ //0/DET $ //0/PowER $ INLPTOP $ //KLIxK/TI $ NOAL1,ALOAD $ CASECC,EDT, EQEXIN,AUGV,ALGDB, CSTM,BGPOT/CASECCA,GEOM3A/S,Y, AP!iESS/S,Y,ATEMP/-l/-V,Y,Y, lPRTCL/S,N,lFAIL/V,Y,SIGN/V, Y,ZORIGN/V,Y,FXCOOR/V,Y,FYCOOR/V,Y, FZCOOR $ 2.16-6(05/30/86)\nSTATICAEROTHERMOELASTIC DESIGN/ANALYSIS OFAXIAL-FLOW COMPRESSORS RIGIDFORMATDMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT16 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCELISTING lkkCOND 145PARAM 146PARAM 147COND 148GP3 149SSG1 150ADD 151LABEL 152EQUIV 153SSG2 154SSG3 155CDND 156MATGPR 157LABEL 158SDRI 159COND 160EQUIV 161LABEL 162ADD 163DSMG1 164MPYAO 165ADD 166OSCHK 167CONDDONE,IFAIL$ //MPY/v,y,IPRTcL/0 $ //AND#t/ALOAD/V,Y,APRESS/V,Y,ATEMP $ NOAL1,ALOAD $ GEoM3A,EQEx1N,GEoM2/sLTA,GPTTA/NoAsL/NoGRAv/NoATL $ SLTA,BGPDT,CSTM,SI L,EST,MPT,GPTTA, EDT,MGG,CASECCA,DIT,/PGA,,, ,/ LUSET/1 $ PGl,PGA/PG2 $ NOALl$ PGl,PG2/ALoAD $ uSET,GM,YS,KDFS,G0,,PG2/,PB0,PBS, PBL$ LBLL,KBLL,PBL, ,,/UBLV,,RUBLV,/-l/V,Y, lRES/NDSKIP/S,N, EPSI$ LBL90,1RES $ GPL,USET,SIL,RUBLV//L $ LBL9D$ USET,,UBLV,,YS,GO,GM,PBS,KBFS ,KBSS,/UBGV,,QBG/l/fiDSl $ NOAL2,ALOA0 $ UBGV,AUGV $ NOAL2$ UBGV,UGV/DUGV/(-l.0,0.0) $ CASECC,GPTT,S IL,EDT,DUGV,CSTM,MPT, ECPT,GPCT,DIT/DKDGG/V,N, DSCOSET $ OKDGG,UBGV,PGO/PGll/O $ PGll,PGA/PG12 $ PG2,PG12,uBGv//c,Y,EPslo=l .E-5/s,N,DsEPsl/c,Y,NT=lo/ TO/Tl/S,N,DONE/S,N,SHIFT/S,N, COUNT/C,Y,BET).3=k $ DONE,DONE $ 2.16-7(05/30/86)\nDISPLACEMENT RIGIDFORMATS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 16 LEVEL2.0NASTRAN OMAPCOMPILER -SOURCE LISTING 168CONO 169EQUIV 170EQUIV 171EQUIV 172REPT 173TABPT 174LABEL 175ADO 176EQUIV 177EQUIV 178REPT 179TABPT 180LABEL 181PARAM 182COND 183AOD 184OUTPUT1 185OUTPUT1,SHIFT,SHIFT $ PG,PG1/NEVER $ PGll,PG1/ALWAYS $ PGl,PG1l/NEVER $ INLPTOP,1OOO $ PGll,PGl,PG,,// $ SHIFT$ OKOGG,KOGG/KDGGl/(-l.0,0.0) $ UBGV,UGV/ALWAYS/KOGGl,KOGG/ALWAYS $ KOGG,KOGGl/NEVER/UGV,UBGV/NEVER $ OUTLPTOP,1OOO $ KOGGl,KOGG,UGV,,// $ OONE$ //NOP/V,Y,KTOUT=-l $ JMPKTOUT,KTOIJT $ KGG,KDGG/KTOTAL/(1.0,0.0)/CS IGN$ KTOTAL,,,,//C,Y,LOCATlON=-l/C,Y,lNPTUN IT=O$ ,,,,//-3/0 $ 186LABEL JMPKTOUT $ 187ALG CASECC,EOT,EQEXIN,UBGV,ALGOB, CSTM,BGPOT/CASECCB,GE0M3B/ -1/-l/V,Y,STREAHL/V,Y,PGEOM/V,Y, lPRTCF/S,N,lFAIL/V,Y,SIGN/ V,Y,ZORIGN/V,Y,FXCOOR/V,Y,FYCOOR/V,Y, FZCOOR$ 188SDR2 CASECC,CSTM,MPT,OIT,EQEXIN, SIL,GPTT,EOT,BGPOP, ,QBG,UBGV, EST,,/, OQBGl,OUBGVl,OESBl,OEFBl,PUBGV1/OSl $ 189OFP OUBGVl,OQBGl,OEFBl,OESBl,,//S, N,CARONO $ 190SOR1 uSET,PG2,UBLV, ,YS,G0,GM, PBS,KBFS,KBSS,/AUBGV,APGG,AQBG/ l/clsl $ 191GPFOR CASECC,AUBGV, KELM,KDICT,ECT, EQEXIN,GPECT,APGG,AQBG/ONRGY 1, OGPFB1/STATICS $ 2.16-8(05/30/86)\nSTATICAEROTHERMOELASTIC ●RIGIDFORMAT OMAPLISTING APRIL1986RELEASE DISPLACEMENT APPROACH, RIGIDFORMAT 16 LEVEL2.0NASTRAN DMAPCOMPILER -DESiGN/ANALYSIS OFAXIAL-FLOW COMPRESSORS SOURCELISTING I92 193 194 195 196 197 198 199 200 201 202 ●203 204 205 206 207 208 209 210OFP COND PLOT PRTt4SG LABEL JUMP LABEL PRTPARM LABEL PRTPARM LABEL PRTPARII LABEL PRTPARM LABEL PRTPARM LABEL PURGE ENDONRGY1,OGPFB1 ,,,,//s,N,CARDNO $ P3,JUMPPLOT $ PLTP’AR,GPSETS, ELSETS, CASECC,BGPDT, EQEXIN,SIP,PUBGV1 ,,GPECT, 0ESBl/PLOTX3/NSlL/LUSET/JUMPPLOT/PLTFLG/S,N,PF ILE$ PLDTx3// $ P3$ FINIS$ ERRORI $ //-1/ASTA $ ERROR2 $ //-2/fiAsTA* $ ERROR3 $ //-3/AsTA $ ERROR4 $ //-4/ASTA $ ERROR5 $ //-5/kAsTA* $ FINIS$ DUMMY/MINUSl $ $ 2.16-9(05/30/86)\n-…..–..-.,——— …-” 2.16.2 4. 5. 6. 7. 9. 11. 12. 13. 16. 17. 18. 20. 22. 23. 26, 27. 28. 30. 31. 33. 34. 35, 36. 38. 39. 40, 43. 44.Ul\u003ePLALtMtNl KltilUtUKMAl\u003e Description ofImportant DMAPOperations forStaticAerothermoelastic Design/Analysis ofAxial-Flow Compressors GP1generates coordinate systemtransformation matrices, tablesofgridpointlocations, and tablesrelating theinternal andexternal gridpointnumbers. ●GotoDMAPNo.202andprintErrorMessage No.3ifthereisnoGridPointDefinition Table. PLTTRAN modifies special scalargridpointsintheBGPDTandSILtables. GP2generates Element Connection Tablewithinternal indices. PARAMRsetsCSIGN=(SIGN, 0.0),whereSIGN=+1.0foranalysis typerunandSIGN=-1.0for designtyperun. GotoDMAPNo,19iftherearenostructure plotrequests. PLTSETtransforms userinputintoaformusedtodrivethestructure plotter. PRTMSGprintserrormessages associated withthestructure plotter. GotoDMAPNo.19ifnoundeformed structure plotsarerequested. PLOTgenerates allrequested undeformed structure plots. PRTMSGprintsplotter dataandengineering dataforeachundeformed plotgenerated. GP3generates StaticLoadsTableandGridPointTemperature Table. TA1generates element tablesforuseinmatrixassembly andstressrecovery. GotoDMAPNo.198andprintErrorMessage No.1iftherearenostructural elements. EMGgenerates structural element stiffness andmassmatrixtablesanddictionaries forlater assembly bytheEMAmodule. GotoDMAPNo.29ifnostiffness matrixistobeassembled. ●EMAassembles stiffness matrix [Kg]andGridPointSingularity Table. GotoDMAPNo.32ifnomassmatrix istobeassembled. EMAassembles massmatrix [Mgg]. GotoDMAPNo.37ifnoweight andbalance information isrequested. GotoDMAPNo.204andprintErrorMessage No.4ifnomassmatrix exists. GPWGgenerates weightandbalance information. !3FPformats theweightandbalance information prepared byGPWGandplacesitonthesystem outputfileforprinting. Equivalence [Kg]to[Kgg]ifnogeneral elemsnts exist. GotoDMAPNo.41ifnogeneral elements exist. SMA3addsgeneral elements to[K~g]toobtainstiffness matrix[Kgg]. GP4generates flagsdefining members ofvarious displacement sets(IJSET), formsmultipoiflt constraint equations [Rg]{ug}=Oandformsenforced displacement vector{Ys}. GotoDMAPNo.206andprintErrorMessage No.5ifnoindependent degrees offreedom are defined. 2.16-10 (05/30/86)\nSTATICAEROTHERMOELASTIC 46.GotoOMAPNo.48ifnofree-bodyDESIGN/ANALYSIS OFAXIAL-FLOW COMPRESSORS supports aresupplied. 47. 49. 51. 52. 53. 55. 56. 57.GotoDMAPNo,200andprintErrorMessage No.2. GotoDMAPNo.54ifgeneral elements arepresent. GotoOMAPNo.54ifnopotential gridpointsingularities exist. GPSPgenerates atableofpotential gridpointsingularities. OFPformats thetableofpotential gridpointsingularities prepared byGPSPandplaces it onthesystem output fileforprinting. Equivalence [Kgg]to[Knn-lifnomultipoint constraints exist. GotoDMAPNo.59ifnomultipoint constraints exist. MCE1partitions multipoint constraint equations [Rg]=[RmRn] andsolvesfor multipoint constraint transformation matrix[Gm]=-[Rml-l[Rnl. 58.MCE2partitions stiffness matrix [Kgg]= andperforms matrixreductioniIK :+N mnI‘mm1[Knn]=[Knn]+[G][Kmnl +[{nl[Gml +[G~l[\\ml[Gml. 60.Equivalence [Knnlto[Kfflifnosingle-point constraints exist. 61.GotoDMAPNo.63ifnosingle-point constraints exist. 62.SCEIpartitions outsingle-point constraints r 1 II‘ff‘Kfs[Knn]= +— . SfI‘ss L -! 64.Equivalence [Kff]to[Kaa]ifnoomitted coordinates exist. 65.GotoOMAPNo.67ifnoomitted coordinates exist. 66.SMP1partitions constrained stiffness matrix [Kff]= solvesfortransformation matrixIaaKaoi 1‘oalK1 ‘ 01=-[Koo]-l[Koa] “andperforms matrixreduction [Kaa]=[aal+[Kal[Gol . 68.RMBG2decomposes constrained stiffness matrix[Kaa]=[LLL][ULLI. 2.16-11 (05/30/86)\nDISPLACEMENT RIGIDFORMATS NA 69.SSG1generates non-aerodynamic staticloadvectors {Pg}. 71.GotoDMAPNo,79ifnoaerodynamic loadsexist. 72,ALGgenerates aerodynamic loaddata. 77.SSG1generates aerodynamic loadvector{P~}, 78.Add{P;A}and{P9A}toformtotalloadvector{Pgl. 80.Equivalence {Pg}to{PgNA }ifnoaerodynamic loadsexist. 81.Equivalence {Pg}to{Pk}ifnoconstraints areapplied. 82.GotoDMAPNo.84ifnoconstraints areapplied. 83,SSG2applies constraints tostaticloadvectors !1;n{Pg}=——, Pm{Pn}={Pnl+[G:l{Pm} , 11if {Pn}= —– , {Pf}={f}-[Kfl{Ys} , Ps IIPa {Pf}=—– ,and {PL}={Pa}+[G;]{PO}. P. 85.SSG3solvesfordisplacements ofindependent coordinates {uk}=[Kaa]-l{Pk} , solves fordisplacements ofomitted coordinates {u:}=[KOO]-l{PO} , calculates residual vector (RULV)andresidual vector errorratioforindependent coordinates {APL}={Pk}-[Kaa]{ut} , {uj}{6PL} ‘k= {Pj}{uL} andcalculates residual vector(RUOV)andresidual vectorerrorratioforomitted coordinates {fiPo}={Po}-[Koo]{u~} \u003e 2.16-12 (05/30/86)\nSTATICAEROTHERMOELASTIC DESIGN/ANALYSIS OFAXIAL-FLOW COMPRESSORS 86. 87. 88. 90. 91. 92. 93. 94. 95. 97. 98. 99. 1000 106. 107. e{uj{6Po} ‘o=. pT}{uol 00 GotoDMAPNo.89ifresidual vectors arenottobeprinted. MATGPRprintstheresidual vectorforindependent coordinates (RULV). MATGPRprintstheresidual vectorforomitted coordinates (RUOV). SDR1recovers dependent displacements Ut}+{u:}, 7{Uo}=[Go] IIUa ——={Uf} ‘o {urn}=[Gm]{unl , II‘n={Ugl—— ‘m andrecovers single-point forcesofconstraint {q5}=-{p}+[K\u0026]{uf} +[K51{y}. SDR2calculates element forces(9EF1)andstresses (OESl)andprepares loadVeCtOrS (pGl) displacement vectors (!JUGV1) andsingle-point forcesofconstraint (OQGl)foroutputand translation components ofthedisplacement vector(PUGV1) forthestaticsolution. @FPformats thetablesprepared bySDR2andplacesthemonthesystemoutputfilefor printing. GotoDMAPNo.96ifnodeformed staticsolution structure plotsarerequested. PLOTgenerates allrequested PRTMSGprintsplotter data, solution plotgenerated. TA1generates element tables DSMG1generates differentialstaticsolution deformed structure andcontour plots. engineering data,andcontour dataforeachdeformed static foruseindifferential stiffness matrixassembly. stiffness matrix[Kg]. GotoDMAPNo.101ifnoaerodynamic loadsexist. Equivalence {PflNA}to{Poltoremoveaerodynamic loadsfromtotalloadvectorbefore entering thedfferentia~ stiffness loop.Newaerodynamic loadswillbegenerated inthe loop. Beginning ofouter(stiffness adjustment) loopfordifferential stiffness iteration. Equivalence {Pg}to{Pgllifnoenforced displacements arespecified. 2.16-13 (05/30/86)\nDISPLACEMENT RIGIDFORMATS 109,Equivalence [Kg]to[Kn]ifnomultipoint constraints exist. 110.GotoDMAPNo.112ifnomultipoint constraints 111.MCE2partitions differential stiffness matrixexist. L J andperforms matrixreduction [Kn]=[jn]+[G;l[K:nl +[Kn][Gm] +[G][Km][Gm]. 113.Equivalence [Knlto[Kflifnosingle-point constraints exist. 114.GotoDMAPNo.116ifnosingle-point constraints exist. 115.SCE1partitions outsingle-point constraints [dK:ft+s[Kn]=—+— . KdKd SfSs L A 117.Equivalence [Kf]to[Kalifnoomitted coordinates exist- 118.GotoDMAPNo.120ifnoomitted coordinates exist, 119.SMP2partitions constrained differential stiffness matrix [K$f]= andperforms matrixreductionidiKd a-+- KdKd oa00. [Ka]= 121.ADD[Kaa]and[Ka]to 122,ADD[Kfsland[Kslto 123.ADD[Kss]and[Ks]to[i:al+[K:a]TIGo] +[GolT[fal +[GOIT[(OIIGOI. form[KL]. form[Ks]. form[Ks]. 124,GotoDMAPNo.134ifnoenforced displacements arespecified, 125.MPYADmultiplies [Ks]and{Ys}toform{Pss}. 126.MYPADmultiplies [Ksland{’fsltoform{pfs}. 127.UMERGEcombines {Pfs}and{Ps}toform{Pn}. 2.16-14 (05/30/86)\nSTATICAEROTHERMOELASTIC DESIGN/ANALYSIS OFAXIAL-FLOW COMPRESSORS 128. 129, 130. 132. 133. 135. 136. 137. 138. 139. 140. 142. 143. 144. 149. 150. 153.Equivalence {Pn}to{P;}ifnomultipoint constraints exist. GotoDMAPNo.131ifnomultipoint constraints exist. UMERGEexpands {Pn}toform{P~}. ADD-{P;}and{Pg}toform{Pgg}. Equivalence {Pgg}to{Pgl}. ADD{Pgl}andnothing tocreate{Pgo}. Copy{uglto{ultoinitialize aerodynamic displacements. RBMG2decomposes thecombined differential stiffness matrixandelastic stiffness matrix PRTPARM printsthescaledvalueofthedeterminant ofthecombined differential stiffness matrixandelastic stiffness matrix. PRTPARM printsthescalefactor (poweroften)ofthedeterminant ofthecombined differential stiffness matrixandelastic stiffness matrix. Beginning ofinner(loadcorrection) loopfordifferential stiffness iteration. GotoDMAPNo.151ifnoaerodynamic loadsexist. ALGgenerates aerodynamic loaddata. GotoDMAPNo.180ifALGfailstoconverge whilegenerating aerodynamic loaddata. SSG1generates aerodynamic loadvector{P:}. ADD{Pgl}to{P;}toformtotalloadvector{Pgz}. SSG2applies constraints tostaticloadvectors {P:}={;}+[G:]{p;}, {Pf}={;!}-[Ks]{Ys} , and{Pl={P~}+[G~]{P~} . 2.16-15 (05/30/86)\nDISPLACEMENT RIGIDFORMATS 154.SSG3solvesfordisplacements ofindependent coordinates forcurrent loadvector {u!}=[KL]-l{P} , andcalculates residual vector (RBULV) andresidual vectorerror differential stiffness loadvector 155,GotoDMAPNo.157iftheresidual vectorfor tobeprinted. 156.MATGPRprintstheresidual vectorforcurrent 158.SDR1recovers dependent displacements forthe {ub}=[Go]{U!}+{Ub] ,0differential stiffness ratioforcurrent current differential stiffness solution isnot differential stiffness solution. current differential stiffness solution Hb ‘i—.={Uf} , b ‘o Hu: ={u:},—.{u}=[Gml{u:}, b s andrecovers single-point forcesofconstraint forthecurrent differential stiffness solution 159.GotoDMAPNo.161ifnoaerodynamic loadsexist. 160.Equivalence {u:}and{u:}. 162.ADD-{U}and{Ug}toform{U;}. 163.DSMG1generates differential stiffness matrix[6K~g]. 2.16-16 (05/30/86)\n164. 165, 166, 167. 168. 169. 170. 171. 172, 173. 175. 176. ●177. 178. 179. 182. 183. 184. 185, 187. 188. 189. 190. 191.STATICAEROTHERMOELASTIC DESIGN/ANALYSIS OF MYPADformstheloadvectorforinnerloopiteration {Pgll} =[\u0026K;g]{U;}+{Pgo}. ADD{PA gIl}and‘Pg}‘0‘orm‘pg12}”AXIAL-FLOW COMPRESSORS DSCHKperforms differential stiffness convergence checks. GotoDMAPNo.180ifdifferential stiffness iteration iscomplete. GotoDMAPNo.174ifadditional differential stiffness matrixchanges arenecessary for further iteration. Breaktheprevious Equivalence {Pgll} Breaktheprevious GotoDMAPtie.140 TABPTtable ADD-[6Kg] Equivalenceprintsequivalence of{Pg}and{Pgl}. to{Pgl}. ‘quivalence Of‘Pgl}‘0‘pgIl}” foranadditional innerloopdifferential stiffness iteration. vectors {P},gIl{Pgl},and{F’g}. and[Kg]toform[Kgl]. {U;}to{Ug}and[Kgl]to[Kg]. Breaktheprevious equivalence of[Kg]to[Kgl]and{Ug}to{U;}. GotoDMAPNo.106foranadditional outerloopdifferential stiffness iteration. TABPTtableprints[Kgl], [Kg],and{Ugl. GotoDMAPNo.186ifthetotalstiffness matrix[KTOTAL] isnottobesavedonanexternal file. ADD[Kgg]and[Kg]toform[KT@TAL]. OUTPUTl outputs [KTOTAL] toanexternal file. OUTPUTl printsthenamesofthedatablocksontheexternal file. ALGgenerates finalaerodynamic results andgenerates GRIOandSTREAML2 bulkdatacardson thesystempunchfile,ifrequested, SDR2calculates element forces (OEFBl) andstresses (@ESBl) andprepares displacement vectors (OUBGVl) andsingle-point forcesofconstraint (OQBGl) foroutputandtranslation components ofthedisplacement vector(PUBGV1) forthedifferential stiffness solution. @FPformats thetablesprepared bySDR2andplacesthemonthesystemoutputfilefor printing. SDR1recovers dependent displacements afterdifferential stiffness loopforgridpoint forcebalance. GPFDRcalculates forrequested setsthegridpointforcebalance andelement strainenergy foroutput. 2.16-17 (05/30/86)\nDISPLACEMENT 192,OFPformats thetablesprepared byGPFDR printing.RIGIDFORMATS andplacesthemonthesystemoutputfilefor 193.GotoDMAPNo.196ifnodifferential stiffness solution deformed plotsarerequested. 194. 195. 197. 199. 201. 203. 205. 207.PLOTgenerates allrequested differential stiffness solution deformed structure andcontour plots. PRTMSGprintsplotter data,engineering data,andcontour dataforeachdifferential stiffness solution deformed plotgenerated, GotoDMAPNo.208andmakenormalexit. PrintErrorMessage No.1andterminate execution. PrintErrorMessage No.2andterminate execution. PrintErrorMessage No.3andterminate execution. PrintErrorMessage No.4andterminate execution. PrintErrorMessage No.5andterminate execution. 2.16-18 (05/30/86)\nSTATICAEROTHERMOELASTIC DESIGN/ANALYSIS OFAXIAL-FLOW COMPRESSORS 2,16.3 OutputforStaticAerothermoelastic Design/Analysis ofAxial-Flow Compressors Thevalueofthedeterminant ofthesumoftheelastic stiffness andthedifferential stiffness isautomatically printed foreachdifferential stiffness loading condition. Iterative differential Iteration termination reasons havethefollowing meanings: 1.REASONOmeansthestiffness computations areterminated foroneoffivereasons. areautomatically printed inaninformation message. Thesereasons iteration procedure wasincomplete atthetimeofexit.Thisis causedbyeitheranunexpected interruption oftheiteration procedure (i.e.,system abort)ortermination isnotscheduled (fortheotherfourreasons) atthecompletion of thecurrent iteration. 2.REASON1meanstheiteration procedure converged totheEPS19valuesupplied bytheuser onaPARAMbulkdatacard.(Thedefault valueofEPSIflis1.OE-5.) 3.REASON2meanstheiteration procedure isdiverging fromtheEPSIOvaluesupplied bythe useronaPARAMbulkdatacard.(Thedefault valueofEPSI@is1.0E-5.) 4.REASON3 supplied 5.REASON 4 hasbeen Parameter values atmeansinsufficient timeremaining toachieve convergence totheEPSIOvalue bytheuseronaPARAMbulkdatacard.(Thedefault valueofEPSI@is1.0E-5.) meansthenumberofiterations supplied bytheuseronaPARAMbulkdatacard met.(Thedefault numberofiterations is10.) thetimeofexitareautomatically outputasfollows: 1.Parameter D@NE:-1isnormal; +Nistheestimate ofthenumberofiterations required toachieve convergence. 2.Parameter SHIFT: +1indicates areturntothetopoftheinnerloopwasscheduled; -1 indicates areturntotopoftheouterloopwasscheduled following thecurrent iteration. 3.Parameter DSEPSI: thevalueoftheratioofenergyerrortototalenergyatthetimeof exit. Thefollowing outputmayberequested: 1.Nonzero Components oftheapplied staticloadforthelinearsolution atselected grid points. 2.Displacements andnonzero components ofthesingle-point forcesofconstraint, withand without differential stiffness, atselected gridpoints. 3,Forcesandstresses inselected elements, withandwithout differential stiffness. 2.16-19 (05/30/86)\n2.16.4DISPLACEMENT RIGIDFORMATS 4.Undeformed anddeformed plotsofthestructural model. 5.Contour plotsofstresss anddisplacements. CaseControl DeckforStaticAerothermoelastic Design/Analysis ofAxial-Flow Compressors Thefollowing itemsrelate tosubcase definition anddataselection forStatic Aerothermoelastic Design/Analysis ofAxial-Flow Compressors: 1.TheCaseControl Deckmustcontain twosubcases. 2.Astaticloading condition mustbedefined above TEMPERATURE (LOAD), orDEFORMselection, unlessall displacements onSPCcards. 3.AnSPCsetmustbeselected abovethesubcase level onGRIDcards.thesubcase levelwithaLOAD, loading isspecified bygridpoint unlessallconstraints arespecified 4.Outputrequests thatapplyonlytothelinearsolution mustappearinthefirstsubcase. 5.Outputrequests thatapplyonlytothesolution withdifferential stiffness mustbe placedinthesecondsubcase. 6.Outputrequests thatapplytobothsolutions, withandwithout d’ maybeplacedabovethesubcase level.fferential stffness, 2.16.5 Parameters forStaticAerothermoelastic Design/Analysis ofAxial-Flow Compressors Thefollowing parameters areusedinStaticAerothermoelastic Design/Analysis ofAxial-Flow Compressors: 1. 2. 3. 4.APRESS -optional. Apositive integer valuecausesthegeneration ofaerodynamic pressure loads. Anegative integer valuesuppresses thegeneration oftheseloads. The default valueis-l. ASETOUT -optional. Apositive integer valueofthisparameter causestheASEToutput datablocktobegenerated by thegeneration ofthisoutput ATEMP-optional. ApositivetheGP4module. Anegative integer valueorOsuppresses datablock. Thedefault valueisO. integer valuecausesthegeneration ofaerodynamic temperature loads. Anegative integer valuesuppresses thegeneration oftheseloads. Thedefault valueis-1. AUTOSPC -reserved forfutureoptional use.Thedefault valueis-1. 2.16-20 (05/30/86)\nSTATICAEROTHERMOELASTIC DESIGN/ANALYSIS OFAXIAL-FLOW COMPRESSORS 5. 6. 7. 8. 9. 100 11. 12. 13. 14. 15.BETAD-optional. Theinteger valueofthisparameter isthenumberofiterations allowed forcomputing theloadcorrection intheinner(load)loopbeforeshifting to theouter(stiffness) loop,whichadjusts thedifferential stiffness. Thedefault value is4iterations. CflUPMASS -CPBAR,CPROD,CPQUAD1, CPQUAD2, CPTRIA1, CPTRIA2, CPTUBE, CPQDPLT, CPTRPLT, CPTRBSC -optional. Theseparameters causethegeneration ofcoupled massmatrices ratherthanlumpedmassmatrices forallbarelements, rodelements, andplateelements thatinclude bending stiffness. EPSI@-optional. Therealvalueofthisparameter isusedtotesttheconvergence of -5theiterated differential stiffness. Thedefault valueis10. FXCO!ilR, FYCOORandFZC@OR-optional. Therealvaluesoftheseparameters arethe fractions ofthedisplacements usedtoredefine thebladegeometry. Thedefault values are:FXC0!3R=1.0,FYC!3!3R=1.0andFZCOOR=1.0. GRDPNT-optional. Apositive integer valueofthisparameter causestheGridPoint WeightGenerator tobeexecuted andtheresulting weightandbalance information tobe printed. IPRTCI, IPRTCLandIPRTCF-optional. IfIPRTiisapositive integer, thenintermediate printwillbegenerated intheALGmodulebasedontheprintoptionintheALGDBdata table. IfIPRTi=O(thedefault), nointermediate printwillbegenerated. IRES-optional. Apositive integer valueofthisparameter causestheprinting of theresidual vectors following theexecution oftheSSG3module. KT@UT-optional. Apositive integer valueofthisparameter indicates thattheuser wantstosavethetotalstiffness matrixonanexternal file(GINOfileINPT)viathe ftlTPUTl moduleintherigidformat. Thedefault valueis-1whennotneeded. LOCATION andINPTUNIT -required whenusingtheKTOUTparameter. SeeSection 5.5fora description oftheseparameters whicharerequired bythei3UTPUTl module. Thedefault values forLi3CAT10N andINPTUNIT are-1andO,respectively. NT-optional. Theinteger valueofthisparameter limitsthecumulative numberof— iterations inbothloops. Thedefault valueis10iterations. PGE@M-optional. Theinteger valueofthisparameter specifies thepunching ofvarious bulkdatacards. PGE!3M=1causesthepunching ofGRIDbulkdatacards. PGE!3M=2 causesthepunching ofGRID,CTRIA2andPTRIA2bulkdatacards. PGEII!M=3causesthe 2.16-21 (05/30/86)\n16. 17. 18. 19. 20.DISPLACEMENT RIGIDFORMATS punching ofGRIDcardsandthemodified ALGDBtableonDTIcards. Thedefault valueof -Isuppresses thepunching ofanyofthesecards. SIGN-optional. Therealvalueofthisparameter controls thetypeofrunbeing performed. SIGN=1.0specifies astandard analysis typerun.SIGN=-1,0specifies a designtyperun.Thedefault valueis1.0. STREAML -optional, Theinteger valueofthisparameter specifies thepunching of various bulkdatacards. STREAML =1causesthepunching ofSTREAML1 bulkdatacards. STREAML =2causesthepunching ofSTREAML2 bulkdatacards, STREAML =3causesboth STREAML1 andSTREAML2 cardstobepunched. Thedefault valueof-1suppresses the punching ofanyofthesecards. SURFACE -optional. Thecomputations oftheexternal surface areasforthe two-dimensional andthree-dimensional elements areactivated bythisparameter whenthey aregenerated intheEMGmodule. Theresults aremultiplied bytherealvalueofthis parameter. Seethedescription underthePARAMbulkdatacardfordetails. VOLUME-optional. Thevolumecomputations forthetwo-dimensional and three-dimensional elements areactivated bythisparameter whentheyaregenerated in theEMGmodule. Theresults aremultiplied bytherealvalueofthisparameter. See thedescription underthePARAMbulkdata WTMASS-optional. Thetermsofthemass thisparameter whentheyaregenerated incardfordetails. matrixaremultiplied bytherealvalueof theEMAmodule. 2.16.6 RigidFormatErrorMessages fromStaticAerothermoelastic Design/Analysis ofAxial-Flow Compressors Thefollowing fatalerrors aredetected bytheDMAPstatements intheStatic Aerothermoelastic Design/Analysis ofAxial-Flow Compressors. Thetextforeacherrormessage is givenbelowincapital letters andisfollowed byadditional explanatory material, including suggestions forremedial action, AERf3THERM13ELASTIC ERR@RNO.1-NoSTRUCTURAL ELEMENTS HAVEBEENDEFINED. Nostructural elements havebeendefined withConnection cards. AER13THERM!?JELASTIC ERRORNO.2-FREEBODYSUPPORTS NOTALL@WED. Freebodiesarenotallowed inStaticAnalysis withDifferential Stiffness. TheSUP9RTcardsmust beremoved fromtheBulkDataDeckandotherconstraints applied ifrequired forstability. 2.16-22 (05/30/86)"},"title":"User's Manual P16"},"/docs/users/users_manual_017/":{"data":{"":"STATICAEROTHERMOELASTIC DESIGN/ANALYSIS OFAXIAL-FLOW COMPRESSORS AEROTHERMOELASTIC ERRORNO.3-NOGRIDPOINTDATAISSPECIFIED. aNopointshavebeendefined withGRIDorSPOINTcards. AERfiTHERMOELASTIC ERR13RNO.4-MASSMATRIXREQUIRED FORWEIGHT Themassmatrixisnullbecause eithernoelements weredefinedANDBALANCE CALCULATIONS. withConnection cards, nonstructural masswasnotdefined onaProperty card,orthedensity wasnotdefined-on aMaterial card. AER@THERM@ELASTIC ERR@RN@.5-N@INDEPENDENT DEGREES 13FFREEDIIM HAVEBEENDEFINED. Either nodegrees offreedom havebeendefined onGRID,SPOINTorScalarConnection cards,orall defined degrees offreedom havebeenconstrained bySPC,MPC,OMITorGRDSETcards,orgrounded on ScalarConnection cards. 2.16-23 (05/30/86)\nDISPLACEMENT RIGIDFORMATS 2.16-24 (05/30/86)\n3.HEATRIGIDFORMATS 3.1STATICHEATTRANSFER ANALYSIS 3.1.1DMAPSequence forStaticHeatTransfer Analysis RIGIDFORMAT DMAPLISTING APRIL1985RELEASE HEATAPPROACH, RIGIDFORMAT LEVEL2.0NASTRAN DMAP1 COMPILER -SOURCE LISTING OPTIONS INEFFECT GO ERR-2 LIST NOOECK NOREF NOOSCAR —.—— ——- 1BEGIN 2PRECHK 3FILE 4PARAH 5GP1 6PLTTRAN 7GP2 6PARAML 9PURGE 10CONO 11PLTSET 12PRTMSG 13PARAM 14PARAM 15COND 16PLOT 1~PRTNSG 18LABEL 19GP3 20TA1 21CONDHEAT01-STATIC HEATTRANSFER ANALYSIS -APR.1985$ ALL$ HQG-APPEND/HPGG=APPEND/HUGV=APPEND/HGM=SAVE/HKNN=SAVE $ //mpy/cARDNo/o/o $ GEOMl,GEOM2,/GPL,HEQEXIN,GPDT, CSTM,BGPDT,HSIL/S,N,HLUSET/ NOGPOT/MINUSl=-l $ BGPDT,HSIL/BGPDP,HSIP/HLUSET/S,N,HLUSEP $ GEoM2,HEQExlN/EcT $ PCDB//PRES////JUMPPLOT $ PLTSETX,PLTPAR,GPSETS,ELSETS/JUMPPLOT $ HP1,JUMPPLOT $ PCDB,HEQEXIN,ECT/PLTSETX,PLTPAR,GPSETS, ELSETS/S,N,HNS lL/ S,N,JUMPPLOT $ PLTSETX// $ //MPY/PLTFLG/l/l $ //Mpy/pFILE/o/o $ HP1,JUMPPLOT $ PLTPAR,GPSETS,ELSETS,CASECC,BGPDT,HEQEX lN,HSIL,,ECT,,/PLOTXl/ HNSIL/HLUSET/S,N,JUMPPLOT/S,N,PLTFLG/S,N, PFILE$ PLOTX1// $ HP1$ GEoM3,HEQEx1N,GEot42/HsLT,GPTT/NoGRAv $ ECT,EPT,BGPDT,HSIL,GPTT,CSTM/HEST, ,HGPECT,,/ HLUSET/S,N,NOSIMP/l/NOGENL/GENEL $ ERROR4,NOSIMP $ 3.1-1(05/30/86)\nHEATRIGIDFORMATS RIGIDFORMAT DMAPLISTING APRIL1985RELEASE HEATAPPROACH, RIGIDFORMAT 1 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 ho 41 42 43 44 45PURGE COND PARAH EMG PURGE COND EMA LABEL PARAM LABEL GPb COND PARAM PURGE PARAM COND GPSP OFP LABEL EQUIV COND MCE1 MCE2 LABELHKGG,GPST/NOSIMP $ HLBL1,NOSIMP $ //AOD/HNOKGG/l/O $ HEST,CSTM,MPT,DlT,GEOM2,/HKELM,HKD lCT,,,,,/S,N,HNOKGG $ HKGG,GPST/HNOKGG $ HLBL),HNOKGG $ HGPECT,HKDICT,HKELM/HKGG,GPST $ HLBL1$ //tiPY/NSKIP/O/O $ HLBLII $ CASECC,GEOM4,HEQEXIN,GPDT, BGPOT,CSTM,GPST/RG,YS,HUSET,HASET/ HLUSET/S,N,MPCFl/S,N,MPCF2/S,N,S lNGLE/S,N,OMtT/S,N,REACT/ S,N,NSKIP/S,N,HREPEAT/S,N,NOSET/S,N,NOL/S ,N,NOA/C,Y,ASETOUT/ S,Y,AUTOSPC $ ERROR3,NOL $ //*AND#6/NosR/siNGLE/REACT $ HKRR,HKLR,HQR,HDt4/REACT/GM/MPCF l/HGO,HKOO,HLOO,HPO,HUOOV, HRUOV/OMIT/HPS,HKFS,HKSS/SINGLE/HQG/NOSR $ //EQ/GPSPFLG/AUTOSPC/O $ HLBL4,GPSPFLG $ GPL,GPST,HUSET,HSIL/OGPST/S,N,NOGPST $ OGPST,,,,,//S,N,CARONO $ HLBL4$ HKGG,HKNN/MPCFl $ HLBL2,MPCF1 $ HUSET,RG/GM $ HUSET,GM,HKGG,,,/HKNN,,, $ HLBL2$ 3.1-2(05/30/86)\nSTATICHEATTRANSFERANALYSIS eRIGIDFORMAT DMAPLISTING APRIL1985RELEASE HEATAPPROACH, RIGIDFORMAT 1 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 46 47 b8 49 50 51 52 53 54 55 56EQUIV COND SCE1 LABEL EQUIV COND SHP1 LABEL EQUIV COND RBMG1 e57LABEL 58RBHG2 59COND 60RBMG3 61LABEL 62SSG1 63EQUIV 64COND 65SSG2 66LABEL 67SSG3 68COND 6gMATGPR 70MATGPRHt(NN,HKFF/SINGLE $ HLBL3,SINGLE $ HUSET,HKNN,,,/HKFF,HKFS,HKSS, ,,$ HLBL3$ HKFF,HKAA/OMIT $ HLSL5,0MIT $ HUSET,HKFF,,,/HGO,HKAA,HKOO,HLOO, ,,,,$ HLBL5$ HKAA,HKLL/REACT $ HLBL6,REACT $ HUSET,HKAA,/HKLL,HKLR,HKRR, ,,$ HLBL6$ HKLL/HLLL $ HLBL7,REACT $ HLLL,HKLR,HKRR/HDM $ HLBL7$ HSLT,BGPDT,CSTM,HSI L,HEST,MPT, GPTT,EDT,,CASECC,DIT,/ HPG,,,, SCR/HLUSET/NSKIP $ HPG,HPL/NOSET $ HLBL1O,NOSET $ HUSET,GM,YS,HKFS,HGO,HDM,HPG/HQR,HPO,HPS,HPL $ HLBL1O $ HLLL,HKLL,HPL,HLOO,HKOO,HPO/HULV,HUOOV,HRULV,HRUOV/OMlT/ V,Y,lRES=-l/NSKIP/S,N,EPSl $ HLBL9,1RES $ GPL,HUSET,HSIL,HRULV//L $ GPL,HUSET,HSIL,HRUOV//O $ 3.1-3(05/30/86)\nHEATRIGIDFORMATS RIGIDFORMAT DMAPLISTING APRIL1985RELEASE HEATAPPROACH, RIGIDFORMAT 1 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 71LABEL 72SDR1 73COND 7kREPT 75JUMP J6PARAM 77CONO 78LABEL 79SDR2 80OFP 81COND 82PLOT 83PRTMSG 84LABEL 85JUMP 86LABEL 87PRTPARM 88LABEL 8gPRTPARM 90LABEL 91PRTPARtl 92LABEL 93PRTPARM 94LABELHLBL9$ HUSET,HPG,HULV,HUOOV,YS,HGO,GM,HPS,HKFS,HKSS,HQR/HUGV,HPGG, HQG/NSKIP/HSTATICS $ HLBL8,HREPEAT $ HLBL11,1OO $ ERROR1 $ //NoT/HTEsT/HREpEAT $ ERROR5,HTEST $ HLBL8$ CASECC,CSTM,MPT,DIT,HEQEXIN,HS IL,GPTT,EDT,BGPDP, ,HQG,HUGV, HEST,,HPGG/HOPGl,HOQGl,HOUGVl ,,HOEFl,HPUGVl/STATICS $ HOUGVl,HOPGl,HOQGl,HOEFl,,//S,N,CARDNO $ HP2,JUMPPLOT $ PLTPAR,GPSETS, ELSETS,CASECC, BGPDT,HEQEXIN,HSIP,HPUGV1, ,HGPECT, /PL0Tx2/HNStL/HLusEp/JLJMPPLOT/p:TF LG/ S,N,PFILE $ PLoTx2// $ HP2$ FINIS$ ERROR1 $ //-1/HSTA $ ERROR3 s //-3/*HsTAh $ ERROR4 $ /1-4/*HsTAfc $ ERROR5 $ //-5/*HsTAfi $ FINIS$ 3.1-4(05/30/86)\nSTATICHEATTRANSFERANALYSIS ●RIGIDFORMAT DMAPLISTING APRIL1985RELEASE HEATAPPROACH, RIGIOFORMAT 1 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 95PURGE DUMMY/MINUSl $ 96END s 3.1-5(05/30/86)\nHEATRIGIDFORMATS 3.1.2Description ofImportant DMAPOperations forStaticHeatTransfer Analysis 5.GP1generates coordinate systemtransformation matrices, tablesofgridpointlocations, and tablesrelating theinternal andexternal degreeoffreedom indices. ●6.PLTTRAN modifies special scalargridpointsintheBGPDTandHSILtables. 7.GP2generates Element Connection Tablewithinternal indices. 10.GoToDMAPNo.18iftherearenostructure plotrequests. 11.PLTSETtransforms userinputintoaformusedtodrivethestructure plotter. 12.PRTMSGprintserrormessages associated withthestructure plotter. 15.GotoDMAPNo.18ifnoboundary andstructure (heatconduction) element plotsare requested. 16.PLOTgenerates allrequested boundary andheatconduction element plots. 17.PRTMSGprintsplotter dataandengineering dataforeachplotgenerated. 19.GP3generates applied Static(Thermal) LoadsTable(HSLT)andGridPointTemperature Table. 20.TA1generates element tablesforuseinmatrixassembly, loadgeneration, anddatarecovery. 21.GotoDMAPNo.90andprintErrorMessage No.4ifnoelements havebeendefined. 23.GotoDMAPNo.29iftherearenoheatconduction elements. 25.EMGgenerates element heatconduction matrixtablesanddictionaries forlaterassembly by theEMAmodule. 27.GotoDMAPNo.29ifnoheatconduction matrixistobeassembled. 28.EMAassembles heatconduction matrix[K~g]andGridPointSingularity Table, 31.Beginning ofloopforadditional constraint sets. 32.GP4generates flagsdefining members ofvarious displacement sets(USET), formsmultipoint constraint equations [Rg]{ugl=Oandformsenforced displacement vector {Ys}. 33.GotoDMAPNo.88andprintErrorMessage No.3ifnoindependent degrees offreedom are defined. 37.GotoDMAPNo.40ifnopotential gridpointsingularities exist. 38.GPSPgenerates atableofpotential gridpointsingularities. 39.OFPformats thetableofpotential gridpointsingularities prepared byGPSPandplacesit onthesystemoutputfileforprinting. 41.Equivalence [Kgg]to[Knn]ifnomultipoint constraints exist. 42.GotoDMAPNo.45ifnomultipoint constraints exist. 43.MCE1partitions multipoint constraint equations [Rg]=[Rm\\Rn] andsolvesfor . multipoint constraint transformation matrix [Gm]=-[Rm]-l[Rn]. 3.1-6(05/30/86)\nSTATICHEATTRANSFER ANALYSIS 44.MCE2partitions heatconduction matrix 46. 47. 48. 50. 51. 52. 54. 55. 56. 58. 59. 60.[1ilK [Kgg]=‘n+M KmnIKmm andperforms matrixreouction [Knnl=[~nnl+[Gj[Kmnl +[{nl[Gml +[G:l[\\ml[Gml. Equivalence [Knnlto[Kff]ifnosin91e-Point constraints ‘Xisto GotoDMAPNo.49ifnosingle-point constraints exist. SCE1partitions outsingle-point constraints [1‘ff’‘fs[Knn]=~~K— . SfSs Equivalence [Kff] GOtoDMAPNo.53to[Kaa]ifnoomitted coordinates exist. ifnoomitted coordinates exist, SMP1partitions constrained heatconduction matrix [1ii\\K [Kff]=:K , oa00 solvesfortransformation matrix[Go]=-[Kool-l[Koal andperforms matrixreduction [Kaal=[aal+[Kal[Gol . Equivalence [Kaa]to GotoDMAPNo,57if RBMG1partitions out[KLL]ifnofree-body nofree-body supports free-body supportssupports exist. exist. RBMGZdecomposes constrained heatconduction matrix[Kkgl=[LLLIIULLI. GotoDMAPNo.61ifnofree-body supports exist. RBMG3formsrigidbodytransformation matrix [D]=-[KJ1[K%r] \u003e 3.1-7(05/30/86)\nHEATRIGID calculates rigidbodycheckmatrix [X]=[Krrl+ andcalculates rigidbodyerrorratio e= -Tt4Tx KrrFORMATS [K~r][D] . 62.SSG1generates staticthermal loadvectors {Pgl. 63.Equivalence {Pg}to{Pg} ifnoconstraints areapplied. 64.GotoDMAPNo.66ifnoconstraints areapplied. 65.SSG2applies constraints tostaticthermal loadvectors Hin{Pg}=—– ,{Pn}={n}+[G;]{Pm}, Pm Hi-f{Pn}=—– ,{Pf}={Pf}-[Kf]{Ys} , P5 11;a{Pf}=—– ,{Pa}={a}+[G:]{POI , P. Pi {Pa}= II–Fr– andcalculates determinate thermal powers {qr}=-{Prl- 67.SSG3solves fordisplacements ofindependent coordinates {uL}=[Kki]-l{PL} , solvesfordisplacements ofomitted coordinates {u}=[KOO]-l{PO} , calculates residual vector (HRULV) andresidual coordinates {6PE}={Pi}-[KkL]{uLJ[DT]{Pt}. vectorerrorratioforindependent 3.1-8(05/30/86)\nSTATICHEATTRANSFER ANALYSIS {u:}{wgl ‘i= {P;}{UL} andcalculates residual vector(HRUOV) andresidual vectorerrorratioforomitted coordinates {6PO}={Po}-[Koo]{u:} , {U:}{6PO} ‘o= {P:l{u:} 68.GotoDMAPNo.71ifresidual vectors 69.MATGPRprintstheresidual vectorfor 70.MATGPRprintstheresidual vectorfor 72.SDR1recovers dependent temperaturesarenottobeprinted. independent coordinates (HRULV). omitted coordinates (HRUOV). Huk={Ua}, —— ‘r II‘a——={uf}, ‘o {urn}=[Gml{un} ,{uo}=[Go]{ual +{u~~ , H‘f——={un} , Y5 HUn ={Ug} —— ‘m andrecovers single-point powersofsustained thermal constraint {qs}=-{PSI+[K~J{uf} +[KJtyJ. 73.GOtoDMAPNo.78 74.GotoDMAPNo.31 75.GotoDMAPNo.86 100.ifallconstraint setshavebeenprocessed. ifadditional setsofconstraints needtobeprocessed. andprintErrorMessage No.1asthenumberofconstraint setsexceeds 77.GotoDMAPNo.92andprintErrorMessage No.5ifmultiple boundary conditions are attempted withanimproper subset. 79.SDR2calculates conduction andboundary element heatflowsandradients (H@EFl) and 7 prepares thermal loadvectors (H!3PG1), temperature vectors (H@JGVl andsingle-point powers ofconstraint (HOQGl) foroutputandcomponents ofthetemperature vector(HPUGV1). 3.1-9(05/30/86)\nHEATRIGIDFORMATS 80. 81. 82. 83. 85. 87. 89. 91. 93.13FPformats thetablesprepared bySDR2andplacesthemonthesystemoutputfilefor printing. GotoDMAPNo.84ifnotemperature profile plotsarerequested. PLOTgenerates allrequested temperature profile andthermal contour plots, PRTMSGprintsplotter data,engineering data,andcontour dataforeachtemperature profile andthermal contour plotgenerated. GotoDMAPNo.94andmakenormalexit. PrintErrorMessage No.1andterminate execution. PrintErrorMessage No.3andterminate execution. PrintErrorMessage No.4andterminate execution. PrintErrorMessage No.5andterminate execution. 3.1-10(05/30/86)\nSTATICHEATTRANSFER 3.1.3OutputforStaticHeatTransfer AnalysisANALYSIS Thefollowing outputmayberequested forStaticHeatTransfer Analysis: 3.1.41.Temperatures (THERMAL) andnonzero components ofstatic loads(W-OAD) andconstrained heatflow(SPCFORCE) atselected gridpointsorscalarpoints. 2,ThepunchoptionofaTHERMAL request willproduce TEMPbulkdatacards. 3.Fluxdensity (ELF@RCE) inselected elements. 4.Plotsofthestructural modelandtemperature profiles. 5.Contour plotsofthethermal field, CaseControl DeckforStaticHeatTransfer Analysis Thefollowing itemsrelatetosubcase definition anddataselection forStaticHeatTransfer Analysis: 1. 2. 3. 4. 5.Aseparate subcase mustbedefined foreachuniquecombination of loads. Astaticloading condition mustbedefined for(notnecessarily withaLOADselection, unlessallloading isspecified withgrid SPCcards.constraints andstatic within) eachsubcase pointtemperatures on AnSPCsetmustbeselected for(notnecessarily within) eachsubcase, unlessall constraints arespecified onGRI.DcardsorScalarConnection cards. Loading conditions associated withthesamesetsofconstraints shouldbeincontiguous subcases, inordertoavoidunnecessary looping. REPCASE maybeusedtorepeatsubcases inordertoallowmultiple setsofthesame outputitem. 3.1.5Parameters forStaticHeatTransfer Analysis The 1. 2. 3.following parameters areusedinStaticHeatTransfer Analysis: ASET13UT -optional. Apositive integer valueofthisparameter causestheHASET’output datablocktobegenerated bytheGP4module. Anegative integer valueorOsuppresses thegeneration ofthisoutputdatablock. Thedefault valueis0. AUTOSPC -reserved forfutureoptional use.Thedefault valueis-1. IRES-optional. Apositive integer valueofthisparameter causestheprinting ofthe residual vectors following eachexecution oftheSSG3module. 3.1-11(05/30/86)\nHEATRIGIDFORMATS 3.1.6RigidFormatErrorMessages fromStaticHeatTransfer Analysis Thefollowing fatalerrorsaredetected bytheDMAPstatements intheStaticHeatTransfer Analysis rigidformat. Thetextforeacherrormessage isgivenbelowincapital letters andis followed byadditional explanatory material, including suggestions forremedial action. STATICHEATTRANSFER ANALYSIS ERRORMESSAGE N@.1-ATTEMPT T@EXECUTE MORETHAN100Lk30PS. Anattempt hasbeenmadetousemorethan100different setsofboundary conditions. Thisnumber maybeincreased byALTERing theREPTinstruction following SDR1. STATICHEATTRANSFER ANALYSIS ERRORMESSAGE NO.3-NoINDEPENDENT DEGREES OFFREED13M HAVEBEEN DEFINED, Eithernodegrees offreedom havebeendefined onGRID,SPOINTorScalarConnection cards,orall defined dearees offreedom havebeenconstrained bvSPC.MPC.SUPORT. OMITorGRDSETcards.or grounded o; STATICHEAT Noelements STATICHEATScalarConnection TRANSFER ANALYSIS havebeendefined TRANSFER ANALYSIS….. cards, ERR@RMESSAGE NO.4-N@ELEMENTS HAVEBEENDEFINED. witheitherConnection cardsorGENELcards. ERRORMESSAGE N@.5-ALO@PING PROBLEM RUNONAN@N-L~@PING SUBSET. Aproblem requiring boundary condition changes wasrunonsubset1or3.Theproblem shouldbe restarted on-subset O. 3.1-12(05/30/86)\nHEATRIGIDFORMATS 3.2NONLINEAR STATICHEATTRANSFER ANALYSIS 3.2.1DMAPSequence forNonlinear StaticHeatTransfer Analysis RIGIDFORMAT DMAPLISTING APRIL1986RELEASE HEATAPPROACH, RIGIDFORMAT 3 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING OPTIONS INEFFECT GO ERR-2 LIST NODECK NOREF NOOSCAR ——— .——- 1BEGIN 2PRECHK 3PARAM 4GP1 5PLTTRAN 6GP2 7PARA!4L 8PURGE 9COND 10PLTHBDY 11EQUIV 12PLTSET 13PRTMSG lbPARAM 15PARAM 16COND 17PLOT 18PRTMSG 19LABEL 20GP3HEAT03-NONLINEAR STATIC HEATTRANSFER ANALYSIS - ALL$ //MpY/cARoNo/o/o $APR.1986$ GEOMl,GEOM2,/GPL,HEQEXIN,GPDT,CSTM, BGPOT,HSIL/S,N,HLUSET/ NOGPDT/MINUSl=-l $ BGPOT,HSIL/BGPOP,HSIP/HLUSET/S,N,HLUSEP $ GEoH2,HEQExlN/EcT $ PCOB//PRES////JUMPPLOT $ PLTSETX,PLTPAR,GPSETS,ELSETS/JUMPPLOT $ HP1,JUMPPLOT $ GEOM2,ECT,EPT,HS IL,HEQEXI N,BGPOT/PECT,PSIL,PEQEXIN,PBGPDT/ NHBOY/V,Y,MESH=NO $ ECT,PECT/NHBDY/HS lL,PSIL/NHBDY/HEQEXIN,PEQEXIN/NHBDY/ BGPDT,PBGPOT/NHBDY $ PCOB,PEQEXlN,PECT/PLTSETX,HPLTPAR,HGPSETS,HELSETS/S,N,HNSl L/ S,N,JUMPPLOT $ PLTSETX// $ //$,Mpy*/PLTFLG/l/l $ //MPY/PF ILE/O/O $ HP1,JUMPPLOT $ HPLTPAR,HGPSETS,HELSETS,CASECC,PBGPOT,PEQEXI N,PSIL,,,,/PLOTXl/ HNSIL/HLUSET/S,N,JUMPPLOT/S,N,PLTFLG/S,N,PF ILE$ PLOTX1// $ HPI$ GEoM3,HEQEx1N,GEoM2/HsLT,GPTT/NoGRAv $ 3.2-1(05/30/86)\nHEATRIGIDFORMATS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE HEATAPPROACH, RIGIDFORMAT 3 LEVEL2.0NASTRAN DMAPCDMPILER -SOURCE LISTING 21SETVA1 22LABEL 23CASE 24PARAML 25PARAM 26TA1 27COND 28PARAM 29EMG 30PURGE 31COND 32EMA 33LABEL 34RAG 35EQUIV 36PURGE 37GP4 38CONO 39PURGE 40PARAM 41COND 42GPSP 43OFP 44LABEL//5,N,REPEATH/-I $ LOOPTOP $ CASECC,/CASEXX/TRANRESP/S,N,REPEATH/S,N,NOLOOP $ cAsExx//*oTlff/l/8//s,N,TEMPMATE $ //5T5R/v,N,TEMpMATE/-lo $ ECT,EPT,BGPOT,HSIL,GPTT,CSTM/HEST, ,HGPECT,,/ HLUSET/S,N,NOSIMP/l/NOGENL/HXYZ $ ERROR2,NOSIMP $ //AOO/HNOKGG/l/O $ HEST,CSTM,MPT,DlT,GEOM2,/HKELM,HKDl CT,,,,,/S,N,HNoKGG $ HKGG,GPST/HNOKGG $ JMPKGGX,HNOKGG $ HGPECT,HKDICT,HKELM/HKGGX,GPST $ JMPKGGX $ HEST,MATPOOL,GPTT,HKGGX/HRGG,HQGE,HKGG/C,Y,TABS/C,Y, SIGMA=O.O/ S,N,HNLR/HLUSET $ HKGGX,HKGG/HNLR $ HQGE,HRGG/HNLR $ CASEXX,GEOM4,HEQEX IN,GPDT,BGPDT, CSTM,GPST/RG,,HUSET,HASET/ HLUSET/S,N,MPCFl/S,N,MPCF2/S,N,S lNGLE/S,N,OMIT/S,N,REACT/ S,N,NSKlP/S,N,REPEATH/S,N,NOSET/S,N,NOL/S,N,NOA/C,Y, ASETOUT/ S,Y,AUTOSPC $ ERROR1,NOL $ GM/MPcFl/HPS,HKFS,HKSS,HKSF,HRSN,HQG/S INGLE$ //EQ/GpSpFLG/AuToSpc/o $ HLBL5,GPSPFLG $ GPL,GPST,HUSET,HSIL/OGPST/S,N ,NOGPST $ OGPST,,,,,//S,N,CARDNO $ HLBL5$ 3.2-2(05/30/86)\nNONLINEAR STATICHEATTRANSFER ANALYSIS @RIGIDFORMAT DMAPLISTING APRILlg86RELEASE HEATAPPROACH, RIGIDFORMAT 3 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 45 46 47 48 49 50 51 52 53 5.4 55EQUIV COND MCE1 MCE2 LABEL EQUIV COND VEC PARTN PARTN LABEL m56DECOMP 57COND 58SSGI 59EQUIV 60CONO 61SSG2 62LABEL 63SSGHT 64COND 65MATGPR 66LABEL 67SDR2 68OFPHKGG,HKNN/MPCFl/HRGG,HRNN/MPCF 1$ HLBLI,MPCFI $ HUSET,RG/GM $ HUSET,GM,HKGG,HRGG,,/HKNN,HRNN, ,$ HLBLI$ HKNN,HKFF/SINGLE/HRNN,HRFN/Sl NGLE$ HLBL2,SINGLE $ HUSET/VFS/N/*Ff~/*Sj’~ $ HKNN,VFS,/HKFF,HKSF,HKFS,HKSS $ HRNN,,VFS/HRFN,HRSN,,/l $ HLBL2$ HKFF/HLLL,HLILL/O/O/MDIAG/DET/PWR/S,N, KSING$ ERROR3,KSING $ HSLT,BGPDT,CSTM,HSI L,HEST,MPT,GPTT, EDT,,CASEXX,DIT,/ HPG,,,, SCR/HLUSET/NSKIP $ HPG,HPF/NOSET $ HLBL3,NOSET $ HUSET,GM,,HKFS,,,HPG/,,HPS ,HPF$ HLBL3$ HUSET,HSI L,GPTT,GM,HEST,MPT,D IT,HPF,HPS,HKFF,HKFS,HKSF, HKSS,HRFN,HRSN,HLLL,HULL/HUGV,HQG,HRULV/HNNLK=l/HNLR/ C,Y,EPSHT=.OOl/C,Y,TABS=O.O/C,Y,MAX lT=4/V,Y,lRES/ MPCF1/SINGLE $ HLBL4,1RES $ GPL,HUSET,HSIL,HRULV//F $ HLBL4$ CASEXX,CSTM,MPT,DIT,HEQEX IN,HSIL,GPTT,EDT,BGPDP, ,HQG,HUGV,HEST, , HPG/HOPGl,HOQGl,HOUGVl,HOES l,HOEFl,HPUGV1/STATICS $ HOUGVl,HOPGl,HOQGl,,,//S,N, CARDNO $ 3.2-3(05/30/86)\nHEATRIGIDFORMATS RIGIDFORMAT OMAPLISTING APRIL1986RELEASE HEATAPPROACH, RIGIDFORMAT 3 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 69SDRHT 70OFP 71COND 72PLTSET 73PLOT 74PRTMSG 75LABEL 76COND 77REPT 78JUMP 79LABEL 80PRTPARM 81LABEL 82PRTPARM 83LABEL 84PRTPARM 85LABEL 86PURGE 87ENDHSIL,HUSET,HUGV,HOEF1,HSLT,HEST, DIT,HQGE,,/HOEFIX/C,Y,TABS/ HNLR$ HOEFIX, ,,,,//5,N,cARDN0 $ HP2,JUMPPLOT $ PCDB,HEQEXIN,ECT/PSMES,DPLTPAR,DGPSETS ,DELSETS/S,N,DSIL/DJ $ DPLTPAR,DGPSETS,DELSETS,CASEXX, BGPDT,HEQEXIN,HSI P,HPUGV1 ,, HGPECT,HOESl/PLOTX2/DSlL/HLUSEP/JUNPPLOT/PLTFLG/S,N,PF ILE$ PLoTx2// $ HP2$ FINIS,REPEATH $ LOOPTOP,1OO $ FINIS$ ERROR1 $ //-1/HNLi $ ERROR2 $ //-2/HNLl $ ERROR3 $ //-3/~~HNLI* S FINIS$ DUMMY/MINUSl $ s 3.2-4(05/30/86)\nNONLINEAR STATICHEATTRANSFER ANALYSIS 3.2.2 e4. 5. 6. 9. 10. 11. 12. 13. 16. 17. 18. 20. 23. @24. 25. 26. 27. 29. 31. 32. 34. 35. 37. 38,Description ofImportant DMAPOperations forNonlinear StaticHeatTransfer Analysis GP1generates coordinate system transformation matrices, tables ofgridpointlocations, and tables relating theinternal andexternal degree offreedom indices. PLTTRAN modifies special scalargridpointsintheBGPDTandHSILtables. GP2generates theElement Connection Tablewithinternal indices. GotoDMAPNo.19iftherearenostructure plotrequests. PLTHBDY modifies thedataintheECT,HSIL,HEQEXIN andBGPDTtablestopermittheplotting ofHBOY(thermal boundary) elements. Equivalence PECTtoECT,PSILtoHSIL,PEQEXIN toHEQEXIN andPBGPDTtoBGPDTifthereare noHBDYelements, PLTSETtransforms userinputintoaformusedtodrivethestructure plotter, PRTMSGprintserrormessages associated withthestructure plotter. GotoDMAPNo.19ifnoboundary andstructure (heatconduction) element plotsare requested. PLOTgenerates allrequested boundary andheatconduction element plots. PRTMSGprintsplotter andengineering dataforeachgenerated plot. GP3generates applied Static(HeatFlux)LoadsTable(HSLT)andtheGridPointTemperature Table. CASEextracts theappropriate recordfromCASECCcorresponding tothecurrent loopand copiesittoCASEXX. PARAMLextracts the8thwordinthedatarecordofCASEXX(representing thethermal material setID)andstoresitsvalueintheparameter TEMPMATE. PARAMstoresthevalueoftheparameter TEMPMATE inthe10thwordofCOMMON/SYSTEM/. TA1generates element tables foruseinmatrix assembly, loadgeneration, andheatfluxdata recovery. GotoDMAPNo.81andprintErrorMessage No.2ifnoelements havebeendefined. EMGgenerates element heatconduction matrixtablesanddictionaries forlaterassembly by theEMAmodule. GotoDMAPNo.33ifnoheatconduction matrixistobeassembled. EMAassembles heatconduction matrix[Kg]andGridPointSingularity Table. RMGgenerates theradiation matrix, [Rgg],andaddstheestimated linearcomponent of radiation totheheatconduction matrix. Theelement radiation fluxmatrix, [Qge],is alsogenerated foruseinrecovery datafortheHBDYelements. Equivalence [Kg]to[Kgg]ifthereisnolinear component ofradiation. GP4generates flagsdefining members ofvarious displacement sets(HUSET) andforms multipoint constraint equations [Rg]{ug}={01. GotoDMAPNo.79andprintErrorMessage No.1ifnoindependent degrees offreedom are defined. 3.2-5(05/30/86)\n41. 42. 43. 45. 46. 47. 48. 50. 51. 52. 53. 54. 56. 57. 58.HEATRIGIDFORMATS GotoDMAPNo.44ifnopotential gridpointsingularities exist. GPSPgenerates atableofpotential gridpointsingularities. Thesesingularities maybe extraneous inaradiation problem, sincesomepoints maytransfer heatthrough radiation only.@ @FPformats thetableofpotential gridpointsingularities prepared byGPSPandplaces it onthesystem output fileforprinting. Equivalence [Kgg]to[Knn]and[Rgg]to[Rnn]ifnomultipoint constraints exist, GotoDMAPNo.49ifnomultipoint constraints exist. MCE1partitions themultipoint constraint eauation matrix [Rg]=[RmRn] andsolves forthemul MCE2partitipoint constraint transformation matrix [Gm]=-[Rm]-l[Rn]. onsheatconduction andradiation matrices [1iIK [Kgg]=n+and [Rgg]= KmnIKmm andperforms matrix reductions [Knn]=[inn]+[G][Kmnj +[Km][Gm] +“[G][Kmm][Gm] and [Rnn]=[iinn]+[G~][Rmn] +[Rn][Gm] +[G][Rmm][Gm]. o Equivalence [Knn]to[Kff]and[Rnn]to[Rfn]ifnosingle-point constraints exist. GotoOMAPNo.55ifnosingle-point constraints exist. VECgenerates apartitioning vector{un}+ PARTNpartitions theheatconduction matrix [‘ff’‘fs[Knn]=—+— ‘fs’Kss, PARTNpartitions theradiation matrix [1‘fn[Rnn]=;-. snf}+{U5}. . DECOMPdecomosestheotentially unsymmetric matrix[Kff]intoupperandlowertriangular factors [Ukk?and[Lli!. GotoDMAPNo.83andprintErrorMessage No,3ifthematrixissingular. SSG1generates theinputheatfluxvector{Pg}, 3.2-6(05/30/86"},"title":"User's Manual P17"},"/docs/users/users_manual_018/":{"data":{"":"NONLINEAR STATICHEATTRANSFER ANALYSIS 59. e60. 61. 63. 64. 65. 67. ●68. 69. 70. 71. 72. 73, 74. 76. 77. 78. 80. 82. 74.Equivalence {Pg}to{Pf}ifnoconstraints areapplied. GotoDMAPNo.62ifnoconstraints ofanykindexist. SSG2reduces theheatfluxvector HPn {Pgl=—-, Pm {Pn}={~n}+[G:]{pm} 11‘fand {Pn}=—–. P5 SSGHTsolvesthenonlinear heattransfer problem byaniteration technique whichislimited byparameters EPSHTandMAXIT. Theoutputdatablocksare:{ug},thesolution temperature vector, {qg},theheatfluxduetosingle-point constraints, and{6Pt},the matrixofresidual heatfluxesateachiteration step. GotoDMAPNo.66ifresidual vectors arenottobeprinted. MATGPRprintstheresidual vectors forindependent coordinates (HRULV). SDR2calculates theheatfluxduetoconduction andconvection intheelements (HOEFl) and prepares thetemperature vector(H!3UGV1), theloadvector (HOPGl), andthepowerof constraint (HOQGl) foroutputandcomponents ofthetemperature vector(HPUGV1). 13FPformats thetablesprepared bySDR2andplacesthemonthesystemoutputfilefor printing. SDRHTorocesses theHBDYelements toDroduce heatfluxintotheelements (HOEFIX) dueto convection, radiation, andapplied flux. 13FPformats theelement fluxtableprepared forprinting, GotoDMAPNo.75ifnotemperature profilebySDRHTandplacesitonthesystemoutputfile plotsarerequested. PLTSETtransforms userinputintoaformusedtodrivethestructure plotter. PLOTgenerates allrequested temperature profile andthermal contour plots. PRIMSGprintsplotter data,engineering data,andcontour dataforeachtemperature profile andthermal contour plotgenerated. Goto Goto Goto Print Print PrintOMAPNo.85andmakenormalexitifallconstraint setshavebeenprocessed. OMAPNo.22ifadditional constraint setsneedtobeprocessed. DMAPNo.85andmakenormalexit. ErrorMessage No.1andterminate execution. ErrorMessage No.2andterminate execution. ErrorMessage No,3andterminate execution. 3.2-7(05/30/86)\nHEATRIGIDFORMATS 3.2.3OutputforNonlinear StaticHeatTransfer Analysis Thefollowing outputmayberequested forthelastiteration inNonlinear StaticHeat Transfer Analysis: 1.Temperature (THERMAL) andnonzero components ofstaticloads(!JL!JAD) andconstrained heatflow(SPCFORCE) atselected gridpointsorscalarpoints. 2.ThepunchoptionofaTHERMAL request willproduce 3.Fluxdensity (ELFORCE) inselected elements. In density summary isproduced thatincludes applied flux.TEMPbulkdatacards. thecaseofCHBDYelements, aflux flux,radiation flux,andconvective 4,Plotsofthestructural modelandtemperature profiles. 5.Contour plotsofthethermal field, 3.2.4CaseControl DeckforNonlinear StaticHeatTransfer Analysis Thefollowing itemsrelatetosubcase definition anddataselection for HeatTransfer Analysis: 1.Aseparate subcase mustbedefined foreachuniquecombination of loading conditions. 2.Anestimated temperature distribution vectormustbedefined onTEMPNonlinear Static constraints and cardsandselected withaTEMP(MATERIAL) request foreachsubcase. Temperatures forconstrained components●aretakenfromtheseTEMPcardsandentries onSPCcardsareignored. 3.2.5Parameters forNonlinear StaticHeatTransfer Analysis Thefollowing parameters areusedinNonlinear StaticHeatTransfer Analysis: 1. 2. 3. 4.ASETOUT -optional. Apositive integer valueofthisparameter causestheHASEToutput datablocktobegenerated bytheGP4module. Anegative integer valueorOsuppresses thegeneration ofthisoutputdatablock. Thedefault valueisO. AuTfMPC -reserved forfutureoptional use.Thedefault valueis-1.—. EPSHT-optional. Therealvalueofthisparameter isusedtotesttheconvergence—- thenonlinear heattransfer solution (seeSection 8.4.1oftheTheoretical Manual). default valueis0.001. IRES-optional. Apositive integer valueofthisparameter causestheprinting of residual vectors following theexecution oftheSSGHTmoduleforeachiteration. 3,2-8(05/30/86)of The the\n5. 6. 7.NONLINEAR STATICHEATTRANSFER ANALYSIS MAXIT-optional. Theintege- valueofthisparameter limitsthemaximum numberof iterations. Thedefault valueis4iterations. SIGMA-optional. Thedefault value TABS-optional.Thereal is0.0. Thereal temperature. Thedefault vavalueofthisparameter istheStefan-Boltzmann constant. valueofthisparameter istheabsolute reference lueis0.0. 3.2.6RigidFormatErrorMessages fromNonlinear StaticHeatTransfer Analysis Thefollowing fatalerrorsaredetected bytheDMAPstatements intheNonlinear StaticHeat Transfer Analysis rigidformat. Thetextforeacherrormessage isgivenbelowincapital letters andisfollowed byadditional explanatory material, including suggestions forremedial action. NfiNLINEAR STATICHEATTRANSFER ANALYSIS ERRORMESSAGE NO.,1-NOINDEPENDENT DEGREES OFFREEDOM HAVEBEENDEFINED. Eithernodegrees offreedom havebeendefined onGRID,SP!31NTorScalarConnection cards,orall defined degrees offreedom havebeenconstrained bySPC,MPC,SUPORT, OMITorGRDSET cards, or grounded onScalarConnection cards. Nf3NLINEAR STATICHEATTRANSFER ANALYSIS ERR@R ●Nostructural elements havebeendefined with NONLINEAR STATICHEATTRANSFER ANALYSIS ERROR Theheatconduction matrixissingular duetoMESSAGE NO.2-NOSIMPLESTRUCTURAL ELEMENTS. Connection Cards. MESSAGE N@.3-STIFFNESS MATRIXSINGULAR. unspecified gridpointtemperatures. I 3.2-9(05/30/86)\nHEATRIGIDFORMATS 3.2-10(05/30/86) .\nHEATRIGIDFORMATS 3.3TRANSIENT HEATTRANSFER ANALYSIS e3.3.1DMAPSequence forTransient HeatTransfer Analysis RIGIDFORMAT OMAPLISTING APRILlg86RELEASE HEATAPPROACH, RIGIDFORMAT 9 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING OPTIONS INEFFECT GO ERR=2 LIST NODECK NOREF NOOSCAR\n1BEGIN 2PRECHK 3PARAM kGP1 5PLT7RAN 6PURGE 7COND 8GP2 9PARAML 10PURGE 11COND 12PLTSET 13PRTMSG 14PARAM 15PARAM 16COND 17PLOT 18PRTMSG 19LABEL 20GP3 21TA1HEAT09-TRANSIENT HEATTRANSFER ANALYSIS -APR.1986$ ALL$ //Mpy/CARDNI)/0/o $ GEoMl,GEoM2,/GPL,HEQEXlN,GPDT, CSTM,BGPDT,HSIL/S,N,HLUSET/ S,N,NOGPDT/MINUSIE-l $ BGPDT,HSIL/BGPDP,HSIP/HLUSET/S ,N,HLUSEP $ HUSET,GM,HGO,HKAA,HBAA,HPSO,HKFS,HQP,HEsT/NOGPDT $ HLBL5,NOGPDT $ GEoM2,HEQExlN/EcT $ PCDB//PRES////JUMPPLOT $ PLTSETX,PLTPAR,GPSETS,ELSETS/JUMPPLOT $ HP1,JUMPPLOT $ PCDB,HEQEXIN,ECT/PLTSETX,PLTPAR,GPSETS, ELSETS/S,N,HNSIL/ S,N,JUMPPLOT $ PLTSETX// $ //MpY/pLTFLG/l/l $ //*MPY$,/PFILE/O/o $ HP1,JUMPPLOT$ PLTPAR,GPSETS,ELSETS,CASECC,BGPDT,HEQEXIN,HS lL,,ECT,,/PLOTXl/ HNSIL/HLUSET/S,N,JUMPPLOT/S,N,PLTFLG/S,N, PFILE$ PLOTX1// $ HP1$ GEoM3,HEQExlN,GEoM2/HsLT,GPTT/l $ ECT,EPT,BGPDT,HSIL,GPTT,CSTM/HEST, ,HGPECT,,/ HLUSET/S,N,NOSIMP=-l/l/123/l 23$ 3.3-1(05/30/86)I\nHEATRIGIDFORMATS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE HEATAPPROACH, RIGIDFORMAT 9 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45PURGE COND PARAM PARAM EMG PURGE COND EMA LABEL CONO EMA LABEL PURGE LABEL RMG EQUIV PURGE GP4 PURGE COND PARAll COND GPSP OFPHKGG,GPST,HBGG/NOSIMP $ HLBL1,NOSIMP $ //ADD/NoKGGx/l/o $ //*AODfi/NOBGG/l/O $ HE5T,CSTM,MPT,DlT,GEOM2,/HKELM,HKD lCT,,,HBELM,HBDICT,/S,N, NOKGGX//S,N,NOBGG $ HKGGX,GPST/NOKGGX $ JMPKGGX,NOKGGX $ HGPECT,HKOICT,HKEL/l/HKGGX;GPST $ JMPKGGX $ JMPHBGG,NOBGG $ HGPECT,HBOICT,HBELM/HBGG, $ JMPHBGG $ HBNN,HBFF,HBAA,HBGG/NOBGG $ HLBL1$ HEST,MATPOOL,GPTT,HKGGX/HRGG,HQGE ,HKGG/C,Y,TABS/C,Y,SIGMA=O.O/ S,N,HNLR/HLUSET $ HKGGX,HKGG/HNLR $ HRGG,HRNN,HRFF,HRAA,HRDD/HNLR $ CASECC,GEOM4,HEQEXlN,GPDT,BGPDT,CSTM,GPST/RG, ,HUSET,ASET/ HLUSET/S,N,MPCFl/S,N,MPCF2/S,N,S lNGLE/S,N,OMIT/ S,N,REACT/O/123/S,N,NOSET/S,N,NOL/S, N,NOA/C,Y,ASETOUT/ S,Y,AUTOSPC $ GM,GMD/MPCFl/HGO,HGOO/OMIT/HKFS,HPSO,HQP/S INGLE$ HLBL2,NOSIMP $ //EQ/Gp5PFLG/AuT05Pc/o $ HLBL2,GPSPFLG $ GPL,GPST,HUSET,HSIL/OGPST/S,N,NOGPST $ OGPST,,,,,//S,N,CARDNO $ 3.3-2(05/30/86)\nTRANSIENT HEATTRANSFER ANALYSIS RIGIDFORMAT DMAPLISTING ABRIL1986RELEASE HEATAPPROACH, RIGIDFORMAT 9 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 46 k~ 48 49 50 51 52 53 5b 55 56 57 58 59 60 61 62 63 64 65 66 67 68 6g 70LABEL EQUIV COND MCE1 HCE2 LABEL EQUIV CONO SCE1 LABEL EQUIV EQUIV EQUIV COND SMP1 COND S!IP2 LABEL COND SMP2 LABEL DPD COND EQUIV PURGEHLBL2$ HKGG,HKNN/MPCFl/HRGG,HRNN/MPCF l/HBGG,HBNN/MPCFl $ HL8L3,MPCF1 $ HUSET,RG/GM $ HUSET,Gtl,HKGG,HRGG,HBGG,/HKNN,HRNN,HBNN, $ HL8L3$ HKNN,HKFF/SlNGLE/HRNN,HRFF/SlNGLE/HBNN,HBFF/SlNGLE $ HLBL4,SINGLE $ HIJSET,HKNN,HRNN,HBNN,/HKFF,HKFS, ,HRFF,HBFF, $ HLBLk$ HKFF,HKAA/OMIT $ HRFF,HRAA/OMIT $ HBFF,HBAA/OMiT $ HLBL5,0MIT $ HUSET,HKFF ,,,/HGO,HKAA,HKOO,HLOO,, ,,,$ HLBLR,HNLR $ HUSET,HGO,HRFF/HRAA $ HLBLR$ HLBL5,NOBGG $ HUSET,HGO,HBFF/HBAA $ HLBL5$ DYNAMICS,GPL,HSIL,HUSET/GPLO,HSl LD,HUSETO,TFPOOL,HDLT, ,, HNLFT,HTRL,,HEQDYN/HLUSET/S,N,HLUSETD/123 /S,N,NODLT/ 123/123/S,N,NONLFT/S,N,NOTRL/123//S,N,NOUE $ ERROR1,NOTRL $ HGO,HGOD/NOUE/GM,GMO/NOUE $ HPPO,HPSO,HPDO,HPDT/NODLT $ 3,3-3(05/30/86)\nHEATRIGIDFORMATS RIGIDFORMAT DMAPLISTING APRILlg86RELEASE HEATAPPROACH, RIGIDFORMAT 9 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 71 72 73 lk 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91MTRXIN PARAM PURGE EQUIV CONO GKAO LABEL EQUIV PARAH LABEL CASE TRLG EQUIV TRHT VOR CONO SDR3 OFP XYTRAN XYPLOT LABELCASECC,MATPOOL,HEQDYN, ,TFPOOL/HK2PP,,HB2PP/HLUSETO/ S,N,NOK2PP/123/S,N,NOB2PP $ //AND/KDEKA/NOUE/NOK2PP $ HK2Do/NoK2PP/HB200/NoB2PP $ HKAA,HKDo/KoEKA/HB2PP,HB2DD/NoA/HK2PP,HK2oo/NoA/HRAA,HRoo/ NOUE$ HLBL6,NOGPDT $ HUSETD,GM,HGO,HKAA,HBAA,HRAA, ,HK2pP,,HB2PP/HKO0,HBD0, HROD,GM0,HGO0,HK200, ,HB200/TRANREsP/D15Pf’/ ~DIREcT/c,y,G=o,o/c,Y,w3=0.O/C,Y ,Wk=O.O/NOK2PP/-l/ NOB2PP/MPCFl/S lNGLE/OMIT/NOUE/ -1/NOBGG/NOSIMP/-l $ HLBL6$ HK2no,HKDD/NoslMP/HB2DD,HBDD/NoGPDT $ //$~MPY/REPEATT/l/-l $ HLBL1O $ CASECC,/CASEXX/*TRANt/S,N,REPEATT/S ,N,NOLOOP $ CASEXX,HUSETO,HDLT,HSLT, BGPDT,HS IL,CSTM,HTRL,O IT,GMO,HGOO, , HEST,,/HPPO,HPSO,HPOO,HPOT, ,HTDL/S,N,NOsET $ HPPO,HPOO/NOSET $ CASEXX,HUSETO,HNLFT,OIT,GPTT, HKOO,HBDD,HROO,HPDT,HTRL/ HUDVT,HPNLD/C,Y,BETA=.55/C,Y ,TABS=O.O/HNLR/C,Y,RAOLIN=-l/ C,Y,SIGMA=O.O $ CASEXX,HEQOYN,HUSETD,HUDVT,HTOL,XYCDB,HPNLD/HOUDVl ,HOPNL1/ *TRANREsP$c/*OIRECT)/O/S,N,NOO/s,N,Nop/o $ HLBL7,NOD $ Houovl,HoPNLl,,,,/Houov2,HoPNL2, ,,,$ HOUDV2,HOPNL2 ,,,,//S,N,CARDNO $ XYCDB,HOUDV2,HOPNL2, ,,/HXYPLTTA/’TRAN’/*DSE~’S/S ,N,HPFILE/ S,N,HCARONO $ HXYPLTTA// $ HLBL7$ 3.3-4(05/30/86)\nTRANSIENT HEATTRANSFER ANALYSIS eRIGIDFORMAT DMAPLISTING APRIL1986RELEASE HEATAPPROACH, RIGIDFORMAT 9 LEVEL2,0NASTRAN DMAPCOMPILER -SOURCE LISTING 92 93 94 95 g6 97 98 99 100 101 ●102 103 lok 105 106 107 108 109 110 111 112 113 114PARAM COND EQUIV COND SDR1 LABEL SDR2 SDRHT EQUIV SDR3 OFP COND PLOT PRTMSG LABEL XYTRAN XYPLOT LABEL COND REPT PRTPARM JUMP LABEL//AND/PJUMP/NOP/JUMPPLOT $ tlLBL9,PJU14P $ HUDVT,HUPV/NOA $ HLBL8,NOA $ HUSETD, ,HUDVT, ,,HGOD,GMD,HPSO,HKFS, ,/HUPV,,HQP/l/ *DYNAflIcsx $ HLBL8$ CASEXX,CSTM,MPT,DIT,HEQDYN,HS ILD,,,BGPDP,HTOL,HQP,HUPV,HEST, XYCDB,HPPO/HOPPl,HOQPl,HOUPV1 ,HOESl,HOEFl,HPUGV/TRANRESP $ HSILD,HUSETD,HUPV,HOEF 1,HSLT,HEST,DIT,HQGE ,HDLT,/HOEFIX/C,Y, TABS/HNLR $ HOEFIX,HOEF1/MINUSl $ HOPP1,HOQP1,HOUPV1 ,HOESl,HOEFl,/HOPP2,HOQP2,HOUPV2,HOES2, HOEF2, $ HoPP2,HoQP2,HouPv2,HoEF2,HoEs2,//s,N,cARDNo $ HP2,JUMPPLOT $ PLTPAR,GPSETS,ELSETS,CASEXX,BGPDT,HEQEXI N,HSIP,,HPUGV, HGPECT,/PLOTX2/HNS lL/HLUSEP/JUMPPLOT/PLTFLG/ S,N,PFILE $ PLoTx2// $ HP2$ XYCDB,HOPP2,HOQP2 ,HOUPV2,HOES2,HOEF2/HXYPLTT/TRAN/PSET/S ,N, PFILE/S,N,CARDNO $ HXYPLTT// $ HLBL9$ FINIS,REPEATT $ HLBLIO,1OO $ //-2/HTRD $ FINIS$ ERROR1 $ 3.3-5(05/30/86)\nHEATRIGIDFORMATS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE HEATAPPROACH, RIGIIJFORMAT 9 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 115PRTPARM //-1/HTRD $ 116LABEL FINIS$ 117PURGE DUM/lY/MINUSl $ 118END $ 3,3-6(05/30/86)\n3.3.2TRANSIENT HEAT Description ofImportant DMAPOperationsTRANSFER ANALYSIS forTransient HeatTransfer Anal\u0026s_ ●4. 5. 7, 8. 11. 12. 130 16. 17, 18. 20. 21. 23. 26. ●28. 29. 31. 32. 36. 37. 39. 41. 43. 44. 45.s GP1generates coordinate systemtransformation matrices, tablesofgridpointlocations, and tablesrelating theinternal dndexternal degreeoffreedom indices: PLTTRAN modifies special scalargridpointsintheBGPDTandHSILtables. GotoDMAPNo.66ifthereisnoGridPointDefinition Table. GP2generates theElement Connection Tablewithinternal indices. GotoDMAPNo.19iftherearenostructure plotrequests. PLTSETtransforms userinputintoaformusedtodrivethestructure plotter. PRTMSGprintserrormessages associated withthestructure plotter. GotoDMAPNo.19ifnoboundary andstructure (heatconduction) element plotsare requested. PLOTgenerates allrequested boundary andheatconduction element plots. PRTMSGprintsplotter dataandengineering dataforeachgenerated plot. GP3generates applied Static(HeatFlux)LoadTables(HSLT)andtheGridPointTemperature Table. TA1generates element tablesforuseinmatrixassembly, loadgeneration, anddatarecoverl. GotoDMAPNo.35ifnoheatconduction orboundary elements eist. EMGgenerates element heatconduction andcapacitance matrixtablesanddictionaries for laterassembly bytheEMAmodule. GotoDMAPNo.30ifnoheatconduction matrix istobeassembled. EMAassembles heatconduction matrix [K~g]andGridPointSingularity Table. GotoDMAPNo.33ifnoheatcapacitance matrixistobeassembled. EMAassembles heatcapacitance matrix[Bgg]. RMGgenerates theradiation matrix, [Rgg],andaddstheestinlated linearcomponent of radiation totheconductivity matrix. generated foruseindatarecovery. Equivalence thelinearheattransfer radiation exists. GP4generates flagsdefining members multipoint constraint equations, [Rg]Theelement-radiation fluxmatrix, [Qge],isalso matrix, [Kgg],totheheatconduction matrixifno ofvarious displacement sets(HUSET) andformsthe {Ug}=o. GotoDMAPNo.46ifnosimpleelements exist. GotoDMAPNo.46ifnopotential gridpointsingularities exist. GPSPgenerates atableofpotential gridpointsingularities. Thesesingularities maybe extraneous inaradiation problem, sincesomepointsmaytransfer heatthrough radiation only. @FPformats thetableofpotential gridpointsingularities pnepared byGPSPandplacesit onthesystemoutputfileforprinting. \u003c 3.3-7,(05/30/86)\n47.Equivalence [Kgg]to constraints exist. 48.GotoDMAPNo.51ifHEATRIGIDFORMATS [Knnl$[RggltO[Rnnl\u003eand[Bgglto[Bnnlifnomultipoint nomultipoint constraints exist. 49.MCE1partitions themultipoint constraint equationmatrix, [Rg]=[RmRn], andsolves forthemultipoint constraint transformation matrix, [Gm]=-[Rml-l[Rnl. 50.MCE2partitions heatconduction andradiation matrices [1iIK [Kgg]=fln+ $ %n1‘mm [1RIR [Rgg]=fl-+R~ s mnmm [ 1BIB [Bgg]=~~BM s mnmm andperforms matrixreductions [Knn]=[nnl+[G;l[Kmnl +[Kmnl[GmJ +[G;l[\u0026JIGml . Thesameequation isapplied to[Rnn]and[Bnn]. 52.Equivalence [Knnlto[Kffl [Bnnlto[Bffl’ and[Rnnl‘0[Rffl‘f‘0 single-point constraints exist. 53.GotoDMAPNo.55ifnosingle-point constraints exist. 54.SCE1partitions thematrices asfollows: ‘[lifflKfs [Knn]=~~K– o SfSs [Rnn]and[Bnnlarepartitioned inthesamemanner, exceptthatonlytheffpartitions aresaved. 56.Equivalence [Kff]to[Kaalifnoomitted coordinates ‘Xist” 57.Equivalence [Rff]to[Raa]ifnoomitted coordinates exist. 3.3-8(05/30/86)\n58. 59. 60. 61. 62. 64. 65. 67. 68. 69. 71. 74. 75. 76.TRANSIENT HEATTRANSFER ANAfYSIS Equivalence [Bff]to[Baa]ifnoomitted coordinates exist. GotoDMAPNo.66ifnoomitted coordinates exist. SMP1partitims theheatconduction matrix solvesforthe andsolvesfor GotoDMAPNo.[1i!K [Kff]=;K oa00 transformation matrix9 [Go]: [Koo][Go]=-[Koa], thereduced heatconduction matrix[Kaa]: [Kaa]=[aa]+[Kao][Go]. 63ifnoradiation matrixexists. SMP2partitions constrained radiation matrix [1ii!Rao [Rffl=fyR— ‘ oa00 andperforms matrixreduction [Raa]=[;aa]+[Ra][Go]+[G:][Roa]+[G:][Roo][Go], GotoDMAPNo.66ifnoheatcapacitance matrix, [Bff], exists. SMP2calculates areduced heatcapacitance matrix, [Baa], withthesameequation asDMAP t!o,62. DPDgenerates thetabledefining thedisplacement setseachdegreeoffreedom belongs to (HUSETD), including extrapoints. Itprepares theTransfer Function Pool,theDynamics Load Table,theNonlinear Function Table,andtheTransient Response List. GotoDMAPNo.114andprintErrorMessage No.1ifthereisnoTransient Response List. Equivalence [Go]to[G:]and[Gm]to[G:]ifnoextrapointsweredefined. MTRXINselects thedirectinputmatrices [Kp]and[Bp]. . Equivalence [Kaa]to[Kd]iftherearenodirectinputstiffness matrices andno extrapoints; [Bpp]to[Bd]and[Kpplto[Kjd]ifOnlyextrapoints areused; and[Raa]to[Rdd]ifnoextrapointsareused. GotoDMAPNo.77ifthereisnoGridPointDefinition Table. GKADexpands thematrices toinclude extrapoints andassembles heatconduction, capacitance, andradiation matrices foruseinthetransient analysis: 3.3-9(05/30/86)\n78. 80. 81. 82. 83. 84. 85. 86.and ,[Kid]= [Bd] [RddlHEATRIGIDFORMATS [1KIO -a+— , 010 [1BIO a+— , 010 [1RIO a+— , 010 [Kddl=[K;d]+[K;dl , [Bdd]=[B:dl+[B:dl . (Nonzero valuesoftheparameters W4,G,andW3(seethePARAMbulkdatacard)arenot recommended foruseinheattransfer analysis andtherefore donotappearintheabove equations. ) Equivalence [Kd]to[Kdd]and[Bid]to[Bdd]ifnomatrices weregenerated from theelement heatconduction andcapacitance assemblers. Beginning ofloopforadditional dynamic loadsets. CASEextracts theappropriate recordfromCASECCcorresponding tothecurrent loopand copiesitintoCASEXX. TRLGgenerates matrices ofheatfluxloadsversustime.{P;},{P:},and{F$)are generated withonecolumnperoutputtimestep.{P}isgenerated withonecolumnper solution timestep,andtheTransient OutputListisalistofoutputtimesteps. Equivalence {P}to{Plifthedandpsetsarethesame. TRHTintegrates theequation ofmotion: [Bdd]{}+[Kdd] {u}={pdl+{Nd} , where {u}isavectoroftemperatures atanytime, {u}isthetimederivative of{u}(“velocity”), {Pd~is theapplied heatfluxatanytimestep,and {Nd}-is thetotalnonlinear heatfluxfromradiation and/orNPLINidata, extrapolated fromtheprevious solution vector. Theoutputconsists ofthe[u:]matrixcontaining temperature vectors andtemperature “velocity” vectors fortheoutputtimesteps. VDRprepares thesolution settemperatures, temperature “velocities”, andnonlinear loads, sortedbytimestep,foroutput. GotoDMAPNo.91ifthereisnooutputrequest forthesolution set. 3.3-10 (05/30/86)\nITRANSIENT HEATTRANSFER ANALYSIS 87.SDR3prepares therequested output ofthesolution settemperatures, temperature o“velocities”, andnonlinear loadssortedbypointnumberorelement number. 88.OFPformats thetablesprepared bySDR3foroutputsortedbypointnumberorelement number andplacesthemonthesystemoutputfileforprinting. 89.XYTRANprepares theinputforrequested X-Yplotsofthesolution setquantities. 90.XYPLOTprepares therequested X-Yplotsofthesolution settemperatures, “velocities” and nonlinear loadsversustime. 93.GotoDMAPNo.109ifnofurther outputisrequested. 94.Equivalence {ud}tO{Uplifnostructure points ‘ere‘nput” 95.GotoDMAPNo.97ifnostructure pointswereinput. 96.SDR1recovers thedependent temperatures: {Uo)=[G:]{Udl, HUd ——.{Uf),, uo MUf+Ue —— ={Unl, us {urn}=[G;]{uf+ue} 11Un+Ue and —— ={up}. ‘m Themodulealsorecovers theheatfluxintothepointshavingsingle-point constraints: {c$}=-{PSI+[K~s]{ufl. 98.SDR2calculates requested heatfluxtransfer intheelements andprepares temperatures, “velocities”, andheatfluxloadsforoutputsortedbytimestep. 99.SORHTmodifies theHOEFldatablockbcombining theheatflowdatafromdifferent sources fortheHBDYelements andwritestheresults ontheHOEFIXoutputdatablock. 100.Equivalence HOEFldatablocktotheHOEFIXdatablock. 101.SDR3prepares requested outputsortedbypointnumberorelement number. 102.OFPformats thetablesprepared bySDR3foroutputandplacesthemonthesystemoutputfile forprinting. 103.GotoDMAPNo.106ifnotemperature profile plotsarerequested. 104.PLOTgenerates allrequested temperature profile plotsandthermal contours forspecified times. 3.3-11(05/30/86)\nHEATRIGIDFORMATS 105.PRTMSGprintsplotter data,engineering data,andcontour dataforeachtemperature profile andthermal contour plotgenerated. 107.XYTRANprepares theinputforrequested X-Yplots.●108,XYPLOTprepares therequested X-Yplotsoftemperatures, “velocities”, element flux,and applied heatloadsversustime. 110.Goto 111.Goto 112.Print 113.Goto 1150PrintDMAPNo.116ifnoadditional dynamic loadsetsneedtobeprocessed. DMAPNo.80ifadditional dynamic loadsetsneedtobeprocessed. ErrorMessage No.2andterminate execution. DMAPNo,116andmakenormalexit. ErrorMessage No.1andterminate execution. 3.3-12(05/30/86)\nTRANSIENT HEATTRANSFER ANALYSIS 3.3.3OutputforTransient HeatTransfer Analysis Thefollowing printed output, sortedbypoint atselected multiples oftheintegration timestep: 1.Temperatures (THERMAL) andderivatives ofnumberorelement number(S0RT2), isavailable temperatures (VELOCITY) foralistofPHYSICAL points (gridpointsandextrascalarpointsintroduced fordynamic analysis) or SDISPLACEMENT andSVELOCITY forSOLUTI@N points(points usedintheformulation ofthe dynamic equation). 2.Nonzero components oftheapplied loadvector (!3L!3AD) andconstrained heatflow (SPCFORCE) fora1istofPHYsICAL points. 3.Nonlinear loadvectorforalistofS0LUTI13N points. 4.Fluxdensity (ELFORCE) inselected elements. Thefollowing plotter outputisavailable: 1.Plotofthe 2.Temperature 3.x-Yplotof point. 4.x-Yplotof 5.x-YplotofStructural model. profiles andthermal contours forselected timeintervals. temperature orderivative oftemperature foraPHYSICAL pointoraSOLUTION theapplied loadvector, nonlinear loadvector, orconstrained heatflow. fluxdensity foranelement. Thedatausedforpreparing theX-Yplotsmaybepunched orprinted intabular form(see VolumeI,Section 4.3).Also,aprinted summary isprepared foreachX-Yplotwhichincludes the maximum andminimum valuesoftheplotted function. 3.3.4CaseControl DeckforTransient HeatTransfer Analysis Thefollowing itemsrelatetosubcase definition and Transfer Analysis: 1. 2. 3.dataselection forTransient Heat Onesubcase mustbedefined foreachdynamic loading condition. DLOADand/orNONLINEAR mustbeusedtodefineatime-dependent eachsubcase. Thestaticloadcards(QVECT, QVklL,QHBDY,QBDY1,loading condition for andQBDY2)canalsobe usedtodefineadynamic loadbyusingthesecardswith,orinstead of,theDAREAcards. Thesetidentification numberonthestaticloadcards(field2)isusedinthesame mannerasthesetidentification numberontheDAREAcards(field2). Allconstraints mustbedefined abovethesubcase level. @3.3-13(05/30/86)\n4. 5. 6. ● 7.HEATRIGIDFORMATS TSTEPmustbeusedtoselectthetime-step intervals tobeusedforintegration and outputineachsubcase. Ifnonzero initial conditions aredesired, ICmustbeusedtoselectaTEMPsetinthe●BulkDataDeck. Anestimated temperature distribution vectormustbedefined onTEMPcardsandselected withaTEMP(MATERIAL) request ifradiation effects areincluded. Onrestart following anunscheduled exitduetoinsufficient time,thesubcase structure shouldbechanged toreflect anycompleted loading conditions. 3.3.5aameters forTransient HeatTransfer Analysis ..———-——.— Thefollowing parameters areusedinTransient HeatTransfer Analysis: 1. 2. 3. 4. 5. 6.ASETflJT -optional, Apositive integer valueofthisparameter causestheASEToutput——.. datablocktobegenerated by thegeneration ofthisoutput AUT@SPC -reserved forfuturetheGP4module. Anegative integer valueorOsuppresses datablock. Thedefault valueisO. optional use.Thedefault valueis-1. BETA-optional. Therealvalueofthisparameter isusedasafactorinthe integration algorithm (seeSection 8.4.2oftheTheoretical Manual). Thedefault value is0.55. RADLIN-optional. Apositive integer valueofthisparameter causessomeofthe radiation efffects tobelinearized (seeEquation 2,Section 8.4,2oftheTheoretical●Manual). Thedefault valueis-1. SIGMA-optional. Therealvalueofthisparameter istheStefan-Boltzmann constant. Thedefault valueis0.0. TABS_-optional. Therealvalueofthisparameter isthe temperature. Thedefault valueis0.0. 3.3.6RigidFormatErrorMessages fromTransient HeatTransfer Analysis Thefollowing fatalerrorsaredetected bytheDMAPinstructions Transfer Analysis rigidformat. Thetextforeacherrormessage isgiven andisfollowed byadditional material, including suggestions forremedialabsolute reference intheTransient Heat belowincapital letters action. TRANSIENT HEATTRANSFER ANALYSIS ERRORMESSAGE N@,1-TRANSIENT RESPONSE L1STREQUIRED FOR TRANSIENT RESP!3NSE CALCULATIONS. 3.3-14(05/30/86)\nTRANSIENT HEATTRANSFER ANALYSIS Timestepintervals tobeusedmustbespecified onaTSTEPcardintheBulkDataDeckandaTSTEP @selection mustbemadeintheCaseControl Deck. TRANSIENT HEATTRANSFER ANALYSIS ERRORMESSAGE Nli!.2-ATTEMPT TOEXECUTE M!3RETHAN100L!30PS. Anattempt hasbeenmadetousemorethan100dynamic loadsets.Thisnumbermaybeincreased by ALTERing theREPTinstruction following thelastXYPLllTinstruction. 3.3-15(05/30/86)\nHEATRIGIDFORMATS 3.3-16(05/30/86)"},"title":"User's Manual P18"},"/docs/users/users_manual_019/":{"data":{"":"","options-ineffect-go-err2-list-nodeck-noref-nooscar#4.AERORIGIDFORMATS\n4.1BLADECYCLICMODALFLUTTER ANALYSIS\n●4.1.1DMAPSequence forBladeCyclicModalFlutter Analysis\nRIGIDFORMAT DMAPLISTING\nAPRILlg86RELEASE\nAEROAPPROACH, RIGIDFORMAT 9\nLEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING\nOPTIONS INEFFECT GO ERR=2 LIST NODECK NOREF NOOSCAR":"4.AERORIGIDFORMATS 4.1BLADECYCLICMODALFLUTTER ANALYSIS ●4.1.1DMAPSequence forBladeCyclicModalFlutter Analysis RIGIDFORMAT DMAPLISTING APRILlg86RELEASE AEROAPPROACH, RIGIDFORMAT 9 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING OPTIONS INEFFECT GO ERR=2 LIST NODECK NOREF NOOSCAR\r1BEGIN 2PRECHK 3FILE 4PARAM 5GP1 6COND 1GP2 8GP3 9TA1 10COND 11PURGE 12PARAM 13PARAM 14PARAM 15COND 16PARAM i7INPUTT1 18EQUIV 19LABEL 20EMGAERO09-COMPRESSOR BLAOEMODALFLUTTER ANALYSIS -APR.1986$ ALL$ PHlHL=APPENO/AJJL=APPENO/FSAVE=APPEND/CASEYY=APPEND/CLAMAL= APPEND/OVG=APPENO/QHHL=APPEND $ //tiMp’fti/cARDNo/o/O $ GEoMl,GEOM2,/GPL,EQEXIN,GPDT,CSTM,BGPDT,S lL/S,N,LUSET/S,N, NOGPDT/MINUSl=-l $ ERROR5,NOGPOT $ GEoM2,EQExlN/EcT $ GEoM3,EQEx1N,GEoM2/,GpTT/NoGRAv $ ECT,EPT,BGPDT,SIL,GPTT,CSTM/EST,GE l,GPECT,,/LUSET/S,N, NOSIMP/l/S,N,NOGENL/S,N,GENEL $ ERROR5,NOSIMP $ OGPST/GENEL $ //ADD/NoKGGX/l/O $ //ADD/NOMGG/l/o $ //NoP/V,Y,KGGIN–l $ JMPKGGIN,KGGIN $ //ADD/NOKGGX/-l/O $ /KTOTAL,,.,/c,y,LOcATION=-l/c.Y, lNPTuNIT”o $ KTOTAL,KGGX $ JMPKGGIN $ EST,CSTM,MPT,DlT,GEOM2,/KELM, KDICT,MELM,MDICT,,,/s,N,NoKGGx/s, N,NOMGG////C,Y,COUPMAC,Y,,Y, CF’BAR/c,Y,CPROO/c,y, cPQuAD1/c,Y,cPQuAD2/c,Y,cPTR lA}/c,Y,cPTRlA2/c,Y,cPTuBE/c,Y, CPQDPLT/C,Y,CPTRPLT/C,Y,CPTRBSC $ 4.1-1(05/30/86)\nAERORIGIDFORMATS RIGIDFORMAT OMAPLISTING APRIL1986RELEASE AEROAPPROACH, RIGIDFORMAT 9 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 k3 bk k5COND EMA LABEL COND EMA COND GPWG OFP LABEL EQUIV COND SMA3 LABEL GP4 PARAH COND PURGE GPCYC COND CONO PARAH COND GPSP OFP LABELJMPKGGX,NOKGGX $ GPECT,KOICT,KELM/KGGX,GPST $ JMPKGGX $ ERROR1,NOMGG $ GPECT,MDICT,MELM/MGG,/-l/C,Y,WTHASS=l .0$ LGPWG,GRDPNT $ BGPOT,CSTM,EQEXlN,MGG/OGPWG/V,Y,GROPNT=-l/C,Y,WMASS $ OGPWG,,,,,//S,N,CARDNO $ LGPWG$ KGGX,KGG/NOGENL $ LBL1l,NOGENL $ GEl,KGGX/KGG/LUSET/NOGENL/NOS IMP$ LBL1l$ CASECC,GEOt44,EQEXlN,GPDT,BGPDT,CSTM,/RG, ,USET,ASET/ LUSET/S,N,MPCFl/S,N,MPCF2/S,N,S lNGLE/S,N,OMIT/S.N,REACT/O/ S,N,REPEAT/S,N,NOSET/S,N,NOL/S,N,NOA/C,Y,ASETOUT/S,Y, AUTOSPC $ //YfNOTff/REACDATA/REACT $ ERROR6,REACDATA $ GM,GMO/MPCFl/GO,GOD/OMIT/KFS,QPC/S INGLE$ GEOMh,EQEXIN,USET/CYCD/V,Y, CTYPE/S,N,NOGO $ ERROR7,NOG0 $ LBL4,GENEL $ //EQ/GpspF LG/AUTOSpC $ LBLk,GPSPFLG $ GPL,GPST,USET,SIL/OGPST/S,N ,NOGPST $ OGPST,,,,,//S,N,CARDNO $ LBL4$ 4.1-2(05/30/86)\nBLADECYCLICMODALFLUTTER ANALYSIS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE AEROAPPROACH, RIGIDFORMAT 9 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 46EQUIV 47COND 48MCE1 49MCE2 50LABEL 51EQUIV 52COND 53SCE1 54LABEL 55EQUIV 56COND 57SMPI 58SMP2 59LABEL 60DPD 61COND 62EQUIV 63cYCT2 64COND 65READ 66OFP 67COND 68cYCT2 6gCONDKGG,KNN/MPCFl/MGG,MNN/MPCFl $ LBL2,MPCF1 $ USET,RG/GM $ uSET,GM,KGG,MGG,,/KNN,MNN, ,$ LBL2$ KNN,KFF/SINGLE/MNN,MFF/SINGLE $ LBL3,SINGLE $ USET,KNN,MNN,,/KFF,KFS,,MFF ,,$ LBL3$ KFF,KAA/OMIT/MFF,MAA/0t41T $ LBL5,0MIT $ USET,KFF ,,,/GO,KAA,KOO,LOO,,,,, $ USET,GO,MFF/HAA $ LBL5$ DYNAMICS,GPL,SIL,USET/GPLO, SILD,USETD,TFPOOL, ,,,,,EEO,EQOYN/ LUSET/S,N,LUSETD/NOTFL/NODLT/NOPSOL/NOFRL/ NONLFT/NOTRL/S,N,NOEED//S,N,NOUE $ ERROR2,NOEE0 $ GO,GOD/NOUE/GM,GMD/NOUE $ CYCD,KAA,MAA, ,,/KKK,MKK,,,/FORE/V,Y,NSEGS=-l/V,Y, KINDEX=-1/V,Y,CYCSEQ=-l/l/S,N,NOGO $ ERROR7,NOG0 $ KKK,MKK,, ,EED,,CASECC/LAMK,PHIK, ,OEIGS/MODES/S,N, NEIGV$ OEIGS,LAMK,,,,//S,N,CARONO $ ERROR4,NEIGV $ CYCD,,,,PHIK,LAMK/, ,,PHIA,LAMA/BACK/V,Y,NSEGS/V,Y, KINDEX/V,Y,CYCSEQ/l/S,N,NOGO $ ERROR7,NOG0 $ 4.1-3(05/30/86)\nAERORIGIDFORMATS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE AEROAPPROACH, RIGIOFORMAT 9 LEVEL2.0NASTRAN OMAPCOMPILER -SOURCE LISTING 72 73 74 75 76 77 7a 79 80 81 82 83 84 85 86 87 88 89SDR1 SOR2 OFP PARA14L PURGE COND PLTSET PRTMSG CONO PLOT PRTMSG LABEL APDB PARTN SMPYAO MTRXIN PURGE EQUIV GKAO GKAMUSET,,PHIA,,,GO,GM,,KFS,,/PHIG,,/l/REIG $ CASECC,CSTM,MPT,DIT, EQEXIN, SIL,,,BGPDT,LAMA, ,PHIG,EST, ,/,, OPHIG,,,PPHIG/REIG $ OPHIG,,,,,//S,N,CARONO $ PCOB/)PRES////JUMPPLOT $ PLTSETZ,PLTPARZ,GPSETSZ,ELSETSZ/JUMPPLOT $ PZZ,JUMPPLOT $ PCDB,EQEXIN,ECT/PLTSETZ,PLTPARZ,GPSETSZ, ELSETSZ/ S,N,NSILZ/S,N,JUMPZ=-l $ PLTStTZ// $ PZZ,JUMPZ $ PLTPARZ,GPSETSZ,ELSETSZ,CASECC, BGPDT,EQEXIN,SIL, ,PPHIG,,/ PLOTZ/NSILZ/LUSET/JUMPZ/PLTFLGZ=- l/S,N,PFILEZ=O $ PLOTZ// $ Pzzs EDT,USET,BGPOT,CSTM,EQEXIN, GM,GO/AERO,ACPT,FLIST,GTKA, PVECT/ S,N,NK/S,N,NJ/V,Y,MINMACH/V,Y,MAXMACH/V,Y, lREF/V,Y,MTYPE/ NEIGV/V,Y,KINDEX=-l $ PHIA,PVECT,/PHIAX,,,/l $ PHIAX,MAA,PHIAX ,,,/Ml/3/l/l/O/l $ CASECC,MATPOOL, EQOYN,,TFPOOL/K2PP,M2PP,B2PP/LUSETD/S ,N, NoK2PP/s,N,NoM2PP/s,N,NoB2PP $ K200/NoK2PP/M2DD/NoM2PP/B200/NoB2PP $ M2PP,M2Do/NosET/B2PP,B2DD/NosET/K2PP, K2DD/NosET $ USETO,GM,GO, ,,,,K2PP,M2PP,B2PP/, ,,GM0,GOD,K2D0,M2DD,B20D/ cMpLEv/Dlsp/YtMoDAL#r/o ,o/o,o/o.o/NoK2pp/ NOM2PP/NOB2PP/MPCF l/SINGLE/OMIT/NOUE/ -1/-1/-1/-1 $ USETD,PHI AX,MI,LAMK,01T,M2D0, B20D,K2Do,cAsEcc/MHH,BHH,KHH, PH10H/NOUE/C,Y,LMODES=999999/C,Y, LFREQ=O.O/C,Y,HFREQ=O.O/ NOM2PP/NOB2PP/NOK2PP/S,N,NONCUP/S, N,FMODE/C,Y, KOAMP=-1 $ 4.1-4(05/30/86)\nBLADECYCLICMODALFLUTTER ANALYSIS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE AEROAPPROACH, RIGIDFORMAT 9 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 90PURGE 91COND 92PLTSET 93PRTMSG 94PARAM 95PARAM 96coNo 97PLOT 98PRTMSG 99LABEL 100PARAM 101AMG 102PURGE 103CONDPLTSETX,PLTPAR,GPSETS,ELSETS/JUMPPLOT $ P2,JUMPPLOT $ PCDB,EQDYN,ECT/PLTSETX,PLTPAR,GPSETS, ELSETS/S,N,NSl L1/S,N, JUMPPLOT $ PLTSETX//$ //t?MPY~~/PLTFLG/l/l $ //MPY/PF ILE/O/O $ P2,JUMPPLOT s PLTPAR,GPSETS, ELSETS,CASECC,BGPOT, EQDYN,,,,,/pLoTxl/NslLl/ LUSET/S,N,JUMPPLOT/S,N,PLTFLG/S ,N,PFILE $ PLOTX1//$ P2$ //,tADD*/DEsTRY/O/l $ AERo,AcPT/AJJL,sKJ,DlJK,D2JK/NK/NJ/s,N,DEsTRY $ DlJE,D2JE/NoDJE $ NODJE,NODJE $ 104INPUTT2 /DlJE,02JE,,,/C,Y,POSlT10N=- l/C,Y,UNITNUM=ll/C,Y,USRLABEL= 105LABEL 106PARAM 107AMP 108PARAM 109PARAM 110PARAM 111LABEL 112FA1TAPEID $ NODJE$ //~~ADD*/XQHHL/l/O $ AJJL,SKJ,01JK,D2JK,GTKA,PHI DH,DlJE,D2JE,usETD,AERo/QHHL, ,/ NoUE/S,N,XQHHL $ //llPY/NOP/l/l $ //MPYf(/NOH/O/ 1$ //~~MPY/FLOOP/V,Y,NODJE=-l/O $ LOOPTOP $ KHH,BHH,MHH,QHHL,CASECC,FL lST/FSAVE,KXHH,BXHH,MXHH/S,N,FLOOP/ S,N,TSTART/S,N,NOCEAD $ 4.1-5(05/30/86)\nAERORIGIDFORMATS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE AEROAPPROACH, RIGIDFORMAT9 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCELISTING 113 114 115 116 117 118 119 120 121 122 123 I24 125 126 127 128 129 130 131 132 I33 134 135 136EQUIV COND CEAD COND LABEL VDR COND OFP LABEL FA2 COND LABEL COND REPT JUMP LABEL PARAML COND XYTRAN XYPLOT LABEL PARAM COND HODACCKXHH,PHIH/NOCEAD/BXHH,CLAMA/NOCEAD/ KXHH,PHIHL/NOCEAD/BXHH,CLAMAL/NOCEAD/ CASECC,CASEYY/NOCEAD $ VDR,NOCEAD $ KXHH,BXHH,MXHH,EED,CASECC/PH lH,CLAMA,OCEIGS,/S,N,EIGVS $ LBLZAP,EIGVS $ VDR$ CASECC,EQDYN,USETD,PH IH,CLAMA, ,/OPHIH,/CEIGEN/MODAL/ 123/s,N,NoH/s,N,NoP/FmoDE $ LBL16,NOH $ OPHIH,,,,,//S,N,CARDNO $ LBL16$ PHIH,CLAMA,FSAVE/PHIHL,CLAMAL ,CASEYY,OVG/S,N,TSTART/C,Y,VREF= l.O/C,Y,PRINT=YESB $ CONTINUE,TSTART $ LBLZAP $ CONTINUE,FLOOP $ LOOPTOP,1OO $ ERROR3 $ CONTINUE $ XYCDB//PRES////NOXYCDB $ NOXYOUT,NOXYCDB $ XYCDB,OVG ,,,,/XYPLTCE/VG/PSET/S,N,PF lLE/S,N,CARDNO $ XYPLTCE//$ NOXYOUT $ //ANlj/pJUMp/NOp=-l/JUMppLOT $ FINIS,PJUMP $ CASEYY,CLAMAL,PHIHL,CASECC, ,/CLAMALl,CPHIHl ,CASEZZ,,/ cEIGN $ 4,1-6(05/30/86)\nBLADECYCLICMODALFLUTTER ANALYSIS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE AEROAPPROACH, RIGIDFORMAT 9 LEVEL2.0NASTRAN OMAPCOMPILER -SOURCE LISTING 137DDR1 138EQUIV 139CONO 140SOR1 141LABEL 142EQUIV 143COND 144VEC 145PARTN 146LABEL 147SOR2 148OFP 149COND 150PLOT 151PRTMSG 152LABEL 153JUMP 154LABEL 155PRTPARN 156LABEL 157PRTPARM 158LABEL 159PRTPARM 16oLABELCPHIHl,PHIOH/CPHIO $ CPHID,Cl?HIP/NOA $ LBL14,NOA $ USETO,,CPHID,, ,GOO,GMO,,KFS,,/CPHIP,,QPC/l/DYNAMl CS$ LBL14$ CPHID,CPHIA/NOUE $ LBLNOE,NOUE $ USETO/RP/D/A/E $ cPHID,,RP/cPHIA,,,/l/3 $ LBLNOE $ CASEZZ,CSTM,HPT,DIT,EQDYN,S ILD,,,BGPDT,CLAMAL1,QPC,CPHIP,EST, ,/ ,OQPC1,OCPHIP,OESC1,OEFC1,PCPHI P/CEIGN $ OCPHIP,OQPCl,OESCl,OEFCl,,//S, N,CARDNO $ P3,JUMPPLOT $ PLTPAR,GPSETS,ELSETS,CASEZZ,BGPDT, EQDYN,SILD,,PCPHI P,,/pLOTX3/ NSILl/LUSET/JUMPPLOT/PLTFLG/PF ILE$ PLoTx3//$ P3$ FINIS$ ERROR1 $ //-1/BLADEMOS $ ERROR2 $ //-2/*BLADEMDS~~ $ ERROR3 $ //-3/BLADEMDs $ ERROR4 $ 161PRTPARM //-4/BLADEMOS $ 4.1-7(05/30/86)\nAERORIGIDFORMATS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE AEROAPPROACH, RIGIDFORMAT 9 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 162 163 164 165 166 167 168 169 170LABEL PRTPARII LABEL PRTPARM LABEL PRTPARM LABEL PURGE ENDERROR5 s //-5/BLADEMDs $ ERROR6 $ //-6/BLADEMos $ ERROR7 $ //-7/BLADEMDs $ FINIS$ DUMMY/MINUSl $ $’ 4.1-8(05/30/86)\n4.1.2 5. 6. 7. 8. 9. 10. 15. 16. 17. 180 20. 21. 22. 24. 25. 26. 27. 28. 30. 31, 32. 34. 36. 38. 39. 40. 42. 43.BLADECYCLICMODALFLUTTER ANALYSIS Description ofImportant DMAPOperations forBladeCyclicModalFlutter Analysis GP1generates coordinate systemtransformation matrices, tablesofgridpointlocations, and tablesrelating theinternal andexternal gridpointnumbers. GotoDMAPNo.162andprintErrorMessage No.5ifnogridpointsaredefined. GP2generates Element Connection Tablewithinternal indices. GP3generates StaticLoadsTableandGridPointTemperature Table. TA1generates element tablesforuseinmatrixassembly andstressrecovery. GOtoDMAPNo.162andprintErrorMessage No.5ifnostructural elements defined.havebeen GotoDMAPNo.19ifnostiffness matrixissupplied bytheuseronanexternal file. Setparameter NEiKGGX=-1sothatthestiffness matrixwillnotbegenerated inDMAPNo.20. INPUTT1 readstheuser-supplied stiffness matrix[KTOTAL] fromanexternal file(GINOfile INPT). Equivalence [Kg]to[KTOTAL]. EMGgenerates structural element stiffness andmassmatrixtablesanddictionaries forlater assembly bytheEMAmodule. GotoDMAPNo.23ifnostiffness matrixistobeassembled. EMAassembles stiffness matrix[Kg]andGridPointSingularity Table. GotoDMAPNo.154andprintErrorMessage No.1ifnomassmatrixistobeassembled. EMAassembles massmatrix[Mgg]. GotoDMAPNo.29ifnoweightandbalance information isrequested. GPWGgenerates weightandbalance information. i3FPformats theweightandbalance information prepared byGPWGandplacesitonthesystem outputfileforprinting. Equivalence [Kg]to[Kgg]iftherearenogeneral elements. GotoDMAPNo.33iftherearenogeneral elements. SMA3addsgeneral elements to[Kg]toobtainstiffness matrix[Kgg]. GP4generates flagsdefining members ofvarious displacement sets(USET)andforms multipoint constraint equations [Rg]tug}=0. GotoDMAPNo.164andprintErrorMessage No.6iffree-body supports arepresent. GPCYCprepares segment boundary table. GotoDMAPNo.166andprintErrorMessage No.7iftheCYJ!31Ndataisinconsistent. GotoDMAPNo.45ifgeneral elements arepresent. GotoDMAPNo.45ifnopotential gridpointsingularities exist. GPSPgenerates atableofpotential gridpointsingularities. 4.1-9(05/30/86)\nAERORIGIDFORMATS 44.OFPformats thetableofpotential gridpointsingularities prepared byGPSPandplacesit onthesystemoutputfileforprinting. 46.Equivalence [Kgg]to[Knn]andLMgg]to[Mnn]ifnomultipoint constraints exist, 47.GotoDMAPNo.50ifnomultipoint constraints exist. 48.MCE1partitions multipoint constraint equations [Rg]=[RmiRn] andsolvesfor multipoint constraint transformation matrix[Gm]❑ -[Rm]-l[Rn]. 49.MCE2partitions stiffness andmassmatrices [,iIK [Kgg]=fl+K~ mnmm andperforms matrixreductionsand [Mgg]= [Knn]=[inn]+[GJ[Kmn] +[Kn][Gm] +[G~][Kmm][Gm] and [Mnn]=[inn]+[G~][Mmn] +[Mn][Gm] +[G][Mmm][Gm] . 51.Equivalence [Knnlto[Kff]and[Mnn]to[Mff]ifnosingle-point constraints exist. 52.GotoOMAPNo.54ifnosingle-point constraints exist. 53.SCE1partitions outsingle-point constraints 55.Equivalence [Kff]to[Laa]and[Mff]tolMaa]ifnoomitted coordinates exist. 56.GotoDMAPNo.59ifnoomitted coordinates exist. 57.SMP1partitions constrained stiffness matrix [1iilKao [Kff]=a+—, ‘oa1’00 solvesfortransformation matrix[Go]=-[Koo]-l[Koa] andperforms matrixreduction [Kaa]=[aa]+[Ka][Go] . 58.SMP2partitions constrained massmatrix [1iIM [Mff]=;+ oaIMOO 4,1-10(05/30/86)\n60. 61. 62. 63. 64. 65. 66. e67. 68. 69. 70. 71. 72. 75.BLADECYCLICMODALFLUTTER ANALYSIS andperforms matrixreduction [Maa]=[aa]+[Ma][Go] +[G~][Moo][Go] +[G~][Moa] . DPDgenerates flagsdefining members ofvarious displacement setsusedindynamic analysis (USETD), tables relating theinternal andexternal gridpointnumbers (GPLD), including extrapoints introduced fordynamic analysis (SILO), and Pool (TFPOOL), andEigenvalue Extraction Data(EED).“prepares Transfer Function GotoDMAPNo.156andprintErrorMessage No.2ifthere Equivalence [Go]tofG~]and[Gm]to[G~]ifthereareno fordynamic analysis.isnoEigenvalue Extraction extrapointsintroduced CYCT2transforms matrices fromsymmetric components tosolution set. GotoDMAPNo.166andprintErrorMessage No.7ifaCYCT2errorwasfound. READextracts realeigenvalues andeigenvectors fromtheequation [Kkk-AMkk]{@k} =O, andnormalizes eigenvectors according tooneofthefollowing userrequests: 1)Unitvalueofaselected component 2)Unitvalueofthelargest component 3)Unitvalueofthegeneralized mass.Data. OFPformats thesummary ofeigenvalue extraction information (OEIGS) andtheeigenvalues (LAMK)prepared byREADandplacesthemonthesystemoutputfileforprinting. GotoDMAPNo.160andprintErrorMessage No.4ifnoeigenvalues werefound. CYCT2findssynunetric components ofengenvectors fromsolution seteigenvectors. GOtoDMAPNo.166andprintErrorMessage No.7ifaCYCT2errorwasfound. SDR1recovers dependent components oftheeigenvectors {$.}=[Go]{$a}, H‘$n——={$91. om{+m}=[Gm]{$n}, SDR2prepares eigenvectors (OPHIG) foroutputandPPHIGfordet’ormed plotting. OFPformats thetableprepared bySDR2andplacesitonthesystemoutput.fileforprinting. GotoDMAPNo.81iftherearenostructure plotrequests. 4.1-11(05/30/86)\n76. 77. 78. 79. 80, 82. 83. 84. 85. 87. 88. 89, 91.AERORIGIDFORMATS PLTSETtransforms userinputintoaformusedtodrivethestructure plotter. PRTMSGprintserrormessages associated withthestructure plotter. GotoDMAPNo.81ifnodeformed (modal) structure plotsarerequested. PLOTgenerates allrequested deformed (modal) structure plots. PRTMSGprintsplotter dataandengineering dataforeachdeformed (nlodal) structure p“lot. generated. APDBprocesses theaerodynamic datacardsfronEDT.AEROandACP’Treflect theaerodynamic parameters. PVECTisapartitioning vector andGTKAis)transt’orm,!tion matrix between aerodynamic (K)andstructural (a)degrees offreedom. PARTNpartitions theeigenvector intoallsineoral SMPYADcalculates themodalmassmatrix [M]=[ MXTRINselects thedirectinputmatr Equivalence [Mp]to[Md],[Bp]to areapplied.XT al[Maa][o:] 22cosinecomponents. 2 ces[Kpp],[Mpp]and[Bpp]. [Bdland[Kplto[Kd]ifnoconstraints GKADapplies constraints todirectinputmatrices [Kpl,[Mp]ani[Fpl,forming [Kid],[Mid]and[Bid]andforms[Gmdland[God]. GKAMselects eigenvectors toform[Odh]andassembles stiffness, massanddamping matrices inmodalcoordinates: [1’110[Mhh]=—— +[’$h][M:d][$dh] s 010 [1bi10 [Bhh].——+[’+jh][B:d][@dh] $ 010 where KDAMP=-1(default) KDAMP=1 ‘i=modalmasses m.1=modalmasses bi=mi211fig(fi) bi=O ki=mi4r2f.1ki=(l+ig(fi)) 4m2fmi GotoDMAPNo.99ifnoplotoutputisrequested. 4,1-1.2(05/30/86)\n92. ●93. 96. 97. 98. 101. 103. 104. 107. 110. 111,BLADECYCLICMODALFLUTTER ANALYSIS PLTSETtransforms userinputintoaformusedtodrivethestructure plotter. PRTMSGprintserrormessages associated withthestructure plotter. GotoDMAPNo.99ifnoundeformed aerodynamic orstructural element plotsarerequested. PLflTgenerates allrequested undeformed aerodynamic andstructural element plots. PRTMSGprintsplotter dataandengineering dataforeachundeformed aerodynamic and structural element plotgenerated. AMGformstheaerodynamic matrixlist[Ajj],theareamatrix[Skj],andthedownwash coefficients LDk]and[Dkl. GotoDMAPNo.105iftherearenouser-supplied downwash coefficients. INPUTT2 provides theuser-supplied downwash factors duetoextrapoints ([De], [De]). PARAMN@DJEmustbesettoenterthesematrices. Thedownwash w,onbox.jduetotheJ motionofanextrapoint,Ue,isgivenby {Wj}= AMPcomputes theaerodynamic matr ‘ail‘ae [1[+dh]=‘—— , ‘eiI‘ee llD.l] , [Dh]\u003c=[Djil e 21D2] and [Dh]\u003c=[Dji ,je Foreach(m,k)pair:[De+ikDe]{ue} . xlistrelated tothemodalcoordinates asfo’lows: [Gki]=[Ga]T[6ai] , [Di]=[Dk]T[Gki] \u003e [Dfi] =[Dfk]T[Gki]. [Djh]=[Djl+ik[Dj] . Foreachgroup: [Qjh]=[A~j]~~ouP [Djh]group , [Qkh]=[Skj][Qjh] , [Qih] =[Gki]T[Qkh] Qih and [1[Qhh]\u003c=‘–.Qeh PARAMinitializes theflutter loopcounter (FLIIOP) tozero. Beginning ofloopforflutter. 4.1-13(05/30/86)\nAERORIGIDFORMATS 112.FA1computes thetotalaerodynamic massmatrix [Mhl, thetotalaerodynamic stiffness matrix [Kh]andthetotalaerodynamic damping matrix [B~h]aswellasalooPing table FSAVE, FortheK-method and‘~h=(k2/b2)Mhh +(P/2)Qhh, ‘h‘‘hh ‘ih=0, 113.Setupequivalences fortheKE-andPK-methods. 114.Got.oDMAPNo.117fortheKE-andPK-methods. 115,CEADextracts complex eigenvalues andeigenvectors fromtheequation [MhP2+B;hp+K;h]{$h} ‘O andnormalizes eigenvectors tounitmagnitude ofthelargest component. 116. 118. 119. 120. 122. 123. 125. 126. 127. 130. 131. 132. 135. 136.GotoDMAPNo.124ifnocomplex eigenvalues werefound. VDRprepares eigenvectors (!3PHIH) foroutput, usingonlytheextraPointsintroduced for dynamic analysis andmodalcoordinates.● GotoDMAPNo.121ifthereisnooutputrequest fortheextrapointsintroduced fordynamic analysis ormodalcoordinates. ●flFPformats thetableofeigenvectors forextrapointsintroduced fordynamic analysis and modalcoordinates prepared byVDRandplacesitonthesystemoutputfileforprinting. FA2appends eigenvectors toPHIHL,eigenvalues toCLAMAL, CaseControl toCASEYY, andV-g plotdatato13VG. GotoDMAPNo.128.ifthereisinsufficient timeforanother flutter loop. GotoOMAPNo.128iftheflutter loopiscomplete. GotoDMAPNo.111foradditional aerodynamic configuration triplet values. GotoDMAPNo.158andprintErrorMessage No.3ifthenumberofflutter loopsexceeds 100. GotoOMAPNo.133iftherearenoX-Yplotrequests. XYTRANprepares theinputforrequested X-Yplots. XYPL!3Tprepares therequested X-Yplotsofdisplacements, velocities, accelerations, forces, stresses, loadsandsingle-point forcesofconstraint versustime. GotoDMAPNo.168andmakenormalexitiftherearenooutputrequests involving dependent degrees offreedom orforcesandstresses. M@DACCselects alistofeigenvalues andeigenvectors whoseimaginary parts(velocity in inputunits)areclosetoauserinputlist. 4.1-14(05/30/86)\nBLADECYCLICMODALFLUTTER ANALYSIS 137.!JDR1transforms thecomplex eigenvectors frommodaltophysical coordinates {$:}={@dh){$h} . 138.Equivalence {o:}to{$1ifnoconstraints areapplied. 139.GotoDMAPNo.141ifnoconstraints areapplied. 140.SDR1recovers dependent components ofeigenvectors {$:}=[G:]{$:} , andrecovers single-point forces ofconstraint {qs}=[K:s]{$f}, ___={Q;}. ~~ ●142.Equivalence {$}to{$:}iftherearenoextraPointsintroduced fordynamic analysis. 143.GotoDMAPNo.146iftherearenoextrapoints. 144.VECgenerates ad-sizepartitioning vector(RP)forthea-ande-sets {l+++{Ua}+{Ue}. 145.PARTNperforms partition of{$:}usingRP 147.SDR2calculates element forces (OEFCl) andstresses (OESCl) and (OCpHIp) andsingle-point forcesofconstraint (9QPC1)foroutput plotting.prepares eigenvectors andPCPHIPfordeformed 148.flFPformats thetablesprepared bySDR2andplacesthemonthesystemoutputfilefor printing. 149.GotoDMAPNo.152ifnodeformed aerodynamic orstructural element plotsarerequested. 150.PL!3Tprepares alldeformed aerodynamic andstructural element plots. 1510PRTMSGprintsplotter dataandengineering dataforeachdeformed plotgenerated. 153,GotoDMAPNo.168andmakenormalexit. a 4.1-15(05/30/86)\nAERORIGIDFORMATS 155.PrintErrorMessage No.1andterminate execution. 157.PrintErrorMessage No.2andterminate execution. 159.PrintErrorMessage No.3andterminate execution. 161.PrintErrorMessage No.4andterminate execution. 163.PrintErrorMessage No.5andterminate execution. 165.PrintErrorMessage No.6andterminate execution. 167,PrintErrorMessage No.7andterminate execution. 4.1-16(05/30/86)\nBLADECYCLICMODALFLUTTER ANALYSIS ●4.1.3OutputforBladeCyclicModalFlutter Analysis TherealEigenvalue Summary TableandtherealEigenvalue Analysis Summary, asdescribed underNormalModesAnalysis (seeSection 2.3,3), areautomatically printed. Allrealeigenvalues areincluded eventhoughallmaynotbeusedinthemodalformulation. Thecomplex eigenvalues areincluded intheFlutter Sumnary andareprinted foreach aerodynamic loop. Thegridpointsingularities fromthestructural modelarealsooutput. AFlutter Summary foreachvalueoftheconfiguration parameters isprinted outunless PRINT=Nf3. ThisshowsMachnumber, density, reduced frequency, velocity, damping, andfrequency for eachcomplex eigenvalue. V-gandV-fplotsmayberequested bytheXY!3UTcontrol cardsbyspecifying thecurvetype asVG.The“points” areloopnumbers andthe“components” areGorF. Printed outputofthefollowing types,sortedbycomplex eigenvalue rootnumber(S!3RT1) and (m,k,p),mayberequested forallcomplex eigenvalues kept,eitherasrealandimaginary partsor asmagnitude andphaseangle(0°-360°lead). (Eigenvectors arenotavailable fortheKE-method, ) 1.Theeigenvector foralistofPHYSICAL andAER!3DYNAMIC points(gridpoints, extra points, andaerodynamic points) orSOLUTION points(modalcoordinates andextrapoints), 2.Nonzero components ofthe’single-point forcesofconstraint foralistofPHYSICAL points. 3.Complex stresses andforcesinselected elements. TheOFREQUENCY CaseControl cardcanselectasubsetofthecomplex eigenvectors fordatarecovery. Inaddition, undeformed anddeformed shapesmayberequested. Undeformed shapesmayinclude only structural orstructural andaerodynamic elements. 4.1.4 CaseControl DeckforBladeCyclicModalFlutter Analysis Thefollowing itemsrelatetosubcase definition anddataselection forBladeCyclicModal Flutter Analysis: 1.Onlyonesubcase isallowed. 2.Desired directinputmatrices forstiffness [Kpl,mass[Mpl,anddamping [Bfpl mustbeselected viathekeywords K2PP,M2PP,orB2PP. 3.CMETHUD mustbeusedtoselectanEIGCcardfronltheBulkDataDeck.(Kmethodonly,) 4.FMETHk3D mustbeusedtoselectaFLUTTER cardfromtheBulkDataDeck. 4.1-17(05/30/86)\n5. 6. 7. 8.AERORIGIDFORMATS METHODmustbeusedtoselectanEIGRcardthat SDAMPING mustbeusedtoselectaTABDMP1 table AnSPCsetmustbeselected unlessthemodelisexistsinthe ifstructuralBulkDataDeck. damping isdesired. afreebodyorallconstraints are specified onGRIDcards,ScalarConnection CardsorwithGeneral Elements. EachNASTRAN runcalculates modesforonlyonesymmetry index,K. 4.1.5Parameters forBladeCyclicModalFlutter Analysis Thefollowing parameters areusedinBladeCyclicModalFlutter Analysis: 1. 2. 3. 4. 5. 6, 7.● ’ ASET13UT -optional, Apositive integer valueofthisparameter causestheASEToutput datablocktobegenerated bytheGP4module. Anegative integer valueorOsuppresses thegeneration ofthisoutputdatablock. Thedefault valueisO. AUTflSPC -reserved forfutureoptional use,Thedefault valueis-1. C@UPMASS -CPBAR,CPR@D,CPQUAD1, CPQUAD2, CPTRIA1, CPTRIA2, CPTUBE, CPQDPLT, CPTRPLT, CPTRBSC -optional. Theseparameters causethegeneration ofcoupled massmatrices ratherthanlumpedmassmatrices forallbarelements, rodelements, andplateelements thatinclude bending stiffness. CTYPE-required. TheBCDvalueofthisparameter defines thetypeofcyclicsymnetry asfollows: (1)ROT-rotational symmetry●(2)DRL-dihedral symmetry, usingrightandlefthalves (3)DSA-dihedral symmetry, usingsymnetric andantisymnetric components CYCSEQ-optional. Theinteger valueofthisparameter specifies theprocedure for sequencing theequations inthesolution set.Avalueof+1specifies thatallcosine termsshouldbesequenced beforeallsineterms,andavalueof-1specifies alternating cosineandsineterms. Thedefault valueis-1. GRDPNT-optional. Apositive integer valueofthisparameter causestheGridPoint WeightGenerator tobeexecuted andtheresulting weightandbalance information tobe printed, Allfluid IREF-optional. A streamline number. default valueof-1related massesareignored. positive integer valueofthisparameter defines thereference IREFmustbeequaltoanSLNonaSTREAML2 bulkdatacard.The represents thestreamsurface atthebladetip.IfIREFdoesnot correspond toanSLN,thenthedefault willbetaken. 4.1-18 (05/30/86)\n8. e 9. 10. 11. 12. 13. ●14. 15. 16. 17. 18. 19.BLADECYCLICMODALFLUTTER ANALYSIS KDAMP-optional. Aninteger valueof+1causesmodaldamping termstobeputintothe complex stiffness matrixforstructural damping (+1recommended forKandKEmethods). Thedefault valueis-1. KGGIN-optional. Apositive integer ofthisparameter indicates thattheuser-supplied stiffness matrixistobereadfromanexternal file(GINOfileINPT)viatheINPUTT1 moduleintherigidformat. Thedefault valueis-1whennotneeded. KINDEX-required. Theinteger valueofthisparameter specifies asinglevalueofthe harmonic index. LFREQandHFREQ-required unlessparameter LM@DESisused.Therealvaluesofthese parameters givethecyclicfrequency range(LFREQisthelowerlimitandHFREQisthe upperlimit)ofthemodestobeusedinthemodalformulation, Tousethisoption, parameter LMODESmustbesetto0, LM@DES-usedunlesssettoO.Theinteger valueofthisparameter isthenumberof lowestmodestobeusedinthemodalformulation. Thedefault valueof999999will resultinallmodesbeingused. L0CATI!2N andINPTUNIT -required whenusingtheKGGINparameter. SeeSection 5.5fora description oftheseparameters whicharerequired bytheINPUTT1 module. Thedefault valuesforLOCATION andINPTUNIT are-1andO,respectively. MAXMACH -optional. Therealvalueofthisparameter isthemaximum Machnumberbelow whichthesubsonic unsteady cascade theoryisvalid. Thedefault valueis0.80. MINMACH -optional. Therealvalueofthisparameter istheminimum Machnumberabove whichthesupersonic unsteady cascade theoryisvalid. Thedefault valueis1.01. MTYPE-optional. TheBCDvalueofthisparameter controls whichcomponents ofthe cyclicmodesaretobeusedinthemodalformulation. MTYPE=SINEusesonlysine components andMTYPE=COSINE usesonlycosinecomponents. Thedefault valueisC13SINE. NODJE-optional. Apositive integer ofthisparameter indicates thatuser-supplied downwash matrices duetoextrapointsaretobereadinfromanexternal fileviathe INPUTT2 moduleintherigidformat, NSEGS-required. Theinteger value segments inthestructural model.Thedefault value ofthisparameteris-1whennotneeded. isthenumberofidentical P!3SIT10N, UNITNUM andUSRLABEL -required whenusingtheNODJEparameter. SeeSection 5.5foradescription oftheseparameters whicharerequired bytheINPUTT2 module. The defaults forPOSITI@N, UNITNUM andUSRLABEL are-1,11andTAPEID, respectively. 4.1-19(05/30/86)\nAERORIGIDFORMATS 20. 21. 22. 23. 24.PRINT-optional. TheBCDvalue,NO,ofthisparameter suppresses theautomatic printing oftheflutter summary fortheKmethod. Thedefault valueisYESB. SURFACE -optional. Thecomputations oftheexternal surface areasforthe two-dimensional andthree-dimensional elements areactivated bythisparameter whenthey aregenerated intheEMGmodule. Theresults aremultiplied bytherealvalueofthis parameter. Seethedescription underthePARAMbulkdatacardfordetails. VOLUME-optional. Thevolumecomputations forthetwo-dimensional and three-dimensional elements areactivated bythisparameter whentheyaregenerated in theEMGmodule. Theresults aremultiplied bytherealvalueofthisparameter. See thedescription underthePARAMbulkdatacardfordetails. VREF-optional. Velocities aredivided bytherealvalueofthisparameter toconvert unitsortocompute flutter indices. Thedefault valueis1.0. WTMASS-optional. Thetermsofthestructural massmatrixaremultiplied bythereal valueofthisparameter whenthey useinhydroelastic problems. 4.1.6Optional Diagnostic OutputforFEER Special detailed information obtainedaregenerated intheEMAmodule. Notrecommended for byrequesting DIAG16intheExecutive Control Deckis a thesameasthatdescribed 4.1.7TheAPPENDFeatureunderNormalModesAnalysis (seeSection 2.3.6).— TheAPPENDfeature canbeusedforrealeigenvalue extraction inBladeCyclicModalFlutter Analysis. SeeSection 2.3.7fordetails. 4.1.8RigidFormatErrorMessages fromBladeCyclicModalFlutter Analysis Thefollowing fatalerrorsaredetected bytheDMAPstatements IntheBladeCyclicModal Flutter Analysis rigidformat. Thetextforeacherrormessage isgivenbelowincapital letters andisfollowed byadditional explanatory material, including suggestions forremedial action. BLADEFLUTTER ANALYSIS ERRORNfl.1-MASSMATRIXREQUIRED FORMODALFORMULATION. Themassmatrixisnullbecause eithernostructural elements weredefined withConnection cards, nonstructural masswasnotdefined onaProperty cardorthedensity wasnotdefined onaMaterial card. 4.1-20(05/30/86)"},"title":"User's Manual P19"},"/docs/users/users_manual_020/":{"data":{"":"BLADECYCLICMODALFLUTTER ANALYSIS BLADEFLUTTER ANALYSIS ERR@RNO.2-EIGENVALUE EXTRACTI13N DATAREQUIRED FflR eANALYSIS. Eigenvalue extraction datamustbesupplied onanEIGRcardintheBulkData CaseControl DeckmustselectanEIGRset.REALEIGENVALUE DeckandMETHODinthe BLADEFLUTTER ANALYSIS ERRORNO.3-ATTEMPT TOEXECUTE MORE”THAN100LO@PS. Anattempt hasbeenmadetousemorethan100flutter loops. Thisnumbercanbeincreased by ALTERing theREPTinstruction following theFA2module. 3LADEFLUTTER ANALYSIS ERRORNO.4-REALEIGENVALUES REQUIRED FORM13DALFORMULATION. Norealeigenvalues werefoundinthefrequency rangespecified bytheuser. BLADEFLUTTER ANALYSIS ERRORNO.5-NOGRIDP@INTDATAISSPECIFIED 13RN@STRUCTURAL ELEMENTS HAVE BEENDEFINED. Nopointshavebeendefined withGRIDorSPt31NTcardsornostructural elements havebeendefined withConnection cards. BLADEFLUTTER ANALYSIS ERRORN@.6-FREEBODYSUPPORTS NOTALLOWED. Freebodiesarenotallowed inBladeCyclicModalFlutter Analysis. TheSUP@RTcardsmustbe removed fromtheBulkDataDeckandotherconstraints applied ifrequired forstability. BLADEFLUTTER ANALYSIS ERR@RNo.7-CYCLICTRANSF@RMATI@N DATAERROR. ●SeeSection 1.12forpropermodeling techniques andcorresponding PARAMcardrequirements. 4.1-21(05/30/86)\nAERORIGIDFORMATS 4.1-22(05/30/86)\nAERORIGIDFORMATS 4.2MODALFLUTTER ANALYSIS ●4.2.1DMAPSequence forModalFlutter Analysis RIGIDFORMAT DMAPLISTING APRIL1986RELEASE AEROAPPROACH, RIGIOFORMAT 10 LEVEL2.0NASTRAN OMAPCOMPILER -SOURCE LISTING OPTIONS INEFFECT GO ERR-2 LIST NODECK NOREF NOOSCAR\n1BEGIN 2PRECHK 3FILE kPARAM 5GP1 ●6COND 7GP2 8PARAtlL 9GP3 10TA1 11COND 12PARAM 13PARAM 14EMG 15PURGE 16COND 17EMA 18LABEL 19CONDAERO10-MODALFLUTTER ANALYSIS -APR.1986$ ALL$ PHlHL=APPENO/AJJL=APPENO/FSAVE=APPENO/CASEYY=APPEND/ CLAMAL=APPEND/OVG=APPEND/QHHL=APPENO/SKJ=APPEND/QHJL=APPEND/ QKHL=APPENO/ $ //MPY/CARONO/O/O $ GEOMl,GEOM2,/GPL,EQEXlN,GPDT,CSTM,BGPDT, SIL/S,N,LUSET/ S,N,NOGPDT/MINUSl=-l $ ERROR5,NOGPDT $ GEoM2,EQExlN/EcT $ PCDB//PRES////JUMPPLOT $ GEom3,EQEx1N,GEoM2/,GPTT/NoGRAv $ ECT,EPT,BGPDT,SIL,GPTT,CSTM/EST,GE l,GPECT,,/ LUSET/S,N,NOSIMP/l/S,N,NOGENL/S ,N,GENEL $ ERROR1,NOSIMP $ //AOD/NOKGGX/l/O $ //ADD/NOMGG /1/0$ EST,CSTM,NPT,DlT,GEOM2,/KELM, KOICT,MELM,MOICT, ,,/S,N,NOKGGX/ S,N,NOMGG////C,Y,COUPMAC,Y,CPBARBC,Y,,Y, CPROO/ c,Y,cPQuAD1/c,Y,cPQuAD2/c,Y, cPTRIA1/c,Y,cPTRlA2/c,Y,cPTuBE/ C,Y,CPQDPLT/C,Y,CPTRPLT/C,Y,CPTRBSC/ V,Y,VOLUME/V,Y,SURFACE $ KGGX,GPST/NOKGGX $ JMPKGGX,NOKGGX $ GPECT,KDICT,KELM/KGGX,GPST $ JMPKGGX $ ERROR1,NOMGG $ 4.2-1(05/30/86)\nAERORIGIDFORMATS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE AEROAPPROACH, RIGIOFORMAT 10 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44EMA COND GPWG oFP LABEL EQUIV COND SMA3 AOO LABEL GP4 PARAM COND GPSP OFP LABEL EQUIV PURGE CONO MCE1 MCE2 LABEL EQUIV COND SCE1GPECT,MDICT,MELM/MGG,/-l/C,Y,WTMASS=l .0$ LGPWG,GRDPNT $ BGPOT,CSTM,EQEXIN,MGG/OGPWG/V,Y ,GRDPNT=-l/C,Y,WTMASS $ OGPWG,,,,,//S,N,CARONO $ LGPWG$ KGGX,KGG/NOGENL $ LBL1l,NOGENL $ GEl,/KGGY/LUSET/NOGENL/-l $ KGGX,KGGY/KGG $ LBL1l$ CASECC,GEOM4,EQEXIN,GPDT,BGPDT, CSTM,GPST/RG,,USET,ASET/LUSET/ S,N,MPCFl/S,N,MPCF2/S,N,SlNGLE/S,N, OMIT/S,N,REACT/O/ REPEAT/S,N,NOSET/S,N,NOL/S,N,NOA/C, Y,ASETOUT/S,Y,AUTOSPC $ //*EQ,!/GpSpFLG/AIjTospc/o $ LBL4,GPSPFLG $ GPL,GPST,USET,SIL/OGPST/S,N,NOGPST $ OGPST,,,,,//S,N,CARDNO $ LBL4$ KGG,KNN/MPCFl/MGG,MNN/MPCF1 $ GM/MPCFl/DM,MR/REACT $ LBL2,MPCF1 $ USET,RG/GM $ USET,GM,KGG,MGG,,/KNN,MNN,, $ LBL2s KNN,KFF/SINGLE/MNN,MFF/SINGLE $ LBL3,SINGLE $ USET,KNN,MNN,,/KFF,KFS,,MFF ,,$ 4.2-2(05/30/86)\nMODALFLUTTER ANALYSIS @RIGIDFORMAT DMAPLISTING APRILlg86RELEASE AEROAPPROACH, RIGIOFORMAT 10 LEVEL2.0NASTRAN OMAPCOMPILER -SOURCE LISTING 45 46 47 b8 49 50 51 52 53 54 55LABEL EQUIV PURGE CONO PARAM SMP1 SMP2 LABEL CONO RBMG1 RBMG2 ●56RBMG3 57RBMGh 58LABEL 59OPO 60CONO 61EQUIV 62REAO 63OFP 64COND 65OFP ,66MTRXIN 67EQUIVLBL3$ KFF,KAA/OMIT/ MFF,MAA/OMIT $ GO/OMIT $ LBL5,0MIT $ //PREC/PREC $ USET,KFF,,,/GO,KAA,KOO, LOO,,,,, $ USET,GO,MFF/MAA $ LBL5$ LBL6,REACT $ USET,KAA,MAA/KLL,KLR,KRR,MLL,MLR,MRR $ KLL/LLL/ $ LLL,KLR,KRR/OM $ DM,MLL,MLR,MRR/MR $ LBL6$ DYNAMICS,GPL,SIL,USET/GPLD,S lLO,USETD~TFpOOLI ,,,~~EEDcEQDyN/ LUSET/S,N,LUSETD/NOTFL/NOOLT/NOPSOL/NOFRL/ NoNLFT/NoTRL/S,N,NOEEO/123/S,N,NOuE $ ERROR2,NOEE0 $ GO,GOO/NOUE/GM,GMD/NOUE $ KAA,MAA,MR,OM,EEO,USET,CASECC/LAMA,PH lA,t41,0ElGS/MOOES/S,N, NEIGV$ OEIGS,,,,,//S,N,CARONO $ ERROR4,NEIGV $ LAMA,,,,,//S,N,CARONO $ CASECC,MATPOOL, EQDYN,,TFPOOL/K2pp,M2pP,B2pp/LusETD/SSNS NoK2PP/s,N,NoM2PP/s*N,NoB2PP $ M2PP,M20D/NoA/B2PP,B200/NoA/K2PP,K200/NoA $ 4.2-3(05/30/86)\nAERORIGIDFORMATS RIGIDFORMAT DMAPLlTING APRIL1986RELEASE AEROAPPROACH, RIGIDFORMAT 10 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88GKAD GKAII APD PARAM PURGE COND PARAM PLTSET PRTMSG COND PLOT PRTMSG LABEL COND GI PARAM AMG COND INPUTT2 LABEL PARAMUSETO,GM,GO, ,,,,K2PP,M2PP,B2PP/,, ,GMD,GOD,K2DD,M2DD,B2DD/ *cMpLEvY/Dlsp/MoDALX/o,o/o .o/o.o/NoK2pp/ NoM2PP/NoB2PP/MPcFl/slNGLE/oMIT/NouE/ -1/-1/ -1/-1$ USETD,PHI A,,LAMA,DIT,M2DD, B20D,K2DD,cAsEcc/MHH,BHH,KHH, PHIDH/NOUE/C,Y,LMODES=O/C,Y, LFREQ=O./C,Y,HFREQ=-l.O/ NOM2PP/NOB2PP/NOK2PP/S,N,NONCUP/S,N, FMODE/C,Y,KDAMP $ EDT,EQDYN,ECT,BGPDT,SILD,USETD,CSTM,GPLD/EQAERO, ECTA,BGPA,SILA, USETA,SPL INE,AERO,ACPT,FLI ST,CSTMA,GPLA,SILGA/S,N,NK/S ,N,NJ/ S,N,LUSETA/S,N,BOV $ //W4PY/PFILE/O/l $ PLTSETA,PLTPARA,GPSETS~,ELSETSA/JUMPPLOT $ SKPPLT,JUMPPLOT $ //MpY,?/pLTFLG/o/l $ PCDB,EQAERO,ECTA/PLTSETA,PLTPARA, GPSETSA,ELSETSA/S,N,NSILl/S, N,JUMPPLOT $ PLTSETA //$ SKPPLT,JUMPPLOT $ PLTPARA,GPSETSA,ELSETSA,CASECC, BGPA,EQAERO, ,.,/PLoTx2/ NSILl/LUSETA/S,N,JUMPPLOT/S,N ,PLTFLG/S,N,PFILE $ PLOTX2 //$ SKPPLT $ ERROR2,NOEED $ SPLINE,USET ,CSTMA,BGPA,SIL ,,GM,GO/GTKA/NK/LUSET $ //ADD/DESTRY/O/l/ $ AERo,AcPT/AJJL,sKJ,DlJK,D2JK/NK/NJ/s,N,DEsTRY $ NODJE, NODJE$ /olJED2JE,, /C,Y,Pl=O/C,Y,P2=ll/C,Y,P3=XXXXXXXX $ NODJE$ //*ADD,t/xQHHL/l/o $ 4.2-4(05/30/86)\nMODALFLUTTER ANALYSIS ●RIGIDFORMAT DMAPLISTING APRIL1986RELEASE AEROAPPROACH, RIGIDFORMAT 10 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 89AMP 90PARAM 91LABEL 92FA1 93EQUIV 94COND 95CEAD 96COND 97LABEL 98VDR 99COND 100OFP 101LABEL 102FA2 103 104 105 106 107 108 109 110 111CONO LABEL COND REPT JLIMP LABEL PARAML CONO XYTRANAJJL,SI(J,D1JK,D2JK,GTKA,PH loH,DlJE,D2JE,usETD,AERo/QHHL,QKHL , QHJL/NOUE/S,N,XQHHL/V,Y,GUSTAERO=- I$ //MPY/FLOOP/V,Y,NODJE=-l/O $ LOOPTOP $ KHH,BHH,MHH,QHHL,CASECC,FLIST/FSAVE ,KXHH,BXHH,MXHH/ S,N,FLOOP/S,N,TSTART/S,N,NOCEAO $ KXHH,PHIH/NOCEAD/BXHH,CLAMA/NOCEAD/KXHH, PHIHL/NOCEAD/BXHH, CLAMAL/NOCEAO/CASECC,CASEYY/NOCEAD $ VDR,NOCEAD $ KXHH,BXHH,MXHH,EED,CASECC/PH lH,CLAMA,OCEIGS,/S,N,EIGVS $ LBLZAP,EIGVS $ VDR$ CASECC,EQDYN ,USETO,PHIH,CLAMA,,/OPHIH,/CE lGEN/MODAL/ 123/S,N,NOH/S,N,NOP/FMODE $ LBL16,NOH $ OPHIH,,,,,//S,N,CARDNO $ LBL16$ PHIH,CLAMA,FSAVE/ PHIHL,CLAMAL,CASEYY,OVG/S,N,TSTART/ C,Y,VREF=leO/C,Y,PRINT=YES $ CONTINUE,TSTART $ LBLZAP $ CONTINUE,FLOOP $ LOOPTOP,1OO $ ERROR3 $ CONTINUE $ XYCDB//PRES////NOXYCDB $ NOXYOUT,NOXYCDB $ XYCDB,OVG ,,,,/XYPLTCE/VG/PSET/S,N,PF lLE/S,N,CARDNO/ S,N,NOXYPL $ 4.2-5(05/30/86)\nAERORIGIOFORMAIS RIGIDFORMAT OMAPLISTING APRIL1986RELEASE AEROAPPROACH, RIGIOFORMAT 10 LEVEL2.0NASTRAN OMAPCOMPILER -SOURCE LISTING 112COND 113XYPLOT 114LABEL 115PARAM 116CONO 117MOOACC 118ADR 119ODR1 120EQUIV 121PURGE 122CONO 123SDR1 124LABEL 125EQUIV 126CONO 127VEC 128PARTN 129LABEL 130MPYAD 131UMERGE 132UMERGE 133UMERGE 13hSDR2 135OFP 136CONONOXYOUT,NOXYPL $ XYPLTCE// $ NOXYOUT $ //ANO/pJUMp/NOp=.l/JUMppLOT $ FINIS,PJUMP $ CASEYY,CLAMAL,PH IHL,,,/CLAMALl,CPHIHl,CASEZZ,,/CE lGN$ CPHIH1,CASEZZ,QKHL,CLAMALI,SPL lNE,SILA,USETA/PKF/BOV/ C,Y,MACH =O.O/FLUTTER $ CPHIHl,PHIOH/CPHID $ CPHIO,CPHIP/NOA $ QPC/NOA $ LBL14,NOA $ USETD,,CPHIO ,,,GOD,GMO,,KFS,,/CPHIP,,QPC/l /DYNAMICS~~ $ LBLl~$ CPHID,CPHIA/NOUE $ LBLNOE,NOUE $ USETA/RP/0/A/E $ CPHIO,,RP/CPHIA,,,/l/3 $ LBLNOE $ GTKA,CPHIA,/CPHIK/l/l/O/PREC $ USETA,CPHIP,/CPHIPS/PS/P/SA $ USETA,CPHIPS,CPHIK/CPHIPA/PA/PS/~tK $ USETA,QPC,/QPAC/*PAI/P/K $ CASEZZ,CSTMA,MPT,D IT,EQAERO, SILA,,,BGPA,CLAMALI,QPAC, CPHIPA, EST,,/,OQPACl,OCPHIPA,OESCl ,OEFCl,PCPHIPA/*CEIGN’~ $ OCPHIPA,OQPACl,OESCl,OEFCl,,//S,N, CARONO $ FINIS,JUMPPLOT $ 4.2-6(05/30/86)\nMODALFLUTTER ANALYSIS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE AEROAPPROACH, RIGIDFORMAT 10 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 137 138 139 140 141 1k2 143 144 145 146PLOT PRTMSG JUMP LABEL PRTPARM LABEL PRTPARM LABEL PRTPARM LABELPLTPARA,GPSETSA,ELSETSA,CASEZZ,BGPA, EQAERO,SI LGA,,PCPHIPA,, /PLoTx3/NslLl/LusETA/JuMPPLoT/PLTFLG/s,N, PFILE$ PLoTx3// $ FINIS$ ERROR3 $ //-3/FLuTTER $ ERROR2 $ //-2/*FLuTTER~~ $ ERROR1 $ //-1/FLUTTER$~ $ ERROR4 $ e147PRTPARM //-4/FLUTTER $ 148LABEL ERROR5$ 149PRTPARM //-5/~~FLUTTER $ 150LABEL FINIS$ 151PURGE DUMMY/MINUSl $ 152END $ 4,2-7(05/30/86)\n4.2.2 5. 6. 7. 9. 10. 11. 14. 16, 17. 19. 20. 21. 22. 23. 25. 26. 27. 28. 30. 32. 33, 34. 36. 38, 39.AERORIGIDFORMATS Description ofImportant DMAPOperations for\u0026dal Flutter Analysis GP1generates coordinte systemtransformation matrices, tablesofgridpointlocations, and tablesrelating theinternal andexternal gridpointnumbers. GotoOMAPNo.148andprintErrorMessage No.● 5ifnogridpoints aredefined. GP2generates Element Connection Tablewithinternal indices. GP3generates StaticLoadsTableandGridPointTemperature Table. TA1generates element tablesforuseinmatrix assembly andstress recovery. GotoDMAPNo.148andprintErrorMessage No.5ifnostru defined. EMGgenerates structural element stiffness andmassmatrixtb assembly bytheEMAmodule. GotoDMAPNo.18ifnostiffness matrixistobeassembled,turalelements havebeen esnddictionaries forlater EMAassembles stiffness matrix[Kg]andGridPointSingularity Table. GotoDMAPNo.144andprintErrorMessage No.1ifnomassmatrixistobeassembled. EMAassembles massmatrix[Mgg]. GotoDMAPNo.24ifnoweightandbalance information isrequest.ed. GPWGgenerates weightandbalance information. OFPformats theweightandbalance informtion prepared byGPWGndplacesitonthesystem outputfileforprinting. Equivalence [K\u0026]to[Kgg]iftheredrenogeneral elements. GotoDMAPNo.29iftherearenogeneral elements. SMA3formsthegeneral element stiffness matrix[Kg]. ADDcombines thestructural stiffness matrix[Kg]withthegeneral element stiffness matrix[Kg]toobtainthestiffness matrix[Kgg.J. GP4generates flagsdefining members ofvarious displacement sets(USET)andforms multipoint constraint equations [Rg]{ug}=O. GotoDMAPNo.35ifnopotential gridpointsingularities exist. GPSPgenerates atableofpotential gridpointsingularities. OFPformats thetableofpotential gridpointsingularities prepared byGPSPandplacesit onthesystemoutputfileforprinting. Equivalence [Kgglto[Knnland[MggltolMnnlifnomultipoint constraints exist. GotoDMAPNo.41ifnomultipoint constraints exist. MCE1partitions multipoint constraint equations [Rg]=[RmRnjandsolvesfor multipoint constraint transformation matrix[Gm]=-[Rm]-l[Rn]. 4.2-8(05/30/86)\n40. 42. 43. 44, 46. 48. 50. 51. 53.MOOALFLUTTER ANALYSIS MCE2partitions stiffness andmassmatrices andperforms matrixreductions [Knn]= [Mnn]=[inn]+-[+[,mn] [nn]+[G;][Mmn]+[Knl[Gml +[Gl[Kmml[Gml and +[M;n][Gm] +[Gj[Mmml[GmJ . Equivalence [Knn] GOtoDMAPNo,45 SCE1partitions outsingle-point constraintsto[Kff]andINnn]tO[t4ff]ifnosingle-point constraints exist” ifnosingle-point constraints exist. [1‘ff’‘fs [ -Mff’‘fs [Knn] =;-K— and [Mnn]=;M— . SfSs Sfss- Equivalence [KffltolKaaland[Nff]to[Maa]ifnoomitted coordinates exist. GotoDMAPNo.52ifnoomitted coordinates exist. SMP1partitions constrained stiffness matrix N,aalKao [Kff]=-:”,— 9 oa00 solves fortransformation matrix [Go]=-[Kool-l[Koal andperforms matrixreduction [Kaa]=Laa]+[Ka][Go] , SMP2partitions constrained massmatrix [1M\\M [Mff]=:-+M~ oa00 andperforms matrixreduction [Maal=[~aa]+[M:al[Gol +[G:IIMOOIIGOI +[G@oaJ . GotoDMAPNo.58iftherearenofree-body supports. 4.2-9(05/30/86)\n54. 55. 56. 57. 59. 60. 61. 62.AERORIGIDFORMATS RBMG1partitions outfree-body supports RBMG2decomposes constrained stiffness matrix[Kkt]=[LkL][Ukl]. RBMG3formsrigidbodytransformation matrix [D]=-[KtL]-l[KLr], calculates rigidbodycheckmatrix [X]=[Krr]+[Kjr][D] andcalculates rigidbodyerrorratio E= +-J-Tx l,KrrI “ RBMG4formsrigidbodymassmatrix [mr]=[Mrr]+[Mr][Dl +[DTl[Mkrl +[DTIIMLLIIDI. DPDgenerates flagsdefining members ofvarious displacement setsusedindynamic analysis (USETD), tablesrelating theinternal andexternal gridpointnumbers (GPLD), including extrapointsintroduced fordynamic analysis (SILD), andprepares Transfer Function Pool (TFP@OL), andEigenvalue Extraction Data(EED). GotoDMAPNo.142andprintErrorMessage No.2ifthereisnoEigenvalue Extraction Data. Equivalence [Go]to[G:]and[Gm]to[G:]iftherearenoextrapointsintroduced fordynamic analysis. READextracts realeigenvalues andeigenvectors fromtheequation [Kaa-AMaa]{$al =O, calculates rigidbodymodesbyfinding amatrix [mol=[ool[mrl[$rol isdiagonal a’ndnormalized, computes rigidbody H[Oaol =“’-0 $ ‘$roL-1.- calculates modalmassmatrix [m]=[I#I~][Maa][4a] andnormalizes eigenvectors according tooneof[@ro]suchthat eigenvectors thefollowing userrequests: 4.2-10(05/30/86)\n63. 64. 65. 66. 67. 68. 69. 70. 73. 75. 76. 77.MODALFLUTTER 1)Unitvalueofaselected component 2)Unitvalueofthelargest component 3)Unitvalueofthegeneralized mass.ANALYSIS OFPformats thesummary ofeigenvalue extraction information (OEIGS) prepared byREADand places itonthesystem output fileforprinting. GotoDMAPNo.146andprintErrorMessage No.4ifnoeigenvalues werefound. OFPformats theeigenvalues (LAMA)prepared byREADandplacesthereon thesystemoutput fileforprinting. MXTRINselects thedirectinputmatrices [Kp],[Mp]and[Bp]. Equivalence [Mplto[Md],[Bplto[BdlandLKpltoEK\u0026l‘f‘0constraints areapplied. GKADapplies constraints todirectinputmatrices [Kpl,[Mpland[Bplfoing and[Bdlandforms[Gmd]andtGod]. eigenvectors toform[$dh]andassembles stiffness, massanddamping matrices GKAMselects inmodalcoordinates:-.. [1kilo[Khh]=–~~ +[’$jh][K;d][$dh] ~ [1Mj10 [fjh] +[$:h][”:d][’$dh] ) =Th- [1biio [Bhhj=oo—.+[’$jh][B;dl[’$dhl $ where KDAMP=-1(default) KDAMP=1 ‘i=modalmasses mi=modalmasses bi=mi211fig(fi) bi=O ki=mi41T2fi. ki=(l+ig(fi)) 42f~mi APDprocesses theaerodynamic datacardsfromEDT.ItaddsthekpointsandtheSApoints toUSETDmakingUSETA. EQAERO, ECTA,BGPA,CSTMA,GPLAandSILAareupdated toreflect the newelements. AEROandACPTreflect theaerodynamic parameters. SILGAisaspecial SILfor plotting. GotoDMAPNo.80ifnoplot PLTSETtransforms userinput PRTMSGprintserrormessagesoutputisrequested. intoaformusedtodrivethestructure plotter. associated withthestructure plotter. GotoDMAPNo.80ifnoundeformed aerodynamic orstructural element plotsarerequested. 4.2-11 (05/30/86)\nAERORIGIDFORMATS 78.PL13Tgenerates allrequested undeformed aerodynamic andstructural element plots. 79.PRTMSGprints plotter dataandengineering dataforeachundeformed aerodynamic and structural element plotgenerated, 81.GotoDMAPNo.142andprintErrorMessage No.2ifthereisnoEigenvalue Extraction Data, 82.GIformsatransformation matrix [Ga]whichinterpolates between aerodynamic (k)and structural (a)degrees offreedom. 84.AMGformstheaerodynamic matrixlist[Ajj],theareamatrix[Skj],andthedownwash coefficients [Dk]and[Dkl. 85.GotoDMAPNo.87iftherearenouser-supplied downwash coefficients. 86.INPUTT2 provides theuser-supplied downwash factors duetoextrapoints([De], [De]). PARAMNODJEmustbesettoenterthesematrices motionofanextrapoint,Ue,isgivenby {wj}=[De+ikfelThedownwash Wjonboxjduetothe Ue}. 89.AMPcomputes theaerodynamic matrixlistrelated tothemodalcoordinates asfollows: [1$iI$ae[$dh]=;+—$[Gkil=[GalT[+ail, Ibeeei l/D1] ,[Dh] [Dji,je [Di] =[DklTIGkil , 2ID.2]and [Dhl [Dji,e [Di]=[D$k]T[Gki]. Foreach(m,k)pair: [Djh]=[Dj~]+ik[Dj~] . Foreachgroup: [Qjhl =[Ajl~~oup ‘Djh]group ‘ [Qkh]=[sj][Qjh] s [Qih] =[GilTIQkhl [1Qih and [Qhh] ‘-– . Qeh 90.PARAMinitializes theflutter looPcounter (FLOOp) tozero. 91.Beginning ofloopforflutter. 92.FA1computes thetotalaerodynamic massmatrix[Mh],thetotalaerodynamic stiffness matrix[Kh]andthetotalaerodynamic damping matrix[B~h]aswellasa100pin9 table 4.2-12(05/30/86)\nMODALFLUTTER ANALYSIS FSAVE. FortheK-method ‘;h=(k2/b2)Mhh +(p/2)Qhhs ‘h=‘hh 93. 94. 95. 96. 98. 99. 100. ●102. 103. 105. 106. 107. 110. 111. 112. 113. 116. 117. 118.and‘h=0. Setupequivalences fortheKE-andPK-methods. GotoDMAPNo,97fortheKE-andPK-methods. CEAOextracts complex eigenvalues andeigenvectors fromtheequation [MhP2 +B;hP+Kh]{@h? =O andnormalizes eigenvectors tounitmagnitude ofthelargest component. GotoDMAPNo.104ifnocomplex eigenvalues werefound. VDRprepares eigenvectors (k3PHIH) foroutput, usingonlytheextrapointsintroduced for dynamic analysis andmodalcoordinates. GotoOMAPNo.101ifthereisnooutputrequest fortheextrapointsintroduced fordynamic analysis ormodalcoordinates. !3FPformats thetableofeigenvectors forextrapointsintroduced fordynamic analysis and modalcoordinates prepared byVDRandplacesitonthesystemoutputfileforprinting. FA2appends eigenvectors toPHIHL,eigenvalues toCLAMAL, CaseControl toCASEYY, andV-g plotdatato@VG. GotoDMAPNo.108ifthereisinsufficient timeforanother flutter loop. GotoDMAPNo.108iftheflutter loopiscomplete. GotoDMAPNo.91foradditional aerodynamic configuration triplet values. GotoDMAPNo.140andprintErrorMessage No.3ifthenumberofflutter loopsexceeds 100. GotoDMAPNo.114iftherearenoX-Yplotrequests, XYTRANprepares theinputforrequested V-gplotting. GotoDMAPNo.114ifnoplotsarepossible asrequested. XYPLftTprepares therequested V-gplots. GotoDMAPNo.150andmakenormalexitiftherearenooutputrequests involving dependent degrees offreedom orforcesandstresses. MODACCselects alistofeigenvalues andeigenvectors whoseimaginary parts(velocity in inputunits)areclosetoauserinputlist. AORbuildsamatrixofaerodynamic forcesforeachaerodynamic pointandprintsrequested aerodynamic forcesforselected elements. 4.2-13 (05/30/86)\nAERORIGIDFORMATS 119.DDR1transforms thecomplex eigenvectors frommodaltophysical coordinates {$:1={+dh}{oh} . 120.Equivalence {0~1to{!lifnoconstraints areapplied. 122.GotoDMAPNo.124ifnoconstraints areapplied. 123.SDR1recovers dependent components ofeigenvectors 1 andrecovers single-point forces ofconstraint {qs)=[Ksl{@f}Y __”_={Q;}. qs I 125.Equivalence {$}to{O;}iftherearenoextrapointsintroduced fordynamic analysis. 126.GotoDMAPNo.129iftherearenoextrapoints, 127.VECgenerates ad-sizepartitioning vector(RP)forthea-ande-sets {Udl+{Ua}+{Ue}. 128.PARTNperforms partition of{$:}usingRP 130.MPYADrecovers thediSP1acements attheaerodynamic points(k) {’$;}=[G[a]T{$:}. 131.UMERGEisusedtoexpand{$;}totheps-set. 4.2-14 (05/30/86)\nMODALFLUTTER ANALYSIS 13z,UMERGEplaces{$;}initsproperplaceinthedisplacement vector 133.UMERGEisusedtoexpand{Q~}tothepa-set. 134.SDR2calculates element forces (OEFCl) adstresses (OE$C1) andprepares eigenvectors (OCPHIPA) andsingle-point forcesofconstraint (OQPACl) foroutput andPCPHIPA fordeformed plotting. 135.!3FPformats thetables printing. 136.GotoDMAPNo.150and plotsarerequested. 137. 138. 139. 141. 143. 145. 147. 149.prepared bySDR2andplacesthemonthesystemoutputfilefor makenormalexitifnodeformed aerodynamic orstructural element PLOTprepares alldeformed aerodynamic andstructural element plots. PRTMSGprintsplotter dataandengineering dataforeachdeformed plotgenerated. GotoDMAPNo.150andmakenormalexit. PrintErrorMessage No.3andterminate execution. PrintErrorMessage No.2andterminate execution. PrintErrorMessage No.1andterminate execution. PrintErrorMessage No,4andterminate execution. PrintErrorMessage No.5andterminate execution. 4.2-15 (05/30/86)\nAERORIGIDFORMATS 4.2.3Output forModalFlutter Analysis TherealEigenvalue Surrrnary TableandtherealEigenvalue Analysis Summary, asdescribed underNormalModesAnalysis (seeSection 2.3.3), areautomatically printed. Allrealeigenvalues areincluded eventhoughallmaynotbeusedinthemodalformulation, Thecomplex eigenvalues areincluded intheFlutter Summary andareprinted foreach aerodynamic loop. Thegridpointsingularities fromthestructural modelarealsooutput. AFlutter Summary foreachvalueoftheconfiguration PRINT=N@.ThisshowsMachnumber, density, reduced frequency, eachcomplex eigenvalue, V-gandV-fplotsmayberequested bytheXY~UTcontrolparameters isprinted outunless velocity, damping, andfrequency for cardsbyspecifying thecurvetype asVG.The“points” areloopnumbers andthe“components” areGorF. Printed outputofthefollowing types,sortedbycomplex eigenvalue rootnumber(SklRTl) and (m,k,p),mayberequested forallcomplex eigenvalues kept,eitherasrealandimaginary partsor asmagnitude ~ndphasedngle(0°-360°lead). (Eigenvectors arenotavailable fortheKE-method. ) 1.Theeigenvector foralistofPHYSICAL andAERODYNAMIC points(gridpoints, extra points, andaerodynamic points) orSOLUTION points(modalcoordinates andextrapoints). 2.Nonzero components ofthesingle-point forcesofconstraint foralistofPHYSICAL points. 3.Complex stresses andforcesinselected elements. ThefIFREQUENCY CaseControl cardcanselectasubsetofthecomplex eigenvectors fordatarecovery. Inaddition, undeformed anddeformed shapesmayberequested. Undeformed shapesmayinclude only structural orstructural andaerodynamic elements. Theeigenvectors usedinthemodalformulation maybeobtained fortheanalysis pointsby usingtheALTERfeature toprintthematrixofeigenvectors following theexecution ofREAD.The eigenvectors forallpointsinthemodelmaybeobtained byrunning theproblem initially onthe NormalModesAnalysis RigidFormatorbymakingamodified restart usingtheNormalModesAnalysis RigidFormat. 4,2-16(05/30/86)\nMODALFLUTTER ANALYSIS 4.2.4CaseControl DeckforModalFlutter Analysis ●Thefollowing itemsrelatetosubcase definition anddataselection forModalFlutter Analysis: 1.Onlyonesubcase isallowed. 2.Desired directinput mustbeselected via 3.CMETH!3D mustbeused 4.FMETHOD mustbeusedmatrices forstiffness [Kp], mass[Mp], anddamping [B~p] thekeywords K2PP,M2PP,orB2PP. toselectanEIGCcardfromtheBulkDataDeck,(Kmethodonly.) toselectaFLUTTER cardfromtheBulkDataDeck. 5.METHODmustbeusedtoselectanEIGRcardthatexistsintheBulkDataDeck. 6.SDAMPING mustbeusedtoselectaTABDMP1 tableifstructural damping isdesired. 4.2.5Parameters forModalFlutter Analysis Thefollowing parameters areusedinModalFlutter 1. 4. 5. 6.ASETOUT -optional. Apositive integer value datablocktobegenerated bytheGP4module. thegeneration ofthisoutputdatablock. TheAnalysis: ofthisparameter causestheASEToutput Anegative integer valueorOsuppresses default valueisO. AUTOSPC -reserved forfutureoptional use.Thedefault valueis-1. CfiUPMASS -CPBAR,CPROD,CPQUAD1, CPQUAD2, CPTRIA1, CPTRIA2, CPTUBE, CPQDPLT, CPTRPLTL CPTRBSC -optional. Theseparameters causethegeneration ofcoupled massmatrices ratherthanlumpedmassmatrices forallbarelements, rodelements, andplateelements thatinclude bending stiffness. GRDPNT-optional. Apositive integer valueofthisparameter causestheGridPoint WeightGenerator tobeexecuted andtheresulting weightandbalance information tobe printed. Allfluidrelated massesareignored. GUSTAERO -optional. Aninteger valueof+1causesgustloadstobecomputed. The default valueis-1fornogustloads. KDAMP-optional. Aninteger valueof+1causes complex stiffness matrixforstructural damping Thedefault valueis-1.modaldamping termstobeputintothe (+1recommended forKandKEmethods). LFREQandHFREQ- required, unlessLMODESisused.Therealvaluesoftheseparameters givethecyclicfrequency range(LFREQisthelowerlimitandHFREQistheupperlimit) ofthemodestobeusedinthemodalformulation. Tousethisoption, parameter LMODES mustbesettoO. 4.2-17(05/30/86)\nI 8. 9. 10. 11. 12. 13. 14.AERORIGIDFORMATS LM13DES-required, unlessLFREQandHFREQareused.Theinteger valueofthisparameter isthenumberoflowestmodestobeusedinthemodalformulation. MACH-optional. Therealvalueofthisparameter selects theclosest Machnumbers to beusedtocompute aerodynamic matrices. Thedefault valueis0,0. NODJE-optional. Apositive integer ofthisparameter indicates thatuser-supplied downwash matrices duetoextrapointsaretobereadfromanexternal fileviathe INPUTT2 moduleintherigidformat. Thedefault valueis-1whennotneeded. Pl,P2andP3-required whenusingtheNODJEparameter. SeeSection 5.5fora description oftheseparameters whicharerequired bytheINPUTT2 module. Thedefault valuesforPl,P2andP3areO,11andXXXXXXXX, respectively. PRINT-optional. TheBCDvalue,NO,ofthisparameter suppresses theautomatic printing oftheflutter summary fortheKmethod. Thedefault valueisYES. VREF-optional. Velocities aredivided bytherealvalueofthisparameter toconvert unitsortocompute flutter, indices. Thedefault valueis1.0. WTMASS-optional, Thetermsofthestructural massmatrixaremultiplied bythereal valueofthisparameter whentheyaregenerated intheEMAmodule. Notrecommended for useinhydroelastic problems. 4.2.6Optional Diagnostic OutputforFEER Special detailed information obtained byrequesting DIAG16intheExecutive Control Deckis thesameasthatdescribed underNormalModesAnalysis (seeSection 4.2.7TheAPPENDFeature TheAPPENDfeature canbeusedforrealeigenvalue extraction Section 2.3.7fordetails.2.3.6). inModalFlutter Analyss.See 4.2.8RigidFormatErrorMessages fromModalFlutter Analysis Thefollowing fatalerrorsaredetected bytheDMAPstatements intheModalFlutter Analysis rigidformat. Thetextforeacherrormessage isgivenbelowincapital letters andisfollowed by additional explanatory material, including suggestions forremedial action. 4.2-18(05/30/86)"},"title":"User's Manual P20"},"/docs/users/users_manual_021/":{"data":{"":"","options-ineffect-go-err2-list-nodeck-noref-nooscar#AERORIGIDFORMATS\n4.3MODALAEROELASTIC RESPONSE\n4.3.1DMAPSequence forModalAeroelastic Response\nRIGIDFORMAT DMAPLISTING\nAPRILIg86RELEASE\nAERCAPPROACH, RIGIDFORMAT 11\nLEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING\nOPTIONS INEFFECT GO ERR=2 LIST NODECK NOREF NOOSCAR":"MODALFLUTTER ANALYSIS MODALFLUTTER ANALYSIS ERRORMESSAGE NO.1-MASSMATRIXREQUIRED FORMODALFORMULATION. l’hemassmatrixisnul” nonstructural masswas card. MODALFLUTTER ANALYSIS EIGENVALUE ANALYSIS.because eithernostructural elements weredefined withConnection cards, notdefined onaProperty cardorthedensity wasnotdefined onaMaterial ERRfiRMESSAGE NO.2-EIGENVALUE EXTRACTION DATAREQUIRED FORREAL Eigenvalue extraction datamustbesupplied onanEIGRcardintheBulkDataDeckandMETHODinthe CaseControl DeckmustselectanEIGRset. MUDALFLUTTER ANALYSIS ERRORMESSAGE NO.3-ATTEMPT T@EXECUTE MORETHAN100LO@PS. Anattempt hasbeenmadetousemorethan100flutter loops. Thisnumbercanbeincreased by ALTERing theREPTinstruction following theFA2module. MODALFLUTTER ANALYSIS ERR~RMESSAGE No.4-REALEIGENVALUES REQUIRED Fl!lRMOOALFORMULATION. Norealeigenvalues werefoundinthefrequency rangespecified bytheuser, M@DALFLUTTER ANALYSIS ERR@RMESSAGE NO.5-NOGRIDPOINTDATAISSPECIFIED flRN!3STRUCTURAL ELEMENTS HAVEBEENOEFINED. Nopointshavebeendefined withGRIDorSPOINTcardsornostructural elements havebeendefined withConnection cards. 4.2-19(05/30/86)\nAERORIGIDFORMATS 4.2-20 (05/30/86)\nAERORIGIDFORMATS 4.3MODALAEROELASTIC RESPONSE 4.3.1DMAPSequence forModalAeroelastic Response RIGIDFORMAT DMAPLISTING APRILIg86RELEASE AERCAPPROACH, RIGIDFORMAT 11 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING OPTIONS INEFFECT GO ERR=2 LIST NODECK NOREF NOOSCAR\r1BEGIN 2PRECHK 3FILE 4PARAM 5GP1 6COND GP2 8PARAML 9PARAML 10GP3 11TA1 12CONO 13PARAM 14PARAM 15EMG 16PURGE 17COND 18EMA 19LABEL 20cONDAERO11-MOOALAEROELASTIC RESPONSE -APR.1986$ ALL$ AJJl.=APPEND/QHHL=APPEND/QKHL=APPEND/QHJL=ApPEND/sKJ=APpENO $ //MPY/CARONO/O/O $ GEOMl,GEOM2,/GPL,EQEXIN,GPOT,CSTM,BGPDT, SIL/S,N,LUSET/ S,N,NOGPDT/f’llNUSl=-l $ ERROR1,NOGPDT $ GEoM2,EQExlN/EcT $ PCOB//PRES/V,Y,NOOJE=-l///JUMPPLOT $ XYCDB//PRES////NOXYCDB $ GEom3,EQEx1N,GEom2/,GPTT/tJoGRAv $ ECT,EPT,BGPDT,SIL,GPTT,CSTM/EST,GE l,GF’EcT,)/ LUSET/S,N,NOSIMP/l/S,N,NOGENL/S,N,GENEL $ ERROR3,NOSIMP $ //*ADOY/NOKGGX/l/O $ //ADD/NOMGG /1/0$ EST,CSTM,MPT,DlT,GEOM2,/KELM,KD lCT,MELM,MOICT,,,/S,N,NOKGGX/ S,N,NOMGG////C,Y,COUPMAC,YC,Y ,CPBAR/C,y,cpROD/ c,Y,cPQuAD1/c,Y,cPQuAD2/c,Y, cPTRIA1/c,Y,cPTRlA2/c,Y,cPTuBE/ c,Y,cPQOPLT/C,Y,CPTRPLT/C,Y,CPTRBSC/ v,Y,VOLUME/V,Y,SURFACE $ KGGX,GPST/NOKGGX $ JMPKGGX,NOKGGX $ GPECT,KOICT,KELM/KGGX,GPST $ JMPKGGX $ ERROR1,NOMGG $I I 94.3-1(05/30/86)\nAERORIGIDFORMATS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE AEROAPPROACH, RIGIOFORMAT 11 LEVEL2.0NASTRAN OMAPCOMPILER -SOURCE LISTING 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 b4 45EMA COND GPWG OFP LABEL EQUIV COND SMA3 AOD LABEL GP4 PARAM PURGE COND GPSP OFP LABEL EQUIV COND MCE1 14CE2 LABEL EQUIV COND SCE1GPECT,MDICT,MELM/MGG,/-l/C,Y,WTMASS=l .0$ LGPWG,GROPNT $ BGPDT,CSTM,EQEXIN,MGG/OGPWG/V,Y ,GRDPNT=-l/C,Y,WTMASS $ OGPWG,,,,,//S,N,CARONO $ LGPWG$ KGGX,KGG/NOGENL $ LBL1l,NOGENL $ GEl,/KGGY/LUSET/NOGENL/-l $ KGGX,KGGY/KGG $ LBL1l$ CASECC,GEOM4,EQEX lN,GPOT,BGPDT,CSTM,GPST/RG, ,USET,ASET/LUSET/ s,N,MPcFl/s,N,MPcF2/s,N,slNGLE/s,N,oMlT/s,N,REAcT/o/s,N, REPEAT/S,N,NOSET/S,N,NOL/S,N,NOA/C,Y,ASETOUT/S,Y,AUTOSPC $ //EQ/GPSPFLG/AUTOSPC/O $ GM/MPCFl/OM,MR/REACT $ LBL4,GPSPFLG $ GPL,GPST,USET,SIL/OGPST/S,N,NOGPST $ OGPST,,,,,//S,N,CARDNO $ LBL4$ KGG,KNN/MPCFl/MGG,MNN/MPCFl $ LBL2,MPCF1 $ USET,RG/GM $ USET,GM,KGG,MGG,,/KNN,MNN,, $ LBL2$ KNN,KFF/SINGLE/MNN,MFF/SINGLE $ LBL3,SINGLE $ USET,KNN,MNN,,/l(FF,KFS,,MFF ,,$ 4.3-2(05/30/86)\nMODALAEROELASTIC RESPONSE RIGIDFORMAT DMAPLISTING APRIL1986RELEASE AEROAPPROACH, RIGIDFORMAT 11 LEVEL2.0NASTRAN OMAPCOMPILER -SOURCE LISTING 46 47 48 49 50 51 52 53 511 55 56 57 58 59 60 61 62 63 64 65 66 67 68LABEL EQUIV PURGE COND PARAM SMP1 SMP2 LABEL CONO RBMG1 RBMG2 RBMG3 RBAG4 LABEL DPO CONO EQUIV READ OFP COND OFP MTRXIN EQUIVLBL3$ KFF,KAA/OMIT/ MFF,MAA/OMIT $ GO/OMIT $ LBL5,0MIT $ //*PREC)~/PREC $ USET,KFF ,,,/GO,KAA,KOO,LOO,,,,, $ USET,GO,MFF/MAA $ LBL5$ LBL6,REACT $ USET,KAA,MAA/KLL,KLR,KRR,MLL ,MLR,MRR $ KLL/LLL/ $ LLL,KLR,KRR/OM $ DM,MLL,MLR,MRR/MR LBL6$$ DYNAMICS,GPL,SIL,USET/GPLD ,SILO,USETD,TFPOOL, OLT,PSDL ,FRL,,TRL, EED,EQOYN/LUSET/S,N,LUSETD/NOTFL/NOOLT/S,N,NOPSDL/ NOFRL/NONLFT/NOTRL/S,N,NOEED/123/S ,N,NOUE $ ERROR2,NOEED $ GO,GOD/NOUE/GM,GMD/NOUE $ l(AA,MAA,MR,DM,EED,USET,CASECC/LAMA, PHIA,Ml,OEIGS/MODES/S,N, NEIGV$ OEIGS,,,,,//S,N,CARDNO $ ERROR4,NEIGV $ LAMA,,,,,/’/S,N,CARDNO $ cAsEcc,MATPooL,EQDYN,,TFPooL/K2PP,M2PP,B2PP/LusETD/s,N, NoK2PP/s,N,NoM2PP/s,N,NoB2PP $ M2PP,M200/NoA/B2PP,B2Do/NoA/K2PP, K2DD/NoA $ 4.3-3(05/30/86)\nAERORIGIDFORMATS RIGIDFORMAT DMAPLISTING APRILlg86RELEASE AEROAPPROACH, RIGIOFORMAT 11 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 69 70 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89GKAD USETD,GM,GO, ,,,,K2PP,M2PP,B2PP/ ,,,GMo,GoD,K2DD,M2Do,B2DD/ *CMPLE1/f(/*DlSP~/kMODAL,?/O,O/OOO/OOO/NOK2fJp/ NoM2PP/NoB2PP/MPcFl/slNGLE/oMIT/NouE/ -1/-1/-1/-1 $ GKAM USETD,PHIA,,LAMA,DIT,M200, B2Do,K20D,cAsEcc/MHH,BHH,KHH, PHIDH/NOUE/C,Y,LMODES=O/C, Y,LFREQ=O./C,Y,HFREQ=-l.O/ NOM2PP/NOB2PP/NOK2PP/S,N,NONCUP/S,N, FflODE/C,Y,KOAMP $ APD ECIT,EQDYN, ECT,BGPDT,SI LO,USETO, CSTM,GPLO/EQAERO,ECTA,BGPA, SILA, USETA,SPL INE,AERO,ACPT,FLIST, CSTMA,GPLA,SILGA/S,N,NK/S,N,NJ/ S,N,LUSETA/S,N,BOV $ PARAll PURGE CONO PARAM PLTSET//*MpY#c/pFILE/D/l $ PLTSETA,PLTPARA,GPSETSA,ELSETSA/JUMPPLOT $ SKPPLT,JUMPPLOT $ //MpY/pLTFLG/o/l $ PCOB,EQAERO,ECTA/PLTSETA,PLTPARA,GPSETSA, ELSETSA/S,N,NSILl/S,N, JUMPPLOT S PRTMSG COND PLOTPLTSETA //$ SKPPLT,JUMPPLOT $ PLTPARA,GPSETSA,ELSETSA,CASECC,BGPA, EQAERO, ,,,,/PLOTX2/ NSIL1/LUSETA/S,N,JU14PPLOT/S,N,PLTFLG/S,N,PF ILE$ PRTMSG LABEL GIPLOTX2 //$ SKPPLT $ SPLINE,USET ,CSTMA,BGPA,SIL ,,GM,GO/GTKA/NK/ LUSET$ PARAH AMG COND INPUTT2 LABEL PARAM AMP//*ADDit/DEsTRY/o/l/ $ AERo,AcPT/AJJL,sKJ,olJK,D2JK/NK/NJ/s,N,DEsTRY $ NODJE,NODJE $ /DlJE,D2JE,,,/Cjy,PI=O/C,y,P2=I 1/c,Y,P3=xxxxxxxx $ NOOJE$ //ADD,/xQHHL/]/o $ AJJL,SKJ,D1JK,D2JK,GTKA,PHIOH, olJE,D2JE,usETD,AERo/QHHL,QKHL, QHJL/NOUE/S,N,XQHHL/V,Y,GUSTAERO=- 1$ 4.3-4(05/30/86) I\nMODALAEROELASTIC RESPONSE RIGIDFORMAT OMAPLISTING APRILlg86RELEASE AEROAPPROACH, RIGIDFORHAT 11 LEVEL2.0NASTRAN OMAPCOMPILER -SOURCE LISTING 90FRLG 91PARAM 92PURGE 93GUST 94EQUIV 95FRRD2 96EQUIV 97COND 98IFT 99LABEL 100MODACC 101AOR 102VDR 103CONO 104SDR3 105OFP 106CONO 107XYTRAN 108COND 109XYPLOT 110LABEL 111PARAM 112COND 1}3SOR1CASECC,USETD,DLT,FRL,GMD,GOO,O lT,PHIDH/PPF,PSF,PDF,FOL,PHF 1/ wIoDAL*/S,N,FREQY/S,N,AW $ //NOT /NOFRY/FREQY $ PPF/NOFRY $ CASECC,OLT,FRL,OIT,QHJL, ,,ACPT,CSTMA, PHF1/PHF/ S,N,NOGUST/BOV/C,Y,HACH/C,Y,Q $ PHFl,PHF/NOGUST $ KHH,BHH,MHH,QHHL,PHF,FOL/UHVF/BOV/C,Y,Q/C,Y,MACH $ UHVF,UHVT/FREQY/FOL,TOL/FREQY $ IFTSKP,FREQY $ UHVF,CASECC,TRL,FOL/UHVT,TOL/C,Y, IFTM=O $ IFTSKP $ CASECC,TOL,UHVT,,,/TOL?,UHVTl ,,,/APP $ UHVT1,CASECC,QKHL,TOL1,SPLI NE,SILA,USETA/PKF/BOV/ C,Y,MACH/APP $ CASECC, EQOYN,USETD, UHVTl,TOLl,XYCDB,/OUHVl ,/APP/MODAL/ O/S,N,NOH/S,N,NOP/FMODE $ NOH,NOH$ OUHVI,,,,,/0uHv2,,,,, $ 0UHV2,,, ,,//S,N,CARDNO $ NOH,NOXYCDB $ XYCDB,0UHV2, ,,,/XYPTTA/APP/HSET/S,N,PF lLE/S,N,CARDNO/ S,N,NOXYPL $ NOH,NOXYPL $ XYPTTA $ NOH$ //AND/PJUMP/NOP/JUMPPLOT $ FINIS,PJUMP $ USETO,,PHIDH, ,,GOD,GMD, ,KFS,,/PHIP,,QP/l/DYNAHICS $ 4.3-5(05/30/86)\nAERORIGIDFORMATS RIGIDFORMAT DMAPLISTING APRIL1986RELEASE AEROAPPROACH, RIGIDFORMAT 11 LEVEL2.0NASTRAN OMAPCOMPILER -SOURCE LISTING llkEQUIV 115CONO 116VEC 117PARTN 118LABEL 119MPYAO 120UMERGE 121UMERGE 122UMERGE 123soR2 124COND 125SDR2 126SDR3 127LABEL 128SOR3 129ODRMM 130OFP 131SCAN 132OFP 133COND 134MPYAD 135SCIR2 136PLOT 137PRTMSGPHIDH,PHIAH/NOUE $ NOUE1,NOUE $ UiETO/EVEC/D/A/E $ PHIDH,,EVEC/PHIAH,,,/l $ NOUE1$ GTKA,PHIAH,/PHIK/l/l/O/PREC $ USETA,PHIP,/PHIPS/PS/*P~~/SA $ USETA,PHIPS,PHIK/PHIPA/PA/PS/K $ USETA,QP,;QPA/*PA~~/P/PS $ CASECC,CSTMA,MPT,OIT,EQAERO,S ILA,,,BGPA,LAMA,QPA,PHIPA, EST,XYCOB,/,MQPl,MPHIPAl,MESl,MEF 1,/Mt4RElG $ NOPF,NOFRY $ CASECC, ,,,EQDYN,,,,,PPF,,,,XYCOB,/OPpl ,,,,,/FREQ $ OPP1,,,,,/QPP2,,,,,/$ NOPF$ MPHIPAl,MESl,MEFl,MQPl,,/MPH IPA2,MES2,MEF2,11QP2, ,$ CASECC,UHVT1,TOL1,MPHI PA2,MQP2 ,MES2,MEF2,XYCOB,EST,MPT,0 lT/ 0UPV2,0QP2,0ES2,0EF2, $ ouPv2,,oEs2,0EF2,0QP2,//s,N,cARDNo $ cAsEcc,oEs2,0EF2/oEsF2/c,N,RF $ 0ESF2,,,,,//s,N,CARONO $ P2,JUMPPLOT $ PHIPA,UHVTl,/UVTl/O $ CASECC,CSTMA ,,,EQAERO, ,,,BGPA,TOL ,,UVTl,,,/,,,,,PUVPAT/APP $ PLTPARA,GPSETSA,ELSETSA,CASECC,BGPA, EQAERO,SI LGA,,PUVPAT, ,/ PLOTX3/NSILl/LUSETA/JUMPPLOT/PLTFLG/PF ILE$ PLoTx3// $ 4.3-6(05/30/86)\nMODALAEROELASTIC RESPONSE eRIGIDFORMAT DMAPLISTING APRIL1986RELEASE AEROAPPROACH, RIGIDFORMAT 11 LEVEL2.0NASTRAN DMAPCOMPILER -SOURCE LISTING 138LABEL 139COND lkOXYTRAN 141COND lk2XYPLOT 143LABEL 144COND 145CONO 146RANOOM 147COND ●148XYTRAN 149COND 150XYPLOT 151JUMP 152LABEL 153PRTPARM 154LABEL 155PRTPARH 156LABEL 157PRTPARM 158LABEL 159PRTPARM 160LABEL 161PURGE 162ENDP2$ FINIS,NOXYCOB $ xYcoB,,oQP2,0uPv2,0Es2,0EF2/xYPLTT/APP/PsET~/ S,N,PFILE/S,N,CARONO/S.N,NOXYPL $ NOXYPLTT,NOXYPL $ XYPLTT $ NOXYPLTT $ FINIS,NOFRY $ FINIS,NOPSDL $ XYCDB,D IT,PSDL, 0UPV2,,0QP2,0ES2, oEF2,cAsEcc/PsoF,AuTo/ S,N,NORN $ FINIS,NORN $ XYCDB,PSDF,AUTO ,,,/XYPLTR/RANO/tPSETt/S,N ,PFILE/ S,N,CARDNO/S,N,NOXYPL $ FINIS,NOXYPL $ XYPLTR $ FINIS$ ERROR2 $ //-2/ftAERoREsP* $ ERROR1 $ //-1/AERORESP $ ERROR4 $ //-k/AERORESP $ ERROR3 $ //-3/*AERoREsPf( $ FINIS$ OUMMY/MINUSl $ s 14.3-7(05/30/86)\n4.3,2 5. 6. 7. 10. 11, 12, 15. 17. 18, 20. 21. 22. 23. 24. 26. 27. 28. 29. 31. 34. 35, 36. 38. 39. 40.AERORIGIOFORMATS Descrtion ofImportant DMAPOperations forModalAeroelastic Response—. GP1generates coordinate system transformation matrices, tables ofgridpointlocations, and tables relating theinternal andexternal gridpointnumbers. e GotoDMAPNo.158andprintErrorMessage No.3ifnogridpointsaredefined. GP2generates Element Connection Tablewithinternal indices. GP3generates GridPointTemperature Table(element temperature), TA1generates element tablesforuseinmatrixassembly andstressrecovery. GotoDMAPNo.158andprintErrorMessage No.3ifnostructural elements havebeen defined. EMGgenerates structural element stiffness andmassmatrix tables anddictionaries forlater assembly bytheEMAmodule. GotoDMAPNo.19ifnostiffness matrix istobeassembled. EMAassembles stiffness matrix[Kg]andGridPointSingularity Table. GotoDMAPNo.154andprintErrorMessage No.1ifnomassmatrixistobeassembled. EMAassembles massmatrix[Mgg]. GotoDMAPNo.25ifnoweightandbalance information isrequested. GPWGgenerates weight andbalance information. @FPformats theweightandbalance information prepared byGPWGandplacesitonthesystem outputfileforprinting. Equivalence [Kg]to[Kgg]iftherearenogeneral elements. GotoDMAPNo.30iftherearenogeneral elements. SMA3formsthegeneral element stiffness matrix [Kgl. AODcombines thestructural stiffness matrix[Kg]withthegeneral element stiffness matrix [Kg]toobtain thestiffness matrix [Kgg]. GP4generates flagsdefining members ofvarious displacement sets(USET)andforms multipoint constraint equations [Rg]{ug}=O. GotoDMAPNo.37ifnopotential gridpointsingularities exist, GPSPgenerates atableofpotential gridpointsingularities. OFPformats thetableofpotential gridpointsingularities prepared byGPSPandplacesit onthesystemoutputfileforprinting. Equivalence [Kgg]to[Knn]and[Mgg]to[Mnn]ifnomultipoint constraints exist. GotoDMAPNo.42ifnomultipoint constraints exist. MCE1partitions multipoint constraint equations [Rg]=[Rm~Rn]andsolvesfor multipoint constraint transformation matrix [Gm]=-[Rm]-l[Rn]. 4.3-8(05/30/86)\nMODALAEROELASTIC RESPONSE 41.MCE2partitions stiffness andmassmatrices andperforms matrixreductions [Knnl=[nnl+[Gl[Kmnl +[Knl[Gml +[Gl[Kmml[Gnll and [Mnn]=[nnl+[@Mmnl +[M;nl[Gml +[#JIMmml[Gml . 43.Equivalence [Knnlto[Kffland[Mnn]tO[Mff]ifnosin91e-Point constraints exist. 44.GotoDMAPNo.46ifnosingle-point. constraints exist. 45.SCE1partitions outsingle-point constraints [1‘ff’‘fs[Knn]=~~K— [1ff‘‘fs and[Mnn]= ;M– . SfSs SfSs 47.Equivalence [Kfflto[Kaaland[Mfflto[Maa]ifnoomitted coordinates exist. 49.GotoDMAPNo.53ifnoomitted coordinates exist. ●51.SMP1partitions constrained stiffness matrix [1KIKao [Kff]=+—, OaIKoo solvesfortransformation matrix[Go]=-[Kool-l[Koa] andperforms matrixreduction [Kaal=[aal+[K:a][Go] . 52.SMP2partitions constrained massmatrix [1MIMao [Mff]=flM— oa00 andperforms matrixreduction [Maa]=[iaal+[M:al[Gol +[G:IIMOOIIGOI +[G:l[Moal . 54.GotoDMAPNo.59ifnofree-body supports exist. 4.3-9(05/30/86)\n55. 56. 57. 58. 60. 61. 62. 63.AERORIGIDFORMATS RBMG1partitions outfree-body supports RBMG2decomposes constrained stiffness matrix[KLL]=[LtL][(lkt]. RBMG3formsrigidbodytransformation matrix calcu[D]=-[KLi]-l[KLr], atesrigidbodycheckmatrx [x]=[Krr] andcalculates rigidbodyerrorratio E. xl +-l-rIKrr RBMG4formsrigidbodymassmatrix ,-+[Kr][D] . [nIr]=[Mrr]+[Mr][D] +[DT][MLr] +[DT][Mli][D]. DPDgenerates flagsdefining members ofvarious displacement setsusedindynamic analysis (USETD), tablesrelating theinternal andexternal gridpointnumbers (GPLD), including extrapointsintroduced fordynamic analysis (SILD), andprepares Transfer Function Pool (TFP!20L), andEigenvalue Extraction Data(EED). GotoDMAPNo.152andprintErrorMessage No,2ifthereisnoEigenvalue Extraction Data. Equivalence [Go]to[G:]and[Gm]to[G:]iftherearenoextrapointsintroduced fordynamic analysis. READextracts realeigenvalues andeigenvectors fromtheequation [Kaa-AMaa]{$a} =O, calculates rigidbodymodesbyfinding amatrix [mol=[+ol[mrl[orol isdiagonal andnormalized, computes rigidbody [1D+ [f$aol❑ — , ‘$ro calculates modalmassmatrix [ml=[O~l[Maal[Oal andnormalizes eigenvectors according tooneof[oro]suchthat eigenvectors thefollowing userrequests: 4.3-10 (05/30/86)\nMODALAEROELASTIC RESPONSE 1)Unitvalueofaselected component o2)Unitvalueofthelargest component 3)Unitvalueofthegeneralized mass. 64.IZIFPformats thesummary ofeigenvalue extraction information (PJEIGS) prepared byREADand placesitonthesystemoutputfileforprinting. 65.GotoDMAPNo.156andprintErrorMessage No.4ifnoeigenvalues werefound. [\u003e6.OFPformats theeigenvalues (LAMA)prepared byREADandplacesthemonthesystemoutput fileforprinting. 67.MXTRINselects thedirectinputmatrices [Kp],[Mp]and[Bpl. 68.Equivalence [Mplto[Mid],[Bp]to[Bd]and[Kplto[K~~lifnoconstraints areapplied. 69.GKADapplies constraints todirectinputmatrices [Kpl,[Mpland[Bpl,forming [K;d][Md]and[B:d]andforms[Gmd]and[God]. 70.GKAMselects eigenvectors toform[$dh]andassembles stiffness, massanddamping matrices inmodalcoordinates: [1k.1o [Khh]=;~~ +[$h][K:d][@dh] , [1milo[Mh]=;!;+[$:h][”:@$dhl3 [1bilo [Bhh]=-+T +[$\u0026][B;d][@dhl ~ where KDAMP=-1(default) KDAMP=1 ‘i=modalmasses mi=modalmasses bi❑ mi2nfig(fi) bi=O k.emT2f2 1i iki❑ (l+ig(fi)) 4112fmi 71.APDprocesses theaerodynamic datacardsfromEDT.ItaddsthekpointsandtheSApoints toUSETDmakingUSETA. EQAERO, ECTA,BGPA,CSTMA,GPLAandSILAareupdated toreflect the newe“lements. AERflandACPTreflect theaerodynamic parameters. SILGAisaspecial SILfOr plotting 74.GotoDMAPNo.81ifnoplot 76.PLTSETtransforms userinput 77.PRTMSGprintserrormessagesoutputisrequested. intoaformusedtodrivethestructure plotter. associated withthestructure plotter. 4.3-11(05/30/86)\n78. 79. ‘80. 82. 84. 85. 86.AERORIGIDFORMATS GotoDMAPNo.81ifnoundeformed aerodynamic orstructural element plotsarerequested. PLf3Tgenerates allrequested undeformed aerodynamic andstructural element plots. PRTMSGprintsplotter dataandengineering dataforeachundeformed aerodynamic and structural element plotgenerated. GIformsatransformation matrix [G(a]whichinterpolates between aerodynamic (k)and structural (a)degrees offreedom. AMGformstheaerodynamic matrixlist[Ajjl,theareamatrix[Skj],andthedownwash coefficients [Dk]and[Dkl. GotoDMAPNo.87iftherearenouser-supplied downwash coefficients. INPUTT2 provides theuser-supplied downwash factors duetoextrapoints([De],[De]). PARAMN@DJEmustbesettoenterthesematrices. Thedownwash Wjonboxjduetothe motionofanextrapoint,Ue,isgivenby {wj}=[De+ikllfe]{ue} . 89.AMPcomputes theaerodynamic matrixlistrelated tothemodalcoordinates asfollows: I I 90. 93. 94.Foreach Foreach andM$aiI@ [$dh]=—+= , $eiI@ee[Gki]=[GaIT[ai] \u003e [Dil =[DklTIGkil , 2tD?] and [Dh][Dji ,e [Di]=[Dk]T[Gki]. (m,k)pair: [Djh]=[Dh]+ik[Dh] . group: [Qjh] =[A~j]~~OUP‘Djh]group ‘ [Qkh]=[skj][Qjh] , [Qjh]=[Gkj]T[Qkh] [1Qjh[Qhh]+‘–.Qeh FRLGformsthedynamic loadvector{Ph}fromthefrequency response dataortransient data usingaFourier Transform. GUSTformstheloading duetogustsandaddstothedirectloads. Equivalence {PHF1}to{PHF}iftherearenogustloads.I e 4.3-12(05/30/86)\n95. 96. 97. 98. 100. 101. 102. 103. 104. 1050 106, 107. 108. 109. 112. 113. 114. 115. 116. 117. 119. 120.MODALAEROELASTIC FRRD2solvesforthemodaldisplacements usingRESPONSE [-MhhU2+ iBhhti+K+qQhh(k)]Uh =Ph(u). Equivalence {UHVF}to{UHVT}andFtlLtoTOLifitisafrequency response formulation. GotoDMAPNo.99ifitisafrequency response formulation. IFTperforms Inverse Fourier Transform ofthedisplacements fortransient formulation. MODACCusesdatafrom!3FREQor!JTIMEdatacardstoselectsolutions fordatarecovery. ADRproduces aerodynamic loadoutput(PKF)forselected pointsinfrequency response only. VDRprepares solution setdisplacements (klJHVl), sortedbyfrequency ortime,foroutput, Thesolution setincludes modeamplitudes andextrapoints. GotoDMAPNo.110iftherequest isforoutputsortedbyfrequency ortimestep, SOR3prepares requested outputsortedbysolution setpoints. OFPformats thetableprepared bySDR3foroutputsortedbysolution setpointandplacesit onthesystemoutputfileforprinting. GotoDMAPNo.110ifnoX-Yplotsarerequested; XYTRANprepares theinputforX-Yplotting ofsolution setpointsversustimeorfrequency. GotoDMAPNo.110ifnoplotsarepossible asrequested. XYPLOTprepares therequested X-Yplotsofsolution setpointsversustimeorfrequency. GotoDMAPNo.160ifnooutputforphysical pointsisrequested, SDR1recovers physical displacements (PHIP)andforcesofconstraint (QP)forthereal eigenvectors associated withthemodes. Equivalence {@dh)to{@ah}iftherearenoextrapointsintroduced fordynamic analysis, GotoDMAPNo.118ifnoextrapointsarepresent. VECgenerates ad-sizepartitioning vector(EVEC)forthea-ande-sets {Ud}+{Ua}+{Ue}. PARTNperforms partition of{$dh}usingEVEC {1@ah {$dh}‘\u003e—. 0 MPYADrecovers thedisplacements attheaerodynamic {I$kJ=[G;a]T{$ah} UMERGEisusedtoexpand{Qp}totheps-set.points(k) . 4.3-13 (05/30/86)\nAERORIGIDFORMATS 121.UMERGEplaces{Ok}initsproperplaceinthedisplacement vector 122.UMERGEisusedtoexpand{Qp}tothepa-set. 123.SDR2calculates element forces (MEF1)andstresses (MES1)andprepares eigenvectors (MPHIPAI) andsingle-point forcesofconstraint (MQP1)foroutputsortedbyfrequency or time. 124.GotoDMAPNo.127ifitisnotafrequency response formulation, 125,SDR2prepares loadvectors foroutput(!3PPI)sortedbyfrequency. 126.SDR3prepares requested loadoutputsortedbypointnumber, 128.SDR3prepares requested modalquantities outputsortedbypointnumber. 129.DDRMMprepares asubsetoftheelement forces(9EF2)andstresses (OES2), displacement vectors (!3uPv2), andsingle-point forcesofconstraint (OQP2)foroutputsortedbypoint numberorelement number. 130,OFPformats therequested physical outputprepared byDDRMMandplacesitonthesystem outputfileforprinting. 131.SCANexamines theelement stresses andforcescalculated byDDRMMandgenerates scanned outputthatmeetsthespecifications setbytheuser. 132.!ilFPformats thescanned outputtableprepared bySCANandplacesitonthesystemoutput fileforprinting, 133.GotoDMAPNo.138ifnodeformed aerodynamic orstructural elemer~t plotsarerequested. 134.MPYADgenerates vectors forusebytheSDR2module. 135. 136. 137. 139. 140. 141. 142. 144.SDR2prepares vectors fordeformed plotting. PLOTprepares allrequested deformed aerodynamic andstructural element plots. PRTMSGprintsplotter dataandengineering dataforeachdeformed plotgenerated, GotoDMAPNo.160andmakenormalexitifnoX-Yplotsarerequested. XYTRANprepares theinputforphysical pointX-Yplots. GotoDMAPNo.143ifnoplotsarepossible asrequested. XYPL!3Tprepares therequested X-Yplotsofdisplacements, forces, stresses, loadsand single-point forcesoftheconstraint versusfrequency ortime. GotoDMAPNo.160andmakenormalexitifitisatransient response formulation. 145.GotoDMAPNo.160andmakenormalexitifnopowerspectral density functions or autocorrelation functions arerequested. 146.RANDOMcalculates powerspectral density functions (PSDF)andautocorrelation functions (AuTO)usingthepreviously calculated frequency response. 147.GotoDMAPNo,160andmakenormalexitifnoX-YplotsofRANDOMcalculations are requested.I I I I 148,XYTRANprepares theinputforrequested X-YplotsoftheRAND!3Moutput. 4.3-14 (05/30/86)\n149. e150. 151. 153. 155. 157. 159.MODALAEROELASTIC RESPONSE GotoDMAPNo.160andmakenormalexitifnoplotsarepossible asrequested. XYPLOTprepares therequested X-Yplotsofautocorrelation functions andpowerspectra density functions. GotoDMAPNo.160andmakenormalexit. PrintErrorMessage No.2andterminate execution. PrintErrorMessage No.1andterminate execution. PrintErrorMessage No.4andterminate execution. PrintErrorMessage No.3andterminate execution. 4.3-15(05/30/86)\n4.3.3 NormalAERORIGIDFORMATS OutputforModalAeroelastic Response TherealEigenvalue Summary TableandrealEigenvalue Analysis Summary, as ModesAnalysis (seeSection 2.3.3), areautomatically printed. Thefollowing printed output, sortedbypointnumberorelement numberdescribed under (Sf3RT2), is available, eitherasrealandimaginary partsorasmagnitude andphaseangle(0°-360°lead),for thelistoffrequencies ortimesspecified byINFREQUENCY orOTIME(intransient formulations, these arereal): 1. 2. 3. The 1. 2, The 1. 2. 3. 4. 5. The 1. 2.Displacements, velocities andaccelerations foralistofPHYSICAL points(gridpoints andextrascalarpointsintroduced fordynamic analysis) orSOLUTIflN points(points used intheformulation ofthedynamic equation). Velocities andaccelerations arenot available fortransient analysis. Nonzero components oftheapplied loadvector andsingle-point forces ofconstraint for alistofPHYSICAL points. Aerodynamic forces onselected aerodynamic elements. Stresses andforces inselected elements (ALLavailable onlyforSORTl). following printed outputisavailable forRandomResponse calculations: Powerspectral density function andmeandeviation fortheresponse ofselected components forpointsorelements. Theexpected frequency ofzerocrossings. Autocorrelation function fortheresponse ofselected components forpointsorelements. following plotter outputisavailable: Undeformed plotofthestructural model. Deformed shapesoftheaerodynamic andstructural modelforselected intervals. X-Yplotofanycomponent ofdisplacement, velocity oracceleration ofaPHYSICAL point oraS9LUT10N point. X-Yplotofanycomponent oftheapplied loadvectororsingle-point forceof constraint. X-Yplotofanystressorforcecomponent foranelement. following plotter outputisavailable forRandomResponse calculations: X-Yplotofthepowerspectral density versusfrequency fortheresponse ofselected components forpointsorelements. X-Yplotoftheautocorrelation versustimelagfortheresponse ofselected components forpointsorelements. 4.3-16 (05/30/86)\nMODALAEROELASTIC RESPONSE Thedatausedforpreparing theX-Yplotsmaybepunched orprinted intabuarform(see eVolume I,Section 4.3). Also,aprinted summary isprepared foreachX-Yplotwhichincludes the maximum andminimum valuesoftheplotted function. 4.3.4CaseControl DeckforModalAeroelastic Response Thefollowing itemsrelatetosubcase definition Response: 4.3.51. 2, 3, 4, 5. 6. 7. 8.METHODmustappearabovethesubcase levelto Atleastonesubcase mustbedefined foreach M2PP,B2PP)orfrequencies.anddataselection forModalAeroelastic selectaneigenvalue extraction method. uniquesetofdirectinputmatrices (K2PP, Consecutive subcases foreachsetofdirectinputmatrices orfrequencies areusedto definetheloading condition -onesubcase foreachdynamic loading condition. Constraints mustbedefined abovethesubcase level. DLOADmustbeusedtodefineafrequency-dependent loading condition foreachsubcase. Iftransient loadsareselected, aFourier Transform isused frequency-dependent loads. Allloadsinonerunmustbeofthesame FREQUENCY mustbeusedtoselectone,andonlyone,FREQ,FREQ1,or BulkDataDeck.IfTLOADsareselected, aTSTEPmustbeselected.tocompute type. FREQ2cardformthe 1NFREQUENC% (OTIME) maybeusedabovethesubcase levelorwithin eachsubcase toselect asubsetofthesolution frequencies (times) foroutputrequests. Thedefault istouse allsolution frequencies (times). IfRandomResponse calculations aredesired, RANDTicardsfromtheBulkDataDeck.Only usedforeachsetofdirectinputmatrices. Parameters forModalAeroelastic ResponseRANDOMmustbeusedtoselectRANDPSand oneOFREQUENCY andFREQUENCY cardcanbe Thefollowing parameters areusedinModalAeroelastic Response: 1,ASETOUT -optional. Apositive integer valueofthisparameter causestheASET output datablocktobegenerated bytheGP4module. Anegative integer valueorOsuppresses thegeneration ofthisoutputdatablock. Thedefault valueisO. 2.AUT@SPC -reserved forfutureoptional use.Thedefault valueis-1. 4.3-17(05/30/86)\n3. 4. 5. 6. 7. 8, 9. 10. 11. 12. 13.AERORIGIDFORMATS Cfl.lPMASS -CPBAR,CPROD,CPQUAD1, CPQUAD2, CPTRIA1, CPTRIA2, CPTUBE, CPQDPLT, CPTRPLT, CPTRBSC -optional. Theseparameters causethegeneration ofcoupled massmatrices ratherthanlumpedmassmatrices forallbarelements, rodelements, andplateelements @ thatinclude bending stiffness. GRDPNT-optional. Apositive integer valueofthisparameter causestheGridPoint WeightGenerator tobeexecuted andtheresulting weightandbalance information tobe printed. Allfluidrelated massesareignore~. GUSTAERO -optional. Aninteger valueof+1causesgustloadstobecomputed. The default valueis-1fornogust loads. IFTM-optional. Theinteger valueofthisparameter selects themethodforthe integration oftheInverse Fourier Transform. Aninteger valueofOspecifies a rectangular fit;1specifies atrapezoidal fit;and2specifies acubicsplinefitto obtainsolutions versustimeforwhichaerodynamic forcesarefunctions offrequency. Thedefault value KDAMP-optional. complex stiffness Thedefault value LFREQandHFREQ-isO. Aninteger valueof+1causesmodaldamping termstobeputintothe matrixforstructural damping (+1recommended forKandKEmethods). is-1. required, unless parameter LM@DESisused.Therealvaluesofthese aparameters givethecyclicfrequency range(LFREQisthelowerlimitandHFREQisthe upperlimit)ofthemodestobeusedinthemodalformulation. Tousethisoption, parameter LM!JDESmustbesettoO. LMODES-required, unlessparameters LFREQandHFREQareused.Theinteger valueof thisparameter isthenumberoflowestmodestobeusedinthemodalformulation, MACH-optional. Therealvalueofthisparameter selects theclosest Machnumbers to beusedtocompute aerodynamic matrices. Thedefault valueis0.0. N@DJE-optional. Apositive integer forthisparameter indicates thatuser-supplied downwash matrices duetoextrapointsaretobereadfrom INPUTT2 module Pl,P2,andP3 description of valuesforPl, Q-required,intherigidformat. Thedefault valueis -required whenusingtheN17DJEparameter. theseparameters whicharerequired bytheanexternal fileviathe -1whennotneeded. SeeSection 5,5fora INPUTT2 module. Thedefault P2andP3areO,11andXXXXXXXX, respectively. Therealvalueofthisparameter defines thedynamic pressure. 4.3-18(05/30/86)"},"title":"User's Manual P21"},"/docs/users/users_manual_022/":{"data":{"":"14. 15. 16.MODALAEROELASTIC RESPONSE SURFACE -optional. Thecomputations oftheexternal surface areasforthe two-dimensional andthree-dimensional elements areactivated bythisparameter whenthey aregenerated intheEMGmodule. Theresults aremultiplied bytherealvalueofthis parameter. Seethedescription underthePARAMbulkdatacardfordetails. VflLUME-optional. Thevolumecomputations forthetwo-dimensional and three-dimensional elements areactivated bythisparameter whentheyaregenerated in theEMGmodule. Theresults aremultiplied bytherealvalueofthisparameter. See thedescription underthePARAMbulkdatacardfordetails. WTMASS-optional. Thetermsofthestructural massmatrixaremultiplied bythereal valueofthisparameter whentheyaregenerated intheEMAmodule. Notrecommended for useinhydroelastic problems. 4.3.6Optional Diagnostic OutputforFEER Special detailed information obtained byrequesting DIAG16intheExecutive Control Deckis thesameasthatdescribed underNormalModesAnalysis (seeSection 2.3.6). 4.3.7TheAPPENDFeature QTheAPPENDfeature canbeusedforrealeigenvalue extraction inModalAeroelastic Response. SeeSection 2.3.7fordetails. 4.3.8RigidFormatErrorMessages fromModalAeroelastic Response Thefollowing fatalerrorsaredetected bytheDMAPstatements intheModalAeroelastic Response rigidformat. Thetextforeacherrormessage isgivenbelowincapital letters andis followed byadditional explanatory material, including suggestions forremedial action. M13DALAERf3ELASTIC RESPONSE ERRORNO.1-MASSMATRIXREQUIRED FORMODALFORMULATION. Themassmatrixisnullbecause eithernostructural elements weredefined withConnecti6,1 cards, nonstructural masswasnotdefined onaProperty cardorthedensity wasnotdefined onaMaterial card. Mf3DALAERIDELASTIC RESP13NSE ERRORNO.2-EIGENVALUE EXTRACTIf3N DATAREQUIRED FORREALEIGENVALUE ANALYSIS. Eigenvalue extraction datamustbesupplied onanEIGRcardintheBulkDataDeckandMETHODinthe CaseControl DeckmustselectanEIGRset. 4.3-19(05/30/86)\nAERORIGIDFORMATS MODALAER@ELASTIC RESPONSE ERR@RN@.3-NOGRIDPfjINTDATA HAVEBEENDEFINED. Nopointshavebeendefined withGRIDorSP91NTcardsorno withConnection cards.ISSPECIFIEDf3R N@STRUCTURAL ELEMENTS structural elements havebeendefined e M@DALAER@ELASTIC RESPflNSE ERRORNO.4-REALEIGENVALUES REQUIRED FORMODALFORMULATION. Norealeigenvalues werefoundinthefrequency rangespecified bytheuser. I *"},"title":"User's Manual P22"}}